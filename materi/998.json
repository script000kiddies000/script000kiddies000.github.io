
{
    "nama":"React Native Lanjutan",
    "section": [
      {
        "nama": "Pendahuluan",
        "posting": [
            {
              "uuid": "0",
              "judul": "Persiapan Perangkat",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n<blockquote class=\"wp-block-quote\"><p> Selamat datang peserta Bootcamp Sanbercode kelas Mobile Apps Development  React Native. Sebelum membahas proses membuat aplikasi menggunakan  framework React Native, terlebih dahulu kita akan membahas berbagai  perangkat yang perlu dipersiapkan. <\/p><\/blockquote>\n<h2>Perangkat yang Diperlukan<\/h2>\n<p>Untuk mengikuti bootcamp React Native ini, diperlukan perangkat utama yaitu <strong>PC\/Laptop<\/strong> yang terhubung dengan <strong>Internet<\/strong>. Spesifikasi PC\/Laptop minimal memiliki <strong>RAM 4GB<\/strong>.<\/p>\n<p>Dan untuk mempermudah proses pengembangan aplikasi, diperlukan perangkat <strong>smartphone Android<\/strong> dengan versi OS minimal <strong>5.0 Lollipop<\/strong>. Jika tidak, maka dapat menggunakan emulator Android seperti AVD (Android Virtual Device) yang terdapat pada <a href=\"https:\/\/developer.android.com\/studio\">Android Studio <\/a>(pastikan spesifikasi PC\/Laptop memenuhi system requirement pada Android Studio). <\/p>\n<h2>Perangkat Lunak dan Teknologi yang Digunakan<\/h2>\n<h3>1. Terminal atau Console<\/h3>\n<p>Pada Bootcamp kali ini, diperlukan sebuah terminal untuk mengeksekusi  berbagai perintah dasar yang berkaitan dengan Git, Node, dan Expo\/React  Native CLI. Kita bisa menggunakan terminal bawaan dari Sistem Operasi  yang digunakan seperti Command Prompt\/Windows PowerShell pada OS Windows  dan Terminal pada OS Linux maupun OSX. Dan ketika melakukan proses  instalasi Git juga terdapat Git Bash yang memiliki fungsi yang serupa.  Selain itu, peserta juga bisa menggunakan <a href=\"https:\/\/cmder.net\/\">cmder<\/a>  (terutama yang menggunakan OS Windows) karena cmder memiliki banyak  fitur yang tidak dimiliki command prompt atau terminal bawaan. Proses  instalasi bisa dilakukan menggunakan konfigurasi default\/recommended <\/p>\n<h3>2. Git<\/h3>\n<p><a href=\"https:\/\/git-scm.com\/\">Git <\/a>merupakan  version control yang banyak digunakan oleh para programmer atau  software developer. Untuk dapat menggunakannya, download dan install <a href=\"https:\/\/git-scm.com\/\">Git <\/a>sesuai dengan platform OS yang bersangkutan.  Dan jalankan perintah instalasi dengan konfigurasi default\/recommended.  <\/p>\n<h3>3. Visual Studio Code<\/h3>\n<p> <a href=\"https:\/\/code.visualstudio.com\/\">Visual Studio Code<\/a>  adalah salah satu IDE (Integrated Development Environment) yang  direkomendasikan untuk digunakan selama bootcamp ini. Salah satu  kelebihannya adalah kemudahan pengoperasian dan user inteface yang lebih  mudah dipahami oleh orang yang awam dalam pemrograman. Selain itu juga  terdapat banyak extension atau plugin yang sangat membantu dalam  menuliskan kode selama membangun suatu program\/aplikasi.  Beberapa  extension yang disarankan untuk ditambahkan adalah Prettier \u2013 Code  formatter, Material Icon Theme, dan ES7 React\/Redux\/React-Native\/JS  snippets (opsional). <\/p>\n<p> IDE lainnya yang juga dapat digunakan adalah <a href=\"https:\/\/www.sublimetext.com\/\">Sublime Text<\/a> atau <a href=\"https:\/\/atom.io\/\">Atom<\/a>. Untuk kemudahan proses pembelajaran kami tidak merekomendasikan Notepad atau Notepad++ <\/p>\n<\/div>\n"
            },
            {
                "uuid": "100",
                "judul": "Teknik Pengumpulan Tugas",
                "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Setiap harinya Anda diminta untuk menyelesaikan tugas dan\/atau quiz yang diberikan. Disarankan Anda untuk membuat satu folder khusus dalam local PC\/Laptop untuk menyimpan file-file tugas yang terhubung dengan repository project. <\/p>\n<p>Sejak awal, Anda akan mengerjakan tugas menggunakan React Native CLI. Untuk mengurangi proses pembuatan project baru yang cukup memakan waktu (proses <code>npx react-native init NamaProject<\/code>) maka akan disarankan untuk mengerjakannya di folder project yang sama.<\/p>\n<p> Berikut tahapan atau tata cara mengumpulkan tugas <\/p>\n<ul>\n<li>Pada saat Anda akan mulai diminta membuat project baru. Lakukan proses pembuatan project React Native CLI (misal nama projectnya adalah TrainingApp).<\/li>\n<\/ul>\n<pre class=\"wp-block-code\"><code>$ npx react-native init TrainingApp<\/code><\/pre>\n<ul>\n<li>Buat repository baru di Gitlab, set visibility level \u201c<strong>Public<\/strong>\u201c, tetapi<strong> tanpa centang\/non aktifkan<\/strong> \u201d <strong>Initialize repository with a README<\/strong> \u201c. Seperti gambar dibawah ini<\/li>\n<\/ul>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5833\" height=\"480\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab-1024x480.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab-1024x480.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab-300x141.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab-768x360.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab-1536x719.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab.jpg 1900w\" width=\"1024\"\/><\/figure>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5834\" height=\"508\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step2-1024x508.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step2-1024x508.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step2-300x149.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step2-768x381.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step2-1536x762.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step2.jpg 1898w\" width=\"1024\"\/><\/figure>\n<ul>\n<li>Masuk ke halaman project Gitlab baru tersebut dan ikuti perintah pada bagian \u201c<strong>Push an existing folder<\/strong>\u201c. (command yang harus dijalankan seperti berikut ini)<\/li>\n<\/ul>\n<pre class=\"wp-block-code\"><code>$ cd TrainingApp \/\/ masuk ke directory project yang telah dibuat\n\n$ git init \/\/ inisiasi ulang git\n\n$ git remote add origin https:\/\/gitlab.com\/zakkymf.sanbercode\/sanbercodeapp.git \/\/ gunakan url repo Gitlab milik anda yang terdapat di halaman  gitlab anda\n\n$ git add .\n\n$ git commit -m \"Initial commit\"\n\n$ git push -u origin master<\/code><\/pre>\n<ul>\n<li>Jika proses push berhasil, selanjutnya buat folder Tugas didalam folder project React Native CLI (misal \u201cTugas1\u201d) dan selesaikan tugas didalam folder tersebut<\/li>\n<\/ul>\n<ul>\n<li>Jika tugas sudah selesai, upload file tugas ke Repository Gitlab (Anda bisa menggunakan perintah dibawah ini)<\/li>\n<\/ul>\n<pre class=\"wp-block-code\"><code>$ git add .\n\n$ git commit -m \"Tugas1 sudah selesai\"\n\n$ git push<\/code><\/pre>\n<ul>\n<li>Jika proses git push sudah berhasil, periksa halaman Gitlab anda dan masuk ke menu \u201c<strong>Repository<\/strong>\u201d =&gt; \u201c<strong>Commits<\/strong>\u201d (yang terdapat pada sidebar) Kemudian copy link commit tugas Anda<\/li>\n<\/ul>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5835\" height=\"509\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step3-1024x509.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step3-1024x509.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step3-300x149.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step3-768x382.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step3-1536x764.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step3.png 1890w\" width=\"1024\"\/><\/figure>\n<ul>\n<li>Buka halaman web <a href=\"https:\/\/sanbercode.com\/\">sanbercode.com<\/a>, masuk ke \u201c<strong>member area<\/strong>\u201d dan lakukan <strong>login<\/strong>. Masuk ke Menu <strong>\u201cKelas Training<\/strong>\u201d =&gt; \u201c<strong>Kelas yang Diikuti<\/strong>\u201d dan tekan tombol \u201c<strong>Akses Kelas<\/strong>\u201d pada kelas yang telah terdaftar.<\/li>\n<\/ul>\n<ul>\n<li>Selanjutnya masuk ke tab \u201c<strong>Kelola Tugas<\/strong>\u201d =&gt; \u201c<strong>Pilih nama tugas<\/strong>\u201d =&gt; tekan \u201c<strong>Input Tugas<\/strong>\u201d dan masukan link commit yang telah di copy tadi.<\/li>\n<\/ul>\n<p>Jika terjadi masalah dalam mengikuti tahapan tersebut silahkan disampaikan pada grup diskusi.<\/p>\n<blockquote class=\"wp-block-quote\">\n<p><strong>Catatan <\/strong>: Jika membuat repository baru (untuk pengerjaan tugas, quiz atau final project) jangan lupa untuk menambahkan trainer sebagai \u201cMembers\u201d dengan role \u201cMaintainer\u201d.<\/p>\n<p>Akun gitlab trainer : @<strong>zakkymf.sanbercode<\/strong><\/p>\n<\/blockquote>\n<p>\n<\/p><\/div>\n"
              }
        ]
      },
      {
        "nama": "WEEK 1",
        "posting": [
          
            {
              "uuid": "1",
              "judul": "Hari 1 â€“ React Native CLI",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Secara singkat, react native merupakan framework Javascript yang digunakan untuk mengembangkan aplikasi pada <em>smartphone<\/em>.  Aplikasi yang dikembangkan dengan react native ini pada dasarnya dapat  berjalan di ponsel berbasis Android dan IOS, hanya saja perlu sedikit  penyesuaian untuk masing-masing OS nya. <\/p>\n<p>Cara kerja dari React Native CLI sendiri adalah  mengcompile kode Javascript ke native (iOS &amp; Android) yang selanjutnya dapat di jalankan di Xcode atau Android Studio.<\/p>\n<h2>Setup React Native CLI<\/h2>\n<p>Untuk bisa menggunakan React Native CLI ini, diperlukan beberapa tahapan installasi, yang bisa disederhanakan sebagai berikut (jika menggunakan OS Windows):<\/p>\n<ul>\n<li>Install NodeJS<\/li>\n<li>Install Python2<\/li>\n<li>Install JDK 8 (Java SE Development Kit)<\/li>\n<li>Install Android Studio<\/li>\n<li>Setting ANDROID_HOME environment variable<\/li>\n<li>Menambahkan platform-tools pada environment variable <\/li>\n<\/ul>\n<p>Jika semua proses tersebut sudah dilakukan, anda bisa membuat project \/ Aplikasi React Native dengan menjalankan command berikut :<\/p>\n<pre class=\"wp-block-code\"><code>$ npx react-native init NamaProject<\/code><\/pre>\n<pre class=\"wp-block-code\"><code>$ cd NamaProject \/\/masuk ke directory project\n$ npx react-native run-android \/\/menjalankan aplikasi project di android<\/code><\/pre>\n<p>Untuk proses installasi lengkapnya, bisa dilihat di dokumentasi React Native (<a href=\"https:\/\/reactnative.dev\/docs\/environment-setup\">https:\/\/reactnative.dev\/docs\/environment-setup<\/a>), terutama untuk OS Linux dan Mac OS karena memiliki beberapa konfigurasi yang berbeda dari Windows.<\/p>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan :<\/p>\n<p> Untuk menjalankan aplikasi di iOS , hanya bisa melalui Mac OS <\/p>\n<\/blockquote>\n<h2>Perbedaan React Native CLI dan Expo<\/h2>\n<h4>Kelebihan Expo<\/h4>\n<ul>\n<li> Expo menggunakan Expo SDK jadi tidak memerlukan Android Studio dan Xcode <\/li>\n<li> Pengaturan aplikasi lebih mudah, bisa langsung ditambahkan pada file app.json <\/li>\n<li> Mode debug aplikasi dapat langsung di jalankan pada device dengan  aplikasi Expo pada Android dan IOS (dengan membagikan link \/ qr code  project) <\/li>\n<li> Membuat versi rilis aplikasi lebih mudah karena dilakukan oleh server  Expo (Expo akan memberikan link untuk mendownload versi rilis aplikasi  kita) <\/li>\n<\/ul>\n<h4>Kekurangan Expo<\/h4>\n<ul>\n<li> Expo tidak mendukung native module sehingga beberapa library yang    memerlukan react-native link tidak dapat berjalan pada aplikasi.<\/li>\n<li> Expo tidak mendukung background process sehingga fitur seperti tracking tidak dapat berjalan pada aplikasi.<\/li>\n<\/ul>\n<h4>Kelebihan React Native CLI<\/h4>\n<ul>\n<li>Dapat menambahkan modul\u00a0<em>native\u00a0<\/em>yang ditulis\u00a0dalam\u00a0Java dan Objetive-C<\/li>\n<li>Mendukung background process<\/li>\n<\/ul>\n<h4>Kekurangan React Native CLI<\/h4>\n<ul>\n<li> Membutuhkan Android Studio dan Xcode.<\/li>\n<li> Tidak dapat mengembangkan\u00a0aplikasi untuk iOS tanpa\u00a0Mac Os. <\/li>\n<\/ul>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "2",
              "judul": "Hari 2 â€“ Function Component",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p><em>Functional Component <\/em>atau biasa disebut <em>Stateless Component<\/em> adalah component yang didefinisikan menggunakan function yang sangat simpel, tanpa harus belajar class, <code>this<\/code> context, state, dan lain sebagainya. Syaratnya hanya cukup mengerti bagaimana function javascript bekerja. <\/p>\n<p>Lalu, seperti apakah function component itu, kalian bisa lihat contoh code sederhana dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>import * as React from 'react';\nimport { View, Text } from 'react-native';\n\nfunction Hello() {\n    return (\n        &lt;View&gt;\n            &lt;Text&gt;Hello world&lt;\/Text&gt;\n        &lt;\/View&gt;\n    )\n}\n\nexport default Hello;<\/code><\/pre>\n<h3>Kelebihan Function Component<\/h3>\n<ul>\n<li>Kode menjadi Lebih Pendek atau Simple dibandingkan dengan Class Component<\/li>\n<li>Kode menjadi terlihat lebih bersih atau clean<\/li>\n<\/ul>\n<p>Untuk lebih detailnya tentang Function Component, kalian bisa lihat video tutorial berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/dpwqX73fzQY?feature=oembed\" title=\"Membuat Component dengan Functional Component (Hooks) , Implementasi View, Text, Image, TextInput\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "3",
              "judul": "Hari 3 â€“ Hooks",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<h2>Apa itu React Hooks ?<\/h2>\n<p>React Hooks diperkenalkan oleh React Team untuk melakukan state  management dan side effects di dalam function component. Dengan Hooks  kita bisa menggunakan state dan lifecycle methods tanpa harus menulis  class di React. <\/p>\n<h2>Bagaimana menggunakan React Hooks ?<\/h2>\n<p> Oke langsung saja kita lihat bagaimana state di  dalam functional component menggunakan State Hook, dan bagaimana perbedaannya dengan menggunakan state di dalam class component. <\/p>\n<p> Sebagai contoh kita akan membuat satu contoh component yang ditulis menggunakan class: <\/p>\n<pre class=\"wp-block-code\"><code>import React, { Component } from 'react';\nimport { View, Text } from 'react-native';\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: 'Jhon Doe'\n        }\n    }\n\n    render() {\n        return (\n            &lt;View&gt;\n                &lt;Text&gt;{this.state.name}&lt;\/Text&gt;\n            &lt;\/View&gt;\n        )\n    }\n}\n\nexport default App;<\/code><\/pre>\n<p> Dengan React Hooks, kita bisa membuat component yang memiliki fungsional  yang sama seperti diatas tanpa harus menggunakan class, namun tetap  bisa menggunakan state. Kita bisa menulisnya seperti ini: <\/p>\n<pre class=\"wp-block-code\"><code>import React, { useState } from \"react\";\nimport { View, Text } from \"react-native\";\n\nconst App = () =&gt; {\n    const [name, setName] = useState(\"Jhon Doe\")\n    return (\n        &lt;View&gt;\n            &lt;Text&gt;{name}&lt;\/Text&gt;\n        &lt;\/View&gt;\n    )\n}\n\nexport default App;<\/code><\/pre>\n<p>Untuk lebih detailnya tentang state dalam function component , bisa dilihat dalam video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/R2XtyeiQXdA?feature=oembed\" title=\"React Native Lanjutan - Hooks\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>Seperti pada class component, function component atau Hooks ini juga memiliki lifecycle. Lalu, seperti apa lifecycle dalam Hooks atau function component ini ? simak video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/Y6qXMEwp3ng?start=488&amp;feature=oembed\" title=\"Memahami siklus hidup (lifecycle) Functional Component (Hooks)\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "4",
              "judul": "Hari 4 â€“ Context API",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada dasarnya, <strong>Context API<\/strong> sama seperti Redux yaitu untuk state management dalam react. Namun perbedaanya Context API ini sudah termasuk dalam library react, sedangkan redux merupakan library dari luar. Jadi jika akan menggunakan Redux maka kita harus menginstallnya terlebih dahulu.<\/p>\n<p>Dalam <strong>Context API<\/strong> terdapat sebuah Provider, dan Consumer. Lalu apa itu Provider dan Consumer dalam Context API ?<\/p>\n<ul>\n<li><strong>Provider<\/strong> merupakan tempat dibacanya atau tempat menyimpan state secara global<\/li>\n<li><strong>Consumer<\/strong> digunakan untuk memanggil atau menggunakan state global yang sudah kita buat<\/li>\n<\/ul>\n<h2>Bagaimana menggunakan Context API dalam React Native ?<\/h2>\n<p>Yang pertama adalah, kita harus mengimportnya terlebih dahulu, bagaimana caranya ?<\/p>\n<pre class=\"wp-block-code\"><code>import React, { createContext } from 'react';<\/code><\/pre>\n<p>Jika sudah mengimport, selanjutnya adalah kita mendifinisikan atau membuat suatu Provider, contohnya bisa dilihat dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>export const RootContext = createContext();\nconst Provider = RootContext.Provider;<\/code><\/pre>\n<p>Untuk lebih detail mengenai pembahasan Context API bisa dilihat dalam video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/R9D1fDYQCsQ?feature=oembed\" title=\"React Native Lanjutan - Context API\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "5",
              "judul": "Hari 5 â€“ React Native Pattern",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p> Javascript di kenal dengan bahasa yang fleksibel, tidak seperti bahasa  pemrograman lain, javascript tidak mempunyai aturan baku yang harus di  patuhi oleh penulis kode. Seperti tidak mengenal naming convension dan tidak mempunyai aturan baku tentang penamaan juga tata  letak struktur file dan folder dan hal ini lebih sempit pada framework  react. <\/p>\n<p> Akan tetapi ada beberapa saran atau cara yang sering di pakai sebagai  referensi bagaimana membuat project dengan struktur file dan folder yang  baik seperti, menggunakan teknik atomic, pengelompokan berdasarkan  fitur atau module, pengelompokan berdasarkan tipe file, dan masih banyak  lagi. <\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5539\" height=\"544\" loading=\"lazy\" sizes=\"(max-width: 321px) 100vw, 321px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/default-react-native-pattern.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/default-react-native-pattern.png 321w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/default-react-native-pattern-177x300.png 177w\" width=\"321\"\/><\/figure>\n<p> Ini adalah struktur default ketika kita pertama kali membuat project  react native menggunakan command <code>npx react-native init NamaProject<\/code>. <\/p>\n<p>Kali ini saya akan membagikan bagaimana struktur file dan folder yang biasa saya gunakan pada project react native.<\/p>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan :<\/p>\n<p>Ini tidak untuk dijadikan patokan, tetapi gunakan sebagai referensi bagi teman-teman, supaya project menjadi lebih rapih dan terstruktur.<\/p>\n<\/blockquote>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5542\" height=\"764\" loading=\"lazy\" sizes=\"(max-width: 325px) 100vw, 325px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/react-native-pattern-1.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/react-native-pattern-1.png 325w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/react-native-pattern-1-128x300.png 128w\" width=\"325\"\/><\/figure>\n<h3>\/src<\/h3>\n<p>Disinilah tempat kita menuliskan dan menyimpan kode yang kita buat.  Selanjutnya saya akan membahas semua struktur yang ada di dalam folder  ini. <\/p>\n<h3>\/src\/actions<\/h3>\n<p>Digunakan untuk menyimpan action pemanggilan reducer yang di panggil melalui component dalam implementasi redux. <\/p>\n<h3>\/src\/api<\/h3>\n<p>Biasanya didalam folder ini saya gunakan untuk menyimpan konfigurasi API (Application Program Interface)<\/p>\n<h3>\/src\/assets<\/h3>\n<p>Tempat menyimpan file static. Didalam folder ini saya biasanya membuat pengelompokan lagi<\/p>\n<ul>\n<li><strong>\/src\/assets\/fonts<\/strong> didalamnya berisi kumpulan fonts yang nantinya dipakai dalam Aplikasi<\/li>\n<li><strong>\/src\/assets\/icons<\/strong> didalamnya terdapat kumpulan icons<\/li>\n<li><strong>\/src\/assets\/images<\/strong> didalamnya terdapat kumpulan gambar<\/li>\n<\/ul>\n<h3>\/src\/components<\/h3>\n<p> Berisi component reusable yang di gunakan di banyak tempat. <\/p>\n<h3>\/src\/navigation<\/h3>\n<p>Berisi semua navigasi dalam Aplikasi<\/p>\n<h3>\/src\/reducers<\/h3>\n<p> Tempat menyimpan global state pada redux. <\/p>\n<h3>\/src\/screens<\/h3>\n<p>Berisi sekumpulan screens yang tampil dalam Aplikasi, Biasanya saya lakukan pengelompokan lagi seperti gambar diatas.<\/p>\n<h3>\/src\/style<\/h3>\n<p>Didalam folder ini tempat menyimpan file yang berkaitan dengan base styling. <\/p>\n<h3>store.js<\/h3>\n<p>Entry point dari implementasi redux. <\/p>\n<p>\n<\/p><\/div>\n"
            }
          
        ]
      },
      {
        "nama": "WEEK 2",
        "posting": [
          
            {
              "uuid": "11",
              "judul": "Hari 1 â€“ Splashscreen dan OnBoarding",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada materi kali ini, kita akan belajar tentang membuat Splashscreen dan Onboarding dalam aplikasi React Native. Apa itu Splashscreen dan Onboarding ? Splashscreen dan onBording adalah suatu tampilan yang ditampilkan pada saat aplikasi dibuka pada pertama kali.<\/p>\n<h3>Bagaimana membuat Splashscreen dan Onboarding dalam React Native ?<\/h3>\n<p>Yang pertama adalah kita perlu menambahkan beberapa module atau libray,  Install beberapa module atau library berikut ini :<\/p>\n<p>1. React Navigation<\/p>\n<pre class=\"wp-block-code\"><code>npm install @react-navigation\/native<\/code><\/pre>\n<pre class=\"wp-block-code\"><code>npm install react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community\/masked-view<\/code><\/pre>\n<pre class=\"wp-block-code\"><code>npm install @react-navigation\/stack<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p> Untuk lebih detailnya mengenai React Navigation kalian bisa lihat <a href=\"https:\/\/reactnavigation.org\/docs\/stack-navigator\/\">disini<\/a> <\/p>\n<\/blockquote>\n<p>2. React Native App Intro Slider<\/p>\n<pre class=\"wp-block-code\"><code>yarn add react-native-app-intro-slider \/\/ atau npm install react-native-app-intro-slider --save<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p> Untuk dokumentasi lebih lanjut mengenai React Native App Intro Slider bisa dilihat <a href=\"https:\/\/github.com\/Jacse\/react-native-app-intro-slider\">disini<\/a> <\/p>\n<\/blockquote>\n<p>3. React Native Vector Icons<\/p>\n<pre class=\"wp-block-code\"><code>npm install --save react-native-vector-icons<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p>Untuk dokumentasi lebih lanjut mengenai React Native Vector Icons bisa dilihat <a href=\"https:\/\/github.com\/oblador\/react-native-vector-icons\">disini<\/a> dan untuk kumpulan icons nya bisa dilihat dalam <a href=\"https:\/\/oblador.github.io\/react-native-vector-icons\/\">kumpulan icons<\/a><\/p>\n<\/blockquote>\n<p>Setelah menambahkan library diatas, selanjutnya kita akan membuat sebuah component menggunakan function component, yang nantinya akan dijadikan sebagai Splashscreen dalam aplikasi kita. Disini saya membuat sebuah file yang bernama <strong>Splashscreen.js<\/strong>.<\/p>\n<pre class=\"wp-block-code\"><code>import React from 'react';\nimport { View, Image, Text, StyleSheet, StatusBar } from \"react-native\";\n\nfunction SplashScreen() {\n    return (\n        &lt;View style={styles.container}&gt;\n            &lt;StatusBar barStyle=\"dark-content\" backgroundColor=\"#ffffff\" \/&gt;\n            &lt;View style={styles.logoContainer}&gt;\n                &lt;Image source={require('..\/..\/assets\/images\/logo.png')} style={styles.image} \/&gt;\n            &lt;\/View&gt;\n            &lt;View style={styles.textContainer}&gt;\n                &lt;Text style={styles.textLogo}&gt;Training App&lt;\/Text&gt;\n            &lt;\/View&gt;\n        &lt;\/View&gt;\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ffffff'\n    },\n    logoContainer: {\n        padding: 20,\n        alignItems: 'center',\n        justifyContent: \"center\"\n    },\n    image: {\n        width: 200,\n        height: 200\n    },\n    textContainer: {\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    textLogo: {\n        fontSize: 24,\n        color: '#000000',\n        fontWeight: 'bold'\n    }\n})\n\nexport default SplashScreen;<\/code><\/pre>\n<p>Selanjutnya , kita membuat sebuah file baru lagi yang bernama <strong>Intro.js<\/strong>, yang nantinya file tersebut kita gunakan sebagai onboarding atau intro dalam aplikasi kita, berikut code dari <strong>Intro.js<\/strong><\/p>\n<pre class=\"wp-block-code\"><code>import React from 'react';\nimport { View, Text, Image, StatusBar } from 'react-native';\nimport styles from '.\/style';\nimport AppIntroSlider from 'react-native-app-intro-slider'; \/\/import library atau module react-native-app-intro-slider\nimport Icon from 'react-native-vector-icons\/Ionicons';\n\n\/\/data yang akan digunakan dalam onboarding\nconst slides = [\n    {\n        key: 1,\n        title: 'Belajar Intensif',\n        text: '4 pekan online, 5 hari sepekan, estimasi materi dan tugas 3-4 jam per hari',\n        image: require('..\/..\/assets\/images\/working-time.png')\n    },\n    {\n        key: 2,\n        title: 'Teknologi Populer',\n        text: 'Menggunakan bahasa pemrograman populer',\n        image: require('..\/..\/assets\/images\/research.png'),\n    },\n    {\n        key: 3,\n        title: 'From Zero to Hero',\n        text: 'Tidak ada syarat minimum skill, cocok untuk pemula',\n        image: require('..\/..\/assets\/images\/venture.png'),\n    },\n    {\n        key: 4,\n        title: 'Training Gratis',\n        text: 'Kami membantu Anda mendapatkan pekerjaan \/ proyek',\n        image: require('..\/..\/assets\/images\/money-bag.png'),\n    }\n];\n\nconst Intro = ({ navigation }) =&gt; {\n\n    \/\/menampilkan data slides kedalam renderItem\n    const renderItem = ({ item }) =&gt; {\n        return (\n            &lt;View style={styles.slide}&gt;\n                &lt;Text style={styles.title}&gt;{item.title}&lt;\/Text&gt;\n                &lt;Image source={item.image} style={styles.image} \/&gt;\n                &lt;Text style={styles.text}&gt;{item.text}&lt;\/Text&gt;\n            &lt;\/View&gt;\n        );\n    }\n\n    \/\/fungsi ketika onboarding ada di list terakhir atau screen terakhir \/ ketika button done di klik\n    const onDone = () =&gt; {\n        navigation.navigate('Login')\n    }\n\n    \/\/mengcustom tampilan button done\n    const renderDoneButton = () =&gt; {\n        return (\n            &lt;View style={styles.buttonCircle}&gt;\n                &lt;Icon\n                    name=\"md-checkmark\"\n                    color=\"rgba(255, 255, 255, .9)\"\n                    size={24}\n                \/&gt;\n            &lt;\/View&gt;\n        );\n    };\n\n    \/\/mengcustom tampilan next button\n    const renderNextButton = () =&gt; {\n        return (\n            &lt;View style={styles.buttonCircle}&gt;\n                &lt;Icon\n                    name=\"arrow-forward\"\n                    color=\"rgba(255, 255, 255, .9)\"\n                    size={24}\n                \/&gt;\n            &lt;\/View&gt;\n        );\n    };\n\n    return (\n        &lt;View style={styles.container}&gt;\n            &lt;StatusBar barStyle=\"dark-content\" backgroundColor=\"#ffffff\" \/&gt;\n            &lt;View style={{ flex: 1 }}&gt;\n                {\/* merender atau menjalankan library react-native-app-intro-slider *\/}\n                &lt;AppIntroSlider\n                    data={slides}\n                    onDone={onDone}\n                    renderItem={renderItem}\n                    renderDoneButton={renderDoneButton}\n                    renderNextButton={renderNextButton}\n                    keyExtractor={(item, index) =&gt; index.toString()}\n                    activeDotStyle={{ backgroundColor: '#191970' }}\n                \/&gt;\n            &lt;\/View&gt;\n        &lt;\/View&gt;\n    )\n}\n\nexport default Intro<\/code><\/pre>\n<p>Kemudian saya akan membuat satu component lagi yang bernama <strong>Login.js<\/strong>, nantinya component <strong>Login.js<\/strong> ditampilkan setelah screen Intro atau OnBoarding. Berikut adalah code dari <strong>Login.js<\/strong><\/p>\n<pre class=\"wp-block-code\"><code>import React from 'react';\nimport {\n    View,\n    Text,\n    Image,\n    Button,\n    TextInput,\n    StatusBar,\n    TouchableOpacity\n} from 'react-native';\nimport styles from '.\/style';\n\nfunction Login({ navigation }) {\n    return (\n        &lt;View style={styles.container}&gt;\n            &lt;StatusBar backgroundColor=\"#ffffff\" barStyle=\"dark-content\" \/&gt;\n            &lt;Text&gt;Hallo Login!&lt;\/Text&gt;\n        &lt;\/View&gt;\n    )\n}\n\nexport default Login;<\/code><\/pre>\n<p>Setelah membuat component-component tersebut, selanjutnya kita membuat sebuah navigasi, disini saya membuat file dengan nama <strong>routes.js<\/strong>. Berikut adalah code dari <strong>routes.js<\/strong><\/p>\n<pre class=\"wp-block-code\"><code>import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation\/native';\nimport { createStackNavigator } from '@react-navigation\/stack';\nimport SplashScreen from '.\/screens\/SplashScreen';\nimport Intro from '.\/screens\/Intro';\nimport Login from '.\/screens\/Login';\n\nconst Stack = createStackNavigator();\n\nconst MainNavigation = () =&gt; (\n    &lt;Stack.Navigator&gt;\n        &lt;Stack.Screen name=\"Intro\" component={Intro} options={{ headerShown: false }} \/&gt;\n        &lt;Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} \/&gt;\n    &lt;\/Stack.Navigator&gt;\n)\n\nfunction AppNavigation() {\n    const [ isLoading, setIsLoading ] = React.useState(true)\n\n    \/\/mengatur durasi splashscreen saat aplikasi pertama kali dibuka\n    React.useEffect(() =&gt; {\n        setTimeout(() =&gt; {\n            setIsLoading(!isLoading)\n        }, 2000)\n    }, [])\n\n    if(isLoading) {\n        return &lt;SplashScreen \/&gt;\n    }\n\n    return (\n        &lt;NavigationContainer&gt;\n            &lt;MainNavigation \/&gt;\n        &lt;\/NavigationContainer&gt;\n    )\n}\n\nexport default AppNavigation;<\/code><\/pre>\n<p>Setelah semua component dibuat, kalian bisa lihat outputnya <a href=\"https:\/\/drive.google.com\/file\/d\/1MGKmHnErm3_83u3AJIHMcEtLUcwnMQ4E\/view?usp=sharing\">disini<\/a><\/p>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "12",
              "judul": "Hari 2 â€“ Authentication (JWT)",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p> <strong><em>Json Web Token <\/em><\/strong>adalah cara untuk mengautentikasi <strong>REST API<\/strong>, sehingga hanya orang yang memiliki token saja yang boleh menggunakannya. <\/p>\n<h3>Kapan kita menggunakan JWT ?<\/h3>\n<p>JWT pada umumnya digunakan untuk :<\/p>\n<p><strong>1. Autentikasi<\/strong><\/p>\n<p>Ketika user\/client melakukan autentikasi dan mendapatkan token, maka  untuk seterusnya setiap request harus menyertakan token tersebut.<\/p>\n<p><strong>2. Pertukaran Informasi<\/strong><\/p>\n<p>Dengan token yang sudah di-<em>sign<\/em> misal dengan algoritma RSA, kita  dapat mengetahui dan yakin siapa yang melakukan request tersebut.  Terlebih dengan isi pada bagian Signature merupakan gabungan dari isi  Header dan Payload, jadi jika isi Header\/Payload dirubah maka isi  Signature menjadi tidak valid. <\/p>\n<h3>Bagaimana cara kerja JWT ?<\/h3>\n<p> Umumnya ketika user berhasil  melakukan login, maka server akan mengembalikan token JWT dan akan  disimpan pada Local Storage \/ Cookies Browser. Selanjutnya untuk setiap  request yang akan mengakses API yang terproteksi harus menyertakan token  tersebut. <\/p>\n<p> Umumnya token tersebut akan disertakan pada <strong>Authorization<\/strong> Header dengan <strong>Bearer<\/strong> schema, contohnya seperti ini :  <\/p>\n<pre class=\"wp-block-code\"><code>Authorization: Bearer &lt;token&gt;<\/code><\/pre>\n<p>Untuk contoh autentikasi menggunakan JWT dalam React Native simak dalam video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/TVl1yrEKYIM?feature=oembed\" title=\"React Native Lanjutan - Authentication (JWT)\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>Sumber: (<a href=\"http:\/\/blog.nostratech.com\/2016\/06\/jwt-json-web-token.html\">http:\/\/blog.nostratech.com\/2016\/06\/jwt-json-web-token.html<\/a>)<\/p>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "13",
              "judul": "Hari 3 â€“ Authentication (Google)",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p> Pada materi ini , kita akan membahas Authentication Google menggunakan firebase. <\/p>\n<p> Firebase adalah suatu layanan dari Google yang digunakan untuk  mempermudah para pengembang aplikasi dalam mengembangkan aplikasi.  Dengan adanya Firebase, pengembang aplikasi bisa fokus mengembangkan  aplikasi tanpa harus memberikan usaha yang besar. <\/p>\n<h2>Bagaimana membuat Autentikasi menggunakan Google di React Native ?<\/h2>\n<p>Yang pertama adalah kita harus menambahkan beberapa library , diantaranya adalah<\/p>\n<ul>\n<li><strong>Firebase<\/strong><\/li>\n<\/ul>\n<p>Gunakan perintah ini untuk menginstall firebase<\/p>\n<pre class=\"wp-block-code\"><code>npm install --save @react-native-firebase\/app<\/code><\/pre>\n<p>Kemudian tambahkan library lagi untuk Authentication menggunakan Firebase, gunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install --save @react-native-firebase\/auth<\/code><\/pre>\n<p>Setelah menginstall library firebase, selanjutnya kita harus membuat project terlebih dahulu dalam firebase console, pertama kunjungi link berikut ini (<a href=\"https:\/\/firebase.google.com\/\">https:\/\/firebase.google.com\/<\/a>), sehingga terlihat tampilan seperti berikut ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5652\" height=\"508\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-1-1024x508.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-1-1024x508.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-1-300x149.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-1-768x381.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-1-1536x762.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-1.png 1901w\" width=\"1024\"\/><\/figure>\n<p>Selanjutnya klik \u201c<strong>Buka Konsol<\/strong>\u201c, seperti pada gambar diatas yang diberi tanda <code>merah<\/code>, setelah itu kalian akan dialihkan kehalaman seperti dibawah ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5653\" height=\"505\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-2-1024x505.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-2-1024x505.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-2-300x148.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-2-768x379.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-2-1536x758.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-2.png 1901w\" width=\"1024\"\/><\/figure>\n<p>Kemudian, buat project dengan cara pilih \u201c<strong>Tambahkan project<\/strong>\u201d seperti gambar diatas, tahap selanjutnya kalian akan melihat tampilan seperti ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5654\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-2-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-2-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-2-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-2-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-2-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-2.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Lalu isi nama projectnya, disini saya membuat project dengan nama <strong>Sanbercode<\/strong>, jika sudah kemudian klik <strong>Lanjutkan<\/strong><\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5655\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-3-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-3-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-3-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-3-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-3-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-3.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Jika kalian menemukan halaman seperti gambar diatas, maka langsung aja klik <strong>Lanjutkan<\/strong><\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5656\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-4-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-4-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-4-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-4-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-4-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-4.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Selanjutnya pilih \u201c<strong>Default Account for Firebase<\/strong>\u201d seperti pada gambar diatas. Jika sudah Klik \u201c<strong>Buat Project<\/strong>\u201c. Kemudian tunggu hingga proses pembuatan project selesai.<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5657\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-3-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-3-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-3-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-3-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-3-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-3.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Jika pembuatan project sudah selesai, maka akan terlihat tampilan seperti diatas, kemudian klik tombol yang ditandai seperti gambar diatas, jika sudah maka akan terlihat tampilan seperti berikut ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5658\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-7-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-7-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-7-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-7-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-7-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-7.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Kemudian isi nama aplikasinya, jika sudah Klik \u201c<strong>Daftarkan Aplikasi<\/strong>\u201c<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5659\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-8-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-8-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-8-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-8-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-8-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-8.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Setelah mendaftarkan aplikasi , kemudian copy <strong>firebaseConfig<\/strong> dan tambahkan ke dalam file <strong>App.js<\/strong> dalam root directory project, sehingga menjadi seperti ini<\/p>\n<pre class=\"wp-block-code\"><code>import React, { useEffect } from 'react';\nimport AppNavigation from '.\/src\/routes';\nimport firebase from '@react-native-firebase\/app'; &lt;-- import library firebase\n\n\/\/ganti isi dari firebaseConfig, sesuai dengan project yang anda buat di firebase\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC8gMiT-scdQneRlQ0wB9mZ-uIPr986L_s\",\n  authDomain: \"sanbercode-bc309.firebaseapp.com\",\n  databaseURL: \"https:\/\/sanbercode-bc309.firebaseio.com\",\n  projectId: \"sanbercode-bc309\",\n  storageBucket: \"sanbercode-bc309.appspot.com\",\n  messagingSenderId: \"1040733219420\",\n  appId: \"1:1040733219420:web:db3540f743aa6290bf5499\",\n  measurementId: \"G-NPF8QFPPT0\"\n};\n\/\/ Inisialisasi firebase\nif(!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nconst App: () =&gt; React$Node = () =&gt; {\n\n  return (\n    &lt;AppNavigation \/&gt;\n  );\n};\n\nexport default App;\n<\/code><\/pre>\n<p>Kemudian, Klik \u201c<strong>Lanjutkan ke console<\/strong>\u201c, maka akan dialihkan menuju halaman utama project kita seperti gambar berikut ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5660\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-4-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-4-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-4-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-4-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-4-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-4.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Selanjutnya, Klik \u201c<strong>Tambahkan aplikasi<\/strong>\u201c, lalu pilih icon <strong>Android<\/strong>, kemudian akan dialihkan ke halaman berikut ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5661\" height=\"506\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-5-1024x506.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-5-1024x506.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-5-300x148.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-5-768x380.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-5-1536x759.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-5.jpg 1902w\" width=\"1024\"\/><\/figure>\n<p>Isi <strong>nama paket Android<\/strong>, sesuai project kalian, nama paket Android ini bisa didapatkan dari file <strong>AndroidManifest.xml<\/strong> pada line ke-2. Selanjutnya isi <strong>Nama Aplikasinya<\/strong>, sesuaikan dengan nama Aplikasi kalian. Jika sudah, klik <strong>Berikutnya<\/strong>.<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5662\" height=\"506\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-6-1024x506.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-6-1024x506.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-6-300x148.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-6-768x380.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-6-1536x760.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-6.jpg 1901w\" width=\"1024\"\/><\/figure>\n<p>Kemudian klik <strong>\u201cDownload google-services.json\u201d<\/strong>. Jika sesudah didownload, pindahkan <strong>google-service.json<\/strong> kedalam <strong>android\/app<\/strong> project kita. Kemudian Klik <strong>Berikutnya<\/strong><\/p>\n<p>Selanjutnya tambahkan Firebase SDK kedalam project kita, untuk detailnya kalian bisa lihat di dalam tahap 3 firebase. Jika sudah, Klik <strong>Berikutnya<\/strong><\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5663\" height=\"502\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-7-1024x502.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-7-1024x502.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-7-300x147.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-7-768x377.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-7-1536x754.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-7.jpg 1918w\" width=\"1024\"\/><\/figure>\n<p>Coba lakukan Build Aplikasi, namun terlebih dahulu kita hapus Aplikasi yang sudah terinstall. Jika dalam proses ini lama, kalian bisa klik <strong>Lewati langkah ini<\/strong><\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5664\" height=\"576\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-10-1024x576.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-10-1024x576.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-10-300x169.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-10-768x432.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-10-1536x864.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-10.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Kemudian, Klik \u201c<strong>Authentication<\/strong>\u201d pada sidebar, lalu masuk pada<strong> Sign-in method<\/strong>, pilih <strong>Google<\/strong> kemudian <strong>Aktifkan<\/strong>.<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5665\" height=\"506\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-8-1024x506.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-8-1024x506.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-8-300x148.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-8-768x379.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-8-1536x759.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-8.jpg 1907w\" width=\"1024\"\/><\/figure>\n<p>Jika sudah mengaktifkan google dalam Menu \u201cAuthentication\u201d, selanjutnya pilih project Android kita seperti pada gambar diatas, kemudian Klik Icon <strong>Settings<\/strong><\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5666\" height=\"507\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-9-1024x507.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-9-1024x507.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-9-300x149.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-9-768x380.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-9-1536x761.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-9.jpg 1900w\" width=\"1024\"\/><\/figure>\n<p>Didalam halaman Settings, scroll kebawah kemudian pilih <strong>Tambahkan sidik jari<\/strong>. Untuk mendapatkan sidik jari, terlebih dahulu kita masuk ke directory root project kita melalui command prompt atau cmder, kemudian copy perintah berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>keytool -list -v -keystore android\\app\\debug.keystore -alias androiddebugkey<\/code><\/pre>\n<p>Jika diminta password, masukan \u201c<strong>android<\/strong>\u201c, setelah itu akan didapatkan output seperti gambar dibawah ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-5672\" height=\"593\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-11-1024x593.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-11-1024x593.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-11-300x174.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-11-768x445.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-11.jpg 1103w\" width=\"1024\"\/><\/figure>\n<p>Kemudian <strong>copy<\/strong> yang ditandai garis merah seperti di gambar, kemudian tambahkan di Firebase yang tadi dibagian sidik jari.<\/p>\n<ul>\n<li><strong>Google Sign in<\/strong><\/li>\n<\/ul>\n<p>Gunakan perintah berikut ini untuk menginstall library ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install @react-native-community\/google-signin --save<\/code><\/pre>\n<p>Kemudian setelah menginstall library tersebut, kita harus melakukan konfigurasi lagi. Untuk konfigurasi nya, bisa ikuti langkah ini<\/p>\n<ol>\n<li>Update  <code>android\/build.gradle<\/code> , menjadi seperti berikut ini<\/li>\n<\/ol>\n<pre class=\"wp-block-code\"><code>buildscript {\n    ext {\n        buildToolsVersion = \"27.0.3\"\n        minSdkVersion = 16\n        compileSdkVersion = 27\n        targetSdkVersion = 26\n        supportLibVersion = \"27.1.1\"\n        googlePlayServicesAuthVersion = \"16.0.1\" \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\n    }\n...\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.2' \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\n        classpath 'com.google.gms:google-services:4.1.0' \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\n    }\n...\nallprojects {\n    repositories {\n        mavenLocal()\n        google() \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\n        jcenter()\n        maven {\n            \/\/ All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n            url \"$rootDir\/..\/node_modules\/react-native\/android\"\n        }\n    }\n}<\/code><\/pre>\n<p>2. Update  <code>android\/app\/build.gradle<\/code> menjadi seperti ini<\/p>\n<pre class=\"wp-block-code\"><code>dependencies {\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\n    implementation \"com.android.support:appcompat-v7:23.0.1\"\n    implementation \"com.facebook.react:react-native:+\"\n    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0' \/\/ &lt;-- tambahkan ini jika belum ada dalam build.gradle\n}\n\napply plugin: 'com.google.gms.google-services' \/\/ &lt;--- tambahkan ini di line paling akhir build.gradle<\/code><\/pre>\n<p>Untuk dokumentasi lebih lengkapnya bisa di cek dalam link ini (<a href=\"https:\/\/github.com\/react-native-community\/google-signin\/blob\/master\/docs\/android-guide.md\">https:\/\/github.com\/react-native-community\/google-signin\/blob\/master\/docs\/android-guide.md<\/a>)<\/p>\n<p>Jika kalian sudah menambah semua library dan sudah melakukan konfigurasinya, untuk tutorial autentikasinya bisa dilihat dalam video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/G2w-0CYV2og?feature=oembed\" title=\"React Native Lanjutan - Google Authentication\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<h2> Troubleshooting <\/h2>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan :<\/p>\n<p>Lakukan ini jika tidak bisa menginputkan SHA-1 di Firebase<\/p>\n<\/blockquote>\n<ul>\n<li>Install library untuk merename package project, untuk perintah atau commandnya bisa gunakan dibawah ini :<\/li>\n<\/ul>\n<pre class=\"wp-block-code\"><code>npm install react-native-rename -g<\/code><\/pre>\n<ul>\n<li>Untuk penggunaan library nya, bisa gunakan perintah berikut ini<\/li>\n<\/ul>\n<pre class=\"wp-block-code\"><code>npx react-native-rename \"Travel App\" -b com.junedomingo.travelapp<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan :<\/p>\n<p>Travel App dan com.junedomingo.travelapp diganti sesuai dengan keinginan anda, bisa dimasukan nama Anda. contoh untuk package name : com.zakky.sanbercodeapp<\/p>\n<\/blockquote>\n<p>Jika sudah merename project dan package namenya, copy code MainActivity.java dan MainApplication.java yang ada di folder <strong>android\\app\\src\\main\\java<\/strong> pada package sebelumnya kemudian paste kedalam file pada folder package baru Anda.<\/p>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan :<\/p>\n<p>Ganti package name sesuai nama package baru Anda<\/p>\n<\/blockquote>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "14",
              "judul": "Hari 4 â€“ Fingerprint (Authentication)",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p> Fingerprint adalah sebuah alat untuk  memenuhi kebutuhan data yang cepat dengan menggunakan verifikasi sidik  jari. Sebelum sensor Fingerprint ditemukan, dahulu sebuah data diamankan  dengan menggunakan password atau ID, ada juga yang menggunakan pola  guna mengamankan suatu data. <\/p>\n<p>Saat ini, Fingerprint sudah banyak digunakan dalam berbagai aplikasi, salah satunya digunakan untuk Autentikasi, contohnya dalam Aplikasi yang membutuhkan tingkat keamanan yang tinggi, seperti Mobile Banking.<\/p>\n<p>Pada kesempatan kali ini, kita akan belajar Autentikasi menggunakan Fingerprint, apa saja yang harus dipersiapkan dalam pembelajaran kali ini ?<\/p>\n<ul>\n<li><strong>Menambahkan atau Menginstall Library React Native Touch ID<\/strong><\/li>\n<\/ul>\n<p>Untuk menginstall library React Native Touch ID sebetulnya sama seperti menginstall library yang lain, yang membedakan adalah command\/perintahnya saja, untuk menginstallnya copy perintah ini didalam directory root project kalian<\/p>\n<pre class=\"wp-block-code\"><code>npm i --save react-native-touch-id<\/code><\/pre>\n<p>Selanjutnya adalah, kita harus menambahkan permissions kedalam file <code>AndroidManifest.xml<\/code><\/p>\n<pre class=\"wp-block-code\"><code>&lt;uses-permission android:name=\"android.permission.USE_FINGERPRINT\" \/&gt;<\/code><\/pre>\n<p>Jika sudah, untuk menggunakan library ini kita harus mengimportnya terlebih dahulu menggunakan<\/p>\n<pre class=\"wp-block-code\"><code>import TouchID from 'react-native-touch-id';<\/code><\/pre>\n<p>Dokumentasi React Native Touch ID bisa dilihat disini (<a href=\"https:\/\/github.com\/naoufal\/react-native-touch-id\">https:\/\/github.com\/naoufal\/react-native-touch-id<\/a>)<\/p>\n<p>Untuk lebih lengkapnya mengenai autentikasi menggunakan Fingerprint bisa dilihat dalam video berikut ini :<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/_t4w_RIhEUM?feature=oembed\" title=\"React Native Lanjutan - Fingerprint (Authentication)\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "15",
              "judul": "Hari 5 â€“ Camera dan Upload Image",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada kesempatan kali ini, kita akan belajar menggunakan React Native Camera dan Upload Image menggunakan Firebase.<\/p>\n<p>Dengan semakin berkembangnya Aplikasi, kali ini kita akan coba mencontohkan penggunaan React Native Camera dan Upload Image untuk verifikasi data diri.<\/p>\n<p>Untuk mengikuti materi kali ini, Anda harus menambahkan beberapa library berikut ini<\/p>\n<ul>\n<li><strong>React Native Camera<\/strong><\/li>\n<\/ul>\n<p>Untuk menambahkan library React Native Camera ini, anda cukup menggunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install react-native-camera --save<\/code><\/pre>\n<p>Jika sudah menambahkan atau menginstall library tersebut, selanjutnya tambahkan permission pada <code>AndroidManifest.xml<\/code> berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>&lt;!-- Required --&gt;\n&lt;uses-permission android:name=\"android.permission.CAMERA\" \/&gt;\n\n&lt;!-- Include this only if you are planning to use the camera roll --&gt;\n&lt;uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" \/&gt;\n&lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" \/&gt;\n\n&lt;!-- Include this only if you are planning to use the microphone for video recording --&gt;\n&lt;uses-permission android:name=\"android.permission.RECORD_AUDIO\"\/&gt;<\/code><\/pre>\n<p>Kemudian setelah menambahkan permission pada <code>AndroidManifest.xml<\/code>, selanjutnya tambahkan ini di file <code>android\/app\/build.gradle<\/code><\/p>\n<pre class=\"wp-block-preformatted\">android {\n  ...\n  defaultConfig {\n    ...\n    missingDimensionStrategy 'react-native-camera', 'general' \/\/ &lt;--- tambahkan ini\n  }\n}<\/pre>\n<p>Untuk menggunakan library React Native Camera, import terlebih dahulu seperti dibawah ini <\/p>\n<pre class=\"wp-block-code\"><code> import { RNCamera } from 'react-native-camera'; <\/code><\/pre>\n<p>Berikut adalah contoh penggunaan React Native Camera yang ditampilkan didalam sebuah Modal.<\/p>\n<pre class=\"wp-block-code\"><code>import React, { useState } from 'react';\nimport { View, Text, Image, Alert, Modal, StatusBar, TextInput, TouchableOpacity } from 'react-native';\nimport styles from '.\/style';\nimport { RNCamera } from 'react-native-camera';\nimport Icon from 'react-native-vector-icons\/Feather';\nimport MaterialCommunity from 'react-native-vector-icons\/MaterialCommunityIcons';\n\nfunction Register({ navigation }) {\n\n    const [isVisible, setIsVisible] = useState(false)\n    const [type, setType] = useState('back')\n    const [photo, setPhoto] = useState(null)\n\n    const renderCamera = () =&gt; {\n        return (\n            &lt;Modal visible={isVisible} onRequestClose={() =&gt; setIsVisible(false)}&gt;\n                &lt;View style={{ flex: 1 }}&gt;\n                    &lt;RNCamera\n                        style={{ flex: 1 }}\n                        type={type}\n                        ref={ref =&gt; {\n                            camera = ref;\n                        }}\n                    &gt;\n                        ......\n                    &lt;\/RNCamera&gt;\n                &lt;\/View&gt;\n            &lt;\/Modal&gt;\n        )\n    }\n\n    return (\n        &lt;View style={styles.container}&gt;\n            &lt;View style={styles.blueContainer}&gt;\n                &lt;TouchableOpacity style={styles.changePicture} onPress={() =&gt; setIsVisible(true)}&gt;\n                    &lt;Text style={styles.btnChangePicture}&gt;Change picture&lt;\/Text&gt;\n                &lt;\/TouchableOpacity&gt;\n            &lt;\/View&gt;\n            {renderCamera()}\n        &lt;\/View&gt;\n    )\n}\n\nexport default Register;<\/code><\/pre>\n<p>Untuk dokumentasi lebih lanjut mengenai React Native Camera bisa dilihat dalam halaman berikut ini (<a href=\"https:\/\/github.com\/react-native-community\/react-native-camera\">https:\/\/github.com\/react-native-community\/react-native-camera<\/a>)<\/p>\n<ul>\n<li><strong>React Native Firebase<\/strong><\/li>\n<\/ul>\n<p>Library yang harus ditambahkan selanjutnya adalah React Native Firebase, untuk menginstall atau menambahkan React Native Firebase gunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install --save @react-native-firebase\/storage<\/code><\/pre>\n<p>Untuk menggunakan library React Native Firebase kita harus mengimportnya seperti dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>import storage from '@react-native-firebase\/storage';<\/code><\/pre>\n<p>Untuk dokumentasi lebih lanjut mengenai React Native Firebase, bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/rnfirebase.io\/\">https:\/\/rnfirebase.io\/<\/a>)<\/p>\n<p>Lebih lanjut mengenai React Native Camera dan Upload Image menggunakan Firebase Anda bisa simak dalam video dibawah ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/uFh4QQimdjw?feature=oembed\" title=\"React Native Lanjutan - Camera + Upload Image\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            }
          
          
        ]
      },
      {
        "nama": "WEEK 3",
        "posting": [
          
            {
              "uuid": "6",
              "judul": "Hari 1 â€“ Design Homepage Kekinian",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada materi kali ini, Anda akan belajar tentang membuat Design Homepage Kekinian.<\/p>\n<p>Dalam membuat Design Homepage Kekinian, materi kita hari ini tidak perlu menggunakan library tambahan. Berikut merupakan tips membuat sebuah tampilan atau User Interface responsive di berbagai screen<\/p>\n<ul>\n<li>Flexbox<\/li>\n<\/ul>\n<p>Untuk lebih detail mengenai flexbox bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/reactnative.dev\/docs\/flexbox\">https:\/\/reactnative.dev\/docs\/flexbox<\/a>)<\/p>\n<ul>\n<li>Dimensions<\/li>\n<\/ul>\n<p>Dimensions ini bisa kita gunakan tanpa harus menginstall sebuah library, karena Dimensions ini sudah terdapat pada library React. Kita hanya cukup mengimportnya saja. Untuk contoh penggunaan Dimensions bisa dilihat pada code dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>import { Dimensions } from \"react-native\";\n\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;<\/code><\/pre>\n<p>Dokumentasi mengenai Dimensions bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/reactnative.dev\/docs\/dimensions\">https:\/\/reactnative.dev\/docs\/dimensions<\/a>)<\/p>\n<ul>\n<li>Percent(%)<\/li>\n<\/ul>\n<p>Penggunaan percent(%) ini juga cukup penting. Anda bisa menambahkan atau menggunakan percent(%) ini untuk layouting, seperti menambahkan kedalam width, height, margin, padding dan sebagainya. Untuk contohnya bisa dilihat pada code berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>addButton: {\n        width: '50%',\n        height: '30%',\n        marginLeft: 5,\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: '#3EC6FF'\n}<\/code><\/pre>\n<p>Sekedar tambahan, untuk pembelajaran. Jika kalian masih bingung penggunaan Flexbox, Dimensions dan Percent. Dan kalian ingin menggunakan sebuah library, kalian bisa coba library berikut ini (<a href=\"https:\/\/github.com\/marudy\/react-native-responsive-screen\">https:\/\/github.com\/marudy\/react-native-responsive-screen<\/a>) atau Anda bisa explore sendiri untuk library lainnya untuk layouting.<\/p>\n<p>Sharing tentang Layouting dan Design Homepage Kekinian, bisa dilihat pada video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/o85jl1B6eTY?feature=oembed\" title=\"React Native Lanjutan - Design Homepage Kekinian\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "7",
              "judul": "Hari 2 â€“ GPS Location + Maps (MapBox)",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada hari ini, Kita akan belajar menampilkan Maps menggunakan Mapbox. Apa saja yang dibutuhkan untuk mengikuti materi kali ini ?<\/p>\n<ul>\n<li><strong>React Native Mapbox<\/strong><\/li>\n<\/ul>\n<p>Untuk menambahkan library atau module react native mapbox, Anda bisa gunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install @react-native-mapbox-gl\/maps --save<\/code><\/pre>\n<p>Selanjutnya, tambahkan permission berikut ini pada <code>AndroidManifest.xml <\/code>Project Anda<\/p>\n<pre class=\"wp-block-code\"><code>&lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" \/&gt;\n&lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" \/&gt;\n&lt;uses-feature android:name=\"android.hardware.location.gps\" \/&gt;<\/code><\/pre>\n<p>Jika sudah, kalian harus membuat sebuah akun Mapbox. Kalian bisa lakukan pendaftaran akun pada halaman berikut ini (<a href=\"https:\/\/account.mapbox.com\/auth\/signup\/\">https:\/\/account.mapbox.com\/auth\/signup\/<\/a>)<\/p>\n<p>Kemudian, setelah melakukan pendaftaran, kalian bisa lihat dibagian halaman paling bawah, Anda akan menemukan sebuah Access Token seperti gambar dibawah ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-8007\" height=\"463\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/access_token-1024x463.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/access_token-1024x463.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/access_token-300x136.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/access_token-768x347.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/access_token.jpg 1114w\" width=\"1024\"\/><\/figure>\n<p>Nantinya token tersebut akan digunakan untuk menggunakan Maps pada materi kali ini.<\/p>\n<p>Untuk lebih detail mengenai Maps menggunakan Mapbox ini kalian bisa lihat pada video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/h0eftvQ7B5E?feature=oembed\" title=\"React Native Lanjutan - GPS Location + Maps (Mapbox)\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "8",
              "judul": "Hari 3 â€“ Chart",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada materi kali ini, Kita akan mempelajari Chart. Chart ini biasanya digunakan untuk melihat suatu laporan dalam bentuk grafik. Lalu apa saja yang dibutuhkan untuk mengikuti materi kali ini ?<\/p>\n<ul>\n<li><strong>React Native Chart Wrapper<\/strong><\/li>\n<\/ul>\n<p>Untuk menginstall atau menambahkan module tersebut. Anda bisa jalankan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install react-native-charts-wrapper --save<\/code><\/pre>\n<p>Jika sudah, kita harus melakukan konfigurasi terlebih dahulu. Yang pertama cek pada <code>android\/build.gradle<\/code><\/p>\n<pre class=\"wp-block-code\"><code>maven { url \"https:\/\/jitpack.io\" }<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan :<\/p>\n<p>Jika sudah ada  <code>maven { url \"https:\/\/jitpack.io\" }<\/code> silahkan skip bagian ini<\/p>\n<\/blockquote>\n<p>Kemudian tambahkan ini kedalam file <code>android\/settings.gradle<\/code><\/p>\n<pre class=\"wp-block-code\"><code>include ':react-native-charts-wrapper'\nproject(':react-native-charts-wrapper').projectDir = new File(\n  rootProject.projectDir,\n  '..\/node_modules\/react-native-charts-wrapper\/android'\n)<\/code><\/pre>\n<p>Jika sudah, tambahkan ini kedalam file <code>android\/app\/build.gradle<\/code><\/p>\n<pre class=\"wp-block-code\"><code>dependencies {\n    ...\n    implementation project(':react-native-charts-wrapper') &lt;-- tambahkan ini\n}<\/code><\/pre>\n<p>Selanjutnya, buka file <code>MainApplication.java<\/code>, kemudian tambahkan ini pada bagian import<\/p>\n<pre class=\"wp-block-code\"><code>import com.github.wuxudong.rncharts.MPAndroidChartPackage;<\/code><\/pre>\n<p>Kemudian tambahkan pada bagian <code>getPackages<\/code><\/p>\n<pre class=\"wp-block-code\"><code>protected List&lt;ReactPackage&gt; getPackages() {\n          @SuppressWarnings(\"UnnecessaryLocalVariable\")\n          List&lt;ReactPackage&gt; packages = new PackageList(this).getPackages();\n          \/\/ Packages that cannot be autolinked yet can be added manually here, for example:\n          \/\/ packages.add(new MyReactNativePackage());\n          packages.add(new MPAndroidChartPackage()); &lt;--- tambahkan ini saja\n          return packages;\n        }<\/code><\/pre>\n<p>Untuk lebih detail mengenai Chart dalam React Native, bisa dilihat pada video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/Jf-OmrHMxoQ?feature=oembed\" title=\"React Native Lanjutan - Chart\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "9",
              "judul": "Hari 4 â€“ Real Time Data Management",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada materi kali ini, Anda akan belajar tentang Realtime Data Management.  Realtime Data Management adalah sistem basis data yang menggunakan pemrosesan waktu nyata untuk  menangani beban kerja yang kondisinya terus berubah.<\/p>\n<p>Sama seperti sebelumnya, materi kali ini masih menggunakan Firebase. Apa saja yang dibutuhkan untuk mengikuti materi kali ini ? <\/p>\n<ul>\n<li>React Native Firebase Database<\/li>\n<\/ul>\n<p>Untuk menambahkan module tersebut, Anda bisa gunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install @react-native-firebase\/database --save<\/code><\/pre>\n<p>Untuk menggunakan module react native firebase database, tambahkan code berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>import database from '@react-native-firebase\/database';<\/code><\/pre>\n<p>Dokumentasi lebih lanjut mengenai React Native Firebase Database, Anda bisa lihat pada halaman berikut ini (<a href=\"https:\/\/rnfirebase.io\/database\/usage\">https:\/\/rnfirebase.io\/database\/usage<\/a>)<\/p>\n<ul>\n<li>React Native Gifted Chat<\/li>\n<\/ul>\n<p>Untuk menambahkan atau menginstall modulenya, Anda bisa gunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install react-native-gifted-chat --save<\/code><\/pre>\n<p>Untuk menggunakan module React Native Gifted Chat, tambahkan code berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>import { GiftedChat } from 'react-native-gifted-chat'<\/code><\/pre>\n<p>Dokumentasi lebih lanjut mengenai React Native Gifted Chat, Anda bisa lihat pada halaman berikut ini (<a href=\"https:\/\/github.com\/FaridSafi\/react-native-gifted-chat\">https:\/\/github.com\/FaridSafi\/react-native-gifted-chat<\/a>)<\/p>\n<p>Untuk contoh mengenai Realtime Data Management bisa dilihat pada video dibawah ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/bzbC3z_RW4E?feature=oembed\" title=\"React Native Lanjutan - Real Time Data Management\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "10",
              "judul": "Hari 5 â€“ Complex Navigation (React Navigation ) + Deep Linkingt",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada materi kali ini, Kita akan belajar tentang method atau fungsi yang ada di React Navigation dan Deep Linking.<\/p>\n<h2>React Navigation<\/h2>\n<p><code>Navigation<\/code> memiliki prop sebagai berikut<\/p>\n<ul>\n<li> <code>navigate<\/code>  \u2013 Digunakan untuk berpindah ke halaman lain<\/li>\n<li> <code>reset<\/code>  \u2013 Menghapus route, dan mengganti dengan route yang baru<\/li>\n<li> <code>goBack<\/code>  \u2013 Menutup screen aktif dan kembali ke screen atau route sebelumnya<\/li>\n<li> <code>setParams<\/code>  \u2013 Menyimpan parameter untuk digunakan di route lain<\/li>\n<li> <code>dispatch<\/code>  \u2013 Mengirim sebuah actions pada router<\/li>\n<li> <code>setOptions<\/code>  \u2013 Memperbarui screen options<\/li>\n<li> <code>isFocused<\/code>  \u2013 Mengecek apakah layar fokus<\/li>\n<li> <code>addListener<\/code>  \u2013 Mengupdate ke event pada navigator<\/li>\n<\/ul>\n<p>Ada beberapa fungsi tambahan yang ada pada prop navigasi berdasarkan pada jenis navigator saat ini.<\/p>\n<ul>\n<li> <code>replace<\/code>  \u2013 Mengganti route saat ini dengan yang baru<\/li>\n<li> <code>push<\/code>  \u2013 Mendorong route yang baru<\/li>\n<li> <code>pop<\/code>  \u2013 Kembali ke stack sebelumnya<\/li>\n<li> <code>popToTop<\/code>  \u2013 Pergi ke bagian atas dari Stack<\/li>\n<\/ul>\n<p>Dokumentasi lebih lengkap mengenai Navigation dalam React Navigation bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/reactnavigation.org\/docs\/navigation-prop\/\">https:\/\/reactnavigation.org\/docs\/navigation-prop\/<\/a>)<\/p>\n<h2>Deep Linking<\/h2>\n<p>Deep Linking adalah penggunaan hyperlink yang digunakan untuk mengintegrasikan antara website dengan Aplikasi yang sudah kita buat. Bagaimana menggunakan Deep Linking dalam React Native ?<\/p>\n<ul>\n<li>Tambahkan <code>intent-filter<\/code> pada AndroidManifest.xml project Anda<\/li>\n<\/ul>\n<pre class=\"wp-block-code\"><code>&lt;activity\n        android:name=\".MainActivity\"\n        android:label=\"@string\/app_name\"\n        android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\"\n        android:launchMode=\"singleTask\" &lt;-- pastikan launchMode \"singleTask\"\n        android:windowSoftInputMode=\"adjustResize\"&gt;\n        &lt;intent-filter&gt;\n            &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\n            &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\n        &lt;\/intent-filter&gt;\n        &lt;!-- Tambahkan intent-filter dibawah ini --&gt;\n        &lt;intent-filter android:label=\"@string\/app_name\"&gt;\n          &lt;action android:name=\"android.intent.action.VIEW\" \/&gt;\n          &lt;category android:name=\"android.intent.category.DEFAULT\" \/&gt;\n          &lt;category android:name=\"android.intent.category.BROWSABLE\" \/&gt;\n          &lt;data android:scheme=\"https\" android:host=\"www.sanbercode.com\" \/&gt;\n          &lt;data android:scheme=\"app\" android:host=\"sanbercode\" \/&gt;\n        &lt;\/intent-filter&gt;\n        &lt;!-- Sampai sini --&gt;\n&lt;\/activity&gt;<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan :<\/p>\n<p>nilai <code>android:scheme<\/code> dan <code>android:host<\/code> bisa disesuaikan dengan keinginan Anda<\/p>\n<\/blockquote>\n<p>Dokumentasi dari Deep Linking bisa Anda lihat pada halaman berikut ini (<a href=\"https:\/\/reactnative.dev\/docs\/linking#addeventlistener\">https:\/\/reactnative.dev\/docs\/linking#addeventlistener<\/a>)<\/p>\n<p>Untuk contoh penggunaan Deep Linking, Anda bisa lihat dan simak pada video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/0lAchVNM0xA?feature=oembed\" title=\"React Native Lanjutan - Complex Navigation (React Navigation) dan Deep Linking\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            }
          
        ]
      },
      {
        "nama": "WEEK 4",
        "posting": [
          
            {
              "uuid": "16",
              "judul": "Hari 1 â€“ Push Notification",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>Pada hari pertama Pekan-4 ini, Anda akan mempelajari tentang Push Notification dalam React Native<\/p>\n<p>Push Notification adalah saluran komunikasi yang dibangun ke setiap mobile device atau website. Push Notification juga memungkinkan aplikasi untuk menjangkau pengguna dengan pesan singkat yang dapat ditanggapi oleh pengguna. <\/p>\n<p>Berikut ini adalah yang dibutuhkan untuk Mengikuti Materi Kali ini<\/p>\n<ul>\n<li>React Native One Signal<\/li>\n<\/ul>\n<p>Untuk menginstall atau menambahkan module React Native One Signal, Anda bisa gunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install --save react-native-onesignal<\/code><\/pre>\n<p>Setelah menambahkan atau menginstall modulenya, lakukan pendaftaran pada halaman berikut ini (<a href=\"https:\/\/app.onesignal.com\/signup#\">https:\/\/app.onesignal.com\/signup#<\/a>)<\/p>\n<p>Kemudian setelah berhasil melakukan pendaftaran, Anda akan menemukan halaman seperti gambar dibawah ini.<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-8642\" height=\"506\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal1-1024x506.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal1-1024x506.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal1-300x148.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal1-768x379.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal1-1536x758.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal1.jpg 1902w\" width=\"1024\"\/><\/figure>\n<p>Isi name app or website dengan nama Project Anda, lebih disarankan mengisi dengan <strong>Nama-Sanbercode<\/strong>. Kemudian pilih <strong>Google Android<\/strong>. Jika sudah Klik Button <strong>Next: Configure Your Platform<\/strong>. Setelah itu Anda akan dialihkan ke halaman seperti dibawah ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-8643\" height=\"502\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal2-1024x502.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal2-1024x502.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal2-300x147.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal2-768x376.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal2-1536x753.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal2.jpg 1920w\" width=\"1024\"\/><\/figure>\n<p>Anda akan diminta memasukan <strong>Firebase Server Key<\/strong> dan <strong>Firebase Sender ID<\/strong>. Untuk mendapatkannya Anda perlu membuka Project Firebase anda pada halaman berikut ini (<a href=\"https:\/\/firebase.google.com\/\">https:\/\/firebase.google.com\/<\/a>). Kemudian Pilih Project Anda -&gt; <strong>Settings<\/strong> -&gt; <strong>Cloud Messaging<\/strong>, seperti pada gambar dibawah ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-8644\" height=\"506\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/fb_onesignal-1024x506.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/fb_onesignal-1024x506.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/fb_onesignal-300x148.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/fb_onesignal-768x379.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/fb_onesignal-1536x758.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/fb_onesignal.png 1904w\" width=\"1024\"\/><\/figure>\n<p>Copy <strong>Kunci Server<\/strong> dan <strong>ID Pengirim<\/strong> dari Firebase Project Anda, kemudian Paste pada One Signal yang sebelumnya. Kemudian Klik <strong>Next<\/strong><\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-8645\" height=\"503\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal3-1024x503.jpg\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal3-1024x503.jpg 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal3-300x148.jpg 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal3-768x378.jpg 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal3-1536x755.jpg 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal3.jpg 1920w\" width=\"1024\"\/><\/figure>\n<p>Selanjutnya pilih <strong>React Native<\/strong> seperti pada gambar diatas, lalu klik <strong>Next<\/strong><\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-8647\" height=\"501\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal4-1024x501.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal4-1024x501.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal4-300x147.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal4-768x376.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal4-1536x751.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal4.png 1920w\" width=\"1024\"\/><\/figure>\n<p>Copy <strong>Your App ID<\/strong> seperti gambar diatas, Jika sudah Anda harus lakukan Konfigurasi module One Signal pada project Anda. Lakukan pengecekan pada file <code>AndroidManifest.xml<\/code> seperti berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>&lt;activity\n        android:name=\".MainActivity\"\n        android:label=\"@string\/app_name\"\n   android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\"\n        android:launchMode=\"singleTask\" &lt;-- Cek bagian ini saja, pastikan nilainya \"singleTask\"\n        android:windowSoftInputMode=\"adjustResize\"&gt;\n        &lt;intent-filter&gt;\n            &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\n            &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\n        &lt;\/intent-filter&gt;\n        &lt;intent-filter android:label=\"@string\/app_name\"&gt;\n          &lt;action android:name=\"android.intent.action.VIEW\" \/&gt;\n          &lt;category android:name=\"android.intent.category.DEFAULT\" \/&gt;\n          &lt;category android:name=\"android.intent.category.BROWSABLE\" \/&gt;\n          &lt;data android:scheme=\"https\" android:host=\"www.sanbercode.com\" \/&gt;\n          &lt;data android:scheme=\"app\" android:host=\"sanbercode\" \/&gt;\n        &lt;\/intent-filter&gt;\n      &lt;\/activity&gt;<\/code><\/pre>\n<p>Kemudian tambahkan ini pada <code>android\/app\/build.gradle<\/code><strong> <\/strong>Project Anda, tempatkan pada <strong>line Paling Atas<\/strong><\/p>\n<pre class=\"wp-block-code\"><code>buildscript {\n    repositories {\n        maven { url 'https:\/\/plugins.gradle.org\/m2\/' } \/\/ Gradle Plugin Portal \n    }\n    dependencies {\n        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.12.6, 0.99.99]'\n    }\n}\n\napply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'\n<\/code><\/pre>\n<p>Kemudian, untuk menggunakan atau menginisialisasikan OneSignal tambahkan ini pada file App.js yang ada pada Root Project Anda<\/p>\n<pre class=\"wp-block-code\"><code>useEffect(() =&gt; {\n    OneSignal.setLogLevel(6, 0);\n\n    OneSignal.init(\"YOUR-APP-ID\", {kOSSettingsKeyAutoPrompt : false, kOSSettingsKeyInAppLaunchURL: false, kOSSettingsKeyInFocusDisplayOption:2});\n    OneSignal.inFocusDisplaying(2);\n}, [])<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan:<\/p>\n<p>Ganti <code>Your-App-ID<\/code> sesuai dengan App ID yang Anda dapatkan tadi di Onesignal Website. Jangan lupa import module One Signal!<\/p>\n<\/blockquote>\n<p>Dokumentasi lebih lanjut mengenai React Native One Signal bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/documentation.onesignal.com\/docs\/react-native-sdk-setup\">https:\/\/documentation.onesignal.com\/docs\/react-native-sdk-setup<\/a>)<\/p>\n<p>Untuk lebih detail mengenai Push Notification menggunakan One Signal, Anda bisa lihat video berikut ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/g8Axka6ibZ4?feature=oembed\" title=\"React Native Lanjutan - Push Notification\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            },
            {
              "uuid": "17",
              "judul": "Hari 2 â€“ Codepush",
              "konten": "<div class=\"entry-content\" itemprop=\"articleBody\">\n\n<p>CodePush adalah <em>open-source service <\/em>yang dibuat oleh Microsoft untuk mempermudah pengembang aplikasi <em>mobile <\/em>untuk memperbaharui aplikasinya tanpa harus mem-<em>build <\/em>kembali aplikasi tersebut. <\/p>\n<p>Sebelumnya Anda harus menginstall <code>code-push-cli<\/code> terlebih dahulu, agar bisa digunakan di terminal atau cmd. Gunakan perintah dibawah ini untuk meginstall <code>code-push-cli<\/code><\/p>\n<pre class=\"wp-block-code\"><code>npm install -g code-push-cli<\/code><\/pre>\n<p>Selanjutnya, Anda diminta untuk menginstall library <code>react-native-codepush<\/code>. Untuk menginstall library nya, Anda bisa gunakan perintah dibawah ini<\/p>\n<pre class=\"wp-block-code\"><code>npm install --save react-native-code-push<\/code><\/pre>\n<p>Selanjutnya Anda harus melakukan konfigurasi library <code>react-native-codepush<\/code>.<\/p>\n<p>1. Didalam file <code>android\/settings.gradle<\/code>, lakukan penambahan berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>include ':app', ':react-native-code-push'\nproject(':react-native-code-push').projectDir = new File(rootProject.projectDir, '..\/node_modules\/react-native-code-push\/android\/app')<\/code><\/pre>\n<p>2. Di file <code>android\/app\/build.gradle<\/code> Anda, tambahkan file <code>codepush.gradle<\/code> di bawah <code>react.gradle<\/code>:<\/p>\n<pre class=\"wp-block-code\"><code>....\napply from: \"..\/..\/node_modules\/react-native\/react.gradle\"\napply from: \"..\/..\/node_modules\/react-native-code-push\/android\/codepush.gradle\"\n....<\/code><\/pre>\n<p>3. Update <code>MainApplication.java<\/code> untuk menggunakan Codepush seperti berikut ini<\/p>\n<pre class=\"wp-block-code\"><code>...\n\/\/ 1. Import the plugin class.\nimport com.microsoft.codepush.react.CodePush;\n\npublic class MainApplication extends Application implements ReactApplication {\n\n    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n        ...\n\n        \/\/ 2. Override the getJSBundleFile method in order to let\n        \/\/ the CodePush runtime determine where to get the JS\n        \/\/ bundle location from on each app start\n        @Override\n        protected String getJSBundleFile() {\n            return CodePush.getJSBundleFile();\n        }\n    };\n}<\/code><\/pre>\n<p>4.  Jika Anda belum memiliki account CodePush, kamu perlu mendaftar dahulu dengan perintah berikut.<\/p>\n<pre class=\"wp-block-code\"><code>code-push register<\/code><\/pre>\n<p>5.  Setelah registrasi selesai, kita bisa mulai menambahkan aplikasi ke CodePush dengan perintah berikut. <\/p>\n<pre class=\"wp-block-code\"><code>code-push app add Sanbercode android react-native<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan:<\/p>\n<p>Sanbercode bisa diganti sesuai keinginan Anda, tidak harus sama seperti materi<\/p>\n<\/blockquote>\n<p>6. Selanjutnya Anda akan menerima Key, seperti gambar dibawah ini<\/p>\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-8672\" height=\"215\" loading=\"lazy\" sizes=\"(max-width: 1024px) 100vw, 1024px\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/key-1-1024x215.png\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/key-1-1024x215.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/key-1-300x63.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/key-1-768x161.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/key-1.png 1068w\" width=\"1024\"\/><\/figure>\n<p>7. Kemudian, Copy Deployment Key Staging, lalu tambahkan code berikut ini pada file <code>strings.xml<\/code> setelah app_name<\/p>\n<pre class=\"wp-block-code\"><code>&lt;string moduleConfig=\"true\" name=\"CodePushDeploymentKey\"&gt;DeploymentKey&lt;\/string&gt;<\/code><\/pre>\n<blockquote class=\"wp-block-quote\">\n<p>Catatan:<\/p>\n<p>Ganti <code>DeploymentKey<\/code> sesuai Key yang Anda dapatkan saat menambahkan Aplikasi ke Codepush<\/p>\n<\/blockquote>\n<p>Dokumentasi lebih lanjut tentang CodePush bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/github.com\/microsoft\/react-native-code-push\">https:\/\/github.com\/microsoft\/react-native-code-push<\/a>)<\/p>\n<p>Untuk lebih lanjut mengenai Codepush, Anda bisa lihat pada video dibawah ini<\/p>\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n<div class=\"wp-block-embed__wrapper\">\n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"281\" src=\"https:\/\/www.youtube.com\/embed\/fToIqbNfApo?feature=oembed\" title=\"React Native Lanjutan - CodePush\" width=\"500\"><\/iframe>\n<\/div>\n<\/figure>\n<p>\n<\/p><\/div>\n"
            }
        ]
      }
    ]
  }
  