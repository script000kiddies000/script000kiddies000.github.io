{"response_code":"00","response_msg":"Berhasil mendapatkan materi kelas","materi_kelas":{"id":33,"uuid":"f7d1d1a3-43fc-40f1-8692-712581b83138","kategori_kelas_id":17,"versi":"2.0.0","created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":null},"section":[{"id":328,"uuid":"b9e3f61e-e89f-4169-9667-ec81fe6ec780","materi_id":33,"nama":"Tugas Harian","permalink":"tugas-harian","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-07-15 08:20:35","posting":[{"id":1124,"uuid":"07bc75da-7353-4184-a37f-54b9bbaa7e22","author_user_id":11253,"materi_section_id":328,"judul":"Tugas 1","permalink":"tugas-1","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas kali hanya adalah kuesioner untuk pelatihan ini, agar tipe pengajaran bisa disesuaikan.<\/li>\r\n<li>Tugas dipublish pada pukul 15.00 dan ditutup paling lambat pada hari selanjutnya pada pukul 15.00<\/li>\r\n<li>Jangan Lupa persiapkan virtual environment untuk selama pelatihan<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/forms.gle\/rUeGkpNuiX1ZZSfc8\">Tugas<\/a><\/p>","waktu_publish":"2021-09-20 15:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-20 06:35:23","waktu_publish_formatted":" Senin, 20 September 2021. 15:00:00 WIB."},{"id":1125,"uuid":"69b1d32f-47da-413b-b8a9-72f089aefab3","author_user_id":11253,"materi_section_id":328,"judul":"Tugas 2","permalink":"tugas-2","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 12.00 dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 11.59<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_2_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test@email.com<\/a> maka emaildepan = test<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1PG042ARj6nHMEV_fiNgx31DZfue9tYrf\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/pzXRKxnstunaqJL38\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-09-21 12:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-21 11:34:15","waktu_publish_formatted":" Selasa, 21 September 2021. 12:00:00 WIB."},{"id":1126,"uuid":"6bb07607-c54c-4257-b6e7-c6b36c42f874","author_user_id":11253,"materi_section_id":328,"judul":"tugas 3","permalink":"tugas-3","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 12.59<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_3_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test@email.com<\/a> maka emaildepan = test<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1RrRkif8sQrNMIzayO74WH3N0yyEtJGJT\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/6aQKY81YdV8rrPRt7\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-09-22 12:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-22 13:58:05","waktu_publish_formatted":" Rabu, 22 September 2021. 12:00:00 WIB."},{"id":1127,"uuid":"aa908851-dd6e-4fd8-9a23-0dcb585f8912","author_user_id":11253,"materi_section_id":328,"judul":"tugas 4","permalink":"tugas-4","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 WIB dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 12.59 WIB<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_4_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test@email.com<\/a> maka emaildepan = test<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1gBpXnxf6bmuUV-ilIJpOWsj7CI4InajR\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/8SHYrcVF59kVsdZp6\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-09-23 13:00:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-23 06:13:42","waktu_publish_formatted":" Kamis, 23 September 2021. 13:00:00 WIB."},{"id":1128,"uuid":"dbffb00e-d356-41e6-b8df-dd1f954a0354","author_user_id":11253,"materi_section_id":328,"judul":"tugas 5","permalink":"tugas-5","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 13.00 WIB<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_5_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test@email.com<\/a> maka emaildepan = test<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1h3_Zi68ewoGQHXkdTvjnfhQSC3erP4oe\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/EYj4rBX6aWEEz4bA6\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-09-24 13:00:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-24 03:13:16","waktu_publish_formatted":" Jumat, 24 September 2021. 13:00:00 WIB."},{"id":1129,"uuid":"e9f8623f-3525-47df-be68-42664404d59e","author_user_id":11253,"materi_section_id":328,"judul":"tugas 6","permalink":"tugas-6","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 12.59<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_6_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test@email.com<\/a> maka emaildepan = test<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1UvY4AxRjoHLiIpgttyBx80TUy8y9DFj7\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/ArE23wJXJi2WvdrE7\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-09-27 12:00:00","status_publish":"publish","urutan":6,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-27 07:24:18","waktu_publish_formatted":" Senin, 27 September 2021. 12:00:00 WIB."},{"id":1130,"uuid":"9ca26201-c5d0-41f8-9c22-709134a033f9","author_user_id":11253,"materi_section_id":328,"judul":"tugas 7","permalink":"tugas-7","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat besok pukul 13.00 WIB<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_7_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1CjTJLM3w1sMr_IzcxU3MPrzmAupKsF0O\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1OpQqP_mBiTfuKaJL_DApRx_hPwtrKuJw\/view?usp=sharing\">Berkas Tambahan<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/normozb8uVjLTpqe8\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-09-28 13:00:00","status_publish":"publish","urutan":7,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-28 02:36:43","waktu_publish_formatted":" Selasa, 28 September 2021. 13:00:00 WIB."},{"id":1131,"uuid":"e4032698-1fec-498f-9580-30b1ae067dd7","author_user_id":11253,"materi_section_id":328,"judul":"tugas 8","permalink":"tugas-8","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat esok hari pada pukul 13.00<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_X_emaildepan.xml\/png (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1sGT7O-mOj8TVJnMqYC-a0dlS70EN3hcT\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/Ke7VQ82GkZHzLpeU7\">Link Pengumpulan<\/a><img src=\"http:\/\/localhost\/storage\/photos\/tugas_8_1.png\" alt=\"\" \/><\/p>","waktu_publish":"2021-09-29 13:00:00","status_publish":"publish","urutan":8,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-29 12:40:26","waktu_publish_formatted":" Rabu, 29 September 2021. 13:00:00 WIB."},{"id":1132,"uuid":"15f1aaf6-5243-4106-b3e7-d1d393719bdc","author_user_id":11253,"materi_section_id":328,"judul":"Tugas 9","permalink":"tugas-9","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan Esok hari pada pukul 13.00<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_X_emaildepan.sql (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/10KxAjdXPLAnw3abBXZsZOLExZmApQhVH\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/qJjVYxDinzPW7fSy9\">Link Pengumpulan<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Cara menyimpan .sql --&gt; gunakan kotak biru<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/tugas_8_1.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah tugas_8_1.png\" \/><\/p>\r\n<p><img src=\"http:\/\/localhost\/storage\/photos\/tugas_8_1.png\" alt=\"\" \/><\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-09-30 13:00:00","status_publish":"publish","urutan":9,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-30 12:47:00","waktu_publish_formatted":" Kamis, 30 September 2021. 13:00:00 WIB."},{"id":1133,"uuid":"9ccada0f-7bc7-4c40-a69c-8e1d5160c365","author_user_id":11253,"materi_section_id":328,"judul":"tugas 10","permalink":"tugas-10","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada esok harinya pada pukul 13.00<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_X_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1ljRjn-uRMscz1ykSod2y18DQyYI75mIh\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/zEysxzSA2n5US26W9\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-10-01 13:00:00","status_publish":"publish","urutan":10,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-10-01 10:37:41","waktu_publish_formatted":" Jumat, 01 Oktober 2021. 13:00:00 WIB."},{"id":1134,"uuid":"35c4673c-16be-41be-ad6c-40e9f266c5fe","author_user_id":11253,"materi_section_id":328,"judul":"tugas 11","permalink":"tugas-11","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada esok harinya pada pukul 15.00<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_X_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p><br \/><a href=\"https:\/\/drive.google.com\/file\/d\/141yceyYx0UoLk7Fj41EVRGWlpYG_yzFi\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/hLiUvUCjBVjiELkLA\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-10-04 12:00:00","status_publish":"publish","urutan":11,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-10-04 10:07:49","waktu_publish_formatted":" Senin, 04 Oktober 2021. 12:00:00 WIB."},{"id":1135,"uuid":"90900717-19c0-4ea1-a0f3-51c58b6f2906","author_user_id":11253,"materi_section_id":328,"judul":"tugas 12","permalink":"tugas-12","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada esok harinya pada pukul 13.00<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_X_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1Ua7kfZouOFepBozVhCFh4wL4XPRgSDNU\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/R8w9WhYCDu3Ry7JZ6\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-10-05 12:00:00","status_publish":"publish","urutan":12,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-10-05 11:12:04","waktu_publish_formatted":" Selasa, 05 Oktober 2021. 12:00:00 WIB."},{"id":1138,"uuid":"c64ff6a9-5791-417c-892c-48c17e1cbf55","author_user_id":11253,"materi_section_id":328,"judul":"Tugas 13","permalink":"tugas-13","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada lusa (2 hari kerja) pada pukul 13.00<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_X_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1eIW4o1RBTPoWrVYRl4RAUsIWUhki2MHJ\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/Kk2PtDe8gEmoF7y68\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-10-06 12:00:00","status_publish":"publish","urutan":13,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-10-06 12:51:25","waktu_publish_formatted":" Rabu, 06 Oktober 2021. 12:00:00 WIB."},{"id":1136,"uuid":"fc99c7d2-977f-497d-b745-477e38e27ba1","author_user_id":11253,"materi_section_id":328,"judul":"tugas 14","permalink":"tugas-14","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada esok hari pada pukul 13.00<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_X_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test_makan@email.com<\/a> maka emaildepan = test_makan<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1MfeYShLGlSxZX-NLxr6l6Ocop8UOscbs\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/VkN62FCR4KzNWsjj8\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-10-07 12:00:00","status_publish":"publish","urutan":14,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-10-07 13:04:30","waktu_publish_formatted":" Kamis, 07 Oktober 2021. 12:00:00 WIB."},{"id":1137,"uuid":"4d247736-b53a-42c6-98ce-88d72afc0cf5","author_user_id":11253,"materi_section_id":328,"judul":"tugas 15 (terakhir)","permalink":"tugas-15-terakhir-","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 13.00 dan dikumpulkan paling lambat pada esok harinya pada pukul 15.00<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah<br \/><br \/><\/li>\r\n<\/ol>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1JePTobOw2d4cS9-JeaNuNSvwOLr02UhC\/view?usp=sharing\">Tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/Ez5wnSy61rE4xyjM6\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-10-08 13:00:00","status_publish":"publish","urutan":15,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-10-08 13:25:10","waktu_publish_formatted":" Jumat, 08 Oktober 2021. 13:00:00 WIB."}]},{"id":324,"uuid":"98667521-cfdb-4c15-944e-9eb4aaa1aba4","materi_id":33,"nama":"Materi Pekan 1","permalink":"materi-pekan-1","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-07-15 08:20:35","posting":[{"id":1106,"uuid":"e77a7320-f1a0-4315-894b-e8ee4dd71eee","author_user_id":11253,"materi_section_id":324,"judul":"Pengenalan dan Persiapan","permalink":"pengenalan-dan-persiapan","konten":"<p><!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Sebelum kita mempelajari semua kode yang berhubungan dengan python, Ada baiknya kita mengenal terlebih dahulu tentang python. Python adalah sebuah bahasa pemograman dinamis yang berbasis pada Obyek. Beberapa kelebihan python diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Syntax yang mudah dibaca<\/li>\r\n<li>Karena sederhananya kode yang digunakan maka python relatif lebih mudah untuk dipelajari<\/li>\r\n<li>Memiliki koleksi library yang sangat besar<\/li>\r\n<li>Python merupakan program yang bekerja dimana saja, Mac OS, Windows, Linux, dan Unix.<\/li>\r\n<li>Karena berada pada lisensi open source, maka python merupakan bahasa pemograman yang gratis. Artinya, python dapat dengan bebas digunakan dan dikembangkan.<\/li>\r\n<li>Merupakan bahasa yang populer.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":14416,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-14416\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/materi_1_1-1024x545.png\" alt=\"\" \/>\r\n<figcaption>sumber : Kelas Terbuka<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Sejarahnya<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan berbagai kelebihan yang dimiliki oleh python, Bagaimana sebenarnya python dimulai?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Python dikembangkan pada tahun 1989 oleh seorang progammer berkebangsaan belanda bernama Guido van Rossum. Python dikerjakan sebagai pengembangan dari bahasa ABC.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14422,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14422\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/Guido_van_Rossum_OSCON_2006.jpg\" alt=\"\" \/>\r\n<figcaption>Guido van Rossum. Sumber : wikipedia.com<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada tahun 1991 python akhirnya selesai dibuat oleh Guido van Rossum. Versi stabil pertama python muncul pada tahun 1994. Pada tahun 2000, python versi 2.0 meluncur dengan salah satu fitur andalan, List comprehensions.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>'The Almighty' Python version 2.7 diluncurkan pada Juli 2010 dan menjadi python versi 2 terakhir yang diluncurkan. Python 2.7 bertahan cukup lama sampai akhirya dihentikan perbaikan dan patchnya pada Januari 2020.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebenarnya, selama python 2.7 masih berjalan. Python versi 3 juga ikut dikembangkan dan diluncurkan. Versi 3.0 diluncurkan pertama kali pada Desember 2008 dan pada Oktober 2020 kemarin telah memasuki versi 3.9. Beberapa kelebihan yang dimiliki oleh python versi 3 adalah PIP yang sudah dimasukkan pada library tidak seperti 2.7 yang memerlukan instalasi tambahan. Lalu adanya dukungan terhadap virtual enviroment. Beberapa tambahan lainnya adalah adanya perubahan syntax yang lebih sederhana pada beberapa bagian dan modul-modul yang ditambahkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Penggunaan Python<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa hal yang bisa dilakukan dengan menggunakan python adalah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Web Development<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Machine Learning dan AI<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Data Science<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Image Processing<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Web Scraping<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>App Development<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Desktop Application<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa aplikasi yang pengembangannya menggunakan python dapat dilihat pada gambar dibawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14427,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14427\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/136435472_463590017971727_2689398477733503622_n-edited.jpg\" alt=\"\" \/>\r\n<figcaption>sumber: @belajar.linux<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Instalasi<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Instalasi Python<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Instalasi python sangatlah mudah, yang perlu kita lakukan adalah mengunjungi situs resmi pengembangan python.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/www.python.org\/\">https:\/\/www.python.org\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu pilih menu download dan download versi 3.9<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14434,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14434\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/python_install_4-1024x437.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah unduhan terselesaikan, jalan file instalasi yang didapat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14435,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14435\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/python_install_1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jangan lupa untuk mencontreng pada bagian \"Add python 3.x to PATH\" agar python kalian lebih mudah dipanggil menggunakan command prompt.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah selesai melakukan instalasi maka kita dapat mencoba menggunakan python kita dengan membuka command prompt dan mengetikan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>python<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":14437,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14437\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/python_install_3-1024x576.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Instalasi Visual Studio Code<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pembuatan kode python sebenarnya dapat dilakukan dengan menggunakan berbagai macam teks editor seperti Notepad\/Notepad ++ atau bahkan python interface (cmd). Akan tetapi, untuk tujuan kemudahan dalam pengembangan berskala besar maka kita dapat memanfaatkan aplikasi Integrated Development Environment atau biasa disingkat IDE. Ada berbagai macam IDE yang dapat digunakan, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>IDLE (masuk ke dalam paket instalasi)<\/li>\r\n<li>Sublime Text<\/li>\r\n<li>Atom<\/li>\r\n<li>Pycharm<\/li>\r\n<li>Google Colab<\/li>\r\n<li>Visual Studio Code<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan menggunakan Visual Studio Code. Beberapa kelebihan dari visual studio code adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Manajemen data yang mudah,<\/li>\r\n<li>Integrasi dengan GIT<\/li>\r\n<li>Melimpahnya ekstension tambahan<\/li>\r\n<li>Integrated Terminal<\/li>\r\n<li>Code Debugging<\/li>\r\n<li>Support berbagai bahasa<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi kita dapat mengunduh file yang dibutuhkan di situs pengembangan resmi VSCode<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/code.visualstudio.com\/\">https:\/\/code.visualstudio.com\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":14443,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-14443\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/vsc_1-1024x485.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu, seperti pada python yang perlu kita lakukan hanyalah menjalankan file instalasi yang telah selesai kita unduh.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":14444,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-14444\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/vsc_2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":14445,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-14445\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/vsc_3.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pilih pilihan 'add to path' untuk menambah visual studio code ke dalam path windows.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":14446,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-14446\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/01\/vsc_4-1024x576.png\" alt=\"\" \/>\r\n<figcaption>Jendela awal Visual Studio Code<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sampai disini instalasi visual studio code kita telah selesai dilakukan dan siap digunakan.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Library &amp; Package<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p>Sebuah module dibuat agar kita dapat menjalankan script atau kode kita tidak secara lokal. Ada tiga jenis kumpulan script atau kode yang istilahnya ada pada python. Pertama adalah module yang sudah kita kita kenal. Lalu selanjutnya ada Package dan Library.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Package adalah kumpulan module yang dikumpulkan bersama dan biasanya memiliki fungsi tertentu. Kumpulan module tersebut dikumpulkan dalam satu folder dan biasanya dapat dipanggil seperti pada module umumnya. Pada folder tersebut harus disediakan file __init__.py yang digunakan untuk memberitahu bahwa folder tersebut merupakan sebuah package.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Library adalah kumpulan lebih besar dari module dan package yang memiliki fungsi yang lebih luas. Contohnya adalah matplotlib sebagai library untuk melakukan plot terhadap data, atau Numpy sebagai library untuk melakukan proses sainstifik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada umumnya python memiliki built in library yang bisa dipanggil tanpa harus melakukan instalasi seperti library json. Pada kesempatan kali ini kita akan membahas bagaimana kita menggunakan eksternal library.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>PIP<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pip adalah Package Installer for Python. &nbsp;Sebuah basis data library yang disediakan via internet agar semua orang bisa melakukan mengunggah atau mengupload library yang butuhkan atau dia buat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi kita dapat menggunakan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>py get-pip.py<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>kan tetapi, untuk python 2 &gt;= 2.7.9 atau Python 3 ?= 3.4 pip sudah termasuk pada paket instalasi sehingga kamu tidak perlu untuk melakukan instalasi lagi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengetahui versi pip yang kita gunakan kita bisa memakai query<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>py -m pip --version<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan upgrade versi dari pip kita dapat menggunakan query<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>py -m pip install -U pip<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Instalasi Library \/ Package<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Bagaimana cara agar kita dapat menggunakan library yang kita inginkan? Petama kita harus melakukan instalasi terlebih dahulu. Untuk melakukan instalasi library yang kita butuhkan kita dapat menggunakan kode<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install &ldquo;nama_library&rdquo;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Atau<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Python -m pip install &ldquo;nama_library&rdquo;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengahapus library yang telah kita install kita dapat menggunakan kode<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip uninstall &ldquo;nama_library&rdquo;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Atau<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Python -m pip uninstall &ldquo;nama_library&rdquo;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengetahui library apa saja yang kita gunakan kita dapat menggunakan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip list<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Atau<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Python -m pip list<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Menggunakan Library \/ Package<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menggunakan library\/package yang telah kita install pada file python kita &nbsp;kita bisa menggunakan perintah import.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Import &ldquo;nama library\/package&rdquo;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita ingin menggunakan hanya salah satu package dari library yang disediakan maka kita bisa menggunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>From library import package<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita ingin memanggil semua isi dari library kita dapat menggunakan tanda asterik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>From library import *<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita pun dapat memberikan alias pada package yang kita import<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Import &ldquo;nama library\/package&rdquo; as &ldquo;nama alias&rdquo;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Virtual Environment<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Virtual Environment adalah sebuah lingkungan virtual yang terisolasi untuk menyimpan semua library atau configurasi yang kita inginkan. Jika pada umumnya library yang kita install akan tersimpan pada folder python utama, jika menggunakan virtual environment maka kita dapat memisahkan library atau konfigurasi dari setiap project yang kita inginkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Virtualenv<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi kita hanya perlu untuk memanggil query di terminal\/cmd kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install virtualenv<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk membuat virtual environment baru kita perlu menuliskan, pastikan kita berada di dalam folder dimana kita ingin mengaktifkan virtual environment tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>virtualenv env<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita cek akan ada folder baru yang menyimpan virtual environment kita yang diberi nama env. Isi dari folder tersebut adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Lib\/  pyvenv.cfg  Scripts\/<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>folder Lib tersebut adalah tempat dimana nanti kita akan menyimpan semua library kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengaktifkan virtualenv kita maka kita dapat menggunakan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>\\pathto\\env\\Scripts\\activate<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>misalkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>C:\\Users\\'Username'\\venv\\Scripts\\activate.bat<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menonaktifkan virtualenv yang telah aktif kita hanya perlu menggunakan perintah deactivate<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>deactivate<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>VirtualEnvWrapper<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Permasalahan dengan menggunakan virtualenv adalah saat akan mengaktifkan env yang dibutuhkan cukup sulit karena kita harus mengetahui path dari folder yang ingin kita gunakan. Dan ini hanya terjadi pada sistem operasi windows. Bagaimana mengatasinya? maka kita bisa menggunakan VirtualEnvWrapper. Pertama mari kita lakukan instalasi terlebih dahulu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip to install virtualenvwrapper-win<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah melakukan instalasi mari kita buat virtual env kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lsquo;mkvirtualenv HelloWold&rsquo;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>menariknya adalah saat menggunakan tambahan virtualEnvWrapper, virtualenv yang kita buat tidak berada di folder kerja kita tapi berada di folder user kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Nah sekarang mari kita sambungkan folder kerja kita dengan virtualenv yang kita buat. Gunanya adalah agar saat kita mengaktifkan virtualenv maka kita akan otomatis berpindah ke folder kerja kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>setprojectdir .<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menonaktifkan vitualenv kita menggunakan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>deactivate<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menyalakan kembali virtualenv kita kita dapat menggunakan perintah workon.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>workon 'nama_env'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengetahui terdapat environment apa saja yang sudah kita buat, kita bisa menggunakan perintah workon saja<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>workon<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Nah setelah kita mengaktifkan environment yang kita inginkan kita bisa langsung melakukan instalasi pada virtual environment kita.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa sumber bacaan:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/docs.python.org\/3.9\/\" target=\"_blank\" rel=\"noreferrer noopener\">dokumentasi python 3.9<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/www.programiz.com\/python-programming\/ide\" target=\"_blank\" rel=\"noreferrer noopener\">9 IDE terbaik untuk bahasa python<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-09-20 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:37:51","waktu_publish_formatted":" Senin, 20 September 2021. 08:00:00 WIB."},{"id":1107,"uuid":"7b9a9617-7ac9-4df5-ba44-eb00abd54a21","author_user_id":11253,"materi_section_id":324,"judul":"Variabel dan Tipe Data","permalink":"variabel-dan-tipe-data","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan belajar tentang variabel dan tipe data, hal fundamental yang akan mempermudah kita dalam mengenali data yang kita miliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Variabel<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Variabel yang akan kita gunakan disini memiliki pengertian yang sama dengan variabel pada matematika. Pada ilmu matematika variabel dijelaskan pada kutipan di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>A&nbsp;<strong>variable<\/strong>&nbsp;is a quantity that may change within the context of a mathematical problem or experiment. Typically, we use a single letter to represent a&nbsp;<strong>variable<\/strong>. The letters x, y, and z are common generic symbols used for&nbsp;<strong>variables<\/strong>.<\/p>\r\n<cite>mathinsight.org<\/cite><\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika diibaratkan, variabel adalah sebuah keranjang belanja yang isinya bisa kita ganti-ganti tergantung kebutuhkan belanja kita. Hanya saja pada pemograman, variabel hanya menampung satu bahan. Memberikan bahan lain pada tas keranjang tersebut dapat menggantikan bahan sebelumnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat beberapa peraturan dalam menuliskan variabel, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Nama variabel hanya boleh diawali oleh huruf atau underscore.<\/li>\r\n<li>Nama variabel tidak boleh diawali oleh angka.<\/li>\r\n<li>Nama variabel hanya bisa terdiri dari karakter&nbsp;<em>alpha-numeric<\/em>&nbsp;dan underscore (A-z, 0-9, and _ )<\/li>\r\n<li>Nama variabel bersifat case sensitive.<\/li>\r\n<li>Nama variabel tidak boleh menggunakan kata kunci yang sudah ada dalam python seperti&nbsp;<code>if<\/code>,&nbsp;<code>while<\/code>,&nbsp;<code>for<\/code>, dsb.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa contoh penulisan variabel:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-green-cyan\"} --><\/p>\r\n<p><span style=\"background-color: #3598db;\">_kota -&gt; benar<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-green-cyan\"} --><\/p>\r\n<p><span style=\"background-color: #e03e2d; color: #000000;\">2kota -&gt; salah<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-red\"} --><\/p>\r\n<p>kota bandung -&gt;<span style=\"background-color: #e03e2d; color: #000000;\">salah<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-green-cyan\"} --><\/p>\r\n<p>kotaBandung -&gt; <span style=\"background-color: #3598db;\">benar<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-green-cyan\"} --><\/p>\r\n<p>kota_bandung -&gt; <span style=\"background-color: #3598db;\">benar<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-red\"} --><\/p>\r\n<p>kota;bandung -&gt; <span style=\"background-color: #e03e2d; color: #000000;\">salah<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-red\"} --><\/p>\r\n<p class=\"has-vivid-red-color has-text-color\">list -&gt; <span style=\"background-color: #e03e2d; color: #000000;\">salah<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph {\"textColor\":\"vivid-green-cyan\"} --><\/p>\r\n<p class=\"has-vivid-green-cyan-color has-text-color\">list_data -&gt; <span style=\"background-color: #3598db;\">benar<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Membuat Variabel<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita dapat membuat variabel dengan berbagai cara, dengan inisiasi satu-satu, inisiasi banyak, ataupun inisiasi bernilai sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Inisiasi Satu-Satu<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 1\r\nb = 2\r\nc = 3<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Inisiasi Banyak<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>d, e, f = 4, 5, 6<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Inisiasi Bernilai Sama<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>g = h = i = 7<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Melihat hasil dari inisiasi variabel di atas kita dapat menggunakan fungsi <em>print<\/em>(). Fungsi print() digunakan untuk menampilkan apapun yang kita masukkan ke dalam fungsi tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print('a:', a)\r\nprint('b:', b)\r\nprint('c:', c)\r\nprint('d:', d)\r\nprint('e:', e)\r\nprint('f:', f)\r\nprint('g:', g)\r\nprint('h:', h)\r\nprint('i:', i)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Menghapus Variabel<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menghapus variabel kita dapat memanfaatkan fungsi del()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>del(i)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Tipe Data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Setiap data yang diinisiasi pada sebuah bahasa pemograman memiliki tipenya sendiri. Tipe ini akan berkorelasi dengan bagaimana kita dapat memperlakukan data ini ataupun bagaimana kita saat akan melakukan inisiasi variabel. Beberapa Tipe Data yang dimiliki oleh Python ditunjukan pada tabel di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":12526,\"width\":640,\"height\":556,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12526\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/tipe-data.png\" alt=\"\" width=\"640\" height=\"556\" \/>\r\n<figcaption>source : belajarpython.com<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Salah satu kelebihan python dibandingkan dengan bahasa pemograman lainnya adalah, kita tidak perlu memberitahukan tipe data kita saat kita melakukan inisiasi pada variabel. Diperlihatkan pada contoh di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 1\r\nb = 'makan'\r\nc = 2.0\r\nd = True<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengetahui tipe dari masing-masing variabel kita dapat menggunakan metode type()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(type(a))\r\nprint(type(b))\r\nprint(type(c))\r\nprint(type(d))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;class 'int'&gt;\r\n&lt;class 'str'&gt;  \r\n&lt;class 'float'&gt;\r\n&lt;class 'bool'&gt; <\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita lihat, interpeter Python cukup pintar untuk dapat membedakan tipe-tipe data yang dimasukkan tanpa harus dilakukan inisiasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan belajar tiga jenis tipe data, yaitu numerik, string, dan boolean.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Tipe Data Numerik<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti namanya, tipe data numerik adalah tipe data yang berbentuk angka. Tipe data numerik disini terdiri dari dua tipe, yaitu Integer dan Float.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Tipe data Integer adalah tipe data yang berbentuk bilangan bulat, sedangkan tipe data float adalah tipe data yang berbentuk pecahan atau bilangan desimal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada tipe data numerik ada beberapa operator yang dapat kita gunakan, diantaranya seperti diperlihatkan pada tabel di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:table {\"align\":\"center\"} --><\/p>\r\n<figure class=\"wp-block-table aligncenter\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Operator<\/th>\r\n<th>Simbol<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td>Penjumlahan<\/td>\r\n<td>+<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Pengurangan<\/td>\r\n<td>-<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Perkalian<\/td>\r\n<td>*<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Pembagian<\/td>\r\n<td>\/<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Sisa Bagi<\/td>\r\n<td>%<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Pemangkatan<\/td>\r\n<td>**<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Tipe Data String<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tipe data string adalah tipe data yang digunakan untuk menyimpan suatu teks. Pada saat melakukan inisiasi kita dapat memasukkan string dengan menambahkan kutip pada data kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita akan menginisiasi sebuah variabel,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 10\r\nprint(type(a))\r\n#int<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Ketika kode di atas dijalankan maka tipe data yang dimunculkan adalah integer. Jika kita tambahan kutip pada awal dan akhir data kita, maka akan berubah menjadi string.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = '10'\r\nprint(type(a))\r\n#str<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Dalam Python, ada beberapa cara yang bisa digunakan untuk mencetak sebuah string, sebagai contoh :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>name = 'Ayu'\r\nage = 17 \r\nprint('Hello i am ' + name + ' i am ' + str(age) + ' years old')\r\nprint('Hello i am ', name, ' i am ' ,age, ' years old')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selain cara diatas, kita bisa menggunakan string formatting seperti berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># Old Style\r\n\r\nprint('Hello i am %s i am %d years old' % (name, age))\r\n\r\n# 'New Style' string formatting\r\n\r\nprint('Hello i am {0} i am {1} years old'.format(name, age))\r\n\r\n# String interpolation\r\n\r\nprint(f'Hello i am {name} i am {age} years old')<\/code><\/pre>\r\n<p><!-- \/wp:code --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Ada beberapa Metode yang dimiliki oleh tipe data string. Metode pada tipe data adalah hal yang bisa kita lakukan terhadap tipe data tersebut. Misalnya adalah pada saat kita pesawat kita dapat melakukan manuver vertikal dimana hal tersebut tidak dapat dilakukan pada mobil. Metode-metode yang dimiliki oleh tipe data string adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_capitalize.asp\">capitalize()<\/a><\/td>\r\n<td>Converts the first character to upper case<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_casefold.asp\">casefold()<\/a><\/td>\r\n<td>Converts string into lower case<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_center.asp\">center()<\/a><\/td>\r\n<td>Returns a centered string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_count.asp\">count()<\/a><\/td>\r\n<td>Returns the number of times a specified value occurs in a string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_encode.asp\">encode()<\/a><\/td>\r\n<td>Returns an encoded version of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_endswith.asp\">endswith()<\/a><\/td>\r\n<td>Returns true if the string ends with the specified value<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_expandtabs.asp\">expandtabs()<\/a><\/td>\r\n<td>Sets the tab size of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_find.asp\">find()<\/a><\/td>\r\n<td>Searches the string for a specified value and returns the position of where it was found<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_format.asp\">format()<\/a><\/td>\r\n<td>Formats specified values in a string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>format_map()<\/td>\r\n<td>Formats specified values in a string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_index.asp\">index()<\/a><\/td>\r\n<td>Searches the string for a specified value and returns the position of where it was found<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isalnum.asp\">isalnum()<\/a><\/td>\r\n<td>Returns True if all characters in the string are alphanumeric<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isalpha.asp\">isalpha()<\/a><\/td>\r\n<td>Returns True if all characters in the string are in the alphabet<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isdecimal.asp\">isdecimal()<\/a><\/td>\r\n<td>Returns True if all characters in the string are decimals<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isdigit.asp\">isdigit()<\/a><\/td>\r\n<td>Returns True if all characters in the string are digits<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isidentifier.asp\">isidentifier()<\/a><\/td>\r\n<td>Returns True if the string is an identifier<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_islower.asp\">islower()<\/a><\/td>\r\n<td>Returns True if all characters in the string are lower case<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isnumeric.asp\">isnumeric()<\/a><\/td>\r\n<td>Returns True if all characters in the string are numeric<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isprintable.asp\">isprintable()<\/a><\/td>\r\n<td>Returns True if all characters in the string are printable<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isspace.asp\">isspace()<\/a><\/td>\r\n<td>Returns True if all characters in the string are whitespaces<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_istitle.asp\">istitle()<\/a><\/td>\r\n<td>Returns True if the string follows the rules of a title<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_isupper.asp\">isupper()<\/a><\/td>\r\n<td>Returns True if all characters in the string are upper case<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_join.asp\">join()<\/a><\/td>\r\n<td>Joins the elements of an iterable to the end of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_ljust.asp\">ljust()<\/a><\/td>\r\n<td>Returns a left justified version of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_lower.asp\">lower()<\/a><\/td>\r\n<td>Converts a string into lower case<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_lstrip.asp\">lstrip()<\/a><\/td>\r\n<td>Returns a left trim version of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_maketrans.asp\">maketrans()<\/a><\/td>\r\n<td>Returns a translation table to be used in translations<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_partition.asp\">partition()<\/a><\/td>\r\n<td>Returns a tuple where the string is parted into three parts<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_replace.asp\">replace()<\/a><\/td>\r\n<td>Returns a string where a specified value is replaced with a specified value<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_rfind.asp\">rfind()<\/a><\/td>\r\n<td>Searches the string for a specified value and returns the last position of where it was found<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_rindex.asp\">rindex()<\/a><\/td>\r\n<td>Searches the string for a specified value and returns the last position of where it was found<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_rjust.asp\">rjust()<\/a><\/td>\r\n<td>Returns a right justified version of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_rpartition.asp\">rpartition()<\/a><\/td>\r\n<td>Returns a tuple where the string is parted into three parts<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_rsplit.asp\">rsplit()<\/a><\/td>\r\n<td>Splits the string at the specified separator, and returns a list<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_rstrip.asp\">rstrip()<\/a><\/td>\r\n<td>Returns a right trim version of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_split.asp\">split()<\/a><\/td>\r\n<td>Splits the string at the specified separator, and returns a list<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_splitlines.asp\">splitlines()<\/a><\/td>\r\n<td>Splits the string at line breaks and returns a list<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_startswith.asp\">startswith()<\/a><\/td>\r\n<td>Returns true if the string starts with the specified value<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_strip.asp\">strip()<\/a><\/td>\r\n<td>Returns a trimmed version of the string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_swapcase.asp\">swapcase()<\/a><\/td>\r\n<td>Swaps cases, lower case becomes upper case and vice versa<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_title.asp\">title()<\/a><\/td>\r\n<td>Converts the first character of each word to upper case<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_translate.asp\">translate()<\/a><\/td>\r\n<td>Returns a translated string<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_upper.asp\">upper()<\/a><\/td>\r\n<td>Converts a string into upper case<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.w3schools.com\/python\/ref_string_zfill.asp\">zfill()<\/a><\/td>\r\n<td>Fills the string with a specified number of 0 values at the beginning<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<figcaption>sumber: w3school<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<p>Cara Menggunakan string method cukuplah mudah. Pada kesempatan kali ini kita akan mencoba untuk menggunakan salah satu method untuk membesarkan huruf pertama pada suatu string. Jika melihat tabel diatas maka method yang akan kita gunakan adalah capitalize().<\/p>\r\n<p>pertama kita siapkan variabel yang berisi data string kita<\/p>\r\n<p><code>data_string = 'mari makan bersama'<\/code><\/p>\r\n<p>lalu sekarang kita aplikasikan string method capitalize()<\/p>\r\n<p><code>new_data = data_string.capitalize()<\/code><\/p>\r\n<p>lalu kita lihat hasilnya,<\/p>\r\n<p><code>print(new_data)<\/code><\/p>\r\n<p><code>Mari makan bersama<\/code><\/p>\r\n<h4>&nbsp;<\/h4>\r\n<h4>Tipe Data boolean<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tipe data boolean merupakan tipe data yang paling mudah untuk dimengerti, karena tipe data ini bernilai True\/False. True untuk pernyataan yang bernilai benar, dan False untuk pernyataan yang bernilai salah. Karena karakteristik yang dimiliki tersebut, tipe data boolean sering digunakan untuk melakukan pengecekan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pernyataan_benar = True\r\npernyataan_salah = False\r\n\r\nprint((type(pernyataan_benar))\r\nprint((type(pernyataan_salah))\r\n\r\n#&lt;class 'bool'&gt;\r\n#&lt;class 'bool'&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang disebutkan di atas tipe data boolean juga biasanya digunakan untuk melakukan pengecekan. Untuk melakukan hal tersebut biasanya digunakan pula operator pembanding. Operator pembanding ditunjukkan pada tabel di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:table {\"align\":\"center\"} --><\/p>\r\n<figure class=\"wp-block-table aligncenter\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>Lebih Besar<\/td>\r\n<td>&gt;<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Lebih Kecil<\/td>\r\n<td>&lt;<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Sama Dengan<\/td>\r\n<td>==<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Tidak Sama dengan<\/td>\r\n<td>!=<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Lebih Besar Sama dengan<\/td>\r\n<td>&gt;=<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Lebih Kecil Sama dengan<\/td>\r\n<td>&lt;=<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<figcaption>Operator Pembanding<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita coba, kita akan coba bandingkan dua variabel<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 1\r\nb = 2\r\n\r\nprint (a == b)\r\n#False<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Fungsi Boolean juga dapat membedakan mana string dan integer<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 1\r\nb = '1'\r\n\r\nprint (a == b)\r\n#False<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Konversi Tipe Data<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Ternyata kita dapat melakukan konversi satu tipe data ke tipe data lainnya, ini dilakukan jika kita ingin memastikan data tersebut memiliki suatu tipe data. Misalkan jika kita ingin membuat variabel bernama umur, tentu saja kita ingin agar variabel tersebut memiliki tipe data integer. Konversi tipe data dilakukan dengan memasukkan data kita ke dalam metode yang diinginkan. Metode-metodenya adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><code>int()<\/code>&nbsp;untuk mengubah menjadi integer<\/li>\r\n<li><code>long()<\/code>&nbsp;untuk mengubah menjadi integer panjang<\/li>\r\n<li><code>float()<\/code>&nbsp;untuk mengubah menjadi float<\/li>\r\n<li><code>bool()<\/code>&nbsp;untuk mengubah menjadi boolean<\/li>\r\n<li><code>str()<\/code>&nbsp;untuk mengubah menjadi string.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita coba. Misalkan kita menbuat sebuah variabel dengan tipe integer<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>var_1 = 10\r\nprint(type(var_1))\r\n\r\n#int<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu sekarang kita akan mengubahnya menjadi tipe string, maka kita akan menggunakan metode str().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>str(var_1)\r\nprint(type(var_1))\r\n\r\n#str<br \/><\/code><\/pre>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">&nbsp;<\/h3>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Referensi<\/h3>\r\n<p class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\"><a href=\"https:\/\/www.youtube.com\/watch?v=SWOmqR-zIVc\">Video - Variabel &amp; Tipe Data<\/a><\/p>\r\n<p class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\"><a href=\"https:\/\/realpython.com\/python-variables\/\">https:\/\/realpython.com\/python-variables\/<\/a><\/p>\r\n<p class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">&nbsp;<\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\"><code><\/code><\/h3>\r\n<p><!-- \/wp:code --><\/p>","waktu_publish":"2021-09-21 08:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:37:59","waktu_publish_formatted":" Selasa, 21 September 2021. 08:00:00 WIB."},{"id":1108,"uuid":"c01428b1-d2e6-4b2c-8c76-49f0c571f590","author_user_id":11253,"materi_section_id":324,"judul":"Struktur Data","permalink":"struktur-data","konten":"<p><!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Pada pertemuan sebelumnya kita telah mempelajari apa saja tipe data yang dimiliki oleh python. Kita juga telah mempelajari tipe data tunggal, seperti Integer, float, string, dan boolean. Pada kesempatan kali ini kita akan mempelajari data struktur khususnya built in type, artinya pada satu variabel bisa terdapat lebih dari satu nilai. Ini bermanfaat ketika kita akan menyimpan langsung banyak data yang memiliki keterkaitan satu dan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan mempelajari List, Tuple, Set, dan Dictionary.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15208,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15208\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/TreeStructure-Data-Structures-in-Python-Edureka1-1024x429.png\" alt=\"\" \/>\r\n<figcaption>sumber: edureka.co<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">List<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>List merupakan tipe\/struktur data yang paling populer dan umum digunakan. List adalah sebuah tipe\/sruktur data yang dapat memiliki banyak nilai di dalamnya, dipisahkan tanda koma, dan di apit oleh dua kurung siku \"[]\".<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk membuat list sangatlah mudah kita hanya perlu menginisiasi variabel kita dengan tanda kurung siku.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># empty list\r\nlist_saya = []\r\n\r\n# list of integers\r\nlist_saya = [1, 2, 3]\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>List merupakan kumpulan data yang terurut, artinya urutan data pada list penting. Data yang dimasukkan pada list pertama kali maka akan mendapatkan nomor urut paling awal (jika dilihat posisinya akan berada paling kiri relatif dari data yang dimasukkan setelahnya)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berurutan juga artinya list yang memiliki urutan yang berbeda walau anggotanya sama akan dianggap berbeda<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = [1,2,3,4]\r\nb = [1,2,4,3]\r\n\r\nprint (a == b)\r\n#False<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Anggota dari list tidak perlu memiliki tipe data yang sama, list dapat memiliki berbagai jenis tipe data sebagai anggotanya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = [21.42, 'foobar', 3, 4, 'bark', False, 3.14159]\r\n\r\nprint(a)\r\n# [21.42, 'foobar', 3, 4, 'bark', False, 3.14159]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengakses List<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk dapat mengakses list kita dapat memanfaatkan index yang dimiliki oleh list tersebut. Seperti yang disebutkan sebelumnya, data yang pertama kali masuk ke dalam list akan memiliki nilai index yang lebih awal. Misalkan kita memiliki sebuah list alfabet yang memiliki anggota string 'a' hingga 'e'<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>alfabet = ['a','b','c','d','e']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>jika kita urut anggota dari list tersebut, maka 'a' memiliki index ke-0, dan 'e' memiliki index ke-'4'. Berdasarkan konsep tersebut maka kita dapat mengakses list tersebut dengan memanfaatkan indexnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>alfabet = ['a','b','c','d','e']\r\n\r\nprint (alfabet[1])\r\n#'b'\r\n\r\nprint (alfabet[3])\r\n#'d'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selain menggunakan Index positif ternyata kita juga bisa menggunakan index negatif untuk mengakses anggota dalam suatu list. Arti dari index negatif adalah index yang dihitung dari belakang list. Misalnya index -1 memiliki arti bahwa anggota yang dimaksud adalah urutan terbelakang (ke-1 dari belakang).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>alfabet = ['a','b','c','d','e']\r\n\r\nprint (alfabet[-1])\r\n#'e'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Memotong &amp; Menduplikasi List<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita dapat melakukan operasi untuk mengambil sebagian anggota list dan membuatnya menjadi sebuah variabel baru, ini dinamakan dengan 'slicing'. Ini digunakan jika kita membutuhkan sebagian data dari suatu list tanpa ingin mengganggu list aslinya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Caranya adalah kita dapat memanfaatkan akses list ditambahkan titik dua.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>list_saya = ['s','a','n','b','e','r','c','o','d','e']\r\nlist_baru_1 = list_saya[0:6]\r\n\r\nprint(list_saya)\r\nprint(list_baru_1)\r\n#['s','a','n','b','e','r','c','o','d','e']\r\n#['s','a','n','b','e','r']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>list_saya[0:6]<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>list_saya merupakan nama list yang ingin kita akses<\/li>\r\n<li>0 merupakan index awal kita (dari)<\/li>\r\n<li>6 merupakan index akhir kita (sampai, artinya akses dilakukan hingga index ke 6)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Memotong list juga tidak harus dilakukan menggunakan index positif, tapi juga bisa dengan menggunakan index negatif<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>list_saya = ['s','a','n','b','e','r','c','o','d','e']\r\nlist_baru_2 = list_saya[-4:]\r\n\r\nprint(list_saya)\r\nprint(list_baru_2)\r\n#['s', 'a', 'n', 'b', 'e', 'r', 'c', 'o', 'd', 'e']\r\n#['c', 'o', 'd', 'e']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan metode salin secara menyeluruh suatu list kita tidak dapat langsung menginisiasi list tersebut kedalam suatu variabel seperti dicontohkan pada kode di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = [1,2,3]\r\nb = a<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Karena cara di atas tidak akan menduplikasi list pada variabel a kepada variabel b, akan tetapi hanya mendelegasikan list [1,2,3] kepada variabel lainnya. Cara kerjanya digambarkan pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14798,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14798\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/02\/list_1.png\" alt=\"\" \/>\r\n<figcaption>sumber: developers.google<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Artinya saat kita akan mengubah a maka b juga otomatis terubah. Jadi bagaimana jika kita ingin menyalin list? kita manfaatkan slice.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>list_saya = ['s','a','n','b','e','r','c','o','d','e']\r\nlist_salin = list_saya[:]\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan begitu list_salin akan berisi semua data pada list_saya tanpa harus mengubah atau terhubung secara langsung dengan list_saya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengubah &amp; Menambah List<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Mengubah list dapat dilakukan dengan memanfaatkan index seperti saat akan melakukan akses ataupun <em>slice<\/em> pada list tersebut. Karena itu Mengubah anggota list dapat dikategorikan menjadi dua kategori, satuan dan jamak.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Satuan<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita bisa mengubah satu anggota list dengan langsung menggunakan index dari anggota yang ingin kita ganti. Misalkan kita mempunya list seperti terlihat di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>list_saya = [1,2,3,4]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Saya ingin mengubah anggota dengan index ke-2 (yaitu 3) dengan nilai 8 maka saya hanya perlu melakukan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>list_saya[2] = 8\r\n\r\nprint (list_saya)\r\n#[1,2,8,4]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Jamak<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengubah banyak data yang berurutan kita bisa memanfaatkan tanda titik dua. Misalkan kita mempunyai data seperti pada kasus sebelumnya dan kita ingin mengubah anggota dari index 1 dan 2 maka kita menuliskan sebagai<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>list_saya = [1,2,3,4]\r\nlist_saya[1:3] = [7,8]\r\n\r\nprint(list_saya)\r\n#[1, 7, 8, 4]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Menambah list kita bisa memanfaatkan metode yang dimiliki oleh class list, yaitu append(). Append akan menambahkan data yang ingin kita tambahkan pada akhir list tersebut. misal kita mempunyai list seperti di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>contoh_list = [1,6,3]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita ingin menambahkan nilai 10 pada list tersebut. Kita akan menggunakan append() untuk hal tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>contoh_list.append(10)\r\n\r\nprint(contoh_list)\r\n#[1,6,3,10]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>contoh_list.append(10)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>contoh_list merupakan list yang ingin kita tambahkan<\/li>\r\n<li>append() merupakan metode yang kita gunakan<\/li>\r\n<li>10 merupakan data yang ingin kita tambahkan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Menghapus Anggota List<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Menghapus anggota list dapat dilakukan dengan menggunakan fungsi del. Penghapusan yang dilakukan dapat dikelompokkan menjadi tiga, yaitu menghapus satu anggota, menghapus banyak anggota, atau menghapus list itu sendiri.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># Deleting list items\r\nmy_list = ['s','a','n','b','e','r','c','o','d','e']\r\n\r\n# delete one item\r\ndel my_list[4]\r\n\r\nprint(my_list)\r\n\r\n# delete multiple items\r\ndel my_list[2:7]\r\n\r\nprint(my_list)\r\n\r\n# delete entire list\r\ndel my_list\r\n\r\n# Error: List not defined\r\nprint(my_list)\r\n\r\n#['s', 'a', 'n', 'b', 'r', 'c', 'o', 'd', 'e']\r\n#['s', 'a', 'd', 'e']\r\n#NameError: name 'my_list' is not defined<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selain del, kita juga bisa memanfaatkan tiga fungsi lainnya untuk melakukan penghapusan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>remove() - digunakan untuk menghapus nilai tertentu pada list. yang dihapus adalah nilai pertama yang ditemui.<\/li>\r\n<li>pop() - digunakan untuk mengambil dan mengembalikan sesuai dengan index yang diminta. Bilai tidak di inisiasi indexnya maka dia akan mengambil index paling akhir<\/li>\r\n<li>clear() - menghapus seluruh isi list<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>my_list = ['s','a','n','b','e','r','c','o','d','e']\r\n\r\n# remove\r\nmy_list.remove('e')\r\nprint(my_list)\r\n\r\n#['s', 'a', 'n', 'b', 'r', 'c', 'o', 'd', 'e']\r\n\r\n# pop with index\r\na = my_list.pop(2)\r\nprint(a)\r\nprint(my_list)\r\n\r\n#n\r\n#['s', 'a', 'b', 'r', 'c', 'o', 'd', 'e']\r\n\r\n# pop\r\nb  = my_list.pop()\r\nprint(b)\r\nprint(my_list)\r\n\r\n#e\r\n#['s', 'a', 'b', 'r', 'c', 'o', 'd']\r\n\r\n#clear\r\nmy_list.clear()\r\nprint(my_list)\r\n#[]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Multi-Dimensional List<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Selain bentuk 1D kita juga bisa membuat list yang kita miliki memiliki bentuk matriks (2D) atau kita dapat membuat sebuah list memiliki anggota list lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita memiliki sebuah list kosong lalu kita akan memasukkan dua anggota yang berupa list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>md_list = []\r\na = [1, 2]\r\nb = ['a','b']\r\n\r\nmd_list.append(a)\r\nmd_list.append(b)\r\n\r\nprint(md_list)\r\n#[[1, 2], ['a', 'b']]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan akses terhadap misal huruf a, yang harus kita lakukan pertama mengakses dimana list yang memiliki anggota a berada. Dapat kita lihat list dengan anggota a berada pada index (1)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(md_list[1])\r\n#['a', 'b']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita lihat pada list tersebut a berada pada index(0)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(md_list[1][0])\r\n#a<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Koordinat [1][0] terlihat seperti koordinat matriks yang kita kenal pada ilmu matematika. Dari sini bisa kita simpulkan untuk list dengan 2D maka kita membutuhkan dua koordinat, 3D akan membutuhkan 3 koordinat dan seterusnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Metode dalam List<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat beberapa metode yang dapat kita gunakan untuk obyek list, misalnya append(), pop(), dan remove(). Beberapa yang belum terjelaskan dapat dilihat pada tabel di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<th><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\">Python List Methods<\/a><\/th>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/append\"><strong>append() -<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/append\">Add an element to the end of the list<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/extend\"><strong>extend()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/extend\">-<\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/extend\">Add all elements of a list to the another list<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/insert\"><strong>insert()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/insert\">-<\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/insert\">Insert an item at the defined index<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/remove\"><strong>remove()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/remove\">-<\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/remove\">Removes an item from the list<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/pop\"><strong>pop()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/pop\">-<\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/pop\">Removes and returns an element at the given index<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/clear\"><strong>clear()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/clear\">- Removes all items from the list<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/index\"><strong>index()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/index\">- Returns the index of the first matched item<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/count\"><strong>count()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/count\">- Returns the count of the number of items passed as an argument<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/sort\"><strong>sort()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/sort\">- Sort items in a list in ascending order<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/reverse\"><strong>reverse()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/reverse\">- Reverse the order of items in the list<\/a><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/copy\"><strong>copy()<\/strong><\/a> <a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/copy\">- R<\/a><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/list\/copy\">eturns a shallow copy of the list<\/a><\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<figcaption>sumber:progammiz.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Tuple<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sama seperti list, tuple juga merupakan struktur data yang digunakan untuk menyimpan satu atau lebih data di dalamnya. Perbedaanya terletak pada kemampuan untuk melakukan perubahan anggota. Anggota pada tuple tidak dapat diubah sebagian, akan tetapi dapat diubah keseluruhan dengan memanfaatkan melakukan inisiasi variabel dengan nilai yang baru. Inisiasi variabel tuple dilakukan dengan menggunakan tanda kurung '()'.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_01 = (1,2,3,4)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Berbeda dengan list, untuk menginisiasi tuple dengan satu anggota kita harus menggunakan tanda koma setelah anggota pertama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_02 = (1,)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa hal yang bisa kita lakukan pada struktur data list juga bisa kita lakukan pada tuple, seperti melakukan akses variabel dan melakukan 'slice'.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengakses Anggota Tuple<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti pada list, kita dapat menggunakan index positif dan negatif untuk mengakses anggota pada tuple, misalkan kita akan menggunakan variabel tuple_01 sebelumnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_01 = (1,2,3,4)\r\n\r\n#mengakses index positif\r\nprint(tuple_01[1])\r\n\r\n#mengakses index negatif\r\nprint(tuple_01[-1])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#2\r\n#4<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengubah &amp; Menambah Tuple<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tidak seperti list kita tidak dapat mengubah atau menambah tuple. Misal kita menggunakan tuple_01. Kita akan berusaha mengubah anggota tuple.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_01[1] = 2<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>TypeError: 'tuple' object does not support item assignment<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hal yang sama terjadi jika kita menggunakan metode append() untuk menambahkan anggota.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_01.append(2)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>AttributeError: 'tuple' object has no attribute 'append'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Memotong &amp; Menduplikasi Tuple<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita dapat memotong tuple layaknya list dan juga melakukan duplikasi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_03 = tuple_01[0:2]\r\ntuple_04 = tuple_01[:]\r\n\r\nprint(tuple_03)\r\nprint(tuple_04)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>(1, 2)\r\n(1, 2, 3, 4)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Menginisiasi Multi-Variabel Menggunakan Tuple<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Walau kita tidak dapat melakukan perubahan pada tuple, tapi kita bisa menginisiasikan anggota tuple ke dalam variabel-variabel. Hanya saja variabel yang diinisiasikan harus berjumlah sama dengan anggota tuple tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_01 = (1,2,3,4)\r\n\r\n#sekarang akan kita masukkan kedalam 4 variabel dikarenakan tuple tersebut memiliki 4 anggota\r\na, b, c, d = tuple_01\r\n\r\nprint(a, b, c, d)\r\nprint(type(a), type(b), type(c), type(d))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>1 2 3 4\r\n&lt;class 'int'&gt; &lt;class 'int'&gt; &lt;class 'int'&gt; &lt;class 'int'&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Metode pada Tuple<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada tuple hanya terdapat dua metode yang dapat digunakan, count() dan index(). count() digunakan untuk menghitung jumlah anggota dari nilai tertentu dan index() untuk mengetahui lokasi anggota tersebut pertama ditemukan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tuple_05 = (1, 2, 2, 3, 4)\r\n\r\nprint(tuple_05.count(2))\r\nprint(tuple_05.index(2))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>2\r\n1<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Kenapa Menggunakan Tuple?<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan semua keterbatasan yang dimiliki mungkin akan timbul pertanyaan, kenapa harus tuple dibandingkan list. Ada tiga poin utama yang bisa dijelaskan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Karena strukturnya lebih sederhana, struktur data tuple memakan memori lebih sedikit dibandingkan dengan list. Untuk data yang berukuran besar ini akan sangat menguntungkan.<\/li>\r\n<li>Memori yang lebih sedikit juga mempengaruhi waktu proses dari tuple. Tuple memiliki waktu proses yang relatif lebih singkat daripada list.<\/li>\r\n<li>Anggota yang tidak dapat diubah membuat tuple menjadi pilihan saat kita ingin menggunakannya untuk menyimpan suatu parameter yang tidak boleh berubah nilainya.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Set<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Set atau dalam bahasa Indonesia bisa disebut himpunan, merupakan struktur data yang dapat memiliki satu atau lebih anggota didalamnya. Terdapat 2 perbedaan utama antara set dengan list atau tuple, yaitu:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Set tidak memiliki koordinat\/index tiap anggotanya, jadi untuk set posisi anggota dianggap tidak penting.<\/li>\r\n<li>Set hanya dapat tidak dapat memiliki lebih dari satu anggota dengan nilai yang sama<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menginisiasi suatu variabel set ada dua cara yang dapat digunakan. Pertama dengan menggunakan tanda kurung kurawal \"{}\" atau dengan menggunakan metode set(). Metode set() biasanya digunakan untuk inisiasi set kosong atau untuk mengubah list\/tuple menjadi set.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_01 = {4,5,6,2}\r\n\r\nprint(set_01)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{2, 4, 5, 6}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_02 = set()\r\nset_03 = set([2,1,4,3])\r\n\r\nprint(type(set_02))\r\nprint(set_03)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;class 'set'&gt;\r\n{1, 2, 3, 4}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengakses Anggota Set<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang disebutkan di awal, set merupakan struktur data yang tidak memiliki urutan atau koordinat. Karena hal tersebut kita tidak dapat melakukan akses anggota dengan menggunakan index seperti pada list atau tuple.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(set_03[1])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>TypeError: 'set' object does not support indexing<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Menghapus Anggota Set<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Karena tidak dapat memiliki index, maka untuk menghapus anggota dari set dilakukan dengan mengakses nilainya secara langsung. Kita dapat menggunakan dua metode untuk menghapus anggota set, yaitu discard() dan remove()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_01 = {4,5,6,2}\r\n\r\n#menggunakan discard()\r\nset_01.discard(4)\r\nprint(set_01)\r\n\r\n#menggunakan remove()\r\nset_01.remove(2)\r\nprint(set_01)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{2, 5, 6}\r\n{5, 6}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengubah &amp; Menambah Anggota Set<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Menambah anggota set dapat dilakukan dengan menggunakan metode add(). Metode add() digunakan untuk menambahkan satu anggota pada set.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_04 = {2,3,4,5,6}\r\n\r\nset_04.add(1)\r\nprint(set_04)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{1, 2, 3, 4, 5, 6}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menambahkan lebih dari satu anggota pada set kita dapat menggunakan metode update(). Dengan metode update ini pula kita bisa memasukan list atau tuple sebagai bahan kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_04.update([4,7,8])\r\n\r\nprint(set_04)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{1, 2, 3, 4, 5, 6, 7, 8}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Mengubah dengan akses langsung tidak dapat dilakukan karena set merupakan struktur data yang tidak memiliki index. yang bisa kita lakukan adalah menghapus lalu menambahkan anggota yang kita inginkan. Misalkan kita akan menggunakan variabel set_04. kita akan coba mengganti nilai 4 menjadi 10.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_04.discard(4)\r\nprint(set_01)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{1, 2, 3, 5, 6, 7, 8}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu setelah itu kita akan menambahkan 10 sebagai anggota set_04<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_04.add(1)\r\nprint(set_04)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{1, 2, 3, 5, 6, 7, 8, 10}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Operasi pada Set<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang disebutkan di awal, set adalah himpunan, artinya semua operasi yang bisa kita lakukan pada sebuah himpunan dapat kita lakukan pada set python.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Ada empat operasi yang dapat kita lakukan pada set<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Union<\/li>\r\n<li>Intersection<\/li>\r\n<li>Difference<\/li>\r\n<li>Symmetric Difference<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan melakukan pembahasan satu persatu operasi tersebut. kita akan menggunakan dua buah set, Set A dan Set B<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Set_A = {1,2,3,4}\r\nset_B = {3,4,5,6}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Union<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Union adalah saat kita menggabungkan semua anggota set.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14824,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14824\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/02\/set-union.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Union dapat dilakukan dengan menggunakan tanda \"|\" atau metode union()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(set_A|set_B)\r\nprint(set_A.union(set_B))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{1, 2, 3, 4, 5, 6}\r\n{1, 2, 3, 4, 5, 6}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Intersection<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Intersection adalah irisan, dimana kita mencari nilai irisan dari dua buah set.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14826,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14826\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/02\/set-symmetric-difference.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Intersection dapat dilakukan dengan menggunakan tanda \"&amp;\" atau menggunakan metode intersection()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(set_A &amp; set_B)\r\nprint(set_A.intersection(set_B))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{3, 4}\r\n{3, 4}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Difference<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Difference adalah operasi saat kita mencari perbedaan anggota dari dua buah set atau lebih.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14828,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14828\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/02\/set-difference.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Difference dapat dilakukan dengan menggunakan tanda \"-\" atau menggunakan metode difference().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>A - B<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(set_A - set_B)\r\nprint(set_A.difference(set_B))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{1, 2}\r\n{1, 2}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>B - A<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(set_B - set_A)\r\nprint(set_B.difference(set_A))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{5, 6}\r\n{5, 6}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Symmetric Difference<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Symmetric Difference adalah semua anggota pada set A dan B dikurangi dengan anggota yang berada pada dua set tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":14830,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-14830\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/02\/set-symmetric-difference-1.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>symmetric difference dapat dilakukan dengan menggunakan tanda \"^\" atau menggunakan metode symmetric_difference().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(set_A ^ set_B)\r\nprint(set_A.symmetric_difference(set_B))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{1, 2, 5, 6}\r\n{1, 2, 5, 6}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Metode Pada Set<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:table {\"align\":\"center\"} --><\/p>\r\n<figure class=\"wp-block-table aligncenter\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<th>Method<\/th>\r\n<th>Description<\/th>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/add\">add()<\/a><\/td>\r\n<td>Adds an element to the set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/clear\">clear()<\/a><\/td>\r\n<td>Removes all elements from the set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/copy\">copy()<\/a><\/td>\r\n<td>Returns a copy of the set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/difference\">difference()<\/a><\/td>\r\n<td>Returns the difference of two or more sets as a new set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/difference_update\">difference_update()<\/a><\/td>\r\n<td>Removes all elements of another set from this set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/discard\">discard()<\/a><\/td>\r\n<td>Removes an element from the set if it is a member. (Do nothing if the element is not in set)<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/intersection\">intersection()<\/a><\/td>\r\n<td>Returns the intersection of two sets as a new set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/intersection_update\">intersection_update()<\/a><\/td>\r\n<td>Updates the set with the intersection of itself and another<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/isdisjoint\">isdisjoint()<\/a><\/td>\r\n<td>Returns <code>True<\/code> if two sets have a null intersection<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/issubset\">issubset()<\/a><\/td>\r\n<td>Returns <code>True<\/code> if another set contains this set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/issuperset\">issuperset()<\/a><\/td>\r\n<td>Returns <code>True<\/code> if this set contains another set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/pop\">pop()<\/a><\/td>\r\n<td>Removes and returns an arbitrary set element. Raises <code>KeyError<\/code> if the set is empty<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/remove\">remove()<\/a><\/td>\r\n<td>Removes an element from the set. If the element is not a member, raises a <code>KeyError<\/code><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/symmetric_difference\">symmetric_difference()<\/a><\/td>\r\n<td>Returns the symmetric difference of two sets as a new set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/symmetric_difference_update\">symmetric_difference_update()<\/a><\/td>\r\n<td>Updates a set with the symmetric difference of itself and another<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/union\">union()<\/a><\/td>\r\n<td>Returns the union of sets in a new set<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/set\/update\">update()<\/a><\/td>\r\n<td>Updates the set with the union of itself and others<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<figcaption>sumber:progammiz.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Dictionary<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Dictionary merupakan salah satu struktur data yang dikenal pada pemograman python. Sama seperti tiga struktur data yang kita kenal sebelumnya, dictionary juga digunakan saat kita ingin memberikan banyak nilai pada variabel kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Perbedaannya terletak pada struktur si data sendiri. Jika list, tuple, dan set disimpan dalam bentuk <em>single value, <\/em>dictionary disimpan dalam bentuk pasangan key dan value. Secara Umum bentuk dari dictionary adalah sebagai berikut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>dictionary_variabel = {'keys':value}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Secara struktur pembatas, dictionary memiliki kemiripan dengan set. Nah, untuk membedakan dengan set saat inisiasi maka biasanya untuk satu anggota digunakan pasangan key and value, sedangkan untuk dictionary kosong digunakan tanda kurung kurawal {}.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#inisiasi dict kosong\r\ndict_kosong = {}\r\nprint(type(dict_kosong))\r\n\r\n#inisiasi dict\r\ndict_family = {'ayah':'daddy'}\r\nprint(dict_family)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;class 'dict'&gt;\r\n{'ayah': 'daddy'}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengakses Anggota dict<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Salah satu karakteristik yang dimiliki oleh dictionary adalah tidak adanya indexing, artinya untuk melakukan akses terhadap anggota dict kita tidak menggunakan indexnya akan tetapi kita menggunakan key yang dimiliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(dict_family['ayah'])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>daddy<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selain mengakses dengan menggunakan key yang dimiliki, kita juga bisa mengetahui parameter yang ada di dalam suatu dictionary dengan beberapa metode yaitu keys() dan values()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Metode keys() digunakan untuk mengecek key apa saja yang dimiliki oleh suatu dictionary.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(dict_family.keys())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>dict_keys(['ayah'])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Metode values() digunakan untuk mengecek value apa saja yang dimiliki oleh suatu dictionary.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(dict_family.values())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>dict_values(['daddy'])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengubah dan Menambah Anggota dict<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengubah nilai anggota dictionary yang perlu kita lakukan adalah menggunakan key yang ingin kita ubah nilainya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#kita akan mengubah nilai pada key ayah dari daddy menjadi father\r\ndict_family['ayah'] = 'father'\r\nprint(dict_family)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{'ayah': 'father'}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menambahkan anggota kita harus menyertakan key dan value yang ingin dimasukkan. Pada kesempatan kali ini kita akan menambah anggota keluarga ibu, dengan nilai mother.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>dict_family['ibu'] = 'mother'\r\n\r\nprint(dict_family)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{'ayah': 'father', 'ibu': 'mother'}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Value yang dapat dimasukkan pada list tidak terbatas hanya terhadap nilai tunggal. Pada praktiknya, kita dapat memasukkan list juga kita membutuhkan lebih dari satu data untuk dimasukan atau kita dapat memasukkan dictionary ke dalam value suatu key.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Disini saya akan mencoba memasukkan data baru ke dalam dictionary yang telah kita inisiasi sebelumnya. Kita akan mencoba memasukkan key anak ke dalam family dimana dalam key anak tersebut terdapat dua key lainnya, yaitu anak_1 dan anak_2.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Karena value yang akan dimasukkan adalah data jamak, maka yang perlu kita lakukan adalah membuat list yang berisi pasangan key value anak_1 dan anak_2<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#kita inisiasi dictionary tunggal si anak\r\nanak_1 = {'anak' : 'anak_1'}\r\nanak_2 = {'anak' : 'anak_2'}\r\n\r\n#lalu kita masukkan ke dalam sebuah list, bisa dengan manual ataupun dengan bantuan metode append()\r\nlist_anak = [anak_1, anak_2]\r\n\r\n#sekarang kita cek listnya\r\nprint(list_anak)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[{'anak': 'anak_1'}, {'anak': 'anak_2'}]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Nah, karena bahan untuk value anak sudah disiapkan maka skrg tinggal kita masukkan ke dalam dict_family.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>dict_family['anak'] = list_anak\r\n\r\nprint(dict_family)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{'ayah': 'father', 'ibu': 'mother', 'anak': [{'anak': 'anak_1'}, {'anak': 'anak_2'}]}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Menghapus Anggota Dict<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Hampir sama dengan beberapa struktur data sebelumnya, pada dictionary kita dapat mengaplikasikan metode seperti clear(), del(), dan pop()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># membuat dict\r\npangkat = {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}\r\n\r\n# mengekstrak satu nilai yang ditentukan\r\n\r\nprint(pangkat.pop(4))\r\nprint(pangkat)\r\n\r\n# menghapus semua isi\r\npangkat.clear()\r\nprint(pangkat)\r\n\r\n# menghapus dictionary\r\ndel pangkat\r\nprint(pangkat)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>16\r\n{1: 1, 2: 4, 3: 9, 5: 25}\r\n{}\r\nNameError: name 'pangkat' is not defined<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Metode dalam Dict<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<th>Method<\/th>\r\n<th>Description<\/th>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/clear\">clear()<\/a><\/td>\r\n<td>Removes all items from the dictionary.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/copy\">copy()<\/a><\/td>\r\n<td>Returns a shallow copy of the dictionary.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/fromkeys\">fromkeys(seq[, v])<\/a><\/td>\r\n<td>Returns a new dictionary with keys from <var>seq<\/var> and value equal to <var>v<\/var> (defaults to <code>None<\/code>).<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/get\">get(key[,d])<\/a><\/td>\r\n<td>Returns the value of the <var>key<\/var>. If the <var>key<\/var> does not exist, returns <var>d<\/var> (defaults to <code>None<\/code>).<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/items\">items()<\/a><\/td>\r\n<td>Return a new object of the dictionary's items in (key, value) format.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/keys\">keys()<\/a><\/td>\r\n<td>Returns a new object of the dictionary's keys.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/pop\">pop(key[,d])<\/a><\/td>\r\n<td>Removes the item with the <var>key<\/var> and returns its value or <var>d<\/var> if <var>key<\/var> is not found. If <var>d<\/var> is not provided and the <var>key<\/var> is not found, it raises <code>KeyError<\/code>.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/popitem\">popitem()<\/a><\/td>\r\n<td>Removes and returns an arbitrary item (<strong>key, value<\/strong>). Raises <code>KeyError<\/code> if the dictionary is empty.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/setdefault\">setdefault(key[,d])<\/a><\/td>\r\n<td>Returns the corresponding value if the <var>key<\/var> is in the dictionary. If not, inserts the <var>key<\/var> with a value of <var>d<\/var> and returns <var>d<\/var> (defaults to <code>None<\/code>).<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/update\">update([other])<\/a><\/td>\r\n<td>Updates the dictionary with the key\/value pairs from <var>other<\/var>, overwriting existing keys.<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><a href=\"https:\/\/www.programiz.com\/python-programming\/methods\/dictionary\/values\">values()<\/a><\/td>\r\n<td>Returns a new object of the dictionary's values<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<figcaption>sumber: progammiz.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Sumber Bacaan<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/docs.python.org\/3\/tutorial\/datastructures.html\">https:\/\/docs.python.org\/3\/tutorial\/datastructures.html<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-09-22 08:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:38:06","waktu_publish_formatted":" Rabu, 22 September 2021. 08:00:00 WIB."},{"id":1109,"uuid":"02cf1a60-9671-464b-86e9-b430a16bc19a","author_user_id":11253,"materi_section_id":324,"judul":"Iterasi dan Kondisional","permalink":"iterasi-dan-kondisional","konten":"<p><!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Kondisional<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Percabangan digunakan untuk membuat sebuah kode yang cara berjalannya kode ditentukan oleh pengetesan pernyataan bersyarat. Sama seperti fungsi pengecekan pada bolean, pada percabangan ini juga dilakukan dengan memanfaatkan operator pembanding. Ada tiga jenis pernyataan yang akan kita pelajari pada kesempatan kali ini, yaitu pernyataan if, pernyataan if - else, dan pernyataan if - elif - else.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Satu hal yang harus diingat dalam pelaksanaan percabangan adalah pentingnya indentasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Pernyataan If<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pernyataan if digunakan jika kita hanya ingin menguji satu pernyataan sebagai syarat jika kode kita ingin dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Persamaan umum dari pernyataan if adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>if \"pernyataan uji\":\r\n    kode kita<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada saat pernyataan uji bernilai 'True\" atau syaratnya terpenuhi maka kode kita yang berada di dalam fungsi\/pernyataan if akan dijalankan. Pada saat tidak terpenuhi tidak terjadi apa-apa.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nilai = 9\r\nif nilai &gt;= 8 :\r\n  print('lulus')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>lulus<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>pernyataan lulus ditampilkan karena variabel nilai memenuhi syarat, yaitu berada di atas atau sama dengan nilai 8.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nilai = 7\r\nif nilai &gt;= 8 :\r\n  print('lulus')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code><\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil tidak memperlihatkan apa-apa karena syarat yang tidak terpenuhi sehingga kode tidak dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Pernyataan If - Else<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pernyataan if-else digunakan jika kita hanya mempunyai dua kondisi yang ingin dilakukan. Kondisi jika True dan jika False.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Persamaan umum dari pernyataan if - else adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>if 'pernyataan uji':\r\n    kode bila true\r\nelse:\r\n    kode bila false<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada saat pernyataan uji bernilai 'True\" atau syaratnya terpenuhi maka kode kita yang berada di dalam fungsi\/pernyataan if akan dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada saat syaratnya tidak terpenuhi maka kode yang berada di dalam pernyataan else kita yang akan dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nilai = 6\r\nif nilai &gt;= 8:\r\n  print('lulus')\r\nelse:\r\n  print('tidak lulus')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tidak lulus<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>pada pernyataan di atas, karena syarat tidak terpenuhi atau pernyataan uji bernilai 'False' maka kode di dalam pertanyaan else langsung dijalankan tanpa syarat lagi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Pernyataan If - Elif - Else<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pernyataan if-elif-else digunakan jika kita hanya memiliki banyak syarat yang ingin diuji secara berurutan. Jadi jika syarat pertama tidak terpenuhi dia akan menguji syarat kedua, dan begitu seterusnya hingga bertemu dengan else.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Persamaan umum dari pernyataan if - else adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>if 'pernyataan uji 1':\r\n    kode bila uji 1 true\r\nelif 'pernyataan uji 2':\r\n    kode bila uji 2 true\r\nelse:\r\n    kode bila false<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada saat pernyataan uji 1 bernilai 'True\" atau syaratnya terpenuhi maka kode kita yang berada di dalam fungsi\/pernyataan if akan dijalankan. Jika ternyata bernilai 'False' atau syarat tidak terpenuhi maka sebelum dilempar ke dalam pernyataan else akan di uji dulu ke dalam pernyataan elif. Bila bernilai 'True' maka kode di dalam pernyaan elif yang akan dilakukan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada saat syaratnya tidak terpenuhi maka kode yang berada di dalam pernyataan else kita yang akan dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#contoh1\r\nusia = 6\r\nif usia &lt; 14:\r\n  print('anak-anak')\r\nelif nilai &lt; 20:\r\n  print('remaja')\r\nelse:\r\n  print('dewasa')\r\n\r\n#contoh2\r\nusia = 17\r\nif usia &lt; 14:\r\n  print('anak-anak')\r\nelif nilai &lt; 20:\r\n  print('remaja')\r\nelse:\r\n  print('dewasa')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>anak-anak\r\nremaja<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada contoh pertama, Dilakukan pengujian pada pernyataan pertama. Karena bernilai benar maka kode yang berada pada pernyataan pertama langsung dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada contoh kedua, Dilakukan pengujian pada pernyataan pertama. Karena bernilai salah pengujian dilanjutkan pada pernyataan kedua. Karena pada pernyataan kedua bernilai benar maka kode yang berada pada pernyataan kedua langsung dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Perulangan<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Perulangan yang akan kita pelajari kali ini ada dua jenis perulangan, yaitu perulangan for dan perulangan while<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Perulangan For<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Perulangan for digunakan untuk melakukan iterasi terhadap suatu obyek urutan (list, tuple). Persamaan umum dari perulangan for adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for \"pernyatan perulangan\":\r\n    kode<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kode akan dijalankan selama iterasi dapat dilakukan terhadap pernyataan perulangan. Contoh dari penggunaan perulangan for terhadap suatu list diperlihat pada kode di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#kita inisiasikan list kita\r\nlist_kota = ['jakarta', 'bandung', 'semarang']\r\n\r\nfor kota in list_kota: #iterasi terhadap seluruh anggota list\r\n  print(kota)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>jakarta\r\nbandung\r\nsemarang<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang terlihat pada kode di atas, kita melakukan iterasi presensi pada semua anggota list. pada iterasi pertama kita melakukan presensi terhadap anggota index pertama, yaitu jakarta. lalu kita jalankan kodenya. pada tahap ini kita seperti mengubah nilai variabel kota menjadi hasil dari presensi kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>kota = 'jakarta<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah kode selesai dijalankan maka kita melakukan presensi pada anggota selanjutnya, yaitu bandung dan nilai variabel kota kita kembali diubah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>kota = 'bandung'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>begitu seterusnya hingga semua variabel selesai dipanggil.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Selain terhadap struktur data seperti list dan tuple, perulangan for juga dapat dilakukan terhadap tipe data seperti string. Perulangan terhadap string akan memanggil string terhadap setiap huruf\/karakter yang dimiliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>kalimat = 'saya senang bermain bola'\r\n\r\nfor kata in kalimat:\r\n  print (kata)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>s\r\na\r\ny\r\na\r\n \r\ns\r\ne\r\nn\r\na\r\nn\r\ng\r\n \r\nb\r\ne\r\nr\r\nm\r\na\r\ni\r\nn\r\n \r\nb\r\no\r\nl\r\na<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selain menggunakan struktur data atau variable seperti string kita juga bisa membuat list urutan kita sendiri dan memasukkannya sebagai syarat iterasi dengan menggunakan metode range().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Metode ini akan menghasilkan nilai secara terurut sesuai dengan parameter yang dimasukkan. Contoh dari penggunaan parameter pada metode range() diperlihatkan pada kode di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#range dengan satu parameter, range(stop value)\r\nprint(list(range(5)))\r\n\r\n#range dengan dua parameter, range(start value, stop value)\r\nprint(list(range(2,5)))\r\n\r\n\r\n#range dengan tiga parameter, range(start value, stop value, jump)\r\nprint(list(range(2,5,2)))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[0, 1, 2, 3, 4]\r\n[2, 3, 4]\r\n[2, 4]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang akan coba kita implementasikan metode range pada perulangan for.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for nilai in range (5):\r\n  print('pangkat dua dari',nilai,'adalah',nilai**2)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pangkat dua dari 0 adalah 0\r\npangkat dua dari 1 adalah 1\r\npangkat dua dari 2 adalah 4\r\npangkat dua dari 3 adalah 9\r\npangkat dua dari 4 adalah 16<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Perulangan juga dapat menggunakan statement else, statement ini digunakan saat semua syarat perulangan sudah dijalankan atau tidak terpenuhi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for nilai in range(5):\r\n  print(nilai)\r\n\r\nelse:\r\n  print('data sudah habis')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>0\r\n1\r\n2\r\n3\r\n4\r\ndata sudah habis<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Perulangan While<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Jika pada perulangan for, iterasi dilakukan dengan menggunakan obyek\/struktur data sebagai nilai. Maka pada perulangan while iterasi dilakukan selama syarat yang ditentukan terpenuhi atau bernilai &lsquo;True&rsquo;. Persamaan umum dari perulangan while adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>while \"pernyataan uji\":\r\n    kode<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>pada perulangan ini kode akan selalu dijalankan selama pernyataan uji bernilai benar. Contoh dari penggunaan perulangan while<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nilai = 0\r\n\r\nwhile nilai &lt;= 5:\r\n  print(nilai)\r\n  nilai = nilai + 1<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>0\r\n1\r\n2\r\n3\r\n4\r\n5<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Perulangan juga dapat menggunakan statement else, statement ini digunakan saat semua syarat perulangan sudah dijalankan atau tidak terpenuhi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nilai = 0\r\n\r\nwhile nilai &lt;= 5:\r\n  print(nilai)\r\n  nilai = nilai + 1\r\n\r\nelse:\r\n  print('nilai sudah lebih dari 5')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>0\r\n1\r\n2\r\n3\r\n4\r\n5\r\nnilai sudah lebih dari 5<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Pass, Continue, &amp; Break<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan mempelajari tiga pernyataan yang biasanya digunakan untuk mendukung suatu fungsi percabangan atau perulangan. Pernyataan tersebut adalah pass, continue, dan break.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Pernyataan Pass<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>pernyataan pass merupakan pernyataan yang bernilai null, artinya pernyataan ini saat dijalankan tidak akan menghasilkan apa-apa. Pernyataan pass bernilai sama dengan komentar akan tetapi jika komentar dilewati oleh interpreter, pernyataan pass tidak.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pernyataan pass biasa dimasukkan untuk fungsi yang ingin dilewati atau belum diketahui akan diberikan kode apa.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for i in range (4):\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>unexpected EOF while parsing<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita membuat sebuah perulangan tanpa memasukkan kode untuk dijalankan, maka perulangan tersebut akan mengeluarkan error. Tapi jika menggunakan pernyataan pas maka hal tersebut tidak akan terjadi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for i in range (4):\r\n    pass<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Pernyataan Continue<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pernyataan continue akan mengakhiri iterasi yang sedang berjalan, tidak semua, tapi hanya yang sedang berjalan dan melanjutkannya ke iterasi selanjutnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for i in range (5):\r\n  if i == 3:\r\n    continue\r\n  print(i)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>0\r\n1\r\n2\r\n4<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Pernyataan Break<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pernyataan break digunakan saat kita ingin menghentikan sepenuhnya fungsi perulangan yang kita miliki jika syaratnya terpenuhi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>list_kota = ['bandung','jakarta','surabaya','semarang']\r\n\r\nfor kota in list_kota:\r\n  if kota == 'surabaya':\r\n    break\r\n  print (kota)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>bandung\r\njakarta<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><br \/>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Pustaka Tambahan<\/h2>\r\n<\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><a href=\"https:\/\/youtu.be\/YW5iOizAByI\">Video Iterasi - 1<\/a><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><a href=\"https:\/\/youtu.be\/ip6LOmeP5UE\">Video Iterasi - 2<\/a><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><a href=\"https:\/\/www.w3schools.com\/python\/python_conditions.asp\">https:\/\/www.w3schools.com\/python\/python_conditions.asp<\/a><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><a href=\"https:\/\/www.w3schools.com\/python\/python_for_loops.asp\">https:\/\/www.w3schools.com\/python\/python_for_loops.asp<\/a><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><a href=\"https:\/\/www.w3schools.com\/python\/python_while_loops.asp\">https:\/\/www.w3schools.com\/python\/python_while_loops.asp<\/a><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><\/p>","waktu_publish":"2021-09-23 08:00:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-24 13:17:33","waktu_publish_formatted":" Kamis, 23 September 2021. 08:00:00 WIB."},{"id":1110,"uuid":"2f6804f4-480b-4968-9a9a-f61216877c48","author_user_id":11253,"materi_section_id":324,"judul":"Fungsi","permalink":"fungsi","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p><!-- wp:spacer {\"height\":30} --><\/p>\r\n<p>Fungsi merupakan suatu kumpulan pernyataan atau kode yang dibagi kedalam suatu blok atau kumpulan yang memiliki tujuan yang spesifik. Dengan menggunakan fungsi maka kode yang dikerjakan oleh seseorang akan menjadi lebih ringkas, mudah dibaca, dan dibagikan kepada orang lain untuk digunakan ulang.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Fungsi memiliki penulisan secara umum,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>def nama_fungsi(parameter):\r\n    kode\/pernyataan fungsi<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kata kunci def untuk mengawali fungsi,<\/li>\r\n<li>Lalu nama fungsi yang harus mengikuti kaidah penamaan variabel<\/li>\r\n<li>Parameter dari fungsi yang digunakan untuk memasukkan suatu nilai ke dalam fungsi tersebut.<\/li>\r\n<li>Tanda titik dua sebagai akhir dari bagian header fungsi.<\/li>\r\n<li>Satu atau lebih kode\/pernyataan yang akan dijalankan oleh fungsi tersebut. Semua kode atau pernyataan harus memiliki indentasi yang sama antar kodenya dan berbeda dengan header.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh dari sebuah fungsi diperlihatkan pada kode di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>def hello_world():\r\n    print ('Hello World\")<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memanggil fungsi tersebut kita hanya perlu memanggi nama dari fungsi tersebut diikuti dengan tanda kurung. Bila fungsi tersebut memiliki parameter, maka parameter dimasukkan ke dalam tanda kurung.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>hello_world()<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>Hello World<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><hr \/><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\"><em><strong>Jenis Fungsi<\/strong><\/em><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Secara umum ada tiga tipe kode yang bisa dimasukkan ke dalam suatu fungsi, yaitu pernyataan pass atau fungsi kosong, kode tanpa return, dan kode dengan return.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Fungsi Pass<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Fungsi statement biasanya adalah fungsi yang isinya memanfaatkan pernyataan pass yang telah kita pelajari sebelumnya. Digunakan saat kita ingin menginisiasi fungsi yang belum kita ketahui akan isi apa.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>def fungsi_01():\r\n    pass<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Fungsi Tanpa Return<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Fungsi tanpa return digunakan jika fungsi tersebut tidak kita gunakan untuk mengembalikan suatu nilai. Contohnya saat kita akan menggunakannya untuk melakukan suatu tugas seperti print seperti pada fungsi hello_world() sebelumnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Fungsi Return<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Fungsi dengan return digunakan saat hasil dari fungsi tersebut akan kita keluarkan dan gunakan untuk kebutuhan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>contohnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>a = 10\r\n\r\ndef pangkat (nilai):\r\n    hasil = nilai**2\r\n    return hasil\r\n\r\nnilai_2 = pangkat(a)*2\r\nprint(nilai_2)<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>200<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada langkah pertama kita membuat sebuah fungsi yang digunakan untuk mempangkatkan variabel yang kita masukkan. hasilnya kita kembalikan dengan menggunakan metode return. Fungsinya bisa masukkan ke dalam suatu variabel untuk kita gunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><hr \/><span class=\"mce-nbsp-wrap\" contenteditable=\"false\">&nbsp;<\/span><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2><em><strong>Parameter Pada Fungsi<\/strong><\/em><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>parameter pada fungsi adalah nilai yang akan kita gunakan di dalam fungsi tersebut. Terdapat tiga jenis parameter pada suatu fungsi, yaitu default parameter, keyword parameter, dan arbitrary parameter.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Default Parameter<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Parameter yang kita masukkan pada suatu fungsi dapat memiliki nilai awal yang akan diberikan. Nilai awal tersebut dapat diberikan dengan menggunakan tanda sama dengan saat kita membuat sebuah fungsi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>def fungsi_03 (nilai1 = 1, nilai2 = 2):\r\n  hasil = nilai1 + nilai2\r\n  return hasil\r\n\r\nhasil = fungsi_03()\r\n\r\nprint(hasil)\r\n\r\nhasil = fungsi_03(3,4)\r\n\r\nprint(hasil)<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<h3><strong>hasil<\/strong><\/h3>\r\n<p><span style=\"font-size: 12pt; background-color: #ced4d9;\"><code>3<\/code><\/span><\/p>\r\n<p><span style=\"font-size: 12pt; background-color: #ced4d9;\"><code>7<\/code><\/span><\/p>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan membuat sebuah default parameter, maka fungsi tersebut akan secara otomatis memberikan nilai default pada parameternya. Sehingga seperti pada percobaan pertama, kita tidak perlu menyertakan parameter saat memanggil suatu fungsi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Akan tetapi, saat kita ingin mengubah nilainya tetap bisa kita lakukan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Keyword Parameter<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Keyword parameter, merupakan saat kita memanggil fungsi tersebut dengan keyword yang sudah ditentukan, hampir mirip seperti pada default.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>def fungsi_04(nama):\r\n  print(nama)\r\n\r\nfungsi_04(nama = 'rudi')<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>rudi<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Arbitary Parameter<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Arbitary adalah saat kita tidak mengetahui berapa parameter yang ingin kita masukkan saat melakukan pembuatan fungsi. Ada dua jenis arbitrary parameter pada fungsi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true,\"type\":\"1\"} --><\/p>\r\n<ol type=\"1\">\r\n<li>Args parameter, menggunakan satu tanda asterisk sebelum parameter. Parameter berbentuk tuple.<\/li>\r\n<li>Kwargs parameter, menggunakan dua tanda asterisk sebelum parameter. Parameter berbentuk dictionary.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#contoh fungsi args\r\n<span style=\"background-color: #ced4d9; font-size: 12pt;\">def fungsi_05 (*nama):\r\n  for item in nama:\r\n    print(item)\r\n\r\n\r\nfungsi_05('rudi','santi','mirna')<\/span><\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>rudi\r\nsanti\r\nmirna<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9;\"><code>#contoh fungsi kwargs\r\n<span style=\"font-size: 12pt;\">def fungsi_06 (**nama):\r\n  for key, value in nama.items():\r\n    print(key, value)\r\n\r\nfungsi_06(nama = 'rudi', umur = 18)<\/span><\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>nama rudi\r\numur 18<\/code><\/span><\/pre>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<p>&nbsp;<\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\"><strong>Fungsi Anonymos<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Fungsi anonymos adalah sebuah fungsi yang digunakan dalam satu keadaan tertentu. Biasanya fungsi ini digunakan hanya untuk melakukan satu buah pekerjaan spesifik dan hanya boleh memiliki satu pernyataan. Jika fungsi biasa diinisiasi dengan menggunakan kata def maka fungsi anonymos diinisasi dengan menggunakan kata lambda.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Persamaan umum dari fungsi lambda adalah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>lambda argument: kode\/pernyataan<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>contohnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>kali_2 = lambda x: x * 2\r\n\r\nprint(kali_2(2))<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>4<\/code><\/span><\/pre>\r\n<p>Contoh di atas merupakan contoh yang kurang baik dalam penggunaan lambda, karena tujuan fungsi lambda adalah fungsi sementara yang tidak disimpan di dalam memori. Untuk memenuhi tujuan ini, biasanya fungsi lambda selain digunakan secara langsung juga digunakan dengan memanfaatkan tiga fungsi lain, yaitu Map, Filter, dan Reduce.<\/p>\r\n<h3>Map<\/h3>\r\n<p>Fungsi map adalah fungsi yang digunakan untuk mengaplikasikan suatu fungsi pada semua anggota array atau struktur data. Terdapat dua paramater masukkan pada fungsi Map, yang pertama berisi fungsinya dan yang kedua berisi array\/struktur datanya.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/map.png\" alt=\"\" width=\"809\" height=\"157\" \/><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh dari fungsi map adalah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>data = [1,2,3,4]\r\n\r\ndef kali_3(nilai):\r\n  return nilai*3\r\n\r\nhasil = list(map(kali_3,data))\r\n\r\nprint(hasil)<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>[3,6,9,12]<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang akan kita coba aplikasikan fungsi lambda pada fungsi map.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>data = [1,2,3,4]\r\n\r\nhasil = list(map(lambda x:x*3,data))\r\n\r\nprint(hasil)<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<h3 class=\"wp-block-code\"><code><span style=\"font-size: 12pt; color: #000000; background-color: #ced4d9;\">[3, 6, 9, 12]<\/span><br \/><\/code><br \/>Filter<!-- \/wp:code --><\/h3>\r\n<p>Fungsi filter adalah fungsi yang digunakan untuk mengaplikasikan suatu fungsi pada list untuk mendapatkan nilai yang sesuai syarat. Terdapat dua paramater masukkan pada fungsi Filter, yang pertama berisi fungsinya dan yang kedua berisi array\/struktur datanya.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/filter.png\" alt=\"\" width=\"739\" height=\"154\" \/><\/p>\r\n<p>Contoh dari fungsi filter adalah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>data = [1,2,3,4]\r\n\r\ndef cek_genap(nilai):\r\n   if nilai % 2 == 0:<br \/>      return True<br \/>   return False<\/code><\/span><\/pre>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>hasil = list(filter(cek_genap,data)) <br \/>print(hasil)<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>[2,4]<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang akan kita coba aplikasikan fungsi lambda bersama dengan fungsi filter.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code>data = [1,2,3,4]\r\n\r\nhasil = list(filter(lambda x:x%2 == 0,data))\r\n\r\nprint(hasil)<\/code><\/span><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasil<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<h3 class=\"wp-block-code\"><code><span style=\"font-size: 12pt; color: #000000; background-color: #ced4d9;\">[2,4]<\/span><\/code><\/h3>\r\n<p>&nbsp;<\/p>\r\n<h3>Reduce<\/h3>\r\n<p>Fungsi reduce adalah fungsi yang digunakan untuk mengaplikasikan suatu fungsi pada semua anggota array atau struktur data untuk mendapatkan satu nilai di akhir.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Misalkan kita memiliki fungsi f(a,b) = Y yang akan diaplikasikan pada list [1,2,3,4]<\/p>\r\n<p>Reduce akan mengambil dua nilai paling awal untuk dimasukkan pada fungsi, menjadi f(1,2) = Y<\/p>\r\n<p>lalu nilai Y akan dimasukkan pada list menggantikan 2 nilai lama, menjadi [Y,3,4]<\/p>\r\n<p>setelah itu diambil kembali dua nilai paling awal untuk dimasukkan pada fungsi, menjadi f(Y,3) = Y<\/p>\r\n<p>Begitu seterusnya hingga semua nilai ter-<em>reduce&nbsp;<\/em>menjadi satu nilai.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/reduce.png\" alt=\"\" width=\"661\" height=\"115\" \/><\/p>\r\n<p>Terdapat dua paramater masukkan pada fungsi reduce, yang pertama berisi fungsinya dan yang kedua berisi array\/struktur datanya. Mulai pada python 3.xx reduce dimasukkan pada modul functools sehingga untuk memakainya kita perlu import modulnya terlebih dahulu<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><span style=\"font-size: 12pt;\">Contoh dari fungsi reduce adalah.<\/span><\/p>\r\n<p><span style=\"font-size: 12pt; background-color: #ced4d9;\"><!-- \/wp:paragraph --> <!-- wp:code --><\/span><\/p>\r\n<div>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">from&nbsp;functools&nbsp;import&nbsp;reduce<\/span><\/code><\/div>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">data&nbsp;=&nbsp;[3,6,2,8,6,9,3]<\/span><\/code><\/div>\r\n<br \/>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">def&nbsp;cek_maks(a,b):<\/span><\/code><\/div>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">&nbsp;&nbsp;if&nbsp;a&nbsp;&gt;&nbsp;b:<\/span><\/code><\/div>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;a<\/span><\/code><\/div>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">&nbsp;&nbsp;else:<\/span><\/code><\/div>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;b<\/span><\/code><\/div>\r\n<br \/>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">hasil&nbsp;&nbsp;=&nbsp;reduce(cek_maks,data)<\/span><\/code><\/div>\r\n<div><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">print(hasil)<\/span><\/code><\/div>\r\n<\/div>\r\n<p><span style=\"color: #000000;\"><!-- \/wp:code --> <!-- wp:paragraph --><\/span><\/p>\r\n<p><span style=\"color: #000000;\"><strong>hasilnya<\/strong><\/span><\/p>\r\n<p><span style=\"color: #000000;\"><!-- \/wp:paragraph --> <!-- wp:code --><\/span><\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"background-color: #ced4d9; font-size: 12pt; color: #000000;\">9<\/span><\/code><\/pre>\r\n<p><span style=\"color: #000000;\"><!-- \/wp:code --> <!-- wp:paragraph --><\/span><\/p>\r\n<p><span style=\"color: #000000;\">Sekarang akan kita coba aplikasikan fungsi lambda bersama dengan fungsi reduce.<\/span><\/p>\r\n<p><code><span style=\"font-size: 12pt; background-color: #ced4d9; color: #000000;\">from&nbsp;functools&nbsp;import&nbsp;reduce<\/span><\/code><\/p>\r\n<p><code><span style=\"color: #000000;\"><span style=\"font-size: 12pt; background-color: #ced4d9;\">data = [3,6,2,8,6,9,3]<\/span><\/span><\/code><\/p>\r\n<p><code><span style=\"background-color: #ced4d9; font-size: 12pt; color: #000000;\">hasil = reduce(lambda a,b: a if a &gt; b else b,data)<\/span><\/code><\/p>\r\n<p><code><span style=\"background-color: #ced4d9; font-size: 12pt; color: #000000;\">print(hasil)<\/span><\/code><\/p>\r\n<p><span style=\"color: #000000;\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code><\/code><\/span><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code><\/code><\/span><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code><\/code><\/span><strong>hasil<\/strong><\/span><\/p>\r\n<p><span style=\"font-size: 12pt; background-color: #ced4d9;\"><code><span style=\"color: #000000;\"><strong>9<\/strong><\/span><\/code><\/span><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code><\/code><\/span><\/pre>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ced4d9; font-size: 12pt;\"><code><\/code><\/span><\/pre>\r\n<pre class=\"wp-block-code\"><!-- \/wp:code --><\/pre>\r\n<p><!-- \/wp:code --><\/p>","waktu_publish":"2021-09-24 08:00:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-24 03:08:27","waktu_publish_formatted":" Jumat, 24 September 2021. 08:00:00 WIB."}]},{"id":325,"uuid":"d8a06244-51d6-4477-9b44-c8bff5291080","materi_id":33,"nama":"Materi Pekan 2","permalink":"materi-pekan-2","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-07-15 08:20:31","posting":[{"id":1113,"uuid":"9518d251-bc12-4338-8b43-ccda2e052df0","author_user_id":11253,"materi_section_id":325,"judul":"Python Sebagai Object Oriented Programming","permalink":"python-sebagai-object-oriented-programming","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Terdapat dua paradigma dalam programming yang paling terkenal, yaitu Struktural Programming dan Object Oriented Programming. Paradigma disini adalah dasar\/cara berpikir saat seseorang melakukan pemograman. Struktural adalah paradigma dimana program\/kode yang kita buat berjalan sesuai dengan urutan yang sudah ditentukan, pada umumnya menggunakan if-else looping. Ini akan menjadi cukup memusingkan saat kita akan membuat sebuah program yang kompleks. Sedangkan, Object Oriented Programming (OOP) adalah suatu paradigma dimana kode kita dikumpulkan\/dimisalkan menjadi sebuah objek. Contoh paling mudah adalah jika kita ingin membuat sebuah program tentang rumah, maka rumah itu kita misalkan objek yang tentu saja objek tersebut memiliki karakteristik tersendiri, misalkan warna, lokasi, dan harga. Saat kita akan butuh data karakteristik(instance) yang dibutuhkan maka kita tinggal melakukan pemanggilan.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/programmin-paradigms.png\" alt=\"\" width=\"929\" height=\"396\" \/><\/p>\r\n<p style=\"text-align: center;\"><em>sumber: https:\/\/www.geeksforgeeks.org\/<\/em><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Python sendiri merupakan bahasa pemograman yang dapat menggunakan konsep OOP tapi juga dapat mengimplementasikan konsep Structural Programming.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"textAlign\":\"left\",\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-text-align-left has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Istilah &ndash; Istilah Dalam OOP<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa istilah utama yang terdapat pada OOP diantaranya :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><em><strong>Class<\/strong><\/em>&nbsp;&ndash; Kelas adalah cetak biru atau prototipe dari objek dimana kita mendefinisikan atribut dari suatu objek. Atribut ini terdiri dari data member (variabel) dan fungsi (metode).<\/li>\r\n<li><strong><em>Class Variable<\/em><\/strong>&nbsp;&ndash; Variabel kelas adalah variabel yang di<em>share<\/em>&nbsp;atau dibagi oleh semua instance (turunan) dari kelas. Variabel kelas didefinisikan di dalam kelas, tapi di luar metode-metode yang ada dalam kelas tersebut.<\/li>\r\n<li><em><strong>Instance<\/strong><\/em>&nbsp;&ndash;&nbsp;<em>Instance<\/em>&nbsp;adalah istilah lain dari objek suatu kelas. Sebuah objek yang dibuat dari prototipe kelas Lingkaran misalnya disebut sebagai instance dari kelas tersebut.<\/li>\r\n<li><em><strong>Object<\/strong><\/em>&nbsp;&ndash; Objek adalah instansiasi atau perwujudan dari sebuah kelas. Bila kelas adalah prototipenya, dan objek adalah barang jadinya.<\/li>\r\n<li><strong><em>Instance\/Object Variable<\/em><\/strong>&nbsp;&ndash; Variabel instance adalah variabel yang didefinisikan di dalam suatu metode dan hanya menjadi milik dari instance kelas.<\/li>\r\n<li><strong>Data member<\/strong>&nbsp;&ndash; Data member adalah variabel yang menyimpan data yang berhubungan dengan kelas dan objeknya<\/li>\r\n<li><strong>Overloading Fungsi<\/strong>&nbsp;&ndash; Overloading fungsi adalah fungsi yang memiliki nama yang sama di dalam kelas, tapi dengan jumlah dan tipe argumen yang berbeda sehingga dapat melakukan beberapa hal yang berbeda.<\/li>\r\n<li><strong>Overloading operator<\/strong>&nbsp;&ndash; Overloading operator adalah pembuatan beberapa fungsi atau kegunaan untuk suatu operator. Misalnya operator + dibuat tidak hanya untuk penjumlahan, tapi juga untuk fungsi lain.<\/li>\r\n<li><strong>Pewarisan\/Inheritansi<\/strong>&nbsp;&ndash; Inheritansi adalah pewarisan karakteristik sebuah kelas ke kelas lain yang menjadi turunannya.<\/li>\r\n<li><strong>Instantiation<\/strong>&nbsp; &ndash; Instansiasi adalah pembuatan instance\/objek dari suatu kelas.<\/li>\r\n<li><strong>Metode<\/strong> &ndash; Metode adalah fungsi yang didefinisikan di dalam suatu kelas.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Mendefinisikan Class<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Mendefiniskan class sangat mudah, secara sederhana dapat kita tuliskan seperti.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    pass<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti definisinya, class diatas akan menjadi cetak biru dari objek\/instance yang akan masukkan pada tahap selanjutnya. Lalu kita inisiasikan objek dari <em>class<\/em> yang telah kita buat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mobil1 = mobil()\r\nmobil2 = mobil()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kode diatas artinya objek mobil1 dan mobil2 memakai <em>class<\/em> mobil sebagai cetak biru untuk objek tersebut. Artinya semua variabel, atau metode nantinya akan mengikuti <em>class<\/em> mobil. Sekarang kita akan masukan atribut\/variabel dalam objek yang kita buat. kita akan masukkan jenis dan warna dari objek tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mobil1.jenis = \"Sedan\"\r\nmobil1.warna = \"Merah\"\r\n\r\nmobil2.jenis = \"SUV\"\r\nmobil2.warna = \"Hitam\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita menggunakan metode print() untuk melihat atribut dan objek yang telah kita buat maka kita akan mendapatkan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(mobil1)\r\nprint(mobil1.jenis)\r\nprint(mobil1.__dict__)\r\n\r\n#&lt;__main__.mobil object at 0x011D36D0&gt;\r\n#Sedan\r\n#{'jenis': 'Sedan', 'warna': 'Merah'}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada hasil pertama kita diperlihatkan bahwa mobil satu merupakan sebuah objek. Pada hasil kedua kita diperlihatkan bahwa atribut jenis pada objek mobil1 bernilai \"sedan\". Pada hasil terakhir kita ingin melihat atribut apa saja yang dimiliki oleh objek tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Mendefinisikan __init__ Method<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Metode pertama yang akan kita kenal adalah metode init. Seperti namanya Metode ini digunakan sebagai inisiasi <em>class<\/em> yang kita jalankan jadi saat kita memanggil <em>class<\/em> tersebut sebagai sebuah objek maka metode ini akan dijalankan terlebih dahulu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    def __init__(self):\r\n        print(\"ini mobil saya\")\r\n\r\nmobil1 = mobil()\r\n\r\n#ini mobil saya<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang terlihat, saat kita menginisiasi pembuatan objek mobil1 maka dengan otomatis print(\"ini mobil saya\") terjalankan. Jadi apa gunanya hal ini? dengan melakukan ini maka kita bisa lebih menyederhanakan kode yang kita tulis sehingga lebih mudah dibaca. Kita akan coba masukkan atribut jenis dan warna pada fungsi init tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    def __init__(self, jenis, warna):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n\r\nmobil1 = mobil('Sedan', 'Merah')\r\nmobil2 = mobil('SUV', 'Hitam')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dan jika kita print maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(mobil1.__dict__)\r\nprint(mobil2.__dict__)\r\n\r\n#{'jenis': 'Sedan', 'warna': 'Merah'}\r\n#{'jenis': 'SUV', 'warna': 'Hitam'}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kesederhaan ini akan lebih terlihat lagi jika apa yang kita lakukan menjadi lebih rumit sehingga membutuhkan banyak sekali atribut maka kita hanya membutuhkan satu baris saja untuk menginisiasi sebuah objek.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/1_wNhGhXHj9JBOVhGfXJcs6g.png\" alt=\"\" width=\"654\" height=\"379\" \/><\/p>\r\n<p style=\"text-align: center;\"><em>https:\/\/laabidigh.medium.com\/class-and-instance-attributes-e8b02f40d753<\/em><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>Variabel Kelas &amp; Variabel Objek<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Atribut yang kita buat sebelumnya adalah atribut objek, apa maksudnya? Maksudnya adalah atribut tersebut hanya menjadi miliki objek yang didefinisikan. Misal untuk mobil1 jenisnya adalah sedan sedangkan untuk mobil2 jenisnya adalah SUV. Atribut kelas adalah atribut yang menjadi milik si <em>class<\/em> tersebut artinya nilainya akan sama untuk semua metode di dalam <em>class <\/em>tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    benda = 'Mobil'\r\n\r\n    def __init__(self, jenis, warna):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n\r\nmobil1 = mobil('Sedan', 'Merah')\r\nmobil2 = mobil('SUV', 'Hitam')\r\n\r\nprint(mobil1.benda)\r\nprint(mobil2.benda)\r\n\r\n#Mobil\r\n#Mobil<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>&nbsp;<\/h2>\r\n<h2>Membuat <em>Object Method<\/em><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sebuah <em>class<\/em> memliki metode didalamnya yang dapat kita variasikan fungsinya tidak seperti metode init. Kalau kita menggunakan pemisalan sederhana, Jika objek yang kita maksudkan adalah kalkulator maka yang termasuk ke dalam metode yang dimaksud adalah operasi tambah, kurang, bagi, dan kali. Sekarang kita akan mencoba membuat metode pada <em>class<\/em> mobil sebelumnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n\r\n    def __init__(self, jenis, warna, tangki):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n        self.tangki = tangki\r\n    \r\n    def data_mobil(self):\r\n        print(\"mobil saya berjenis\",self.jenis,\"dan memiliki warna\",self.warna,\"serta memiliki ukuran tangki\",self.tangki,\"L\")<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita lakukan inisiasi dan pemanggilan maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mobil1 = mobil('Sedan', 'Merah', 40)\r\n\r\nmobil1.data_mobil()\r\n\r\n#mobil saya berjenis Sedan dan memiliki warna Merah serta memiliki ukuran tangki 40 L<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Metode diatas adalah contoh metode yang tanpa argumen, sehingga saat melakukan pemanggilan kita tidak perlu mengisikan argumen ke dalam kurung. Selain metode tersebut, ada juga metode dengan argumen yang akan kita contohkan dengan membuat sebuah fungsi untuk menghitung sisa tangki dari jarak tempuhnya. Sekarang mari kita buat atribut baru, yaitu efisiensi. Efisiensi disini adalah berapa liter bensin yang hilang untuk 10 km.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n\r\n    def __init__(self, jenis, warna, tangki, efisiensi):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n        self.tangki = tangki\r\n        self.efisiensi = efisiensi<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita buat fungsi untuk menghitung sisa bensin pada tangki<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    def sisa_bensin(self,jarak):\r\n        sisa = self.tangki - ((jarak\/10)*self.efisiensi)\r\n        return print(\"sisa bensin adalah\",sisa)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita panggil metode tersebut, karena pada fungsinya kita dapat melihat bahwa dibutuhkan argumen jarak maka pemanggilan metodenya akan sedikit berbeda dengan memasukkan satu argumen jarak dalam kilometer.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mobil1 = mobil('Sedan', 'Merah', 40, 4)\r\n\r\nmobil1.sisa_bensin(20)\r\n\r\n#sisa bensin adalah 32.0<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sampai sini kalian sudah bisa mengenal OOP dan memuat <em>class<\/em> sederhana. dengan memanfaatkan atribut\/variabel dan metode\/fungsi yang sesuai. Kita akan mencoba untuk mengaplikasikan hal tersebut pada materi-materi kita kedepannya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\"><hr \/><\/div>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Sifat - Sifat OOP pada Python<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h3>Inheritance<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Inheritance adalah sifat penurunan, yaitu menurunkan sifat yang dimiliki kelas utama (<em>parent) class<\/em> kepada kelas yang diturunkan (<em>childc class)<\/em>. Sekarang mari kita coba menerapkan inheritance<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita persiapkan dulu kelas parent yang ingin kita gunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class Mobil:\r\n  def print_warna(self):\r\n    print (self.warna)\r\n  \r\n  def print_merk(self):\r\n    print(self.merk)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita persiapkan child class<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class SUV(Mobil):\r\n  def __init__(self, warna, merk):\r\n    self.warna = warna\r\n    self.merk = merk\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Nah hal menarik dapat terjadi, walau class SUV tidak memiliki metode print_warna dan print_merk secara langsung, akan tetapi karena metode tersebut dapat kita panggil karena class SUV mendapatkannya dari class mobil.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mobil = SUV('Merah', 'Mitsubishi')\r\nmobil.print_warna()\r\nmobil.print_merk()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Merah\r\nMitsubishi<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h3>Encapsulation<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Suatu objek pada python dapat kita batasi akses yang dimiliki terhadap objek tersebut dengan menggunakan encapsulation. caranya adalah dengan menggunakan dua garis bawah (__) sebelum nama variabel.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class Mobil:\r\n    var_a = 'Merah'\r\n\r\nmobil = Mobil()\r\nprint(mobil.a)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Merah<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Saat kita menggunakan encapsulation pada variabelnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class Mobil:\r\n    __var_a = 'Merah'\r\n\r\nmobil = Mobil()\r\nprint(mobil.__a)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>AttributeError: 'Mobil' object has no attribute '__a'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h3>Polymorphism<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti pada namanya, polymophism adalah kemampuan suatu metode memiliki banyak bentuk.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>kita persiapkan banyak bentuknya terlebih dahulu dalam bentuk class<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class Pesawat:\r\n  def bisa_terbang(self):\r\n    print('Bisa Terbang')\r\n\r\nclass Mobil:\r\n  def bisa_terbang(self):\r\n    print('Tidak Bisa Terbang')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita persiapkan metode utamanya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def cek_terbang(Kendaraan):\r\n    Kendaraan.bisa_terbang()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita inisiasi objectnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pesawat = Pesawat()\r\nmobil = Mobil()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah kita mari kita masukkan ke dalam fungsi kita sebelumnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cek_terbang(pesawat)\r\ncek_terbang(mobil)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<h3 class=\"wp-block-code\"><code>Bisa Terbang\r\nTidak Bisa Terbang<br \/><br \/><\/code><br \/>Daftar Pustaka:<\/h3>\r\n<p><a href=\"https:\/\/realpython.com\/instance-class-and-static-methods-demystified\/\">Instance class and Static methods - realpython<\/a><\/p>\r\n<p><!-- \/wp:code --><\/p>","waktu_publish":"2021-09-27 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-28 13:44:40","waktu_publish_formatted":" Senin, 27 September 2021. 08:00:00 WIB."},{"id":1111,"uuid":"0f48051d-0811-4c73-a47f-d2336c1bd9e5","author_user_id":11253,"materi_section_id":325,"judul":"Input dan Error Handling","permalink":"input-dan-error-handling","konten":"<p><!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Input Handling<\/h2>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan mempelajari tentang metode yang kita gunakan untuk memasukkan data ke dalam program python kita. Terdapat 2 Jenis input yang akan kita bahas, yang pertama adalah input data dalam bentuk variabel satuan dan yang kedua adalah input data dalam bentuk file.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Input Variabel<\/h3>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Input melalui metode input()<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Cara yang pertama adalah melakukan input dengan menggunakan metode input yang dimiliki oleh python. Input yang dimasukkan dengan menggunakan metode ini akan memiliki tipe data string.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>kode yang digunakan secara umum adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>input(pernyataan)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada umumnya kita memasukkan nilai yang diinputkan ke dalam suatu variabel agar dapat digunakan lagi berulang kali. Mari kita coba menggunakan metode ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data_input = input()\r\nprint(\"data yang anda input adalah\",data_input)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sanbercode\r\ndata yang anda input adalah sanbercode<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita juga dapat memasukkan sebuah kalimat prolog sebelum memasukkan nilai yang ingin dimasukkan. Ini bertujuan agar metode input kita menjadi lebih intuitif.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data_input = input('masukkan string: ')\r\nprint(\"data yang anda input adalah\",data_input)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>masukkan string: Indah\r\ndata yang anda input adalah Indah<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Input melalui cmd<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Input melalui command prompt dapat dilakukan dengan mengambil argument yang ada ketika kita menjalankan file python. Saat kita menjalankan file sebuah file python melalui cmd\/terminal kita akan menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>python namafile.py<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>namafile.py merupakan argument pada command prompt. Kita bisa mendapatkan argument tersebut dari dalam file python dengan menggunakan metode argv bawaan dari python.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mempermudah mengerti konsep ini sekarang mari kita coba praktirkan. Buat sebuah file dengan nama test.py yang berisi kode berikut ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import sys\r\n\r\nfor argument in sys.argv:\r\n    print(argument)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita jalankan file tersebut melalui terminal\/cmd.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>python test.py<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>test.py<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita tambahkan argument pada command prompt tersebut,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>python test.py var_1 var _2<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>test.py\r\nvar_1\r\nvar_2<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Input by File<\/h3>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Kita juga dapat melakukan input menggunakan file eksternal. Pada kesempatan kali ini kita akan mempelajari pembacaan 3 jenis file sebagai contoh, yaitu txt, csv, dan json. Untuk membaca ketiga file tersebut kita akan menggunakan yang sama untuk membuka filenya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>open(\"namafile.ekstensionfile\")<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan menggunakan file yang disediakan pada link di bawah ini untuk contoh pada sub-bab kali ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/drive\/folders\/166VkbwNJWqny5O6NAm1wLhxkkA9wcrp8?usp=sharing\" target=\"_blank\" rel=\"noreferrer noopener\">link_file<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>File TXT<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk membaca file berformat txt kita akan memanfaatkan dua buat metode setelah open, yaitu read() dan readlines().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Metode read() akan membaca keseluruhan isi file dan menyimpannya dalam bentuk string.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>namafile = 'file_01.txt'\r\nfile = open(namafile)\r\n\r\ndata = file.read()\r\n\r\nprint(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Pada kesempatan kali ini kita akan mencoba untuk membaca file teks. \r\nPembacaan menggunakan bahasa pemograman python<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Metode readlines() akan membaca file perbaris dan memasukkannya ke dalam suatu list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>namafile = 'file_01.txt'\r\nfile = open(namafile)\r\n\r\ndata = file.read()\r\n\r\nprint(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>['Pada kesempatan kali ini kita akan mencoba untuk membaca file teks. \\n', 'Pembacaan menggunakan bahasa pemograman python']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>File CSV<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan pembacaan pada file csv maka selain metode open() kita juga akan memanfaatkan metode csv.reader. Sebelumnya kita harus mengimport terlebih dahulu library csv.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>csv.reader(file, delimiter=\",\")<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>delimiter merupakan pembatas yang digunakan pada file csv kita, pembatas yang dimaksud biasanya menggunakan koma atau titik koma. Sekarang mari kita coba baca file csv kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import csv\r\n\r\n\r\nnamafile = 'file_02.csv'\r\n\r\nfile = open(namafile)\r\n\r\ndata = csv.reader(file, delimiter=\",\")\r\n\r\nprint(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;_csv.reader object at 0x0000016DC4806DC0&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita hanya melakukan print maka akan didapatkan output seperti di atas. Kita hanya akan menampilkan tempat pada memori dimana objek csv kita disimpan. Untuk mengambil data pada csv kita dapat memanfaatan looping. Data yang keluar nanti akan berbentuk list perbaris.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import csv\r\n\r\n\r\nnamafile = 'file_02.csv'\r\n\r\nfile = open(namafile)\r\n\r\ndata = csv.reader(file, delimiter=\",\")\r\n\r\nfor item in data:\r\n    print(item)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>['NO', 'NAMA', 'NILAI']\r\n['1', 'Budi', '95']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>File JSON<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan pembacaan file JSON selain menggunakan metode open, kita akan memanfaatkan fungsi json.load(). Sebelumnya kita harus melakukan import library json.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import json\r\n\r\nfile =  open('file_03.json')\r\ndata = json.load(file)\r\n\r\nprint(data)\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[{'Country': 'Antarctica', 'Slug': 'antarctica', 'ISO2': 'AQ'}, {'Country': 'Malawi', 'Slug': 'malawi', 'ISO2': 'MW'}]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasilnya akan berbentuk list dari dictionary, sehingga kita harus memanfaatkan loop untuk melakukan pembacaan jika data yang kita miliki berada dalam list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<hr \/>\r\n<h2 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Error Handling<\/h2>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Program yang kita jalankan akan dipaksa untuk berhenti jika program tersebut mengalami error saat dijalankan. Error di python dapat dikelompokkan menjadi dua kelompok utama, pertama adalah syntax error dan kedua Exception.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/try_except_else_finally.a7fac6c36c55.png\" alt=\"sumber: realpython.com\" width=\"589\" height=\"423\" \/><\/p>\r\n<p style=\"text-align: center;\"><em>sumber: realpython.com<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Syntax error adalah error yang terjadi pada bagian paling fundamental dari program tersebut. Contoh paling mudah adalah saat kita salah saat menempatkan indentasi ataupun titik dua.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for letter in 'aku makan siang'\r\n  print(letter)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>\r\nSyntaxError: invalid syntax<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Exception<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Keadaan dimana saat kode tidak ada kesalahan tapi muncul error lainya, itulah yang dinamakan exception. Beberapa contoh dari exception yang dimiliki oleh python adalah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>ZeroDivisionError<\/li>\r\n<li>ValueError<\/li>\r\n<li>AtributeError<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 10\r\nb = 0\r\nprint (a\/b)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>ZeroDivisionError: division by zero<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita juga dapat membuat exception secara manual dengan menggunakan raise.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fofor i in range (10):\r\n  if i &gt; 7:\r\n    raise Exception (\"Nilai lebih besar dari 7\")\r\n  print (\"Nilainya adalah\",i)\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Nilainya adalah 0\r\nNilainya adalah 1\r\nNilainya adalah 2\r\nNilainya adalah 3\r\nNilainya adalah 4\r\nNilainya adalah 5\r\nNilainya adalah 6\r\nNilainya adalah 7\r\n\r\nException: Nilai lebih besar dari 7<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita juga bisa menggunakan Assert untuk menguji suatu nilai, jika nilai yang dimasukkan pada metode assert bernilai True maka tidak ada masalah, akan tetapi jika bernilai false maka akan diberhentikan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for index in range (10):\r\n  assert (index &lt; 7), \"Nilai lebih besar dari 7\"\r\n  print (\"Nilainya adalah\",index)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Nilainya adalah 0\r\nNilainya adalah 1\r\nNilainya adalah 2\r\nNilainya adalah 3\r\nNilainya adalah 4\r\nNilainya adalah 5\r\nNilainya adalah 6\r\n\r\nAssertionError: Nilai lebih besar dari 7<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Error Handling with Try - Except<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita dapat mengatur agar program kita tidak menghasilkan pesan error yang tidak disengaja. Kita dapat melakukan pengecekan pada tempat yang kita inginkan dengan Try - Except.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Try:\r\n    kode_kita\r\nExcept:\r\n    Kode\/Pernyataan yang dijalankan jika kode gagal dijalankan<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Try - Except akan coba menjalankan kode kita yang berada di dalam tag try. Jika berhasil dijalankan tidak akan terjadi apa-apa, akan tetapi jika gagal maka akan menjalankan kode yang ada pada tag except.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 10\r\nb = 0\r\ntry:\r\n  hasil = a\/b\r\n  print(hasil)\r\nexcept:\r\n  print('terjadi kesalahan saat perhitungan')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>terjadi kesalahan saat perhitungan<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Multiple Except<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita dapat memasukkan lebih dari satu except untuk melakukan pengujian lebih dari satu error. Kita akan mencoba untuk menggunakan kode di atas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 10\r\nb = 0\r\ntry:\r\n  hasil = a\/b\r\n  print(hasil)\r\nexcept TypeError:\r\n  print('Kesalahan pada unit perhitungan')\r\nexcept ZeroDivisionError:\r\n  print('Membagi dengan nilai 0')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Membagi dengan nilai 0<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan menggunakan lebih dari satu except maka program kita bisa melakukan pengecekan lebih detail tentang error yang dialami dan kita bisa memberikan pesan yang lebih baik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Try - Except - Else<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Else dijalankan saat program yang kita buat tidak menemui error dan berhasil menjalankan tugasnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 10\r\nb = 5\r\ntry:\r\n  hasil = a\/b\r\n  print(hasil)\r\nexcept TypeError:\r\n  print('Kesalahan pada unit perhitungan')\r\nexcept ZeroDivisionError:\r\n  print('Membagi dengan nilai 0')\r\nexcept:\r\n  print('Error yang tidak diketahui')\r\nelse:\r\n  print('Sukses')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>2.0\r\nSukses<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Finally!!<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Finnaly Digunakan sebagai bagian dari kode yang akan selalu kamu jalankan setelah selesai melakukan pekerjaannya, baik hasilnya lancar atau menemui error.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = 10\r\nb = 5\r\ntry:\r\n  hasil = a\/c\r\n  print(hasil)\r\nexcept TypeError:\r\n  print('Kesalahan pada unit perhitungan')\r\nexcept ZeroDivisionError:\r\n  print('Membagi dengan nilai 0')\r\nexcept:\r\n  print(\"Terjadi Kesalahan\")\r\nelse:\r\n  print('Sukses')\r\nfinally:\r\n  print('program dimatikan')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Hasilnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Terjadi Kesalahan\r\nprogram dimatikan dijalankan<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<h1 class=\"wp-block-spacer\" aria-hidden=\"true\"><span style=\"background-color: #95a5a6;\">Referensi Tambahan<\/span><\/h1>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/docs.python.org\/3.9\/tutorial\/inputoutput.html\">https:\/\/docs.python.org\/3.9\/tutorial\/inputoutput.html<\/a><\/p>\r\n<p><a href=\"https:\/\/docs.python.org\/3.9\/tutorial\/errors.html\">https:\/\/docs.python.org\/3.9\/tutorial\/errors.html<\/a><\/p>\r\n<p><a href=\"https:\/\/dbader.org\/blog\/python-assert-tutorial\">https:\/\/dbader.org\/blog\/python-assert-tutorial<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/python3\/python_exceptions.htm\">https:\/\/www.tutorialspoint.com\/python3\/python_exceptions.htm<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-09-28 08:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-28 02:34:10","waktu_publish_formatted":" Selasa, 28 September 2021. 08:00:00 WIB."},{"id":1112,"uuid":"b3066a57-59c8-42b6-a90c-b4ef8846d094","author_user_id":11253,"materi_section_id":325,"judul":"Pengenalan SQL & MySQL","permalink":"pengenalan-sql-mysql","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p><em>Database<\/em> atau basis data merupakan kumpulan berbagai informasi yang disimpan secara sistematis pada komputer agar informasi tersebut dapat diolah kembali dengan mudah. Dalam pengembangan sebuah website, <em>Database<\/em> berperan penting sebagai penyimpanan dan penyedia informasi yang ditampilkan ke pengguna.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Semakin kompleks logika bisnis dan semakin banyak jumlah pengguna sebuah website maka akan membutuhkan <em>database <\/em>yang baik dalam menyimpan dan menyediakan data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kriteria database yang baik ditinjau dari beberapa faktor yakni:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>kecepatan<\/li>\r\n<li>performa<\/li>\r\n<li>akurasi<\/li>\r\n<li>availability<\/li>\r\n<li>terhindar dari duplikasi dan inkonsistensi data<\/li>\r\n<li>keamanan<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p><em>Database<\/em> ditinjau dari sifat relasional nya terbagi menjadi dua yaitu: <em><strong>relational database<\/strong><\/em> dan <em><strong>non-relational database<\/strong><\/em>. Pada kesempatan kali ini kita akan mempelajari tentang <em>relational database<\/em> SQL.<\/p>\r\n<p><br \/>Structured Query Language (SQL) adalah sebuah&nbsp;bahasa&nbsp;yang digunakan untuk mengakses&nbsp;data&nbsp;dalam&nbsp;basis data relasional. Bahasa ini secara&nbsp;<em>de facto<\/em>&nbsp;merupakan bahasa standar yang digunakan dalam manajemen basis data relasional. Saat ini hampir semua&nbsp;server basis data&nbsp;yang ada mendukung bahasa ini untuk melakukan manajemen datanya. wikipedia<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-3f6efc2d-ac1f-4401-ac50-a647b821b233\">Pada awal tahun 1970-an, tercetus ide untuk mengembangkan basis data relasional. Niatnya adalah membuat standar bahasa yang dapat digunakan oleh siapa saja. Karena hal tersebut munculah istilah SEQUEL (&nbsp;<em>Structured English Query Language<\/em>). Sebelum adanya SEQUEL ini, pada tahun 1969 IBM terlebih dahulu melahirkan SQUARE sebagai cikal bakal dari SEQUEL. Nama tersebut lalu disingkat menjadi SQL karena adanya permasalahan merk dagang dengan perusahaan lain.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-54ffe6e4-bcb6-43a6-920b-bdee68d86e25\">Pada tahun 1986,&nbsp;<em>ANSI (American National Standards Institute)<\/em>, sebuah badan yang membuat standarisasi&nbsp;merancang sebuah standar untuk SQL. Tidak lama setelahnya,&nbsp;<em>ISO (International Organization for Standardization)<\/em>&nbsp;juga mengeluarkan standar untuk SQL. Ini dikerjakan dengan tujuan untuk menyeragamkan query yang digunakan di pada SQL dikarenakan perkembangan dari SQL yang begitu cepat sehingga banyak sekali perusahaan yang melakukan pengembangan sendiri SQL dengan menambahkan beberapa fitur tambahan. Walaupun begitu, perintah-perintah dasar masih memiliki kesamaan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-25de7959-2c97-4e4a-9670-bed61723ddd8\">Terdapat empat jenis perintah dasar dalam SQL. yaitu <em>Data Definition, Data Manipulation<\/em>, Data Query dan <em>Data Control<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/sql_commands.png\" alt=\"\" width=\"615\" height=\"417\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<h3 id=\"block-85b868b5-1db0-4aee-aa90-be34cde47fd1\"><strong>Data Definition Language (DDL)<\/strong><\/h3>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-57462299-8592-43b3-b010-9e3568e0d7ad\">Perintah ini digunakan untuk membuat struktur sebuah&nbsp;<em>database<\/em>. Terdapat lima perintah utama, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-8208aeb4-61c8-43fb-b6f9-eef95a307a7b\">\r\n<li>Perintah&nbsp;<strong>Create<\/strong>: sebuah perintah yang bisa kamu gunakan ketika membuat sebuah basisdata maupun tabel baru.<\/li>\r\n<li>Perintah&nbsp;<strong>Alter<\/strong>: biasa digunakan ketika seseorang ingin mengubah struktur tabel yang sebelumnya sudah ada.<\/li>\r\n<li>Perintah&nbsp;<strong>Rename<\/strong>: dapat kamu gunakan untuk mengubah sebuah nama di sebuah tabel ataupun kolom yang ada.<\/li>\r\n<li>Perintah&nbsp;<strong>Drop:&nbsp;<\/strong>Bisa kamu gunakan dalam menghapus baik itu berupa&nbsp;<em>database<\/em>, table maupun kolom hingga index.<\/li>\r\n<li>Perintah&nbsp;<strong>Show:&nbsp;<\/strong>perintah DDL ini digunakan untuk menampilkan sebuah data tabel atau basis data<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<h3 id=\"block-deaf2605-fdc6-4ad7-9ba6-52acbb64ff65\"><strong>Data Manipulation Language (DML)<\/strong><\/h3>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-b2715a0b-4467-4cfc-8522-d05db6b59923\">Perintah dasar SQL ini bertujuan untuk memanipulasi data yang ada dalam sebuah&nbsp;<em>database<\/em>. Beberapa perintah dalam DML di antaranya&nbsp;<em>adalah insert, update, <\/em>dan&nbsp;<em>delete<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-39524ac0-6525-4bc4-99d1-1eb466b3a4ed\">\r\n<li>Perintah&nbsp;<strong>Insert<\/strong>: Kamu bisa menggunakan perintah ini untuk memasukkan sebuah&nbsp;<em>record<\/em>&nbsp;baru di dalam sebuah tabel&nbsp;<em>database<\/em>.<\/li>\r\n<li>Perintah&nbsp;<strong>update<\/strong>: Ini dapat kamu gunakan ketika ingin melakukan pembaruan data di sebuah tabel. Contohnya saja jika ada kesalahan ketika memasukkan sebuah record. Kamu tidak perlu menghapusnya dan bisa diperbaiki menggunakan perintah ini.<\/li>\r\n<li>Perintah&nbsp;<strong>Delete<\/strong>: Perintah DML ini dapat digunakan ketika kamu ingin menghapus sebuah record yang ada dalam sebuah tabel.<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<h3><strong>Data Query Language (DQL)<\/strong><\/h3>\r\n<p>Perintah yang digunakan untuk melakukan query data pada SQL.<\/p>\r\n<ul>\r\n<li>Perintah&nbsp;<strong>Select<\/strong>: Pada perintah ini kamu dapat menggunakannya dalam menampilkan maupun mengambil sebuah data pada tabel. Data yang diambil pun tidak hanya terbatas pada satu jenis saja melainkan lebih dari satu tabel dengan memakai relasi.<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<h3 id=\"block-1f632949-aa39-4fe3-9e3b-b82f954a5847\"><strong>Data Control Language (DCL)<\/strong><\/h3>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-ea281cca-3964-4214-a998-fd594841a9a9\">Perintah SQL ini berhubungan dengan administrasi dan aksesibilitas, digunakan khususnya untuk mengatur hak apa saja yang dimiliki oleh pengguna. Dua perintah yang termasuk pada DCL adalah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-5cc4669f-e349-4f54-ab81-4edca646acf2\">\r\n<li>Perintah&nbsp;<strong>Grant<\/strong>: Digunakan untuk memberikan hak akses ke user lainnya. Tentu pemberian hak akses ini dapat dibatasi atau diatur.<\/li>\r\n<li>Perintah&nbsp;<strong>Revoke<\/strong>: Digunakan untuk mencabut maupun menghapus hak akses seorang pengguna yang awalnya diberikan akses oleh admin database melalui perintah Grant sebelumnya.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<p id=\"block-e29dc63b-ab3f-4b22-8894-33b1701d8e3f\"><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>&nbsp;<\/h2>\r\n<hr \/>\r\n<h1>&nbsp;<\/h1>\r\n<h1 id=\"block-08e78d53-4ebd-4721-82e7-688d5fef01e0\"><em>Entity Relationship Diagram - ERD<\/em><\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-a81f5188-9c2f-4b57-bf28-27911bd89fca\">Saat kita mengembangkan perangkat lunak atau pun mengerjakan sebuah proyek yang menggunakan banyak data sehingga membutuhkan penggunaan database khusus maka kemampuan untuk dapat merancang ERD akan sangat membantu untuk menaikkan kapabilitas dan efisiensi sistem database kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-6a932d49-4106-4c5d-8251-2a4bbd480a6f\">ERD merupakan kepanjangan dari Entity Relationship Diagram, merupakan salah satu tipe diagram struktural yang digunakan pada saat kita mendesain database. pada ERD terdapat beberapa simbol dan konektor yang digunakan untuk menggambarkan dua hal, yaitu semua Entitas dalam sistem dan hubungan antar entitas tersebut.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h2 id=\"block-a8612bc7-9a56-467f-b3ac-d61e31c06b0b\">Kapan perlu Menggambar ERD<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-28b4d0fe-697b-4362-9df2-529db17f7504\">Beberapa hal yang menjadi alasan kenapa menggambar ERD itu perlu diantaranya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-b3ce9573-ac24-469e-8b05-227ff5518dec\">\r\n<li>Mengetahui bagaimana database tersebut bekerja akan sangat membantu., karena mengubah database, baik menambahkan atau mengurangi bukanlah perkara yang sederhana. Menghapus satu database bisa mempengaruhi database lain yang terhubung.<\/li>\r\n<li>Membantu untuk memperlihatkan gambaran secara luas tentang basisdata yang kita kerjakan.&nbsp;<\/li>\r\n<li>Memperlihatkan bagaimana setiap tabel pada database saling terhubung dan kolom dari setiap tabelnya<\/li>\r\n<li>Menjadi blueprint saat kita bekerja dalam sebuah tim sehingga jika ada anggota baru yang bergabung dapat langsung mempelajari desain dari basisdata kita<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>&nbsp;<\/h3>\r\n<h2 id=\"block-23465e10-f6a2-4dd0-9641-7db6f2574043\">Notasi dalam ERD<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-c8091d91-19fc-4751-bee4-61ef5acbe35a\">Terdapat banyak Notasi dan simbol dalam ERD, pada kesempatan kali ini kita akan membahas beberapa notasi atau simbol penting.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-93ed8e80-9789-46df-8b8a-c818d0f8cc1f\">Entitas<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-5def3149-4bd8-4a74-9674-3d3cd929bf13\">Entitas adalah sebuah objek yang merepresentasikan suatu baris data pada tabel. satu entitas akan memiliki karakteristik tersendiri berdasarkan atribut-atribut yang dimiliki. Contohnya pada sebuah database toko online terdapat entitas <em>pelanggan<\/em>, <em>profil<\/em>, <em>barang,<\/em> <em>transaksi<\/em>, dan <em>kategori<\/em>. Pada ERD, sebuah entitas ditunjukan dengan persegi tumpul.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-796653f0-4719-4d02-9f67-aab174519e6c\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/03-an-erd-entity.png\" alt=\"Entity\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-86f7c24f-af3e-47ac-9600-7793536415a1\">Atribut<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p>Atribut adalah kolom-kolom data yang terdapat pada sebuah entitas dan berfungsi untuk mendeskripsikan karakteristik entitas tersebut. Di dalam sebuah entitas biasanya terdapat atribut kunci (<em>primary key<\/em>) yang merupakan pembeda antara satu entitas dengan entitas lainnya. Contohnya pada entitas pelanggan terdapat atribut id_pelanggan, nama, dan email. Setiap atribut dapat kita definisikan tipe data nya. Misalnya adalah Entitas Kelas mungkin memiliki atribut guru, murid, dan pelajaran.<\/p>\r\n<p>Pada saat mengubah ERD konseptual menjadi ERD sebenarnya ada baiknya kita mengecek atribut apa saja yang diperbolehkan pada suatu RDBMS. Misalnya, Oracle menggunakan varchar dimana sqlite menggunakan Text.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-17877f50-4391-4b05-8f6b-f5bb4813d37c\">Contoh dari atribut ditunjukan pada gambar dibawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-c5b02ae3-9515-41fc-861c-37a8b31b24e8\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/04-an-erd-entity-with-entities.png\" alt=\"Entity Attributes\" \/><\/figure>\r\n<p>&nbsp;<\/p>\r\n<h3 id=\"block-86f7c24f-af3e-47ac-9600-7793536415a1\">Kunci\/Key<\/h3>\r\n<p>Atribut Kunci merupakan salah satu cara untuk mengkategorikan atribut khusus pada suatu entitas. Atribut kunci ini biasanya digunakan sebagai dasar untuk menghubungkan (membuat relasi) antara satu entitas dengan entitas yang lain.<\/p>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<p id=\"block-94470acb-1ad8-46cc-ae05-304d9387f33b\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/Keys.png\" alt=\"\" width=\"562\" height=\"321\" \/><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h3>&nbsp;<\/h3>\r\n<h3 id=\"block-86f7c24f-af3e-47ac-9600-7793536415a1\">Kardinalitas<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-530f55ff-b854-4295-abea-b38831030032\">Kardinalitas menggambarkan tentang asosiasi atau hubungan antara dua tabel atau lebih. Relasi kardinalitas yang paling umum digambarkan ada tiga, yaitu hubungan satu - satu, hubungan satu - banyak, atau hubungan banyak - banyak. Pada ERD biasanya relasi digambarkan dengan garis. Setiap satu jenis relasi memiliki jenis garis yang berbeda dengan jenis relasi lainnya.&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":5} --><\/p>\r\n<h4 id=\"block-8c821dc8-86ca-40b2-875a-037a3f3136c5\">Hubungan Satu - Satu<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p>relasi <em>one to one<\/em> berarti satu entitas memiliki hubungan dengan satu entitas lainnya. Relasi ini digambarkan dengan garis seperti berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8178,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8178\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-8.png\" alt=\"\" \/><\/figure>\r\n<p id=\"block-1728ccea-fb9f-4f83-ada5-45c735b7b436\"><!-- \/wp:image -->Misalnya pada kejadian dimana satu orang hanya bisa memiliki satu NIK.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-9281d9cb-54b3-41f1-b090-05fba98a2a3c\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/07-erd-one-to-one-relationship-example.png\" alt=\"One-to-One cardinality example\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":5} --><\/p>\r\n<h4 id=\"block-8c821dc8-86ca-40b2-875a-037a3f3136c5\">Hubungan Satu - Banyak<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p>Relasi <em>One To <\/em>Many yaitu ketika satu entitas memiliki hubungan dengan banyak entitas lainnya. Contohnya dalam hal ini adalah di dalam satu kategori terdapat banyak barang yang terkait dengan kategori tersebut. Sebaliknya, untuk satu barang dapat kita klasifikasikan ke satu kategori saja.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Relasi ini biasanya digambarkan dengan simbol garis seperti berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":8182,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-8182\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-12.png\" alt=\"\" \/>\r\n<figcaption>simbol garis one to many<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --><\/p>\r\n<p id=\"block-61a9405a-43f8-4ce6-b418-ac739a20f300\">Misalnya pada kejadian dimana satu fakultas dapat memiliki banyak murid akan tetapi satu murid hanya bisa terdaftar pada satu fakultas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-da98f2cb-b00d-4f17-b686-ef1b01cf3cc2\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/08-erd-one-to-many-example.png\" alt=\"One-to-Many cardinality example\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":5} --><\/p>\r\n<h4 id=\"block-8c821dc8-86ca-40b2-875a-037a3f3136c5\">Hubungan Banyak - Banyak<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p>Relasi <em>Many To Many<\/em> adalah ketika banyak entitas terhubung dengan banyak entitas lainnya. Contohnya adalah seorang pelanggan dapat membeli banyak barang yang berbeda jenis. Sebaliknya satu jenis barang dapat dibeli oleh banyak pelanggan yang berbeda.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk merepresentasikan hubungan antar dua entitas yang memiliki relasi ini maka dibutuhkan satu entitas tambahan yang biasa disebut dengan <strong>pivot<\/strong>. Dalam kaitannya dengan contoh antara entitas pelanggan dan barang maka entitas penghubungnya yaitu transaksi.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p id=\"block-8d5b7868-6e07-401b-a3cf-b7ba886cb681\">Misalnya pada kejadian dimana satu kelas dapat diikuti oleh banyak mahasiswa dan satu mahasiswa dapat mengikuti banyak kelas,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<p><!-- wp:image {\"id\":8185,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8185\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-14.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada entitas transaksi terdapat dua <em>foreign key<\/em> yaitu pelanggan_id dan barang_id yang terhubung masing-masing ke <em>primary key<\/em> pada entitas pelanggan dan entitas barang.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<h2 id=\"block-0e9e8705-4615-4b3d-b27f-077e973a2c4f\">Contoh ERD<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-e8659d6f-1e38-48ba-9ee7-687efb430203\">Sistem Penyewaan Film<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:image --><\/p>\r\n<figure id=\"block-58b5e1c7-818a-4730-a77d-a3ce026a33c9\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/13-erd-example-movie-rental-system.png\" alt=\"ERD example - Movie Rental System\" \/>\r\n<figcaption>sumber : https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/13-erd-example-movie-rental-system.png<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>&nbsp;<\/h3>\r\n<h2 id=\"block-343001fa-7138-4ee6-8414-dec8d3e09c46\">Menggambar ERD<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p id=\"block-ae07f5a8-91a9-4e54-9d86-8d2ef6e58a1f\">Untuk Menggambar ERD bisa dilakukan menggunakan berbagai macam perangkat lunak yang tersedia di internet. Menggunakan perangkat lunak seperti photoshop atau pun microsoft excel pun dapat dilakukan. salah satu situs yang bisa digunakan untuk melakukan pembuatan ERD secara daring adalah <a href=\"https:\/\/app.diagrams.net\/\">https:\/\/app.diagrams.net\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Saat membuka alamat tersebut kita akan diminta untuk memilih dimana kita akan menyimpan file xml kita. Untuk kesempatan kali ini kita akan menggunakan penyimpanan lokal kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15675,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15675\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu setelahnya kita pilih menu <em>create new diagram<\/em> dan pilih blank diagram.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15676,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15676\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_2.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"align\":\"center\",\"id\":15677,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15677\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_3.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Maka kan muncul jendela seperti pada gambar di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15678,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15678\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_5-1024x519.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jendela tersebut terdiri dari 4 bagian utama,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Header - tempat menyimpan semua menu dan tool yang kita pakai.<\/li>\r\n<li>Sidebar kiri - tempat menyimpan objek yang akan kita masukkan pada diagram<\/li>\r\n<li>Main - Area tengah yang digunakan untuk menggambar diagram kita<\/li>\r\n<li>Sidebar kanan - area yang digunakan untuk mengubah parameter dari diagram atau objek kita.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan mencoba untuk membuat ERD sederhana dengan dua tabel<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Mahasiswa - berisi id, nama, email, password<\/li>\r\n<li>Jurusan - berisi id, nama<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan menggunakan sidebar kiri untuk memilih objek yang akan kita gunakan, kita pilh pada menu Entity Relation dan pilih yang ditandai dengan kotak hijau.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15681,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15681\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_6-1024x510.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita tambahkan dua buah tabel dan ubah nama tabel dan nama kolom kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15683,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15683\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_7.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan membuat sebuah hubungan atau relasi antara dua buah tabel tersebut, relasi yang akan kita bangun berdasar pada hubungan antara PK (Primary Key) dan FK (Foreign Key). Karena kita tahu seorang mahasiswa akan terdaftar dalam satu jurusan maka kita akan membuat kolom FK baru pada tabel mahasiswa yang menghubungkan dengan PK pada tabel jurusan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menambahkan kolom pada tabel kita dapat mengarahkan kursor kita pada kolom yang ingin ditambahkan kolom baru di bawahnya, arahkan ke kanan\/kiri kolom tersebut hingga muncul panah dan tekan panah tersebut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15686,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15686\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_8.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Ubah nama kolomnya menjadi nama yang kita inginkan, disarankan nama kolom FK sama dengan nama kolom PK nya. Lalu sekarang kita akan membuat garis penghubungnya. Pilih pada sidebar kiri dan tambahkan garis one to many di menu <em>Entity Relation<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Hubungkan Many pada mahasiswa dan One pada jurusan. Karena kita tahu seorang mahasiswa hanya dapat memiliki satu jurusan sedangkan satu jurusan dapat memiliki banyak mahasiswa.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15687,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15687\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/erd_10.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Akhirnya kita telah membuat sebuah ER-Diagram sederhana dengan memanfaatkan platform online app.diagram. Setelah selesai kita tinggal melakukan <em>Save<\/em> untuk menyimpan file xml kita pada tempat yang sudah kita tentukan di awal.<\/p>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<h1>&nbsp;<\/h1>\r\n<h1><em>MYSQL<\/em><\/h1>\r\n<!-- wp:image {\"width\":512,\"height\":264} --><!-- \/wp:image -->\r\n<p id=\"block-005df49f-a5a0-46c4-acf5-4d6737e913e0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"005df49f-a5a0-46c4-acf5-4d6737e913e0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">MySQL adalah salah satu basisdata relasional yang paling populer. MySQL merupakan perangkat lunak open source yang didukung langsung oleh oracle, artinya kita dapat langsung menggunakan MySQL dengan gratis.<\/p>\r\n<p id=\"block-b73b7f6b-ed39-4b44-a3cf-a11c5d9c5843\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b73b7f6b-ed39-4b44-a3cf-a11c5d9c5843\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Walaupun begitu, berbeda dengan sqlite, pengguna juga dapat membeli lisensi premium dari Oracle untuk mendapatkan dukungan resmi untuk MySQL.<\/p>\r\n<p id=\"block-e49fa39c-0553-44a1-b68e-fa97cea534d8\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"e49fa39c-0553-44a1-b68e-fa97cea534d8\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">MySQL mendukung berbagai macam sistem operasi, Linux, Windows, dll. MySQL juga sering dipakai saat kita ingin mengembangkan sebuah perangkat lunak berbasis web.<\/p>\r\n<div id=\"block-93c9bebf-68d3-4ff7-80de-77421cd0574c\" class=\"wp-block-spacer block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Spasi\" data-block=\"93c9bebf-68d3-4ff7-80de-77421cd0574c\" data-type=\"core\/spacer\" data-title=\"Spasi\">\r\n<div class=\"components-resizable-box__container block-library-spacer__resize-container\">\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<\/div>\r\n<h2 id=\"block-e62b4241-82ad-4c6c-b3e7-25cc7a89c8c7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"e62b4241-82ad-4c6c-b3e7-25cc7a89c8c7\" data-type=\"core\/heading\" data-title=\"Tajuk\">Instalasi<\/h2>\r\n<p id=\"block-5d1b1830-b991-4585-83fc-3c4af161561d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"5d1b1830-b991-4585-83fc-3c4af161561d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk melakukan instalasi silahkan mengunjungi website resminya<\/p>\r\n<p id=\"block-1fa127f8-2ba9-42a8-9fcd-cc8f2091d4f1\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1fa127f8-2ba9-42a8-9fcd-cc8f2091d4f1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/dev.mysql.com\/downloads\/\">https:\/\/dev.mysql.com\/downloads\/<\/a><\/p>\r\n<p>Lalu pilih MySQL installer for &hellip;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-04561120-2fe5-402a-a8c6-e8a2fb1d729a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"04561120-2fe5-402a-a8c6-e8a2fb1d729a\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<!-- wp:image {\"width\":618,\"height\":296} -->\r\n<figure id=\"block-3fdfd073-7b72-4c9f-94b7-97990fceedb5\" class=\"wp-block-image is-resized\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_1-1024x491.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_1-1024x491.png\" width=\"618\" height=\"296\" \/><\/figure>\r\n<!-- \/wp:image -->\r\n<p id=\"block-102586a2-8f1d-42d2-be4d-d9e045c88f32\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"102586a2-8f1d-42d2-be4d-d9e045c88f32\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pilih file instalasi yang dibutuhkan. Kita bisa memilih antara web installer atau pun yang non web installer.<\/p>\r\n<figure id=\"block-590a21a4-104e-4a9a-8032-1e0f7645ddce\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"590a21a4-104e-4a9a-8032-1e0f7645ddce\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/mysql_install_2.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mysql_install_2.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-06cf6078-fd12-4f77-825b-59c17ba99639\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"06cf6078-fd12-4f77-825b-59c17ba99639\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelah selesai melakukan instalasi silahkan untuk menjalankan file instalasi.<\/p>\r\n<p id=\"block-7e2f86f7-3e36-44e3-a0f3-41c36dcea61b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7e2f86f7-3e36-44e3-a0f3-41c36dcea61b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada menu setup, kita bisa memilih Jenis instalasi,<\/p>\r\n<figure id=\"block-6d0614fd-24bf-47ac-aaf3-f30ba0b8b0df\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"6d0614fd-24bf-47ac-aaf3-f30ba0b8b0df\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_2.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_2.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-e94f5b2d-0c53-4f15-b4c6-ed597859b338\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"e94f5b2d-0c53-4f15-b4c6-ed597859b338\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pilihlah Developer Setup Untuk melakukan instalasi semua package yang dibutuhkan untuk melakukan pengembangan mysql.<\/p>\r\n<p id=\"block-97f36cd6-046b-4b22-8783-8a5ca0fcde14\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"97f36cd6-046b-4b22-8783-8a5ca0fcde14\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelahnya Installer akan melakukan pengecekan dependensi, jika ada syarat yang kurang maka installer dapat memenuhi secara otomatis.<\/p>\r\n<figure id=\"block-c92b5745-5a26-4b17-a22b-40eccf6b93ca\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"c92b5745-5a26-4b17-a22b-40eccf6b93ca\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_3.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_3.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-f8841520-bef1-4106-ada3-3ed6d1d0731b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f8841520-bef1-4106-ada3-3ed6d1d0731b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Klik execute untuk melakukan instalasi requirement otomatis.<\/p>\r\n<p id=\"block-8f420ff3-56d7-4cab-a83a-aa543238db2c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"8f420ff3-56d7-4cab-a83a-aa543238db2c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada menu instalasi klik execute.<\/p>\r\n<p id=\"block-106e20ad-6cd6-4769-acc3-d8c8bbae2b82\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"106e20ad-6cd6-4769-acc3-d8c8bbae2b82\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelah itu kita akan masuk ke Menu Product Configuration<\/p>\r\n<p id=\"block-fc728f31-98fd-4b40-b89e-be4a3dfb0d64\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fc728f31-98fd-4b40-b89e-be4a3dfb0d64\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">yang pertama kita setting adalah jenis config yang kita akan gunakan untuk komputer kita. Terdapat tiga jenis konfigurasi utama, development, server, dan user.<\/p>\r\n<figure id=\"block-a99e9e0b-e6bd-47bf-be1c-85324bd51f1b\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"a99e9e0b-e6bd-47bf-be1c-85324bd51f1b\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_4.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_4.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-9f33e4fc-b570-459e-969f-a42642170e9d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"9f33e4fc-b570-459e-969f-a42642170e9d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelah itu kita akan dihadapkan pada menu autentikasi. Persiapkan password yang akan menjadi kunci untuk akun root kita.<\/p>\r\n<figure id=\"block-a24462be-f023-46fa-9ac2-d30c51c0e63d\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"a24462be-f023-46fa-9ac2-d30c51c0e63d\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_5.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_5.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<figure id=\"block-5e64bad1-515a-4a89-acd0-9ec93513009e\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"5e64bad1-515a-4a89-acd0-9ec93513009e\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_6-1024x662.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_6-1024x662.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p>Setelah itu kita tinggal mengkonfigurasikan MySQL kita sebagai window service dan melakukan pengecekan pada server kita.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-05fe2ee4-71b5-4ed3-b800-6d97de526e58\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"05fe2ee4-71b5-4ed3-b800-6d97de526e58\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<figure id=\"block-896d5fde-50d6-4795-8b56-624d213265be\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"896d5fde-50d6-4795-8b56-624d213265be\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_7.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_7.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<figure id=\"block-044201e6-ff22-4529-a56f-0c59a827d300\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"044201e6-ff22-4529-a56f-0c59a827d300\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_10.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_10.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-04866271-d5d5-4872-b21c-6625ed9fc5c4\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"04866271-d5d5-4872-b21c-6625ed9fc5c4\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jika koneksi berhasil maka langkah pertama kita untuk melakukan instalasi MySQL telah berhasil.<\/p>\r\n<div id=\"block-dfe71383-5085-490f-8324-9cfb689367a3\" class=\"wp-block-spacer block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Spasi\" data-block=\"dfe71383-5085-490f-8324-9cfb689367a3\" data-type=\"core\/spacer\" data-title=\"Spasi\">\r\n<div class=\"components-resizable-box__container block-library-spacer__resize-container\">\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<\/div>\r\n<h1 id=\"block-08e78d53-4ebd-4721-82e7-688d5fef01e0\"><span style=\"color: #ecf0f1; background-color: #3598db;\">MySQL Workbench<\/span><\/h1>\r\n<p id=\"block-35b60098-c5ad-442f-83cf-a484594ae744\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"35b60098-c5ad-442f-83cf-a484594ae744\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Salah satu GUI yang bisa kita gunakan untuk melihat data pada basisdata mysql adalah MySQL Workbench. Secara default pada saat kita melakukan instalasi mysql maka mysql workbench juga akan ikut terinstall, akan tetapi jika kita mendapatkan kasus dimana kita belum memiliki mysql workbench maka kita dapat melakukan instalasi melalui situs resmi mysql.<\/p>\r\n<p id=\"block-cb4790b1-1ed0-4163-9f23-09234a26af9c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"cb4790b1-1ed0-4163-9f23-09234a26af9c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/www.mysql.com\/products\/workbench\/\">https:\/\/www.mysql.com\/products\/workbench\/<\/a><\/p>\r\n<p>Untuk membuat koneksi dengan mesin basis data, kita dapat memilih mesin yang telah kita buat saat instalasi atau membuat baru dengan menekan tombol &ldquo;plus&rdquo;.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-7563fcbd-b47f-4385-86c4-a23d658532f4\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7563fcbd-b47f-4385-86c4-a23d658532f4\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<figure id=\"block-f57f949a-48fc-47fc-94d8-e57a2fb51f9f\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"f57f949a-48fc-47fc-94d8-e57a2fb51f9f\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_12-1024x575.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_12-1024x575.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-cd574549-97d7-4b27-a776-cdc7cb149f51\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"cd574549-97d7-4b27-a776-cdc7cb149f51\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk membuat database baru kita menggunakan menu toolbar &ldquo;create a new schema in the connected server&rdquo;<\/p>\r\n<figure id=\"block-146ac501-351a-4896-bfb6-bc4cd8bcb731\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"146ac501-351a-4896-bfb6-bc4cd8bcb731\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_13-1024x635.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_13-1024x635.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-67f72792-5b22-4439-b252-7374fa851c07\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"67f72792-5b22-4439-b252-7374fa851c07\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kalian bisa mengakses schema pada sidebar schema di sebelah kiri.<\/p>\r\n<figure id=\"block-2f9982d6-46f2-4ccb-a7c9-3e66731c363e\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"2f9982d6-46f2-4ccb-a7c9-3e66731c363e\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_14-1024x159.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_14-1024x159.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-ed7360b7-6822-4549-b1a8-4b9888d9f119\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"ed7360b7-6822-4549-b1a8-4b9888d9f119\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk membuat sebuah tabel pada schema tersebut kita dapat menggunakan menu &ldquo;create a new table in the active schema in connected server&rdquo;.<\/p>\r\n<figure id=\"block-9c947627-a7be-4e16-806b-c3bb8f83b9e3\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"9c947627-a7be-4e16-806b-c3bb8f83b9e3\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_15-1024x577.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_15-1024x577.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-8edc0581-e09f-4ac9-947e-6ec1c45e0fe3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"8edc0581-e09f-4ac9-947e-6ec1c45e0fe3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Tuliskan nama tabel kalian, pastikan schema yang dimaksud benar. Lalu klik apply.<\/p>\r\n<p id=\"block-4e6b8652-af5f-409c-8141-7933fabb8d1d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"4e6b8652-af5f-409c-8141-7933fabb8d1d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kolom bisa kalian tambahkan pada jendela &ldquo;Apply SQL Script to Database&rdquo;<\/p>\r\n<figure id=\"block-ef0cc234-0120-4f9e-82aa-45a890955bca\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"ef0cc234-0120-4f9e-82aa-45a890955bca\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_16-1024x575.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah my_sql_16-1024x575.png\" \/><\/div>\r\n<\/figure>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-86b09615-3bc9-4aec-9d28-f9b68626ea09\"><strong>Sumber bacaan eksternal:<\/strong><\/p>\r\n<p><a href=\"https:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/windows-installation.html\">https:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/windows-installation.html<\/a><\/p>\r\n<p><a href=\"https:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/linux-installation.html\">https:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/linux-installation.html<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-12abe8be-d11a-4c17-a0d5-4b927e5a3278\"><strong>Video Eksternal:<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-484db0b1-2ac5-4cb1-b039-1a63ee6d2c30\"><a href=\"https:\/\/www.youtube.com\/watch?v=1KJpXYQ6T5w\" target=\"_blank\" rel=\"noreferrer noopener\">Apa itu SQL?<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-3b5ace7f-f180-41c4-aea5-11cfa36226cd\"><a href=\"https:\/\/www.youtube.com\/watch?v=wDJZjJJFEV8\" target=\"_blank\" rel=\"noreferrer noopener\">Penjelasan Basis Data ERD - Mas Nur Hasan<\/a><\/p>","waktu_publish":"2021-09-29 08:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-28 23:51:44","waktu_publish_formatted":" Rabu, 29 September 2021. 08:00:00 WIB."},{"id":1114,"uuid":"47379ab4-2be5-4cb5-a15c-cb7b86800371","author_user_id":11253,"materi_section_id":325,"judul":"MySQL Manipulasi Data","permalink":"mysql-manipulasi-data","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada Manipulasi data kali ini kita akan belajar 4 teknik utama, yaitu memasukkan data, mengubah data, menghapus data, dan melihat data yang kita miliki. Pada kesempatan kali ini kita akan belajar query yang akan digunakan bersama dengan bahasa pemograman backend kita (python) nanti. Kita akan membaginya ke dalam dua tahap, tahap pertama adalah persiapan, dimana kita akan mempersiapkan database kita dan menggunakan cmd\/terminal\/mysql cmd untuk bekerja, dan yang kedua saat kita belajar tentang manipulasinya maka kita akan menggunakan mysql workbench yang telah kita install sebelumnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Persiapan - Database<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada tahap persiapan database kita dapat menggunakan cmd atau mysql cmd untuk bekerja. untuk menggunakan cmd kita hanya perlu mengetikan pada cmd kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mysql -u root -p<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":15515,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15515\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_17-1024x499.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita hanya perlu memasukkan password dari database kita. Kita akan coba menjelaskan maksud dari setiap parameternya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>mysql - paramater yang digunakan untuk memanggil program yang kita miliki, dalam hal ini mysql<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>-u - parameter yang digunakan untuk menginisiasi user kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>root - nama user kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>-p - parameter yang digunakan untuk menginisiasi password kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika menggunakan cmd\/terminal dirasa lebih sulit kita bisa dengan lebih mudah menggunakan mysql cmd, cari pada bagian search program untuk window dengan mengetikan mysql, lalu pilih yang mysql command line. Setelah programnya terbuka kita hanya perlu memasukkan password secara langsung.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15516,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15516\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_18-1024x488.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita akan membuat database yang akan kita gunakan, kita akan membuat sebuah basisdata sederhana terlebih dahulu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk membuat basisdata kita dapat menggunakan query<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>CREATE DATABASE [NAMA BASISDATA];<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan mencoba untuk membuat basisdata sebuah rental film dengan nama RENTALFILM.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>CREATE DATABASE RENTALFILM;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untul melihat basisdata yang sudah kita buat maka kita bisa menggunakan query.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SHOW DATABASES;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":15519,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15519\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_19.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menggunakan basisdata yang sudah ada kita bisa menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>USE [Nama Basisdata];<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk basisdata kita, kita menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>USE rentalfilm;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>setelah berhasil membuat basisdata, sekarang saatnya kita membuat tabel. Jika diibaratkan, ini sama seperti setelah kita membuat file excel maka kita harus membuat worksheet dimana data-data kita simpan. Untuk membuat tabel maka kita perlu mendefinisikan nama tabel, nama kolom, tipe data kolom tersebut, dan opsi untuk kolom tersebut (opsional).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Opsi yang dimaksud adalah tambahan karakteristik dari kolom tersebut, karakteristik yang bisa kita gunakan ada beberapa macam, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>AUTOINCREMENT - data pada kolom ini akan otomatis ditambahkan oleh sistem, jadi kita tidak perlu menambahkan secara manual.<\/li>\r\n<li>PRIMARY KEY - Menentukan apakah kolom tersebut akan menyimpan data primary key atau tidak.<\/li>\r\n<li>NOT NULL - Saat kita memasukkan data pada kolom ini maka tidak diperbolehkan untuk kosong.<\/li>\r\n<li>DEFAULT - Untuk menentukan nilai default dari kolom ini.<\/li>\r\n<li>UNIQUE - Menandakan bahwa nilai pada kolom ini tidak boleh sama.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>query yang akan kita gunakan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>CREATE TABLE [nama tabel] ([nama kolom_1] [tipe data kolom_1], ..., [nama kolom_n] [tipe data kolom_n])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kali ini kita akan mencoba untuk membuat tabel customers dengan kolom berupa id (int, Autoincrement, primary key), namaid (varchar, not null, unique), namalengkap (varchar, not null), email (varchar, not null, unique).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>CREATE TABLE customers (\r\n    ID int AUTO_INCREMENT PRIMARY KEY,\r\n    NAMAID varchar(255) NOT NULL,\r\n    NAMALENGKAP varchar(255) NOT NULL,\r\n    EMAIL varchar(255) NOT NULL,\r\n    UNIQUE (NAMAID, EMAIL)\r\n);<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menampilkan tabel kita, kita bisa menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SHOW TABLES;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":15521,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15521\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_20.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Mengetahui detail dari tabel kita, kita bisa menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>DESCRIBE [nama tabel];<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kasus kita kita menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>DESCRIBE customers;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":15522,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15522\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_21.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Memasukkan Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Mengerjakan Query setelah ini kita akan menggunakan mysql workbench. Jadi pertama bukalah mysql workbench kita dan pilih server basisdata kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15644,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15644\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_22-1024x574.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu pilihlah SCHEMAS (Basisdata) yang ingin kita manipulasi pada sidebar sebelah kiri, lalu pilih <em>create a new sql tab<\/em> pada toolbars paling kiri.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15645,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15645\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_23-1024x619.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Insert satu data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Query untuk melakukan insert data tunggal sederhana adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>INSERT INTO table(c1,c2,...)\r\nVALUES (v1,v2,...);<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita ingin memasukkan data ke dalam basisdata rentalfilm dan tabel customers. Data yang akan kita masukkan adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>id = Astrid,\r\nfullname = Astrid Gruber,\r\nemail = astrid.gruber@apple.at<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Maka query kita akan menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>INSERT INTO customers (NAMAID, NAMALENGKAP, EMAIL) \r\nvalues (\"Astrid\", \"Astrid Gruber\", \"astrid.gruber@apple.at\")\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menjalankan kode kita kita gunakan menu ketiga pada sql toolbar, ditandai dengan kotak biru.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15647,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15647\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_24-1-1024x235.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Melihat hasil kerja kita kita hanya perlu memilih tabel yang ingin kita lihat dan tekan icon pada kotak jingga.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15648,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15648\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_25-1024x245.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita lihat pada gambar di bawah ini, data yang kita ingin kan telah masuk kedalam tabel customers.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15649,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15649\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_26.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Insert banyak data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memasukkan banyak data query yang kita gunakan adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>INSERT INTO table(kolom1,kolom2,...)\r\nVALUES \r\n   (value1_1,value1_2,...),\r\n   (value2_1,value2_2,...),\r\n    ...\r\n   (valuen_1,valuen_2,...)\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan jika kita ingin memasukkan data seperti di bawah ini kedalam tabel customers,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Fernanda,Fernanda Ramos,fernadaramos4@uol.com.br\r\nMark,Mark Philips,mphilips12@shaw.ca\r\nJennifer,Jennifer Peterson,jenniferp@rogers.ca\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Maka query kita akan menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>INSERT INTO customers (NAMAID, NAMALENGKAP, EMAIL) \r\nvalues \r\n(\"Fernanda\",\"Fernanda Ramos\",\"fernadaramos4@uol.com.br\"),\r\n(\"Mark\",\"Mark Philips\",\"mphilips12@shaw.ca\"),\r\n(\"Jennifer\",\"Jennifer Peterson\",\"jenniferp@rogers.ca\")\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dan hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15651,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15651\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_27.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Mengubah Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengubah data yang telah ada kita dapat menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>UPDATE [LOW_PRIORITY] [IGNORE] table_name \r\nSET \r\n    column_name1 = expr1,\r\n    column_name2 = expr2,\r\n    ...\r\nWHERE\r\n    condition;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>UPDATE merupakan kata kunci yang digunakan untuk mengubah data yang sudah ada. Terdapat beberapa parameter opsional yang dapat kita gunakan setelah update<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Low Priority - akan membuat query update dijalankan hanya jika tidak ada kegiatan <em>reading table<\/em> (melihat isi tabel). Pada defaultnya jika ada kegiatan update maka akan didahulukan daripada kegiataan pembacaan tabel.<\/li>\r\n<li>Ignore - akan mengacuhkan bila terjadi error saat kita sedang mengubah data. Error biasanya terjadi misalnya karena adanya data yang sama yang akan dimasukkan pada tabel yang memiliki parameter <em>unique <\/em> atau <em>primary key<\/em>. Jika menggunakan ignore maka data yang error tadi akan dilewati tetapi data lain tetap dijalankan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>SET digunakan untuk untuk memberitahukan kolom mana yang akan kita ubah dan diubah dengan nilai apa.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>WHERE digunakan sebagai parameter syarat dari perubahan kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita akan menggunakan data pada tabel customers dan ingin mengganti Nama Jennifer Peterson menjadi Jennifer Lauren dan emailnya menjadi jenniferl@rogers.ca<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Maka querynya menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>UPDATE customers \r\nSET \r\n    NAMALENGKAP = \"Jennifer Lauren\",\r\n    EMAIL = \"jenniferl@rogers.ca\"\r\nWHERE\r\n    ID = 4\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15654,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15654\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_28.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Menghapus Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menghapus data kita menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>DELETE FROM table_name\r\nWHERE condition\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita ingin menghapus Data Jennifer. Kita ketahui pada id jennifer adalah 4, maka query kita menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>DELETE FROM customers\r\nWHERE ID = 4\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasilnya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15655,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15655\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/my_sql_29.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Melihat Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kebutuhan sub bagian ini kita akan menggunakan basisdata yang berbeda untuk digunakan kita akan menggunakan basis data di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/sp.mysqltutorial.org\/wp-content\/uploads\/2018\/03\/mysqlsampledatabase.zip\" target=\"_blank\" rel=\"noreferrer noopener\">sample-database<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>basis data tersebut berasal dari <a href=\"https:\/\/www.mysqltutorial.org\/\" target=\"_blank\" rel=\"noreferrer noopener\">mysqltutorial.org<\/a>, silahkan berkunjung untuk mencari berbagai referensi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>ER-Diagram dari basis data tersebut dapat dilihat pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15657,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15657\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/read_sql_1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memasukkan basis data kita kedalam server yang kita miliki kita akan menggunakan mysql workbench. Pertama kita ekstrak sample-database yang telah kita unduh, silahkan pilih tempat ekstrak yang paling mudah untuk dicari.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita buka menu file pada mysql workbench dan pilih <em>open sql script<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15659,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15659\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/read_sql_2-1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu pilih file sql yang telah berhasil kita ekstrak. Nanti akan muncul jendela seperti pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15660,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15660\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/read_sql_3-1024x419.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jalankan seperti pada query-query sebelumnya, maka kalian akan mendapatkan basis data baru pada sidebar, yaitu classicmodels.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Simple Select<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Struktur query yang digunakan untuk melihat data yang kita miliki adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SELECT select_list\r\nFROM table_name\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita ingin melihat data pada tabel customers pada basis data classicmodels. kita siapkan dulu jendela query kita seperti saat mengerjakan query sebelumnya. Lalu kita ketik query kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SELECT * \r\nFROM customers\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15664,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15664\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/read_sql_4-1024x192.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>tanda bintang setelah select melambangkan kita memilih semua kolom pada tabel tersebut. Jika kita ingin memlih hanya dua kolom, misalkan customerNumber dan customerName maka query kita menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SELECT customerNumber, customerName \r\nFROM customers\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasilnya menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15665,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15665\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/read_sql_5.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Ternyata nama yang ditampilkan sebagai hasil tidak enak dipandang mata, jika kita ingin mengubah nama dari kolom kita kita bisa menggunakan alias dengan <em>AS<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SELECT customerNumber as id, customerName as name\r\nFROM customers\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":15666,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15666\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/read_sql_6.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>&nbsp;<\/h3>\r\n<h3>Select - Where<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita hanya ingin mencari data tertentu dan tidak ingin menampilkan semua data maka kita bisa menggunakan klausa <em>WHERE<\/em>. struktur query menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SELECT \r\n    select_list\r\nFROM\r\n    table_name\r\nWHERE\r\n    search_condition\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan pada query di atas kita ingin mencari untuk customerNumber lebih besar dari 125 dan lebih kecil dari 150. maka query kita menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>SELECT customerNumber as id, customerName as name\r\nFROM customers\r\nWHERE \r\n\t125 &lt; customerNumber and customerNumber &lt; 150\r\n;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":15669,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15669\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/read_sql_7.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada klausa where di atas kita dapat memasukkan operator. beberapa contoh operator yang bisa kita gunakan adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>OR - jika kita memiliki dua statement atau lebih dan ingin mencari dengan salah satu statement benar.<\/li>\r\n<li>AND - jika kita memiliki dua statement atau lebih dan ingin mencari jika dan hanya jika semua statement bernilai benar.<\/li>\r\n<li>BETWEEN - Jika kita ingin mencari nilai diantara suatu range.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Query di atas sebenarnya bisa disederhanakan dengan menggunakan operator between.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>WHERE customerNumber BETWEEN 125 AND 150<br \/><br \/><\/code><\/pre>\r\n<h3><!-- wp:heading {\"level\":3} --><\/h3>\r\n<h3>&nbsp;<\/h3>\r\n<h3>Select - Join<\/h3>\r\n<h3><!-- \/wp:heading --> <!-- wp:paragraph --><\/h3>\r\n<p>Seperti yang sudah kita ketahui sebelumnya bahwa tabel-tabel di dalam sql seringkali memiliki relasi satu dan lainnya. Ini membuat hanya mengetahui nilai satu tabel saja tidaklah lengkap untuk mengerti sistem secara keseluruhan.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>Kita ambil contoh pada schema <em>classicmodels<\/em>. Dengan membaca tabel user customers dan orders kita tidak tidak dapat menarik kesimpulan secara cepat dari data tersebut. Untuk hal seperti inilah dimana kita menggunakan PK dan FK untuk melakukan Join.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>Seperti pada materi tentang struktur data set terdahulu, Join dilakukan untuk menyatukan dua atau lebih tabel dengan korespondensi tertentu, pada kasus sql adalah FK dan PK.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>Terdapat 4 macam Join yang dikenal pada mysql,<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:list --><\/h3>\r\n<ul>\r\n<li>Inner Join,<\/li>\r\n<li>Left Join,<\/li>\r\n<li>Right Join, dan<\/li>\r\n<li>Cross Join<\/li>\r\n<\/ul>\r\n<h3><!-- \/wp:list --> <!-- wp:paragraph --><\/h3>\r\n<p>Pada kesempatan kali ini kita akan mencoba untuk menggunakan inner join untuk mendapatkan insight dari basisdata yang kita miliki.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>Query Join secara umum adalah,<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:code --><\/h3>\r\n<pre class=\"wp-block-code\"><code>SELECT column_list\r\nFROM table_1\r\nINNER JOIN table_2 ON join_condition;<\/code><\/pre>\r\n<h3><!-- \/wp:code --> <!-- wp:paragraph --><\/h3>\r\n<p>Sekarang kita akan mencoba untuk melakukan studi kasus, kita akan melakukan <em>data mining<\/em> terhadap tabel <em>order<\/em>. pertama lihat terlebih dahulu data pada tabel order.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:code --><\/h3>\r\n<pre class=\"wp-block-code\"><code>select * \r\nfrom orders\r\nLimit 10\r\n;<\/code><\/pre>\r\n<h3><!-- \/wp:code --> <!-- wp:image {\"id\":15736,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/h3>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15736\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/read_sql_8.png\" alt=\"\" \/><\/figure>\r\n<h3><!-- \/wp:image --> <!-- wp:paragraph --><\/h3>\r\n<p>Limit digunakan untuk membatasi hasil yang diambil.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>Seperti yang terlihat, data pada orders kurang bisa menjelaskan apapun. Akan tetapi, ternyata tabel ini tersambung dengan table customers pada kolom CustomerNumber. Maka dari itu kita coba gunakan join pada tabel tersebut.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:code --><\/h3>\r\n<pre class=\"wp-block-code\"><code>select * \r\nfrom orders a\r\ninner join customers b on a.customerNumber = b.customerNumber\r\nLimit 10\r\n;<\/code><\/pre>\r\n<h3><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":15737,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/h3>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15737\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/read_sql_9-1024x243.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<h3><!-- \/wp:image --> <!-- wp:paragraph --><\/h3>\r\n<p>Kita berhasil menggabungkan kedua tabel. a dan b digunakan sebagai alias untuk kedua tabel. Kita akan mencoba mengambil hanya beberapa kolom.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>orders<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:list --><\/h3>\r\n<ul>\r\n<li>orderDate<\/li>\r\n<li>orderNumber<\/li>\r\n<\/ul>\r\n<h3><!-- \/wp:list --> <!-- wp:paragraph --><\/h3>\r\n<p>customers<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:list --><\/h3>\r\n<ul>\r\n<li>customerName<\/li>\r\n<li>country<\/li>\r\n<\/ul>\r\n<h3><!-- \/wp:list --> <!-- wp:paragraph --><\/h3>\r\n<p>Jika melihat pada ER-Diagram, kita tahu bahwa orders terhubung dengan orderdetails. orderNumber pada orders menjadi FK pada orderdetails. kita akan coba hubungkan dan ambil kolom productCode dan quantityOrdered.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>Kita akan mencari untuk setiap orang yang tinggal di negara Spanyol dan America.<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h3>\r\n<p>Query yang akan kita tulis dari hasil penjelasan di atas adalah<\/p>\r\n<h3><!-- \/wp:paragraph --> <!-- wp:code --><\/h3>\r\n<pre class=\"wp-block-code\"><code>select a.orderNumber, a.orderDate, b.customerName, b.country, c.productCode, c.quantityOrdered\r\nfrom orders a\r\ninner join customers b on a.customerNumber = b.customerNumber\r\ninner join orderdetails c on a.orderNumber = c.orderNumber\r\nwhere b.country in (\"Spain\", \"USA\")\r\n;<\/code><\/pre>\r\n<h3><!-- \/wp:code --> <!-- wp:image {\"id\":15741,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/h3>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15741\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/read_sql_10.png\" alt=\"\" \/><\/figure>\r\n<h3><!-- \/wp:image --> <!-- wp:paragraph --><\/h3>\r\n<p>Akhirnya kita bisa memisahkan pembeli yang berasal dari dua negara dan melihat jumlah pembelian beserta nama mereka.<\/p>\r\n<h3><!-- \/wp:paragraph --><\/h3>\r\n<h2>Pustaka Alternatif<\/h2>\r\n<p><a href=\"https:\/\/www.w3schools.com\/sql\/\">https:\/\/www.w3schools.com\/sql\/<\/a><\/p>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/sql\/\">https:\/\/www.tutorialspoint.com\/sql\/<\/a><\/p>\r\n<p><a href=\"https:\/\/www.w3schools.com\/sql\/sql_drop_db.asp\">menghapus database<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=eNqBtR-swu8\">Tutorial SQL by Ngodingpintar [dengan phpmyadmin]<\/a><\/p>\r\n<p>*Untuk video di atas silahkan melihat terkait struktur query yang digunakan. lalu implementasukan pada mysql workbench.<\/p>\r\n<pre class=\"wp-block-code\"><code><\/code><\/pre>\r\n<p><!-- \/wp:code --><\/p>","waktu_publish":"2021-09-30 08:00:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:39:18","waktu_publish_formatted":" Kamis, 30 September 2021. 08:00:00 WIB."},{"id":1115,"uuid":"bfe4a607-6914-4105-a9f9-84c5374c536a","author_user_id":11253,"materi_section_id":325,"judul":"NoSQL & MongoDB","permalink":"nosql-mongodb","konten":"<div class=\"edit-post-visual-editor__post-title-wrapper\">\r\n<div class=\"wp-block editor-post-title editor-post-title__block\">NoSQL memiliki arti Not Only SQL. RDBMS (SQL) pada umumnya menggunakan query sql untuk menyimpan dan melakukan pengambilan data. Akan tetapi, NoSQL dapat menyimpan data dalam berbagai bentuk, baik terstruktur, semi terstruktur, maupn yang tidak terstruktur. Basis data NoSQL termasuk pada Non-Relational Data Management System, tidak adanya relasi langsung antara datanya, tidak memerlukan schema yang tetap, dan lebih mudah untuk melakukan <em>scaling<\/em> pada sistem.<\/div>\r\n<\/div>\r\n<div>\r\n<div class=\"block-editor-block-list__layout is-root-container\">\r\n<p id=\"block-2484ea90-0cc3-4868-a91a-1c97ab5e9268\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2484ea90-0cc3-4868-a91a-1c97ab5e9268\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Beberapa perbedaan SQL dan NoSQL diantaranya:<\/p>\r\n<ul id=\"block-c48efe38-6aac-470d-bcaf-f37486b74e94\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"c48efe38-6aac-470d-bcaf-f37486b74e94\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>SQL adalah basisdata relasional sedangkan NoSQL tidak relational.<\/li>\r\n<li>SQL menggunakan query yang terstruktur dan memiliki schema yang disiapkan terlebih dahulu sedangkan NoSQL tidak memiliki schema tertentu sehingga lebih dinamis dalam bentuk data.<\/li>\r\n<li>Pengembangan SQL biasanya secara vertikal, sedangkan NoSQL lebih ke arah horizontal.<\/li>\r\n<li>SQL berbasis pada tabel, sedangkan NoSQL bisa memiliki banyak bentuk misalnya pasangan key-value, dokumen, ataupun graph.<\/li>\r\n<li>SQL lebih baik untuk bertransaksi dengan banyak baris, sedangkan NoSQL lebih baik untuk transaksi tak berstruktur seperti JSON.<\/li>\r\n<\/ul>\r\n<p id=\"block-d57389b7-236b-4a03-b9de-daa034e168e1\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d57389b7-236b-4a03-b9de-daa034e168e1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Salah satu alasan kenapa NoSQL menarik ada pada poin 3, yaitu <em>scalibility<\/em> atau kemampuan untuk dikembangkan.<\/p>\r\n<p id=\"block-c5fb6243-bcb5-462d-8271-3d46f5df2a18\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c5fb6243-bcb5-462d-8271-3d46f5df2a18\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Bila dilakukan pemisalan sebagai sebuah bangunan hotel, pengembangan vertikal artinya pengembangan dengan melakukan penambahan tinggi dan besar dari bangunan hotel tersebut. Lebih mudah dari sisi pengurusan dan manajemen akan tetapi membutuhkan biaya dan teknik yang tinggi semakin besar dan tinggi pembangunannya.<\/p>\r\n<figure id=\"block-b28f7e05-2b91-467e-bae7-726dddb435c9\" class=\"wp-block-image block-editor-block-list__block wp-block is-resized size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"b28f7e05-2b91-467e-bae7-726dddb435c9\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/scaling_1-1024x576.jpg\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah scaling_1-1024x576.jpg\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-33343a78-5166-4a87-86a4-0069c29ff37f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"33343a78-5166-4a87-86a4-0069c29ff37f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pengembangan Horizontal merupakan pengembangan dengan menambah jumlah Hotel. Lebih mudah dari sisi pengembangan akan tetapi terkait sisi manajemen hotel akan lebih sulit semakin banyak hotelnya.<\/p>\r\n<p id=\"block-354ac493-657e-4526-88c4-3b4bdc553a3a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"354ac493-657e-4526-88c4-3b4bdc553a3a\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pengembangan satu server SQL dilakukan dengan menambah kemampuan dasar servernya (dalam hal hotel adalah pondasinya), seperti RAM, CPU, dan SSD. Dan seperti yang kita ketahui, adakan ada batasnya terkait hal tersebut.<\/p>\r\n<p id=\"block-74bdb7ba-01f7-4904-9f50-bf2feae10f6d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"74bdb7ba-01f7-4904-9f50-bf2feae10f6d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pengembangan NoSQL sesederhana dengan menambah jumlah dari servernya, Karena data yang tidak terstruktur dari NoSQL lebih mudah dipecah daripada data berschema dan berelasi seperti SQL.<\/p>\r\n<h2 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"c30b7c90-ad6b-4562-b9b5-38172d0dbd2d\" data-type=\"core\/heading\" data-title=\"Tajuk\">&nbsp;<\/h2>\r\n<h2 id=\"block-c30b7c90-ad6b-4562-b9b5-38172d0dbd2d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"c30b7c90-ad6b-4562-b9b5-38172d0dbd2d\" data-type=\"core\/heading\" data-title=\"Tajuk\">Tipe - Tipe NoSQL<\/h2>\r\n<p id=\"block-415855ad-e0a3-40b0-b84c-f36994c44004\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"415855ad-e0a3-40b0-b84c-f36994c44004\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">secara garis besar, basisdata NoSQL dibagi kedalam 4 kategori utama.<\/p>\r\n<ul id=\"block-49a43df3-745a-41e2-a703-bb71f9c16b28\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"49a43df3-745a-41e2-a703-bb71f9c16b28\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Pasangan Key - Value<\/li>\r\n<li>Berbasis Dokumen<\/li>\r\n<li>Berbasis Graph<\/li>\r\n<li>Berbasis Tabular<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<figure id=\"block-a6c3ab35-a2fc-4160-b2f3-6addb1a9351e\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"a6c3ab35-a2fc-4160-b2f3-6addb1a9351e\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/sql-and-nosql-1024x499.jpg\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah sql-and-nosql-1024x499.jpg\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<figcaption class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Tulis penjelasan...\">sumber : https:\/\/www.digitalconnectmag.com<\/figcaption>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h1 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"6cd82c60-5157-42bb-bffc-1bca2f44e9c6\" data-type=\"core\/heading\" data-title=\"Tajuk\">&nbsp;<\/h1>\r\n<h1 id=\"block-6cd82c60-5157-42bb-bffc-1bca2f44e9c6\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"6cd82c60-5157-42bb-bffc-1bca2f44e9c6\" data-type=\"core\/heading\" data-title=\"Tajuk\">MongoDB<\/h1>\r\n<p id=\"block-f4698731-ffed-464c-8826-ac60d7299eb1\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f4698731-ffed-464c-8826-ac60d7299eb1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">MongoDB adalah basisdata NoSQL yang berbasis pada dokumen. MongoDB menyimpan datanya dalam bentuk dokumen yang mirip dengan JSON dan tentu saja tidak perlu schema. Jadi satu dokumen dan dokumen yang lain bisa memiliki struktur yang berbeda. Pada pelatihan ini <strong>M<\/strong><strong>ongoDB<\/strong> yang dipakai adalah <strong>versi 4.4<\/strong><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f4698731-ffed-464c-8826-ac60d7299eb1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<h2 id=\"block-b6208f58-ce4f-4e56-ba11-eaf4a6d7c319\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"b6208f58-ce4f-4e56-ba11-eaf4a6d7c319\" data-type=\"core\/heading\" data-title=\"Tajuk\">Instalasi MongoDB<\/h2>\r\n<p id=\"block-6b99b737-02f5-413a-8fe3-97e66c68f499\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6b99b737-02f5-413a-8fe3-97e66c68f499\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk melakukan instalasi silahkan mengunjungi website resminya.<\/p>\r\n<p id=\"block-3205054d-65c5-45d9-9c77-5c6e31a2e2ad\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3205054d-65c5-45d9-9c77-5c6e31a2e2ad\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/www.mongodb.com\/try\/download\/community\">https:\/\/www.mongodb.com\/try\/download\/community<\/a><\/p>\r\n<figure id=\"block-b3e06a0b-db76-4634-b5e8-7ef6193ba8ef\" class=\"wp-block-image block-editor-block-list__block wp-block is-resized size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"b3e06a0b-db76-4634-b5e8-7ef6193ba8ef\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/install_1-1024x402.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah install_1-1024x402.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-ebadb1f1-713c-4c9c-95df-55fa56b17631\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"ebadb1f1-713c-4c9c-95df-55fa56b17631\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelah selesai melakukan instalasi silahkan untuk menjalankan file instalasi. Pilihlah menu complete untuk saat ini.<\/p>\r\n<figure id=\"block-e109992f-500a-4088-ba96-d6d39adb0dc5\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"e109992f-500a-4088-ba96-d6d39adb0dc5\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/install_2.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah install_2.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-7ff90122-206f-4d8e-9bf6-1845ee82bedf\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7ff90122-206f-4d8e-9bf6-1845ee82bedf\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Lanjutkan instalasi. Pada menu konfigurasi silahkan pilih <em>install mongod as a service<\/em> agar kita lebih mudah untuk mengelola server kita. Pilih <em>run service as Network Service User<\/em>.<\/p>\r\n<figure id=\"block-8920d12e-26d9-42d6-a61c-55f523531b50\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"8920d12e-26d9-42d6-a61c-55f523531b50\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/install_3.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah install_3.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-2b92d530-708c-4593-83f7-86cd2da9895f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b92d530-708c-4593-83f7-86cd2da9895f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada menu mongoDB Compass, lakukan instalasi. MongoDB Compass merupakan GUI untuk mongoDB, sama seperti MySQL Workbench untuk MySQL.<\/p>\r\n<figure id=\"block-dda6e0c4-51a5-4641-8140-6bd971e0b0de\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"dda6e0c4-51a5-4641-8140-6bd971e0b0de\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/install_4.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah install_4.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-ed0d4718-5039-4266-879d-0458c9cbce48\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"ed0d4718-5039-4266-879d-0458c9cbce48\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelah selesai instalasi mongodb, silahkan tutup jendela instalasi. Untuk mongodb compass akan terlihat tampilan seperti di bawah ini.<\/p>\r\n<figure id=\"block-c396fc9b-c494-4a8f-be5c-3b7a5ef2e7f4\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"c396fc9b-c494-4a8f-be5c-3b7a5ef2e7f4\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/install_5-1024x612.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah install_5-1024x612.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-123f7eaa-a31d-46aa-8ced-bb1ba393f97f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"123f7eaa-a31d-46aa-8ced-bb1ba393f97f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Tekan <em>Start using compass<\/em> lalu tutup jendela mongodb compass untuk saat ini.<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"123f7eaa-a31d-46aa-8ced-bb1ba393f97f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk Melakukan instalasi pada OS Linux dan Mac OS bisa merefer pada artikel di bawah ini:<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"123f7eaa-a31d-46aa-8ced-bb1ba393f97f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><em><strong><a href=\"https:\/\/docs.mongodb.com\/manual\/administration\/install-on-linux\/\">Instalasi MongoDB pada Linux<\/a><\/strong><\/em><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"123f7eaa-a31d-46aa-8ced-bb1ba393f97f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/docs.mongodb.com\/manual\/tutorial\/install-mongodb-on-os-x\/\"><em><strong>Instalasi MongoDB pada MacOS<\/strong><\/em><\/a><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"123f7eaa-a31d-46aa-8ced-bb1ba393f97f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<hr \/>\r\n<h2 id=\"block-6d131925-9dd4-45c4-96ad-11b0d8604868\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"6d131925-9dd4-45c4-96ad-11b0d8604868\" data-type=\"core\/heading\" data-title=\"Tajuk\">Terminologi<\/h2>\r\n<p id=\"block-74b947f4-5148-4f86-9fec-0dbb310e27a9\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"74b947f4-5148-4f86-9fec-0dbb310e27a9\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sebelum kita mulai untuk menggunakan MongoDB ada baiknya kita mengenal dulu lingkungan tempat kita akan bekerja. Struktur data pada mongoDB terdiri collection dan document. Untuk lebih mengerti struktur data ini kita akan membandingkannya dengan MySQL pada gambar di bawah ini.<\/p>\r\n<figure id=\"block-59391637-6e7a-4c2b-9d48-de1abc9519ee\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"59391637-6e7a-4c2b-9d48-de1abc9519ee\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_1.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_1.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-13c4cb83-7374-4d51-a439-f668eff35b9a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"13c4cb83-7374-4d51-a439-f668eff35b9a\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jadi setiap kolom dijelaskan oleh field, lalu dokumen merepresentasikan baris, dan collection merupakan tabel dimana dokumen dikumpulkan.<\/p>\r\n<p id=\"block-0542d325-8cc7-46c5-b672-e19b7d1ed697\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"0542d325-8cc7-46c5-b672-e19b7d1ed697\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Misalkan kita coba mengacu pada saat kita belajar mysql maka database kita akan menjadi,<\/p>\r\n<pre id=\"block-69d27916-fd89-417d-9212-d401bf1d2900\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"69d27916-fd89-417d-9212-d401bf1d2900\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">database : rentalfilm<br data-rich-text-line-break=\"true\" \/>collection : customers<br data-rich-text-line-break=\"true\" \/>field : id, username(namaid), namalengkap, email <\/code><\/span><\/em><\/pre>\r\n<h4 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"383a60bd-bae2-43b0-8240-dcc797bbc5ae\" data-type=\"core\/heading\" data-title=\"Tajuk\">&nbsp;<\/h4>\r\n<hr \/>\r\n<h2 id=\"block-383a60bd-bae2-43b0-8240-dcc797bbc5ae\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"383a60bd-bae2-43b0-8240-dcc797bbc5ae\" data-type=\"core\/heading\" data-title=\"Tajuk\">Persiapan Basisdata<\/h2>\r\n<p id=\"block-c4bc86b8-381e-494a-a953-4f9dc701c420\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c4bc86b8-381e-494a-a953-4f9dc701c420\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada tahap persiapan database kita dapat menggunakan cmd untuk bekerja. untuk menggunakan cmd kita hanya perlu mengetikan pada cmd kita.<\/p>\r\n<pre id=\"block-3b553e27-f953-4471-9e86-1c93502963af\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"3b553e27-f953-4471-9e86-1c93502963af\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">mongo<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-b08273e4-df0d-4841-92a9-d61fe37c23e4\" class=\"wp-block-image block-editor-block-list__block wp-block size-large is-hovered\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"b08273e4-df0d-4841-92a9-d61fe37c23e4\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_2.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_2.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-1486e7ed-895b-4fde-9957-b8767bd1ba86\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1486e7ed-895b-4fde-9957-b8767bd1ba86\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">atau untuk menunjuk pada suatu server khusus kita bisa menggunakan alamat server kita setelah mongo. pada contoh ini kita akan menggunakan localhost.<\/p>\r\n<pre id=\"block-e4801bac-f882-452f-a4ac-4f65e9212ea9\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"e4801bac-f882-452f-a4ac-4f65e9212ea9\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">mongo localhost<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-7521f2f7-e4dd-4d68-b4e7-88d0eafab53f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7521f2f7-e4dd-4d68-b4e7-88d0eafab53f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">pastikan path menuju mongodb server sudah tersimpan pada windows.<\/p>\r\n<p id=\"block-2405aabd-278d-42bb-9a40-86dd8cec4d79\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2405aabd-278d-42bb-9a40-86dd8cec4d79\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk membuat\/berpindah basisdata, kita dapat menggunakan query<\/p>\r\n<pre id=\"block-07609cd8-be09-42fd-badf-94c18b36ba35\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"07609cd8-be09-42fd-badf-94c18b36ba35\" data-type=\"core\/code\" data-title=\"Kode\"><span style=\"font-size: 12pt;\"><em><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">use &lt;namadatabase&gt;<\/code><\/em><\/span><\/pre>\r\n<p id=\"block-fc6b8495-e6aa-4619-a1a9-ddc3d01935f8\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fc6b8495-e6aa-4619-a1a9-ddc3d01935f8\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Maka mongo akan mengarahkan kita pada basisdata yang kita maksud jika ada, jika belum ada maka akan otomatis untuk dibuat. Kita akan membuat sama seperti pada saat mempelajari mysql.<\/p>\r\n<pre id=\"block-9214efc7-5891-411d-a489-a4fd24accd60\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"9214efc7-5891-411d-a489-a4fd24accd60\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">use rentalfilm<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-e916c29f-4d29-44ad-808e-67bfebb2ac96\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"e916c29f-4d29-44ad-808e-67bfebb2ac96\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_3.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_3.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-d2de939d-8e6c-40de-9071-f3474c77a694\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d2de939d-8e6c-40de-9071-f3474c77a694\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk melihat semua basisdata yang kita miliki pada server mongodb, kita dapat menggunakan query<\/p>\r\n<pre id=\"block-ad5e1678-2826-42ad-a999-881fbe753fde\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"ad5e1678-2826-42ad-a999-881fbe753fde\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">show dbs<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-9aa39263-1975-48c4-a1e1-039e40b52f10\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"9aa39263-1975-48c4-a1e1-039e40b52f10\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_4.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_4.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-a4fe1dd2-3eee-4cf4-a05b-2898fded6a76\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"a4fe1dd2-3eee-4cf4-a05b-2898fded6a76\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">basis data rentalfilm belum muncul karena kita belum memasukan data. sehingga belum tersimpan sepenuhnya.<\/p>\r\n<p id=\"block-481541fd-e3dd-443d-8497-cf0dc60174cf\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"481541fd-e3dd-443d-8497-cf0dc60174cf\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk menghapus basis data kita kita bisa menggunakan query<\/p>\r\n<pre id=\"block-044f8509-2dcc-4ccd-9edd-a30159bccc55\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"044f8509-2dcc-4ccd-9edd-a30159bccc55\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.dropDatabase()<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-a918cc60-4808-4c7a-8b21-ae55444aef8c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"a918cc60-4808-4c7a-8b21-ae55444aef8c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">tapi pastikan kita sudah ada pada basis data yang kita ingin hapus dengan menggunakan <em>use<\/em>.<\/p>\r\n<p id=\"block-f7217863-f905-45d8-814b-b695a7c88ba9\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f7217863-f905-45d8-814b-b695a7c88ba9\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">setelah berhasil membuat basisdata, sekarang saatnya kita membuat collection. Seperti yang dibahas sebelumnya, collection bisa diibaratkan sebagai tabel dan field bisa diibaratkan sebagai kolom. Untuk membuat collection kita hanya perlu menggunakan query,<\/p>\r\n<pre id=\"block-10881f33-b97e-4aae-9489-850beb6844fc\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"10881f33-b97e-4aae-9489-850beb6844fc\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.createCollection(&lt;namacollection&gt;, parameter(opsional))<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-480cc804-5bd7-4856-9b6e-8b87722e5345\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"480cc804-5bd7-4856-9b6e-8b87722e5345\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">parameter saat membuat collection,<\/p>\r\n<ul id=\"block-d9dc8aab-1215-4e2e-b700-02c79ef89590\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"d9dc8aab-1215-4e2e-b700-02c79ef89590\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>capped - Ketika mencapai ukuran maksimum maka data lama akan dihapus agar data baru bisa masuk<\/li>\r\n<li>autoIndexId - membuat index otomatis pada kolom _id<\/li>\r\n<li>size - menentukan ukuran maksium dalam byte pada saat parameter capped aktif<\/li>\r\n<li>max - menentukan jumlah maksimal dokumen pada saat parameter capped aktif.<\/li>\r\n<\/ul>\r\n<p id=\"block-0ed28b1a-272c-4c35-b378-aec5112bfbf7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"0ed28b1a-272c-4c35-b378-aec5112bfbf7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Seperti yang dilihat, kita tidak perlu menentukan struktur kolom kita di awal pembuatan seperti mysql, sehingga NoSQL lebih dinamis terkait hal tersebut.<\/p>\r\n<p id=\"block-aa5ee0bf-9dcb-4a9a-938c-47a0519ace7b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"aa5ee0bf-9dcb-4a9a-938c-47a0519ace7b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sekarang kita akan membuat collection <em>customers<\/em><\/p>\r\n<pre id=\"block-c404bb95-7958-4378-a24f-0f1a94d4b425\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"c404bb95-7958-4378-a24f-0f1a94d4b425\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.createCollection(\"customers\")<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-ee218f5e-05fe-4367-b48d-a7558463e0e2\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"ee218f5e-05fe-4367-b48d-a7558463e0e2\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_5.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_5.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-a2328928-2394-405d-95bb-ca899e9e17e3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"a2328928-2394-405d-95bb-ca899e9e17e3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jika kita cek kembali daftar basis data kita, maka <em>rentalfilm<\/em> sudah terdaftar karena sudah memiliki isi di dalamnya.<\/p>\r\n<figure id=\"block-8609ec57-807b-4c10-ac45-7105f2f38e95\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"8609ec57-807b-4c10-ac45-7105f2f38e95\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_6.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_6.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h4 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"720691c3-3915-4d8c-8b62-c3acd91f2e39\" data-type=\"core\/heading\" data-title=\"Tajuk\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/bacis_commands.png\" alt=\"\" width=\"621\" height=\"397\" \/><\/h4>\r\n<h4 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"720691c3-3915-4d8c-8b62-c3acd91f2e39\" data-type=\"core\/heading\" data-title=\"Tajuk\">&nbsp;<\/h4>\r\n<hr \/>\r\n<h2 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"720691c3-3915-4d8c-8b62-c3acd91f2e39\" data-type=\"core\/heading\" data-title=\"Tajuk\">Manipulasi Data<\/h2>\r\n<p>&nbsp;<\/p>\r\n<h3 id=\"block-720691c3-3915-4d8c-8b62-c3acd91f2e39\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"720691c3-3915-4d8c-8b62-c3acd91f2e39\" data-type=\"core\/heading\" data-title=\"Tajuk\">Insert Data<\/h3>\r\n<p id=\"block-8cf191ba-4fd5-41fa-9969-21c1cfda6bc1\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"8cf191ba-4fd5-41fa-9969-21c1cfda6bc1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Memasukan data dapat kita lakukan pada mongo shell dengan menggunakan query,<\/p>\r\n<pre id=\"block-256a1ca3-88d3-468c-ab93-808313882bc2\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"256a1ca3-88d3-468c-ab93-808313882bc2\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.&lt;namacollection&gt;.insert(&lt;document&gt;)<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-889ede59-bbfe-4372-9bdd-96f8ea972969\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"889ede59-bbfe-4372-9bdd-96f8ea972969\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Misalkan kita ingin memasukkan data,<\/p>\r\n<pre id=\"block-32d89d55-64c6-4497-85f0-2e1a3ea47f94\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"32d89d55-64c6-4497-85f0-2e1a3ea47f94\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\"><em><span style=\"font-size: 12pt;\">id = Astrid,<\/span><\/em><br data-rich-text-line-break=\"true\" \/><em><span style=\"font-size: 12pt;\">fullname = Astrid Gruber,<\/span><\/em><br data-rich-text-line-break=\"true\" \/><em><span style=\"font-size: 12pt;\">email = astrid.gruber@apple.at<\/span><\/em><\/code><\/pre>\r\n<p id=\"block-1363f7a7-6716-4a7c-b3df-9a577da3e19c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1363f7a7-6716-4a7c-b3df-9a577da3e19c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">maka query kita menjadi,<\/p>\r\n<pre id=\"block-54429d0d-2866-49dc-a19c-338a4cfa87bd\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"54429d0d-2866-49dc-a19c-338a4cfa87bd\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.customers.insert({<br data-rich-text-line-break=\"true\" \/> id : \"Astrid\",<br data-rich-text-line-break=\"true\" \/> fullname : \"Astrid Gruber\",<br data-rich-text-line-break=\"true\" \/> email : \"astrid.gruber@apple.at\"<br data-rich-text-line-break=\"true\" \/>})<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-9d59336a-921c-4ee0-bd5b-7d80483e9a43\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"9d59336a-921c-4ee0-bd5b-7d80483e9a43\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_12.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_12.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-ef3b134e-3b9b-42e8-a358-88e5aba0c77e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"ef3b134e-3b9b-42e8-a358-88e5aba0c77e\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk melihat datanya kita bisa menggunakan MongoDB Compass. Jadi pertama bukalah MongoDB Compass kita dan pada menu koneksi kita tekan <em>connect<\/em>, kita akan tersambung dengan localhost pada port 27017 (default port mongodb). Jika ingin mengisi secara manual server kita, bisa dengan memilih menu <em>fill in connection fields manually<\/em>.<\/p>\r\n<figure id=\"block-eed6484d-f8a2-4cca-9ab9-ff9f02021255\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"eed6484d-f8a2-4cca-9ab9-ff9f02021255\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_7-1024x572.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_7-1024x572.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-7901337a-d71d-4f6e-9079-65577647b970\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7901337a-d71d-4f6e-9079-65577647b970\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelah itu kita pilih Basis data dan collection yang ingin manipulasi datanya.<\/p>\r\n<figure id=\"block-23d4afba-b2cf-45a6-b4a0-854c583b008f\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"23d4afba-b2cf-45a6-b4a0-854c583b008f\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_8-1024x389.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_8-1024x389.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<figure id=\"block-0afd46a6-324c-41e3-af9b-f94a2a80426a\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"0afd46a6-324c-41e3-af9b-f94a2a80426a\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_9-1024x184.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_9-1024x184.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<figure id=\"block-ad203a16-e36f-4e1a-a011-229d545f8af6\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"ad203a16-e36f-4e1a-a011-229d545f8af6\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_11-1024x572.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_11-1024x572.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-06a34cf6-bd31-4fc9-a829-48653f96dceb\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"06a34cf6-bd31-4fc9-a829-48653f96dceb\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">tekan tombol <em>find<\/em> maka datanya akan muncul.<\/p>\r\n<figure id=\"block-44fb3df7-a160-4957-a095-8d2557e1cc3c\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"44fb3df7-a160-4957-a095-8d2557e1cc3c\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_13-1024x238.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_13-1024x238.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-7d05640d-682d-4131-8e1c-11d522b9c7bd\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7d05640d-682d-4131-8e1c-11d522b9c7bd\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kita juga bisa memasukkan data menggunakan tombol <em>add data<\/em> --&gt; <em>Insert document<\/em>. Lalu masukkan datanya dalam bentuk dictionary python. Tapi karena kita sedang belajar menggunakan query maka kita akan menggunakan cmd untuk kali ini.<\/p>\r\n<p id=\"block-c0b47243-474b-4d71-a172-87fa917d82f9\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block is-hovered rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c0b47243-474b-4d71-a172-87fa917d82f9\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk memasukkan data kita hanya perlu memasukkan data tersebut ke dalam list, mirip seperti saat kita bekerja dengan dictionary.<\/p>\r\n<pre id=\"block-15e52946-cc1c-4c48-b868-68d28b6a8fa2\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"15e52946-cc1c-4c48-b868-68d28b6a8fa2\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.customers.insert([{<br data-rich-text-line-break=\"true\" \/>    id : \"Fernanda\",<br data-rich-text-line-break=\"true\" \/>    fullname : \"Fernanda Ramos\",<br data-rich-text-line-break=\"true\" \/>    email : \"fernadaramos4@uol.com.br\",<br data-rich-text-line-break=\"true\" \/>    age : 24<br data-rich-text-line-break=\"true\" \/>},<br data-rich-text-line-break=\"true\" \/>{<br data-rich-text-line-break=\"true\" \/>    id : \"Mark\",<br data-rich-text-line-break=\"true\" \/>    fullname : \"Mark Philips\",<br data-rich-text-line-break=\"true\" \/>    email : \"mphilips12@shaw.ca\",<br data-rich-text-line-break=\"true\" \/>    city : \"San Francisco\"<br data-rich-text-line-break=\"true\" \/>},<br data-rich-text-line-break=\"true\" \/>{<br data-rich-text-line-break=\"true\" \/>    id : \"Jennifer\",<br data-rich-text-line-break=\"true\" \/>    fullname : \"Jennifer Peterson\",<br data-rich-text-line-break=\"true\" \/>    email : \"jenniferp@rogers.ca\",<br data-rich-text-line-break=\"true\" \/>    occupation : \"teacher\"<br data-rich-text-line-break=\"true\" \/>}])<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-b2357657-f8da-4114-8908-8e66c0ebc54b\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"b2357657-f8da-4114-8908-8e66c0ebc54b\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_14-1024x564.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_14-1024x564.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-d26c4a34-e897-405b-9729-a1750edeb009\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d26c4a34-e897-405b-9729-a1750edeb009\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Berbeda dengan sql yang memiliki schema yang tetap, pada NoSQL kita bisa memasukkan field yang berbeda seperti age, city, dan occupation.<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d26c4a34-e897-405b-9729-a1750edeb009\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d26c4a34-e897-405b-9729-a1750edeb009\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/Insert_2.png\" alt=\"\" width=\"810\" height=\"325\" \/><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d26c4a34-e897-405b-9729-a1750edeb009\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<h3 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"bfbf64e7-4f8d-40b9-aa96-f18b544a0652\" data-type=\"core\/heading\" data-title=\"Tajuk\">&nbsp;<\/h3>\r\n<h3 id=\"block-bfbf64e7-4f8d-40b9-aa96-f18b544a0652\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"bfbf64e7-4f8d-40b9-aa96-f18b544a0652\" data-type=\"core\/heading\" data-title=\"Tajuk\">Update Data<\/h3>\r\n<p id=\"block-90cf301d-b9d1-4c90-8984-1aa97be50deb\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"90cf301d-b9d1-4c90-8984-1aa97be50deb\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk mengubah data kita kita bisa menggunakan query<\/p>\r\n<pre id=\"block-3fecd951-50ec-4c0a-b6ab-ccfa399e883b\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"3fecd951-50ec-4c0a-b6ab-ccfa399e883b\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.&lt;namacollection&gt;.update({&lt;kriteria&gt;}, {$set:{&lt;nilai baru&gt;}})<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-b29b02ab-604d-42f6-a517-e527da4d7144\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b29b02ab-604d-42f6-a517-e527da4d7144\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kita ingin mengubah nama dengan id \"Jennifer\" dari Jennifer Peterson menjadi Jennifer Aniston.<\/p>\r\n<pre id=\"block-7df33bb4-91ea-464b-855b-7fdc6bfa1ff8\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"7df33bb4-91ea-464b-855b-7fdc6bfa1ff8\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.customers.update(<br data-rich-text-line-break=\"true\" \/>{id:\"Jennifer\"}, <br data-rich-text-line-break=\"true\" \/>{$set:{fullname:'Jennifer Aniston'}}<br data-rich-text-line-break=\"true\" \/>)<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-c5743f6a-e436-47a1-9652-7eefbdf2fdb9\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"c5743f6a-e436-47a1-9652-7eefbdf2fdb9\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_15-1024x346.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_15-1024x346.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h3 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"900268f7-d784-440e-b730-ff3583334b46\" data-type=\"core\/heading\" data-title=\"Tajuk\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/update.png\" alt=\"\" width=\"734\" height=\"317\" \/><\/h3>\r\n<h3 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"900268f7-d784-440e-b730-ff3583334b46\" data-type=\"core\/heading\" data-title=\"Tajuk\">&nbsp;<\/h3>\r\n<h3 id=\"block-900268f7-d784-440e-b730-ff3583334b46\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"900268f7-d784-440e-b730-ff3583334b46\" data-type=\"core\/heading\" data-title=\"Tajuk\">Delete Data<\/h3>\r\n<p id=\"block-e3238d01-3b0b-40d1-8e4d-e39c4c13112d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"e3238d01-3b0b-40d1-8e4d-e39c4c13112d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk menghapus data dari tabel dapat menggunakan query<\/p>\r\n<pre id=\"block-f351aaab-fb3f-4093-b475-a4eb8c44ea60\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"f351aaab-fb3f-4093-b475-a4eb8c44ea60\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.&lt;nama collection&gt;.remove(&lt;query&gt;)<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-413a58e2-e7e9-4911-a2ba-9f818b6ce224\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"413a58e2-e7e9-4911-a2ba-9f818b6ce224\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">misalkan kita ingin menghapus data dengan id = Jennifer<\/p>\r\n<pre id=\"block-e9e236a0-b3cb-4266-97cd-0d8faf294fdf\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"e9e236a0-b3cb-4266-97cd-0d8faf294fdf\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.customers.remove(<br data-rich-text-line-break=\"true\" \/>{id:\"Jennifer\"}<br data-rich-text-line-break=\"true\" \/>)<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-85f614b8-9b2a-4480-a0d4-91efc71aaa00\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"85f614b8-9b2a-4480-a0d4-91efc71aaa00\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_16-1024x368.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_16-1024x368.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h2 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"6892065c-8092-4445-ab17-eb40519bac79\" data-type=\"core\/heading\" data-title=\"Tajuk\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/delete.png\" alt=\"\" width=\"816\" height=\"298\" \/><\/h2>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<h2 id=\"block-6892065c-8092-4445-ab17-eb40519bac79\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"6892065c-8092-4445-ab17-eb40519bac79\" data-type=\"core\/heading\" data-title=\"Tajuk\">Query Data<\/h2>\r\n<p>&nbsp;<\/p>\r\n<h3>Query Dasar<\/h3>\r\n<p id=\"block-cd018560-5531-4d61-9ff1-e9d70e62ad9f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"cd018560-5531-4d61-9ff1-e9d70e62ad9f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk mencari data dan menampilkan data tersebut kita dapat mengunakan query<\/p>\r\n<pre id=\"block-c536560e-f8c6-44ef-8f2a-b0c0a73c6020\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"c536560e-f8c6-44ef-8f2a-b0c0a73c6020\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.&lt;nama collection&gt;.find()<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-1afec699-c083-4714-8527-d4b16b7c461d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1afec699-c083-4714-8527-d4b16b7c461d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk melihat semua isi customers maka kita ketikkan<\/p>\r\n<pre id=\"block-5f13c201-c94f-4b8a-8296-e86db2e5585d\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"5f13c201-c94f-4b8a-8296-e86db2e5585d\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.customers.find()<\/code><\/span><\/em><\/pre>\r\n<p id=\"block-0bfe5887-34e4-45f1-b661-e2c64c8fb22e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"0bfe5887-34e4-45f1-b661-e2c64c8fb22e\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">query tersebut kita ketikkan pada cmd<\/p>\r\n<figure id=\"block-0d387065-966b-48a3-87e1-4dd3d921ffed\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"0d387065-966b-48a3-87e1-4dd3d921ffed\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_17-1024x198.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_17-1024x198.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-44b95517-bbaf-491c-82bf-cb7b7b537f40\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"44b95517-bbaf-491c-82bf-cb7b7b537f40\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk mencari nilai tertentu kita bisa mengisikan pasangan key dan value di dalam kurung. Misalkan kita ingin mencari data dengan usia 24<\/p>\r\n<pre id=\"block-1a7d1bf8-221b-4691-ad8c-cfd280debba5\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"1a7d1bf8-221b-4691-ad8c-cfd280debba5\" data-type=\"core\/code\" data-title=\"Kode\"><em><span style=\"font-size: 12pt;\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">db.customers.find( {age:24} ).pretty()<\/code><\/span><\/em><\/pre>\r\n<figure id=\"block-61b5dec1-6634-4938-9bc6-97d8e4369dad\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"61b5dec1-6634-4938-9bc6-97d8e4369dad\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_18-1024x256.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah mongodb_18-1024x256.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-fd4d6fba-b367-413e-9374-1a9fad7a9feb\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fd4d6fba-b367-413e-9374-1a9fad7a9feb\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">method pretty() membuat tampilan dari data kita menjadi lebih rapi layaknya penulisan dictionary pada python.<\/p>\r\n<p id=\"block-2b18dfbe-10de-477b-9ced-9427f8305fd3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Seperti disebutkan di awal, tidak ada konsep join pada MongoDB setidaknya secara langsung. Akan tetapi, query-query yang kita gunakan lebih sederhana dan mudah dimengerti layaknya saat kita bermain dengan object pada python.<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/find.png\" alt=\"\" width=\"845\" height=\"372\" \/><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<h3 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Query Kompleks<\/h3>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan mencoba berbagai variasi dalam metode find(). Untuk kebutuhan pemakaian kedepannya kita akan mencoba untuk menggunakan file di bawah ini.<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1N1Vsh4tvdNm3jxTpRg284RT4PtdAu_5z\/view?usp=sharing\" target=\"_blank\" rel=\"noreferrer noopener\">file json<\/a><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Silahkan ekstrak,<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>buat terlebih dahulu koleksi baru bernama bios.<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><em><span style=\"font-size: 12pt;\"><code>db.createCollection(\"bios\")<\/code><\/span><\/em><\/pre>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>pada mongodb compass masuk ke dalam koleksi tersebut dan pilih <em>add data<\/em> lalu pilih import file, setelah itu pilih dimana lokasi data yang diekstrak tadi, lalu tekan import.<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15822,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15822\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/mongodb_19-1024x532.png\" alt=\"\" \/><\/figure>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Metode find pada mongodb itu sebanding dengan parameter where saat kita mencari menggunakan sql. Biasanya kita akan menggunakan operator tambahan seperti '=' atau \"&gt;\". Pada mongodb juga terdapat parameter yang mempunyai fungsi yang sama yang dijelaskan pada tabel di bawah ini.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\"><\/figure>\r\n<figure class=\"wp-block-table\" style=\"text-align: center;\">\r\n<figcaption><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/find_2.png\" alt=\"\" width=\"1035\" height=\"453\" \/><br \/><br \/><span style=\"font-size: 10pt;\">sumber : <a href=\"https:\/\/www.tutorialspoint.com\/mongodb\/mongodb_query_document.htm\">https:\/\/www.tutorialspoint.com\/mongodb\/mongodb_query_document.htm<\/a><\/span><\/figcaption>\r\n<\/figure>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" style=\"text-align: center;\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:table --> <!-- wp:paragraph --><\/p>\r\n<p style=\"text-align: center;\">&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita ingin mengetahui siapa saja programmer yang memiliki kontribusi tentang OOP dan mendapatkan awards pada tahun diantara 1990 - 2000<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><em><span style=\"font-size: 12pt;\"><code>db.bios.find(\r\n{\"awards.year\" : {$gt:1990, $lt:2000}, \r\n\"contribs\":\"OOP\"}\r\n)<\/code><\/span><\/em><\/pre>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><em><span style=\"font-size: 12pt;\"><!-- \/wp:code --> <!-- wp:paragraph --><\/span><\/em><\/p>\r\n<p>hasilnya,<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><em><span style=\"font-size: 12pt;\"><code>{ \"_id\" : 4, \"name\" : { \"first\" : \"Kristen\", \"last\" : \"Nygaard\" }, \"birth\" : ISODate(\"1926-08-27T04:00:00Z\"), \"death\" : ISODate(\"2002-08-10T04:00:00Z\"), \"contribs\" : [ \"OOP\", \"Simula\" ], \"awards\" : [ { \"award\" : \"Rosing Prize\", \"year\" : 1999, \"by\" : \"Norwegian Data Association\" }, { \"award\" : \"Turing Award\", \"year\" : 2001, \"by\" : \"ACM\" }, { \"award\" : \"IEEE John von Neumann Medal\", \"year\" : 2001, \"by\" : \"IEEE\" } ] }\r\n{ \"_id\" : 5, \"name\" : { \"first\" : \"Ole-Johan\", \"last\" : \"Dahl\" }, \"birth\" : ISODate(\"1931-10-12T04:00:00Z\"), \"death\" : ISODate(\"2002-06-29T04:00:00Z\"), \"contribs\" : [ \"OOP\", \"Simula\" ], \"awards\" : [ { \"award\" : \"Rosing Prize\", \"year\" : 1999, \"by\" : \"Norwegian Data Association\" }, { \"award\" : \"Turing Award\", \"year\" : 2001, \"by\" : \"ACM\" }, { \"award\" : \"IEEE John von Neumann Medal\", \"year\" : 2001, \"by\" : \"IEEE\" } ] }<\/code><\/span><\/em><\/pre>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><em><span style=\"font-size: 12pt;\"><!-- \/wp:code --> <!-- wp:list --><\/span><\/em><\/p>\r\n<p>&nbsp;<\/p>\r\n<ul>\r\n<li><span style=\"font-size: 12pt;\"><em>awards.year<\/em> --&gt; kita mencari pada key year di dalam key awards.<\/span><\/li>\r\n<li><em>$gt : 1990<\/em> --&gt; mencari yang tahunnya lebih dari 1990<\/li>\r\n<li><em>$lt: 2000<\/em> --&gt; mencari yang tahunnya kurang dari 2000.<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita ingin mencari user yang juga berkontribusi pada \"Fortran\" maka kita bisa menggunakan query<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><em><span style=\"font-size: 12pt;\"><code>db.bios.find(\r\n{\"awards.year\" : {$gt:1990, $lt:2000}, \r\n\"contribs\" : {$in : [\"OOP\", \"Fortran\"]}}\r\n)<\/code><\/span><\/em><\/pre>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><em><span style=\"font-size: 12pt;\"><code>\r\n{ \"_id\" : 1, \"name\" : { \"first\" : \"John\", \"last\" : \"Backus\" }, \"birth\" : ISODate(\"1924-12-03T05:00:00Z\"), \"death\" : ISODate(\"2007-03-17T04:00:00Z\"), \"contribs\" : [ \"Fortran\", \"ALGOL\", \"Backus-Naur Form\", \"FP\" ], \"awards\" : [ { \"award\" : \"W.W. McDowell Award\", \"year\" : 1967, \"by\" : \"IEEE Computer Society\" }, { \"award\" : \"National Medal of Science\", \"year\" : 1975, \"by\" : \"National Science Foundation\" }, { \"award\" : \"Turing Award\", \"year\" : 1977, \"by\" : \"ACM\" }, { \"award\" : \"Draper Prize\", \"year\" : 1993, \"by\" : \"National Academy of Engineering\" } ] }\r\n{ \"_id\" : 4, \"name\" : { \"first\" : \"Kristen\", \"last\" : \"Nygaard\" }, \"birth\" : ISODate(\"1926-08-27T04:00:00Z\"), \"death\" : ISODate(\"2002-08-10T04:00:00Z\"), \"contribs\" : [ \"OOP\", \"Simula\" ], \"awards\" : [ { \"award\" : \"Rosing Prize\", \"year\" : 1999, \"by\" : \"Norwegian Data Association\" }, { \"award\" : \"Turing Award\", \"year\" : 2001, \"by\" : \"ACM\" }, { \"award\" : \"IEEE John von Neumann Medal\", \"year\" : 2001, \"by\" : \"IEEE\" } ] }\r\n{ \"_id\" : 5, \"name\" : { \"first\" : \"Ole-Johan\", \"last\" : \"Dahl\" }, \"birth\" : ISODate(\"1931-10-12T04:00:00Z\"), \"death\" : ISODate(\"2002-06-29T04:00:00Z\"), \"contribs\" : [ \"OOP\", \"Simula\" ], \"awards\" : [ { \"award\" : \"Rosing Prize\", \"year\" : 1999, \"by\" : \"Norwegian Data Association\" }, { \"award\" : \"Turing Award\", \"year\" : 2001, \"by\" : \"ACM\" }, { \"award\" : \"IEEE John von Neumann Medal\", \"year\" : 2001, \"by\" : \"IEEE\" } ] }<\/code><\/span><\/em><\/pre>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><em><span style=\"font-size: 12pt;\"><!-- \/wp:code --> <!-- wp:paragraph --><\/span><\/em><\/p>\r\n<p>Kita juga bisa mencari menggunakan regex misalnya kita ingin mencari orang yang mempunyai nama award yang di awali \"Rosing\".<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><em><span style=\"font-size: 12pt;\"><code>db.bios.find({\"awards.award\" : {$regex: \/^Rosing\/}})<\/code><\/span><\/em><\/pre>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><em><span style=\"font-size: 12pt;\"><code>{ \"_id\" : 4, \"name\" : { \"first\" : \"Kristen\", \"last\" : \"Nygaard\" }, \"birth\" : ISODate(\"1926-08-27T04:00:00Z\"), \"death\" : ISODate(\"2002-08-10T04:00:00Z\"), \"contribs\" : [ \"OOP\", \"Simula\" ], \"awards\" : [ { \"award\" : \"Rosing Prize\", \"year\" : 1999, \"by\" : \"Norwegian Data Association\" }, { \"award\" : \"Turing Award\", \"year\" : 2001, \"by\" : \"ACM\" }, { \"award\" : \"IEEE John von Neumann Medal\", \"year\" : 2001, \"by\" : \"IEEE\" } ] }\r\n{ \"_id\" : 5, \"name\" : { \"first\" : \"Ole-Johan\", \"last\" : \"Dahl\" }, \"birth\" : ISODate(\"1931-10-12T04:00:00Z\"), \"death\" : ISODate(\"2002-06-29T04:00:00Z\"), \"contribs\" : [ \"OOP\", \"Simula\" ], \"awards\" : [ { \"award\" : \"Rosing Prize\", \"year\" : 1999, \"by\" : \"Norwegian Data Association\" }, { \"award\" : \"Turing Award\", \"year\" : 2001, \"by\" : \"ACM\" }, { \"award\" : \"IEEE John von Neumann Medal\", \"year\" : 2001, \"by\" : \"IEEE\" } ] }<\/code><\/span><\/em><\/pre>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><!-- \/wp:code --><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b18dfbe-10de-477b-9ced-9427f8305fd3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;&nbsp;<\/p>\r\n<hr \/>\r\n<p id=\"block-1096f68f-72d2-4663-8a85-1f3a269ecdbc\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok kosong; mulai menulis atau ketik garing untuk memilih blok\" data-block=\"1096f68f-72d2-4663-8a85-1f3a269ecdbc\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<h2 id=\"block-5f4b3e9c-2b67-4228-8326-9b5faab0e07e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"5f4b3e9c-2b67-4228-8326-9b5faab0e07e\" data-type=\"core\/heading\" data-title=\"Tajuk\">Bahan Bacaan<\/h2>\r\n<p id=\"block-45cfa67b-5141-4f90-ba14-adb6e57e509b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block is-hovered rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"45cfa67b-5141-4f90-ba14-adb6e57e509b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/www.digitalconnectmag.com\/sql-versus-nosql-database-design-which-one-to-pick-for-maximum-cloud-data-storage-performance\/\" target=\"_blank\" rel=\"noreferrer noopener\">SQL Versus NoSQL Database Design - digitalconnectmag<\/a><\/p>\r\n<p id=\"block-7b2abf27-ce29-4bc6-8452-4c40a2b222f7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7b2abf27-ce29-4bc6-8452-4c40a2b222f7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/docs.mongodb.com\/manual\/crud\/\">https:\/\/docs.mongodb.com\/manual\/crud\/<\/a><\/p>\r\n<p id=\"block-b47423cb-c2f2-4c3a-935e-8b500b34cf5e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b47423cb-c2f2-4c3a-935e-8b500b34cf5e\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/realpython.com\/introduction-to-mongodb-and-python\/\">https:\/\/realpython.com\/introduction-to-mongodb-and-python\/<\/a><\/p>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-10-01 08:00:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-10-02 15:27:22","waktu_publish_formatted":" Jumat, 01 Oktober 2021. 08:00:00 WIB."}]},{"id":326,"uuid":"09c14529-929d-4fa7-b7bc-e7e084d87092","materi_id":33,"nama":"Materi Pekan 3","permalink":"materi-pekan-3","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-07-15 08:20:31","posting":[{"id":1116,"uuid":"4e7b4cea-08f9-4350-a995-8548a0371a8c","author_user_id":11253,"materi_section_id":326,"judul":"Python & MySQL","permalink":"python-mysql","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p>Database driver adalah peranti lunak yang memberikan akses pada suatu aplikasi untuk tersambung pada basisdata. Bahasa pemograman python membutuhkan driver tersebut untuk menyambungkan dengan Python Database API. Driver yang dimaksud diantaranya sqlite3 untuk SQLite, psycopg untuk PostgreSQL, dan yang akan kita gunakan kali ini, MySQL Connector\/Python untuk MySQL<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita harus menyalakan terlebih dahulu virtual enviroment yang telah kita buat untuk pelatihan ini. Memulai virtual environment bisa dengan mengetikan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>workon [nama virtual env]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Buka command prompt, lalu kita buka virtual environment kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>workon ms_python<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika nama virtual environment kita telah muncul di depan maka kita telah berhasil menyalakan virtual environment kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15851,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15851\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi driver kita bisa mengetikan kode pada command prompt kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install mysql-connector-python<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Membuka Koneksi<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>MySQL adalah RDBMS yang berbasis pada server, berbeda dengan sqlite yang bisa langsung kita gunakan. Satu server bisa memiliki lebih dari satu basisdata (schema). Akan tetapi, untuk bisa berinteraksi hal pertama yang harus kita lakukan adalah membuat koneksi terlebih dahulu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Langkah - langkah yang dijalankan ketika kita akan melakukan interaksi dengan suatu basisdata adalah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Membuka koneksi dengan MySQL server<\/li>\r\n<li>Membuat database baru (opsional jika belum ada)<\/li>\r\n<li>Mengkoneksikan dengan database yang baru dibuat\/sudah ada<\/li>\r\n<li>Mengeksekusi query sql<\/li>\r\n<li>Memberitahukan bila ada perubahan (opsional jika ada perubahan)<\/li>\r\n<li>Menutup koneksi ke dalam MySQL server.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kesempatan kali ini kita akan menggunakan IDE yang kita miliki, buka terlebih dahulu visual studio kita. lalu pada menu file pilih open folder. Arahkan dimana file pelatihan kita akan\/telah disimpan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pilih new file pada sidebar, dan gunakan ekstension .py<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15853,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15853\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada file python kita, untuk membuat koneksi, langkah pertama yang harus kita lakukan adalah melakukan import modul yang kita miliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mysql.connector import connect<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>untuk membuat koneksi dengan database yang kita miliki kita dapat menggunakan kode<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>db = connect(\r\n    host = \"localhost\",\r\n    user = \"root\",\r\n    passwd = \"password_kita\"\r\n)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita sudah mengetahui\/memiliki database yang akan digunakan, maka kode kita menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>db = connect(\r\n    host = \"localhost\",\r\n    user = \"root\",\r\n    passwd = \"password_kita\",\r\n    database = \"database_kita\"\r\n)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelahnya kita dapat melakan pengetesan dengan menggunakan metode print().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(db)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;mysql.connector.connection.MySQLConnection object at 0x00000249AFE07400&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kode lengkapnya menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mysql.connector import connect\r\n\r\ndb = connect(\r\n    host = \"localhost\",\r\n    user = \"root\",\r\n    passwd = \"password_kita\"\r\n)\r\n\r\nprint(db)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Melihat Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melihat suatu data kita akan menggunakan fungsi fetch setelah kita membuka koneksi dengan server.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cursor = db.cursor()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita persiapkan query yang ingin kita gunakan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>query = \"select * from user\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>lalu kita eksekusi query kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cursor.execute(query)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita gunakan fetchall untuk mengambil semua data kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = cursor.fetchall()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menampilkan kita bisa menggunakan for loop,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for row in data:\r\n    print(row)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Manipulasi Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Operasi manipulasi data terdiri dari beberapa fungsi utama diantaranya, Menambahkan, Mengubah dan Menghapus. Struktur yang digunakan mirip dengan apa yang akan kita gunakan pada query select hanya saja disini kita tidak menggunakan fetch akan tetapi commit.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita siapkan objek kursor kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cursor = db.cursor()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>lalu kita tuliskan query yang kita inginkan (insert, update, delete),<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>query = \"tuliskan query disini\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>lalu kita eksekusi query kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cursor.execute(query)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memberitahukan adanya perubahan ke dalam server kita kita menggunakan perintah commit.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>db.commit()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sebagai contoh, misalkan kita akan memasukkan suatu data pada basisdata kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    crud_query = '''insert into user (id, name, score) values (%s,%s,%s);'''\r\n\r\n    input_list = (data1, data2, data3)\r\n\r\n    cursor = db.cursor()\r\n    cursor.execute(crud_query,input_list)\r\n    db.commit()\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>%s digunakan sebagai penganti sebuah variabel yang nilainya akan kita ganti dengan input_list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Project Perpustakaan<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita coba untuk melakukan implementasi sederhana ke dalam suatu contoh mini project. Kita akan membuat sebuah basisdata perpustakaan yang memiliki tabel customers untuk menyimpan data pengunjung terdaftar di perpustakaan tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Persiapan Berkas<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita siapkan dulu folder yang akan kita gunakan, pada folder kerja (folder pelatihan ini) kalian buat folder mysql. lalu buka folder tersebut dengan visual studio code.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu di folder tersebut buat kembali folder models dan file python app.py<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15858,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15858\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/3.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada folder models kita buat customers.py sesuai nama tabel kita nanti<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15860,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15860\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/4.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita tinggalkan dulu vscode dan berpindah ke cmd\/terminal untuk mempersiapkan basisdata\/schema.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Persiapan Database<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita login terlebih dahulu ke dalam server kita dengan menggunakan user <em>root<\/em> setelah itu kita buat database kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>create database perpustakaan;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita pastikan perpustakaan merupakan basisdata yang kita pergunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>use perpustakaan;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita buat tabel <em>customers<\/em> kita, spesifikasi dari tabel customers kita seperti yang terlihat pada list di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>userid (<code>Int, AUTO_INCREMENT, PRIMARY KEY<\/code>)<\/li>\r\n<li>username (<code>string NOT NULL<\/code>)<\/li>\r\n<li>namadepan (<code>string NOT NULL<\/code>)<\/li>\r\n<li>namabelakang (<code>string NOT NULL<\/code>)<\/li>\r\n<li>email (<code>varchar(100) NOT NULL<\/code>)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>CREATE TABLE customers (\r\n    USERID int AUTO_INCREMENT PRIMARY KEY,\r\n    USERNAME varchar(100) NOT NULL,\r\n    NAMADEPAN varchar(100) NOT NULL,\r\n    NAMABELAKANG varchar(100) NOT NULL,\r\n    EMAIL varchar(100) NOT NULL,\r\n    UNIQUE (USERNAME,EMAIL)\r\n);<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengerjakan Model<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita kembali ke VSCode dan buka file customers.py pada folder models.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Model customers kita akan mempunyai 5 fungsi utama, yaitu:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Melihat semua user<\/li>\r\n<li>Mencari\/melihat satu user by id<\/li>\r\n<li>Memasukan user baru<\/li>\r\n<li>Mengubah data user by id<\/li>\r\n<li>Menghapus data user by id<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Melihat fungsi-fungsi di atas maka kita akan membuat class database dengan metode seperti terlihat pada gambar berikut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15863,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15863\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/5-1024x534.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jangan lupa untuk melakukan import connector mysql.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pada fungsi init kita akan membuat koneksi pada server mysql kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    def __init__(self):\r\n        try:\r\n            self.db = connect(host='localhost',\r\n                              database='perpustakaan',\r\n                              user='root',\r\n                              password=[isi dengan password kalian])\r\n        except Exception as e:\r\n            print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada tutorial kali ini kita akan mengerjakan tiga fungsi, fungsi insert, update, dan delete..<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk untuk fungsi insert data yang akan kita masukkan ada berupa dictionary untuk membiasakan melakukan pengolahan JSON. Data yang dimaksud adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\"params\":[\r\n    {\r\n        \"values\" :{\r\n            \"username\" : \"userpertama\",\r\n            \"namadepan\" : \"rudi\",\r\n            \"namabelakang\" : \"roundhouse\",\r\n            \"email\" : \"rudi.roundhouse@gmail.com\"\r\n        } \r\n    },\r\n    {\r\n        \"values\" :{\r\n            \"username\" : \"userkedua\",\r\n            \"namadepan\" : \"shiroe\",\r\n            \"namabelakang\" : \"ishigami\",\r\n            \"email\" : \"shiroe.ishigami@gmail.com\"\r\n        } \r\n    },\r\n    {\r\n        \"values\" :{\r\n            \"username\" : \"userketiga\",\r\n            \"namadepan\" : \"akatsuki\",\r\n            \"namabelakang\" : \"horizon\",\r\n            \"email\" : \"akatsuki.horizon@gmail.com\"\r\n        } \r\n    }\r\n]}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita akan mengerjakan fungsi menambahkan data. Untuk inputan pada fungsi kita akan memanfaatkan parameter kwargs karena data kita berbentuk dictionary dan kita ingin bebas dalam menentukan variabel masukan. Query awal kita menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def insertUser(self, **params):\r\n    try:\r\n\r\n        pass\r\n    except Exception as e:\r\n        print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>langkah kerja yang akan dilakukan kira-kira seperti ini,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":15867,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-15867\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/6.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Langkah 3 - 5 akan kita lakukan pada fungsi insert di models customers. Jika mengikuti data tersebut maka kode kita akan menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def insertUser(self, **params):\r\n    try:\r\n\r\n        crud_query = '''\r\n            query insert kalian\r\n        '''\r\n\r\n        cursor = self.db.cursor()\r\n        cursor.execute(crud_query)\r\n    except Exception as e:\r\n        print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada crud query kita akan masukkan query insert kita, jika melihat struktur tabel customers kita maka query akan berbentuk,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>insert into customers (username, namadepan, namabelakang, email) values ('value_1', 'value_2', 'value_3', 'value_4');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada bagian ini kita akan mencoba untuk membuat sebuah kode yang generik, sehingga kita tidak perlu menuliskan banyak kolom dan banyak value sekaligus, kita akan mengubah query kita menjadi format,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>'''insert into customers ({0}) values {1};'''.format(column, values)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Artinya dari sini kita harus bisa secara otomatis mengubah data yang masuk menjadi dua variabel dengan masing-masing berbentuk, seperti di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>column = username, namadepan, namabelakang, email\r\nvalues = ('value_1', 'value_2', 'value_3', 'value_4')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Melihat bentuk data input di awal yang berbentuk pasangan key-value dan kita yang menggunakan parameter kwargs pada fungsi maka kita bisa mendapatkan fungsi di atas dengan mengubanya menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>column = ', '.join(list(params['values'].keys()))\r\nvalues = tuple(list(params['values'].values()))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil akhir fungsi insert kita akan menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def insertUser(self, **params):\r\n    try:\r\n        column = ', '.join(list(params['values'].keys()))\r\n        values = tuple(list(params['values'].values()))\r\n        crud_query = '''insert into customers ({0}) values {1};'''.format(column, values)\r\n\r\n        cursor = self.db.cursor()\r\n        cursor.execute(crud_query)\r\n    except Exception as e:\r\n        print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jangan lupa untuk menambahkan fungsi untuk commit,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def dataCommit(self):\r\n    self.db.commit()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita coba buat fungsi untuk memanggil insert pada app.py<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def tambahData(data):\r\n    for param in data['params']:\r\n        mysqldb.insertUser(**param)\r\n    mysqldb.dataCommit()\r\n    print(\"data berhasil ditambahkan\")<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>file app kita akan menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from models.customers import database\r\n\r\ndata = {\r\n    \"params\":[\r\n        {\r\n            \"values\" :{\r\n                \"username\" : \"userpertama\",\r\n                \"namadepan\" : \"rudi\",\r\n                \"namabelakang\" : \"roundhouse\",\r\n                \"email\" : \"rudi.roundhouse@gmail.com\"\r\n            } \r\n        },\r\n        {\r\n            \"values\" :{\r\n                \"username\" : \"userkedua\",\r\n                \"namadepan\" : \"shiroe\",\r\n                \"namabelakang\" : \"ishigami\",\r\n                \"email\" : \"shiroe.ishigami@gmail.com\"\r\n            } \r\n        },\r\n        {\r\n            \"values\" :{\r\n                \"username\" : \"userketiga\",\r\n                \"namadepan\" : \"akatsuki\",\r\n                \"namabelakang\" : \"horizon\",\r\n                \"email\" : \"akatsuki.horizon@gmail.com\"\r\n            } \r\n        }\r\n    ]\r\n}\r\n\r\ndef tambahData(data):\r\n    for param in data['params']:\r\n        mysqldb.insertUser(**param)\r\n    mysqldb.dataCommit()\r\n    print(\"data berhasil ditambahkan\")\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    mysqldb = database()\r\n    if mysqldb.db.is_connected():\r\n        print('Connected to MySQL database')\r\n    \r\n    tambahData(data)\r\n        \r\n    if mysqldb.db is not None and mysqldb.db.is_connected():\r\n        mysqldb.db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Maksud tanda ** pada fungsi mysqldb.insertUser(**param) adalah untuk mengekstrak dict yang dimasukkan dan diubah ke dalam bentuk (key = value).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>ketika berhasil dijalankan kita dapat melihat hasilnya di mysql workbench<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15868,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15868\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/7.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan fungsi update kita melakukan langkah kerja yang sama sehingga menghasilkan kode sebagai berikut pada customers.py.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan mengubah data pada kolom namabelakang dan email dari rudy (id = 1),<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\r\n\"params\":[\r\n        {\r\n            \"userid\": 1,\r\n            \"values\" :{\r\n                \"namabelakang\" : \"pertest\",\r\n                \"email\" : \"rudi.pertest@gmail.com\"\r\n            } \r\n        }\r\n    ]\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def updateUserById(self, **params):\r\n    try:\r\n        crud_query = '''update customers set {0} where userid = {1};'''.format(values, userid)\r\n\r\n        cursor = self.db.cursor()\r\n        cursor.execute(crud_query)\r\n    except Exception as e:\r\n        print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Crud query memiliki dua variabel yang harus kita cari bentuknya, userid dengan mengambil data dari params[\"userid\"] dan values yang memiliki bentuk<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>values = namakolom_1 = \"value_1\", namakolom2 = \"value_2\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Tantangannya adalah pada nama kolom tidak ada tanda string sedangkan pada nilai kolom ada tanda string, artinya kita harus mengubah nilai params[\"values\"] menjadi bentuk seperti itu. Karena dari itu kita akan membuat sebuah fungsi baru untuk melakukan perubahan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def restructureParams(self, **data):\r\n    list_data = ['{0} = \"{1}\"'.format(item[0],item[1]) for item in data.items()]\r\n    result = ', '.join(list_data)\r\n    return result<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita panggil pada fungsi update,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def updateUserById(self, **params):\r\n    try:\r\n        userid = params['userid']\r\n        values = self.restructureParams(**params['values'])\r\n        crud_query = '''update customers set {0} where userid = {1};'''.format(values, userid)\r\n\r\n        cursor = self.db.cursor()\r\n        cursor.execute(crud_query)\r\n    except Exception as e:\r\n        print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Fungsi delete lebih mudah, kita hanya perlu menentukan id dari data yang ingin kita hapus.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Struktur data yang akan kita masukkan akan berbentuk seperti ini,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\r\n\"params\":[\r\n        {\r\n            \"userid\": 8\r\n        }\r\n    ]\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def deleteUserById(self, **params):\r\n    try:\r\n        userid = params['userid']\r\n        crud_query = '''delete from customers where userid = {0};'''.format(userid)\r\n\r\n        cursor = self.db.cursor()\r\n        cursor.execute(crud_query)\r\n    except Exception as e:\r\n        print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Akhirnya kedua file kita akan memiliki struktur,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>customers.py<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mysql.connector import connect\r\n\r\nclass database:\r\n    def __init__(self):\r\n        try:\r\n            self.db = connect(host='localhost',\r\n                              database='perpustakaan',\r\n                              user='root',\r\n                              password='Mysqlbase103')\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def showUsers(self):\r\n        pass\r\n    \r\n    def showUserById(self, **params):\r\n        pass\r\n    \r\n    def insertUser(self, **params):\r\n        try:\r\n            column = ', '.join(list(params['values'].keys()))\r\n            values = tuple(list(params['values'].values()))\r\n            crud_query = '''insert into customers ({0}) values {1};'''.format(column, values)\r\n\r\n            cursor = self.db.cursor()\r\n            cursor.execute(crud_query)\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def updateUserById(self, **params):\r\n        try:\r\n            userid = params['userid']\r\n            values = self.restructureParams(**params['values'])\r\n            crud_query = '''update customers set {0} where userid = {1};'''.format(values, userid)\r\n\r\n            cursor = self.db.cursor()\r\n            cursor.execute(crud_query)\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def deleteUserById(self, **params):\r\n        try:\r\n            userid = params['userid']\r\n            crud_query = '''delete from customers where userid = {0};'''.format(userid)\r\n\r\n            cursor = self.db.cursor()\r\n            cursor.execute(crud_query)\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def dataCommit(self):\r\n        self.db.commit()\r\n        \r\n    def restructureParams(self, **data):\r\n        list_data = ['{0} = \"{1}\"'.format(item[0],item[1]) for item in data.items()]\r\n        result = ', '.join(list_data)\r\n        return result<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>app.py<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = {\r\n    \"params\":[\r\n        {\r\n            \"values\" :{\r\n                \"username\" : \"userpertama\",\r\n                \"namadepan\" : \"rudi\",\r\n                \"namabelakang\" : \"roundhouse\",\r\n                \"email\" : \"rudi.roundhouse@gmail.com\"\r\n            } \r\n        },\r\n        {\r\n            \"values\" :{\r\n                \"username\" : \"userkedua\",\r\n                \"namadepan\" : \"shiroe\",\r\n                \"namabelakang\" : \"ishigami\",\r\n                \"email\" : \"shiroe.ishigami@gmail.com\"\r\n            } \r\n        },\r\n        {\r\n            \"values\" :{\r\n                \"username\" : \"userketiga\",\r\n                \"namadepan\" : \"akatsuki\",\r\n                \"namabelakang\" : \"horizon\",\r\n                \"email\" : \"akatsuki.horizon@gmail.com\"\r\n            } \r\n        }\r\n    ]\r\n}\r\n\r\ndef tambahData(data):\r\n    for param in data['params']:\r\n        mysqldb.insertUser(**param)\r\n    mysqldb.dataCommit()\r\n    print(\"data berhasil ditambahkan\")\r\n\r\ndef ubahData(data):    \r\n    for param in data['params']:\r\n        mysqldb.updateUserById(**param)\r\n    mysqldb.dataCommit()\r\n    print(\"data berhasil diubah\")\r\n\r\ndef hapusData(data):\r\n    for param in data['params']:\r\n        mysqldb.deleteUserById(**param)\r\n    mysqldb.dataCommit()\r\n    print(\"data berhasil dihapus\")\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    mysqldb = database()\r\n    if mysqldb.db.is_connected():\r\n        print('Connected to MySQL database')\r\n    \r\n    #isi dengan fungsi yang kalian butuhkan\r\n    #jangan lupa untuk menyesuaikan isi variabel data dengan struktur data yang dibutuhkan\r\n        \r\n    if mysqldb.db is not None and mysqldb.db.is_connected():\r\n        mysqldb.db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --><\/p>","waktu_publish":"2021-10-04 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:40:40","waktu_publish_formatted":" Senin, 04 Oktober 2021. 08:00:00 WIB."},{"id":1117,"uuid":"cb751119-f2fe-41db-9f2d-9ead7d8d483b","author_user_id":11253,"materi_section_id":326,"judul":"MongoDB & Python","permalink":"mongodb-python","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan mencoba untuk mengontrol basisdata mongodb menggunakan script python. Untuk hal ini kita membutuhkan driver tambahan yaitu pymongo.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa fungsionalitas yang dibawa oleh pymongo adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Membuat koneksi dengan basisdata<\/li>\r\n<li>bekerja dengan basisdata<\/li>\r\n<li>bekerja dengan koleksi dan dokumen<\/li>\r\n<li>bekerja dengan enkripsi data<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita harus menyalakan terlebih dahulu virtual enviroment yang telah kita buat untuk pelatihan ini. Memulai virtual environment bisa dengan mengetikan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>workon [nama virtual env]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Buka command prompt, lalu kita buka virtual environment kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>workon ms_python<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika nama virtual environment kita telah muncul di depan maka kita telah berhasil menyalakan virtual environment kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15851,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15851\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi driver kita bisa mengetikan kode pada command prompt kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install pymongo<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Membuka Koneksi<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sama dengan apa yang kita lakukan dengan mysql, untuk bisa mengakses server mongodb yang aktif maka kita harus melakukan koneksi terhadap server tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kesempatan kali ini kita akan menggunakan IDE yang kita miliki, buka terlebih dahulu visual studio kita. lalu pada menu file pilih open folder. Arahkan dimana file pelatihan kita akan\/telah disimpan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pilih new file pada sidebar, dan gunakan ekstension .py<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15853,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15853\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada file python kita, untuk membuat koneksi, langkah pertama yang harus kita lakukan adalah melakukan import modul yang kita miliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>untuk membuat koneksi dengan server mongodb yang kita miliki dapat dilakukan dengan menggunakan memanggil mongoclient dan memasukkannya ke dalam variabel.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nosql_db = MongoClient()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Secara otomatis kode tersebut akan menghubungkan kita dengan server default yaitu localhost pada port 27017. Untuk memasukkan host dan port tertentu kita bisa memanfaatkan parameter pada mongoClient().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nosql_db = MongoClient(host=\"localhost\", port=27017)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelahnya kita dapat melakukan pengetesan dengan menggunakan metode print().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(nosql_db)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>MongoClient(host=['localhost:27017'], document_class=dict, tz_aware=False, connect=True)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menutup koneksi kita dapat menggunakan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nosql_db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah melakukan akses ke dalam server mongodb saatnya kita melakukan akses pada database kita. Untuk melihat daftar basisdata yang kita miliki kita bisa menggunakan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(nosql_db.list_database_names())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk membuat\/memilih basisdata kita bisa melakukan dengan cara<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>db = nosql_db.bios<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>atau,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>db = nosql_db[\"bios\"]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>db --&gt; variabel atau objek basisdata kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>bios --&gt; nama basisdata kita [ubah sesuai kebutuhan]<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah memilih basisdata yang kita inginkan, kita dapat memilih tabel\/dokumen yang ingin kita gunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mongo_doc = db.customers\r\nprint (mongo_doc)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>menghasilkan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Collection(Database(MongoClient(host=['localhost:27017'], document_class=dict, tz_aware=False, connect=True), 'bios'), 'customers')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kesimpulannya, persiapan awal yang kita lakukan berdasar pada tiga persiapan awal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Membuka koneksi dengan server<\/li>\r\n<li>Memilih basisdata<\/li>\r\n<li>memilih dokumen<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Kode lengkapnya menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient\r\n\r\nnosql_db = MongoClient()\r\ndb = nosql_db.bios\r\nmongo_doc = db.customers\r\n\r\nprint(mongo_doc)\r\n\r\nnosql_db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Membaca Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Berbeda dengan saat kita menggunakan mysql, menggunakan mongodb pada python menghilangkan kewajiban kita untuk menggunakan cursor. Pada saat kita akan membaca data kita bisa menggunakan metode find().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan pencarian keseluruhan kita menggunakan metode dengan query kosong.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mongo_doc.find()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>untuk mencari dengan query tertentu kita dapat menyiapkan querynya terlebih dahulu<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>query = ''' query yang akan kita gunakan '''<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita masukkan pada method find<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>result = mongo_doc.find(query)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menampilkan kita bisa menggunakan for loop,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for data in result:\r\n    print(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita ingin mencari data dengan filter seperti pada pertemuan tentang mongodb, yaitu siapa saja programmer yang memiliki kontribusi tentang OOP dan mendapatkan awards pada tahun diantara 1990 - 2000. Kode lengkap kita menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient\r\n\r\nnosql_db = MongoClient()\r\ndb = nosql_db.bios\r\nmongo_doc = db.customers\r\n\r\nquery = {\r\n        \"awards.year\" : {\"$gt\":1990, \"$lt\":2000}, \r\n        \"contribs\":\"OOP\"\r\n    }\r\nresult = mongo_doc.find(query)\r\n\r\nfor data in result:\r\n    print(data)\r\n\r\nnosql_db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Perbedaan paling kentara adalah key pada query. Saat menggunakan pymongo, key pada query yang digunakan harus dalam kondisi string (misalnya: \"$gt\").<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Manipulasi Data<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Operasi manipulasi data terdiri dari beberapa fungsi utama diantaranya, Menambahkan, Mengubah dan Menghapus. Struktur yang digunakan lebih sederhana dibandingkan dengan mysql kemarin.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Insert<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>untuk memasukkan data kita dapat menggunakan insert_one, yang perlu diingat adalah data yang kita masukkan harus berbentuk seperti json\/dict.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = {}\r\n\r\nmongo_doc.insert_one(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memasukkan banyak data kita bisa memanfaatkan insert_many(). Data haruslah berbentuk dict di dalam list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = [{}]\r\n\r\nmongo_doc.insert_many(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Update<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sama dengan insert pada update terdapat dua method utama, update_one dan update_many. Update_one digunakan saat kita ingin mengganti satu nilai saja, sedangkan update_many digunakan saat kita akan menganti semua nilai yang masuk ke dalam syarat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Secara umum, method update_one atau update_many memiliki struktur yang sama, yaitu<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mongo_doc.update({query syarat}, {nilai pengganti})<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Delete<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sama seperti insert dan update, delete memiliki bentuk delete_one dan delete_many. delete_one digunakan untuk menghapus satu nilai, sedangkan delete_many digunakan untuk menghapus semua nilai yang memenuhi syarat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Secara umum, method delete_one atau delete_many memiliki struktur yang sama, yaitu<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mongo_doc.delete({syarat})<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Project Perpustakaan<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita coba untuk mengimplementasikan ke dalam suatu contoh mini project. Kita akan membuat sebuah basisdata perpustakaan yang memiliki koleksi books untuk menyimpan data buku yang kita miliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Persiapan Berkas<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita siapkan dulu folder yang akan kita gunakan, pada folder kerja (folder pelatihan ini) kalian buat folder mongodb. lalu buka folder tersebut dengan visual studio code.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu di folder tersebut buat kembali folder models dan file python app.py<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada folder models kita buat books.py sesuai nama koleksi kita nanti<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15944,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15944\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1-1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita tinggalkan dulu vscode dan berpindah ke cmd\/terminal untuk mempersiapkan basisdata\/schema.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Persiapan Database<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan membuat sebuah basisdata dengan nama perpustakaan dan koleksi bernama books. Pertama kita masuk terlebih dahulu ke dalam server mongo. Pada terminal ketik,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>mongo<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita buat database kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>use perpustakaan;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu setelah itu kita buat koleksi books<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>db.createCollection(\"books\");<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengerjakan Model<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita kembali ke VSCode dan buka file books.py pada folder models.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Model customers kita akan mempunyai 6 fungsi utama, yaitu:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Melihat semua buku<\/li>\r\n<li>Mencari\/melihat satu buku by id<\/li>\r\n<li>Mencari daftar buku dengan nama buku<\/li>\r\n<li>Menambahkan data buku<\/li>\r\n<li>Mengubah data buku by id<\/li>\r\n<li>Menghapus data buku by id<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Melihat fungsi-fungsi di atas maka kita akan membuat class database dengan metode seperti terlihat pada gambar berikut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15945,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15945\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2-1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>pada fungsi init kita akan membuat koneksi pada server mongodb kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def __init__(self):\r\n    try:\r\n        self.nosql_db = MongoClient()\r\n        self.db = self.nosql_db.perpustakaan\r\n        mongo_col = self.db.books\r\n        print(\"database connected\")\r\n    except Exception as e:\r\n        print(e)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada tutorial kali ini kita akan mengerjakan fungsi untuk memasukkan data. data yang akan kita masukkan adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:file {\"id\":15946,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/bestsellers-with-categories.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/bestsellers-with-categories.csv\">bestsellers-books<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/bestsellers-with-categories.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan memasukkan data name, author, year, genre.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Karena insert membutuhkan data dalam bentuk dict, maka kita akan membuka berkas csv tersebut dan mengubahnya menjadi dict<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita akan mengerjakan fungsi menambahkan data. Untuk inputan pada fungsi kita akan tidak memerlukan parameter kwargs karena data yang harus masuk adalah dict. Kita akan menggunakan parameter biasa.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def insertBook(document):\r\n    self.mongo_col.insert_one(document)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Salah satu kelebihan mongodb adalah kemudahan dalam menciptakan kode ketika bentuk data kita json atau dict.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita coba buat fungsi untuk membuka berkas csv pada app.py<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import csv\r\n\r\ndata = open(\"bestsellers with categories.csv\",encoding='utf-8')\r\nbooks = csv.reader(data, delimiter=',')\r\nfor book in books:\r\n    print(book)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>['Name', 'Author', 'User Rating', 'Reviews', 'Price', 'Year', 'Genre']\r\n['10-Day Green Smoothie Cleanse', 'JJ Smith', '4.7', '17350', '8', '2016', 'Non Fiction']\r\n['11\/22\/63: A Novel', 'Stephen King', '4.6', '2052', '22', '2011', 'Fiction']\r\n['12 Rules for Life: An Antidote to Chaos', 'Jordan B. Peterson', '4.7', '18979', '15', '2018', 'Non Fiction']\r\n['1984 (Signet Classics)', 'George Orwell', '4.7', '21424', '6', '2017', 'Fiction']\r\n...\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>karena kita tidak membutuhkan baris pertama (yaitu judul kolom, dan kita hanya membutuhkan name, author, year, dan genre. maka kode kita bisa kita ubah menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = open(\"bestsellers with categories.csv\",encoding='utf-8')\r\nbooks = csv.reader(data, delimiter=',')\r\nnext(books)\r\n\r\n\r\nfor book in books:\r\n    data = {\r\n        \"nama\": book[0],\r\n        \"pengarang\": book[1],\r\n        \"tahunterbit\": book[5],\r\n        \"genre\": book[6]\r\n    }<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Next(books) digunakan untuk melewati list pertama dari books(judul kolom). Selanjutnya tinggal panggi fungsi insert dari models. dan masukkan di dalam iterasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = open(\"bestsellers with categories.csv\",encoding='utf-8')\r\nbooks = csv.reader(data, delimiter=',')\r\nnext(books)\r\n\r\nfor book in books:\r\n    data = {\r\n        \"nama\": book[0],\r\n        \"pengarang\": book[1],\r\n        \"tahunterbit\": book[5],\r\n        \"genre\": book[6]\r\n    }\r\n    db.insertBook(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>file app kita akan menjadi seperti ini,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient\r\nfrom models.books import database as db\r\nimport csv\r\n\r\ndef add_book():\r\n    data = open(\"bestsellers with categories.csv\",encoding='utf-8')\r\n    books = csv.reader(data, delimiter=',')\r\n    next(books)\r\n\r\n    for book in books:\r\n        try:\r\n            data = {\r\n                \"nama\": book[0],\r\n                \"pengarang\": book[1],\r\n                \"tahunterbit\": book[5],\r\n                \"genre\": book[6]\r\n            }\r\n            db.insertBook(data)\r\n        except Exception as e:\r\n            print(\"Kesalahan pada saat memasukan data: {}\".format(e))\r\n            break\r\n\r\nif __name__ == \"__main__\":\r\n    db = db()\r\n    add_book()\r\n    db.nosql_db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita lihat pada mongodb compass maka hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15950,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15950\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/3-1-1024x465.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita kan mengerjakan sebuah fungsi untuk mencari nama buku dengan masukkan nama buku tersebut. Untuk hal ini kita akan memanfaatkan regex. Sehingga fungsi kita pada books.py menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Akhirnya kedua file kita akan memiliki struktur,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def searchBookByName(self, key):\r\n    query = {\"nama\" : {\"$regex\": key, \"$options\": \"i\"}}\r\n    result = self.mongo_col.find(query)\r\n    return result<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>options digunakan untuk melakukan konfigurasi pada regex kita, opsi \"i\" melambangkan case insensitive, artinya \"indonesia\" dan \"INDONESIA\" akan dianggap kata yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pada file app.py kita tambahkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def search_books(params):\r\n    for book in db.searchBookByName(params):\r\n        print(book)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>kita akan coba jalankan dengan menggunakan kata kunci \"harry\". hasilnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{'_id': ObjectId('606b608b5e1722ec8be436ba'), 'nama': 'Fantastic Beasts and Where to Find Them: The Original Screenplay (Harry Potter)', 'pengarang': 'J.K. Rowling', 'tahun terbit': '2016', 'genre': 'Fiction'}\r\n{'_id': ObjectId('606b608b5e1722ec8be436ed'), 'nama': 'Harry Potter and the Chamber of Secrets: The Illustrated Edition (Harry Potter, Book 2)', 'pengarang': 'J.K. Rowling', 'tahun terbit': '2016', 'genre': 'Fiction'}\r\n{'_id': ObjectId('606b608b5e1722ec8be436ee'), 'nama': 'Harry Potter and the Cursed Child, Parts 1 &amp; 2, Special Rehearsal Edition Script', 'pengarang': 'J.K. Rowling', 'tahun terbit': '2016', 'genre': 'Fiction'} {'_id': ObjectId('606b608b5e1722ec8be436ef'), 'nama': 'Harry Potter and the Goblet of Fire: The Illustrated Edition (Harry Potter, Book 4) (4)', 'pengarang': 'J. K. Rowling', 'tahun terbit': '2019', 'genre': 'Fiction'}\r\n{'_id': ObjectId('606b608b5e1722ec8be436f0'), 'nama': 'Harry Potter and the Prisoner of Azkaban: The Illustrated Edition (Harry Potter, Book 3)', 'pengarang': 'J.K. Rowling', 'tahun terbit': '2017', 'genre': 'Fiction'}\r\n{'_id': ObjectId('606b608b5e1722ec8be436f1'), 'nama': \"Harry Potter and the Sorcerer's Stone: The Illustrated Edition (Harry Potter, Book 1)\", 'pengarang': 'J.K. Rowling', 'tahun terbit': '2016', 'genre': 'Fiction'}\r\n{'_id': ObjectId('606b608b5e1722ec8be436f2'), 'nama': 'Harry Potter Coloring Book', 'pengarang': 'Scholastic', 'tahun terbit': '2015', 'genre': 'Non Fiction'}\r\n{'_id': ObjectId('606b608b5e1722ec8be436f3'), 'nama': 'Harry Potter Paperback Box Set (Books 1-7)', 'pengarang': 'J. K. Rowling', 'tahun terbit': '2016', 'genre': 'Fiction'}\r\n{'_id': ObjectId('606b608b5e1722ec8be4382f'), 'nama': 'The Unofficial Harry Potter Cookbook: From Cauldron Cakes to Knickerbocker Glory--More Than 150 Magical Recipes for&hellip;', 'pengarang': 'Dinah Bucholz', 'tahun terbit': '2019', 'genre': 'Non Fiction'}\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kode akhir pada mini project kita akan berbentuk seperti di bawah ini,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>books.py<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient\r\n\r\nclass database:\r\n    def __init__(self):\r\n        try:\r\n            self.nosql_db = MongoClient()\r\n            self.db = self.nosql_db.perpustakaan\r\n            self.mongo_col = self.db.books\r\n            print(\"database connected\")\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def showBooks(self):\r\n        pass\r\n    \r\n    def showBookById(self):\r\n        pass\r\n    \r\n    def searchBookByName(self, key):\r\n        query = {\"nama\" : {\"$regex\": key, \"$options\": \"i\"}}\r\n        result = self.mongo_col.find(query)\r\n        return result\r\n    \r\n    def insertBook(self,document):\r\n        self.mongo_col.insert_one(document)\r\n    \r\n    def updateBookById(self):\r\n        pass\r\n    \r\n    def deleteBookById(self):\r\n        pass\r\n    \r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>app.py<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient\r\nfrom models.books import database as db\r\nimport csv\r\n\r\ndef add_book():\r\n    data = open(\"bestsellers with categories.csv\",encoding='utf-8')\r\n    books = csv.reader(data, delimiter=',')\r\n    next(books)\r\n\r\n    for book in books:\r\n        try:\r\n            data = {\r\n                \"nama\": book[0],\r\n                \"pengarang\": book[1],\r\n                \"tahun terbit\": book[5],\r\n                \"genre\": book[6]\r\n            }\r\n            db.insertBook(data)\r\n        except Exception as e:\r\n            print(\"Kesalahan pada saat memasukan data: {}\".format(e))\r\n            break\r\n\r\ndef search_books(params):\r\n    for book in db.searchBookByName(params):\r\n        print(book)\r\n\r\nif __name__ == \"__main__\":\r\n    db = db()\r\n    kata_kunci = \"harry\"\r\n    search_books(kata_kunci)\r\n    db.nosql_db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --><\/p>","waktu_publish":"2021-10-05 08:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:40:48","waktu_publish_formatted":" Selasa, 05 Oktober 2021. 08:00:00 WIB."},{"id":1118,"uuid":"ce6eceb2-ccd1-4411-a809-b429346512ce","author_user_id":11253,"materi_section_id":326,"judul":"Object Mapper","permalink":"object-mapper","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Object Mapper adalah istilah yang dipakai untuk menggambarkan secara umum dua hal yang akan kita pelajar hari ini yaitu Object Relational Mapper (ORM) dan Object Document Mapper (ODM). Mereka adalah dua hal yang berbeda tapi memiliki fungsi yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Object Mapper adalah sebuah tool\/metode yang digunakan untuk menghubungkan bahasa pemograman berorientasi object, dalam hal ini python, dengan database. Tujuannya adalah untuk mempermudah kita dalam menggunakan database yang kita inginkan, tanpa perlu menggunakan query database secara langsung.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dari pengertian di atas kita dapat menarik arti ORM dan ODM. ORM adalah ketika database yang digunakan berbasis relasi dan ODM adalah ketika database yang kita gunakan berbasis dokumen.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk pelatihan kali ini ORM yang akan kita gunakan adalah SQLAlchemy dengan database mysql dan ODM yang akan kita gunakan adalah Mongoengine dengan database MongoDB.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebelum kita mulai jangan lupa menyalakan virtual environment.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>SQLAlchemy<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi ketikkan query berikut di cmd\/terminal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install sqlalchemy<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kegiatan kali ini kita akan menggunakan basisdata mysql yang telah kita buat, yaitu rentalfilm.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita buka file python menggunakan VSCode. Kita akan bekerja dari berkas tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sama seperti saat menggunakan mysql secara langsung, yang perlu dilakukan pertama kali adalah dengan membuka koneksi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import sessionmaker\r\n\r\n\r\nengine = create_engine('mysql+mysqlconnector:\/\/root:Mysqlbase103@localhost:3306\/rentalfilm', echo = True)\r\nSession = sessionmaker(bind=engine)\r\nsession = Session()\r\n\r\nif session:\r\n    print(\"Connection Success\")<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Inisiasi engine adalah saat kita menghubungkan dengan server dan basisdata kita. Pada bagian ini kita perlu menuliskan beberapa hal<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>sql dan connector yang kita gunakan - mysql+mysqlconnector<\/li>\r\n<li>user dan password mysql kita - root:Mysqlbase103<\/li>\r\n<li>host dan port kita - localhost:3306<\/li>\r\n<li>database kita - rentalfilm<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Session digunakan untuk memulai sesi manipulasi basisdata, dengan session inilah nanti kita akan mengeksekusi perintah seperti<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>insert<\/li>\r\n<li>delete<\/li>\r\n<li>commit, atau<\/li>\r\n<li>sql query<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Models<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang sudah kita kenal pada materi python - mysql, models adalah berkas\/script yang digunakan sebagai struktur penghubung antara aplikasi utama dan basisdata. Pada SQLAlchemy juga kita perlu mendefinisikan models kita tapi dengan cara yang lebih elegan, dengan objek. Mari kita buat model untuk basisdata rentalfilm dan tabel customers<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\nBase = declarative_base()\r\n\r\nclass Customers(Base):\r\n   __tablename__ = 'customers'\r\n   id = Column(Integer, primary_key =  True)\r\n   username = Column(String)\r\n   namaLengkap = Column(String)\r\n   email = Column(String)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Base = declarative_base() - Menginisasi base class dimana semua class yang akan kita buat nanti adalah turunan (inheritance) dari class ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita buat sebuah class dengan struktur yang sama dengan tabel kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Membaca Data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan membaca data kita dengan memanfaatkan session yang telah kita buat sebelumnya dan menggunakan metode query(namaclass).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>result =  session.query(Customers).all()\r\n\r\nfor row in result:\r\n    print(row.id, row.username, row.namaLengkap, row.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>1 test1 test user 1 test1@gmail.com\r\n2 test2 test user 2 test2@gmail.com<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada sql kita mengenal persyaratan dengan query \"Where\". Pada SQLAlchemy hal tersebut dilakukan dengan metode filter().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>result = session.query(Customers).filter(Customers.id==2)\r\nfor row in result:\r\n    print(row.id, row.username, row.namaLengkap, row.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>2 test2 test user 2 test2@gmail.com<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kode lengkap kita menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\nBase = declarative_base()\r\nengine = create_engine('mysql+mysqlconnector:\/\/root:Mysqlbase103@localhost:3306\/rentalfilm', echo = True)\r\nSession = sessionmaker(bind=engine)\r\nsession = Session()\r\n\r\nif session:\r\n    print(\"Connection Success\")\r\n\r\nclass Customers(Base):\r\n   __tablename__ = 'customers'\r\n   id = Column(Integer, primary_key =  True)\r\n   username = Column(String)\r\n   namaLengkap = Column(String)\r\n   email = Column(String)\r\n   \r\n   \r\nresult =  session.query(Customers).all()\r\n\r\nfor row in result:\r\n    print(row.id, row.username, row.namaLengkap, row.email)\r\n    \r\nresult = session.query(Customers).filter(Customers.id==2)\r\n\r\nfor row in result:\r\n    print(row.id, row.username, row.namaLengkap, row.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Models bisa kita pisahkan kepada folder tersendiri jika seperti pada hari kemarin untuk merapikan kode kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Manipulasi Data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memanipulasi data kita akan menggunakan metode <strong>commit()<\/strong> di akhir proses kita, misalkan kita akan melakukan insert maka kode kita menjadi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\nBase = declarative_base()\r\nengine = create_engine('mysql+mysqlconnector:\/\/root:Mysqlbase103@localhost:3306\/rentalfilm', echo = True)\r\nSession = sessionmaker(bind=engine)\r\nsession = Session()\r\n\r\nif session:\r\n    print(\"Connection Success\")\r\n\r\nclass Customers(Base):\r\n   __tablename__ = 'customers'\r\n   id = Column(Integer, primary_key =  True)\r\n   username = Column(String)\r\n   namaLengkap = Column(String)\r\n   email = Column(String)\r\n\r\ndata = {\r\n    \"username\" : 'RK',\r\n    \"namaLengkap\" : 'Ravi Kumar', \r\n    \"email\" : 'ravi@gmail.com'\r\n}\r\n\r\nsession.add(Customers(**data))\r\nsession.commit()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Customers(**data) itu sebanding dengan Customers(username='RK, namaLengkap = 'Ravi Kumar', email = 'ravi@gmail.com')<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita lihat data tabel kita menggunakan kode sebelumnya, didapatkan hasil,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>1 test1 test user 1 test1@gmail.com\r\n2 test2 test user 2 test2@gmail.com\r\n3 RK Ravi Kumar ravi@gmail.com<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengubah data kita hanya perlu memanggil data yang diperlukan lalu mengubah parameternya, misalkan kita ingin mengganti username Ravi Kumar menjadi RaviK.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>result =  session.query(Customers).filter(Customers.id==3).one()\r\nprint(result.id, result.username, result.namaLengkap, result.email)\r\nresult.username = \"RaviK\"\r\nsession.commit()\r\n\r\nresult =  session.query(Customers).filter(Customers.id==3).one()\r\nprint(result.id, result.username, result.namaLengkap, result.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>3 RK Ravi Kumar ravi@gmail.com\r\n3 RaviK Ravi Kumar ravi@gmail.com<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Menghapus kita bisa menggunakan metode delete() dari session, cara yang digunakan sama dengan saat mengubah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>result =  session.query(Customers).filter(Customers.id==3).one()\r\nprint(result.id, result.username, result.namaLengkap, result.email)\r\nsession.delete(result)\r\nsession.commit()\r\n\r\nresult =  session.query(Customers).all()\r\nfor row in result:\r\n    print(row.id, row.username, row.namaLengkap, row.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>3 RK Ravi Kumar ravi@gmail.com\r\n\r\n1 test1 test user 1 test1@gmail.com\r\n2 test2 test user 2 test2@gmail.com<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading --><\/p>\r\n<h2>Mongoengine<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi ketikkan query berikut di cmd\/terminal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install mongoengine<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kegiatan kali ini kita akan menggunakan basisdata mongodb yang telah kita buat, yaitu rentalfilm.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita buka file python menggunakan VSCode. Kita akan bekerja dari berkas tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sama seperti saat menggunakan mysql secara langsung, yang perlu dilakukan pertama kali adalah dengan membuka koneksi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mongoengine import connect\r\n\r\nconnection = connect(db=\"rentalfilm\", host=\"localhost\", port=27017)\r\n\r\nif connection:\r\n    print(\"MongoDB Connected\")<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Models<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang sudah kita kenal pada materi python - mongodb, models adalah berkas\/script yang digunakan sebagai struktur penghubung antara aplikasi utama dan basisdata. Pada Mongoengine juga kita perlu mendefinisikan models kita tapi dengan cara yang lebih elegan, dengan objek. Mari kita buat model untuk basisdata rentalfilm dan koleksi customers.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15993,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15993\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1-2-1024x395.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika belum ada, silahkan hapus data terdahulu, lalu masukkan data di bawah ini dengan menu <em>add data<\/em> - <em>Insert Document<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[\r\n{\r\n    \"_id\": 1,\r\n    \"username\": \"Fernanda\",\r\n    \"fullname\": \"Fernanda Ramos\",\r\n    \"email\": \"fernadaramos4@uol.com.br\"\r\n},\r\n{\r\n    \"_id\": 2,\r\n    \"username\": \"Mark\",\r\n    \"fullname\": \"Mark Philips\",\r\n    \"email\": \"mphilips12@shaw.ca\"\r\n},\r\n{\r\n    \"_id\": 3,\r\n    \"username\": \"Jennifer\",\r\n    \"fullname\": \"Jennifer Peterson\",\r\n    \"email\": \"jenniferp@rogers.ca\"\r\n}\r\n]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Melihat data di atas, model kita menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mongoengine import connect\r\nfrom mongoengine import Document, StringField, DynamicDocument\r\n\r\nconnection = connect(db=\"rentalfilm\", host=\"localhost\", port=27017)\r\n\r\nif connection:\r\n    print(\"MongoDB Connected\")\r\n    \r\n\r\nclass customers(Document):\r\n    username = StringField(required=True, max_length=70)\r\n    fullname = StringField(required=True, max_length=20)\r\n    email = StringField(required=True, max_length=20)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pastikan nama class nya adalah nama koleksi kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat dua jenis base class yang bisa dipilih, yang pertama adalah model dasar, yaitu dokumen. Kedua adalah DynamicDocument. Dynamic document adalah base class yang membuat kita dapat secara dinamis menambahkan field kita sendiri saat dibutuhkan. Dimana document lebih statis.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Membaca Data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan membaca data kita dengan memanfaatkan session yang telah kita buat sebelumnya dan menggunakan metode object().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for doc in customers.objects:\r\n    print (doc.username, doc.fullname, doc.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Fernanda Fernanda Ramos fernadaramos4@uol.com.br\r\nMark Mark Philips mphilips12@shaw.ca\r\nJennifer Jennifer Peterson jenniferp@rogers.ca<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika ingin melakukan pencarian dengan syarat bisa dengan menambahkan sebagai parameter pada objects.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for doc in customers.objects(username='Fernanda'):\r\n    print (doc.username, doc.fullname, doc.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Fernanda Fernanda Ramos fernadaramos4@uol.com.br<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kode lengkap kita menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mongoengine import connect\r\nfrom mongoengine import Document, StringField, DynamicDocument\r\n\r\nconnection = connect(db=\"rentalfilm\", host=\"localhost\", port=27017)\r\n\r\nif connection:\r\n    print(\"MongoDB Connected\")\r\n    \r\n\r\nclass customers(Document):\r\n    username = StringField(required=True, max_length=70)\r\n    fullname = StringField(required=True, max_length=20)\r\n    email = StringField(required=True, max_length=20)\r\n    \r\nfor doc in customers.objects:\r\n    print (doc.username, doc.fullname, doc.email)\r\n    \r\nfor doc in customers.objects(username='Fernanda'):\r\n    print (doc.username, doc.fullname, doc.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Models bisa kita pisahkan kepada folder tersendiri jika seperti pada hari kemarin untuk merapikan kode kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Manipulasi Data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memanipulasi data kita akan menggunakan metode <strong>save() <\/strong>di akhir proses kita, misalkan kita akan melakukan insert maka kode kita menjadi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mongoengine import connect\r\nfrom mongoengine import Document, StringField, DynamicDocument\r\n\r\nconnection = connect(db=\"rentalfilm\", host=\"localhost\", port=27017)\r\n\r\nif connection:\r\n    print(\"MongoDB Connected\")\r\n    \r\n\r\nclass customers(Document):\r\n    username = StringField(required=True, max_length=70)\r\n    fullname = StringField(required=True, max_length=20)\r\n    email = StringField(required=True, max_length=20)\r\n\r\n\r\n\r\ndata = {\r\n    \"username\" : 'Mary',\r\n    \"fullname\" : 'Mary Marijoa', \r\n    \"email\" : 'mary@gmail.com'\r\n}\r\n\r\ncustomers(**data).save()\r\n\r\nfor doc in customers.objects:\r\n    print (doc.username, doc.fullname, doc.email)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita lihat data tabel kita menggunakan kode sebelumnya, didapatkan hasil,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Fernanda Fernanda Ramos fernadaramos4@uol.com.br\r\nMark Mark Philips mphilips12@shaw.ca\r\nJennifer Jennifer Peterson jenniferp@rogers.ca\r\nMary Mary Marijoa mary@gmail.com<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengubah data kita hanya perlu memanggil data yang diperlukan lalu mengubah parameternya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>doc_1 = customers.objects(username='Mary').first()\r\nprint (doc_1.to_json())\r\n\r\ndoc_1.username = 'MM'\r\ndoc_1.save()\r\n\r\nprint (customers.objects().to_json())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\"_id\": {\"$oid\": \"606cc512e56d4d85a30a81d2\"}, \"username\": \"Mary\", \"fullname\": \"Mary Marijoa\", \"email\": \"mary@gmail.com\"}\r\n\r\n[{\"_id\": 1, \"username\": \"Fernanda\", \"fullname\": \"Fernanda Ramos\", \"email\": \"fernadaramos4@uol.com.br\"}, {\"_id\": 2, \"username\": \"Mark\", \"fullname\": \"Mark Philips\", \"email\": \"mphilips12@shaw.ca\"}, {\"_id\": 3, \"username\": \"Jennifer\", \"fullname\": \"Jennifer Peterson\", \"email\": \"jenniferp@rogers.ca\"}, {\"_id\": {\"$oid\": \"606cc512e56d4d85a30a81d2\"}, \"username\": \"MM\", \"fullname\": \"Mary Marijoa\", \"email\": \"mary@gmail.com\"}]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>first() - digunakan untuk mengambil hasil pertama dari pencarian.<\/li>\r\n<li>to_json() - digunakan untuk mengubah bentuk keluaran menjadi json.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menghapus, cara yang dilakukan hampir sama dengan saat akan mengubah. hanya saja kita menggunakan metode delete()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>doc_1 = customers.objects(username='MM').first()\r\ndoc_1.delete()\r\n\r\nprint (customers.objects().to_json()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[{\"_id\": 1, \"username\": \"Fernanda\", \"fullname\": \"Fernanda Ramos\", \"email\": \"fernadaramos4@uol.com.br\"}, {\"_id\": 2, \"username\": \"Mark\", \"fullname\": \"Mark Philips\", \"email\": \"mphilips12@shaw.ca\"}, {\"_id\": 3, \"username\": \"Jennifer\", \"fullname\": \"Jennifer Peterson\", \"email\": \"jenniferp@rogers.ca\"}]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti itulah kira-kira tutorial singkat tentang ORM dan ODM. Seperti yang terlihat, Object Mapper menyebabkan query yang perlu kita tuliskan terutama pada SQL jadi lebih singkat dan mudah dibaca.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<h2><span style=\"font-size: 14pt;\">Pustaka Tambahan<\/span><\/h2>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/sqlalchemy\/\">https:\/\/www.tutorialspoint.com\/sqlalchemy\/<\/a><\/p>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/mongoengine\/\">https:\/\/www.tutorialspoint.com\/mongoengine\/<\/a><\/p>\r\n<p><a href=\"https:\/\/docs.sqlalchemy.org\/en\/14\/\">https:\/\/docs.sqlalchemy.org\/en\/14\/<\/a><\/p>\r\n<p><a href=\"http:\/\/docs.mongoengine.org\/\">http:\/\/docs.mongoengine.org\/<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-10-06 08:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:40:56","waktu_publish_formatted":" Rabu, 06 Oktober 2021. 08:00:00 WIB."},{"id":1119,"uuid":"731358c5-e790-497a-be84-aad4f654a17b","author_user_id":11253,"materi_section_id":326,"judul":"Microservices & REST API","permalink":"microservices-rest-api","konten":"<p><!-- wp:heading --><\/p>\r\n<h2>Microservices<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Cara terbaik untuk menjelaskan microservices adalah dengan memulai menjelaskan apa itu arsitektur monolitik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Telah lama arsitektur monolitik digunakan untuk membangun aplikasi dan menyediakan fungsi dan layanan yang berbeda kepada pelanggan mereka. Semua kode untuk layanan dan fungsi aplikasi monolitik ditemukan dalam bagian pemrograman yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Arsitektur monolitik dirancang untuk berdiri sendiri; komponen program saling berhubungan dan saling bergantung dalam satu kesatuan program. setiap komponen dan komponen terkaitnya harus ada agar kode dapat dieksekusi atau dikompilasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":16005,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-16005\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1-3.png\" alt=\"\" \/>\r\n<figcaption>Arsitektur Monolitik. sumber: blog.dreamfactory.com<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Selain itu, jika ada komponen program yang harus diperbarui, seluruh aplikasi harus ditulis ulang, sedangkan dalam aplikasi modular, setiap modul terpisah (seperti layanan mikro) dapat diubah tanpa mempengaruhi bagian lain dari program.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Arsitektur Monolitik biasanya digunakan saat sebuah perusahaan atau aplikasi pertama kali mulai karena kemudahan dalam pembuatan dan manajemen. Akan tetapi, pada akhirnya, perusahaan perlu untuk meningkatkan kemampuan dan memperbesar aplikasinya seiring dengan pertumbuhan bisnis dan pelanggan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Ini menjadi tantangan tersendiri karena semakin besar pengembangan yang dilakukan maka akan semakin komplek kode yang dituliskan. Ini disebabkan oleh keterhubungan tiap bagian pada aplikasi berbasis arsitektur monolitik. Akhirnya perubahan kecil pada aplikasi tetap memerlukan perubahan secara keseluruhan pada aplikasi tersebut. <em>Scaling<\/em> pada arsitektur monolitik juga tidak efisien karena programmer harus melakukan <em>scaling<\/em> seluruh aplikasi alih-alih hanya melakukan <em>scaling<\/em> pada fungsi atau layanan individual.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16006,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16006\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2-2.png\" alt=\"\" \/>\r\n<figcaption>Arsitektur Microservices. sumber: blog.dreamfactory.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Tantangan pada unsur pengembangan dan <em>Scaling<\/em> aplikasi tersebut akhirnya \"memaksa\" para developer untuk mengembangakan arsitektur berbasis mikro. Gaya arsitektur layanan mikro memecah monolit menjadi fungsi dan layanan komponennya. Kemudian mengembangkan dan menjalankan setiap layanan sebagai aplikasi kecil, otonom, dan independen, yaitu microservices.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Menariknya adalah setiap layanan\/service dapat menggunakan bahasa pemograman yang berbeda tergantung pada kebutuhan serta dikembangkan oleh tim-tim yang berbeda pula.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu, pertukaran informasi dilakukan dengan menggunakan RESTful API - sehingga setiap microservices bisa bekerja sama untuk membentuk aplikasi yang lebih besar.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16009,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16009\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/3-2.png\" alt=\"\" \/>\r\n<figcaption>Contoh arsitektur monolitik pada aplikasi taxi online. sumber: indosystem.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Berbeda dengan arsitektur Monolitik, arsitektur microservices dapat memiliki basisdata terpisah yang independen dari microservice lainnya. Sehingga pengembangan pada basisdata pun bisa dilakukan dengan lebih aman sesuai kebutuhan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"5878\">Dapat disimpulkan, beberapa kelebihan dari arsitektur microservices adalah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Continuous Integration and Deployment (CI\/CD): Microservices dapat dikelola oleh beberapa tim kecil yang memberikan kebebasan mereka untuk mengubah, menghapus, atau menambahkan kode tanpa mengganggu service lainnya.<\/li>\r\n<li>Bebas menggunakan bahasa pemograman, Framework, dan basisdata apapun. Bahkan berbeda satu dan lainnya diperbolehkan<\/li>\r\n<li>Kontainerisasi (misal menggunakan docker)<\/li>\r\n<li><em>Scalibility<\/em>, ketersediaan, dan lebih tahan pada perubahan.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>REST API<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>API atau Application Programming Interface adalah antar muka yang menghubungkan suatu aplikasi dengan aplikasi lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh nya seperti gambar di bawah, terdapat sebuah server website yang melayani berbagai macam aplikasi seperti web based, desktop, mobile, atau pun website lain yang menggunakan layanan autentikasinya. Ketika kita membuka aplikasi web maka segala aktivitas dan data selalu sinkron dengan aplikasi lain walaupun di dua device yang berbeda.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15879,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15879\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/REST-API.png\" alt=\"\" \/>\r\n<figcaption>contoh API<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>REST (REpresentational State Transfer) adalah salah satu arsitektur dalam pengembangan aplikasi API. Di dalam REST, kita merepresentasikan database sewaktu dengan format JSON atau XML. Di dalam REST segala sesuatunya kita anggap sebagai resource atau kumpulan data. Resource tersebut diakses dengan mengikuti protokol dan metode HTTP. Beberapa metode HTTP yang umum digunakan, antara lain:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>GET, kegiatan menerima data.<br \/>contoh: <code>GET https:\/\/situsweb\/api\/users\/detail\/1<\/code> =&gt; mengambil data detail user dengan id = 1.<\/li>\r\n<li>POST, kegiatan pengiriman\/input data untuk diproses selanjutnya.<br \/>contoh: <code>POST https:\/\/situsweb\/api\/users<\/code> =&gt; mengirim data user.<\/li>\r\n<li>PUT, kegiatan mengubah data.<br \/>contoh <code>PUT https:\/\/situsweb\/api\/users\/update\/1<\/code> =&gt; melakukan update pada data user dengan id = 1.<\/li>\r\n<li>DELETE, kegiatan menghapus data.<br \/>contoh: <code>DELETE https:\/\/situsweb\/api\/users\/delete\/1<\/code> =&gt; menghapus data user dengan id = 1.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Cara Kerja API<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:image {\"id\":15880,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15880\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/REST-API-cara-kerja.png\" alt=\"\" \/>\r\n<figcaption>cara kerja API<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Di dalam arsitektur REST API kita dapat bagi ke dalam dua bagian yaitu : <em>Client side<\/em> dan <em>Server side<\/em>. Server berisi database dan aplikasi yang melayani berbagai aplikasi client. Sedangkan Client adalah aplikasi yang mengkonsumsi API .<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Cara kerja API bisa digambarkan secara sederhana sebagai berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Aplikasi Client mengakses API<br \/>Client akan mengakses API dengan menembak pada suatu endpoint tertentu. Di dalam suatu endpoint terdapat : metode HTTP yang digunakan, url endpoint, dan body(data)yang ingin dikirim.<\/li>\r\n<li>API melakukan request ke server<br \/>Ketika suatu endpoint diakses, maka API akan meneruskannya sebagai request ke server.<\/li>\r\n<li>Server mengolah request<br \/>aplikasi server kemudian akan mengolah request sesuai dengan maksud dan tujuan yang diminta pada request tersebut.<\/li>\r\n<li>Server mengembalikan response terhadap Client<br \/>Ketika request berhasil diolah maka server akan mengembalikan response kepada Client. Response berisi data-data yang diminta\/diperlukan sesuai request yang diberikan.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Postman<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Postman merupakan salah satu aplikasi terpopuler dalam menangani API. Aplikasi ini sering digunakan oleh seorang backend developer untuk mengetest API yang dia buat\/gunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menggunakannya Anda bisa terlebih dahulu mendownload nya di link berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/www.postman.com\/downloads\/\">https:\/\/www.postman.com\/downloads\/<\/a>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah mendownload aplikasi Postman tersebut, lakukan instalasi dan kemudian lakukan Sign Up (bisa dilakukan melalui aplikasi atau melalui web berikut: <a href=\"https:\/\/identity.getpostman.com\/signup\">https:\/\/identity.getpostman.com\/signup<\/a>).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah Sign Up dan berhasil masuk ke dalam aplikasi Postman, berikut tampilan yang akan Anda temukan:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5243,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5243\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman1-1024x549.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Collection<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Disarankan untuk mengelompokkan API yang akan digunakan pada satu Collection, dengan cara memilih menu \"Collection\" pada sidebar dan klik \"+ New Collection\" kemudian memasukkan nama Collection tersebut, bisa menggunakan nama Project maupun nama web \/ sumber API nya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5244,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5244\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman4-618x1024.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Request<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya Anda bisa menambahkan request API dengan menekan tombol \"+\" pada menu yang tersedia (1) . Selanjutnya Anda bisa memasukkan URL yang dituju pada bagian yang telah disediakan (2). Pada Postman telah disediakan berbagai method yang dapat Anda temukan pada sebelah kiri dari kolom input URL, mulai dari GET, POST, PUT, DELETE dan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5209,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5209\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman2-1024x549.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dibawah kolom input URL, Anda akan menemukan menu\/tab \"Params\", \"Authentication\", \"Header\", \"Body\", dan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Menu \"Params\" yang dapat digunakan untuk menambah query yang akan membuat URL yang digunakan bertambah panjang (biasanya diawali dengan \"?\").<\/li>\r\n<li>Pada menu \"Authentication\", Anda akan menemukan metode Auth yang terkadang diperlukan untuk dapat mengakses suatu API (umumnya menggunakan API Key, Bearer Token, atau OAuth tergantung sumber\/penyedia API).<\/li>\r\n<li>Pada menu \"Header\", Anda juga dapat mengatur Authentication dengan menggunakan key \"Authentication\" dan value dari Authentication yang diperlukan (misal bearer {token}). Pada bagian ini biasanya dimasukkan informasi tambahan yang digunakan oleh back-end\/server untuk mengatur bagaimana cara response akan diberikan.<\/li>\r\n<li>Menu \"Body\", yang biasa diperlukan ketika menggunakan method \"POST\" atau mengirim suatu form kepada back-end\/server.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Melakukan Pengambilan Data via API<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan mencoba untuk melakukan pengambilan data covid via postman. Silahkan kunjungi link di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/covid-19-apis.postman.com\/\">https:\/\/covid-19-apis.postman.com\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu masuk kebagian collection,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":11944,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11944\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_1-1024x511.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu pilih featured API Collections (memilih bagian mana saja akan mengarahkan kita pada halaman yg sama).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita coba pilih NovelCOVID API, lalu pilih doc untuk melihat dokumentasi. Kita akan mendapatkan tampilan seperti di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11945,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11945\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_2-1024x486.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan mencoba untuk mendapatkan data untuk semua continents, salin alamat yang ditunjukan pada dokumen<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>https:\/\/corona.lmao.ninja\/v2\/continents?yesterday=true&amp;sort<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita buka Postman yang telah kita install dan masukkan alamat API yang telah kita salin<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":11946,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11946\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_3-1024x316.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jangan lupa untuk memastikan metode yang kita pilih adalah GET, seperti yang tertulis pada dokumentasi. Lalu klik tombol biru <em><strong>Send<\/strong><\/em>. Maka akan didapatkan hasil seperti pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11947,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11947\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_4-1024x526.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang terlihat data yang kita terima berbentuk JSON dan ditampilkan pada bagian <em>body<\/em>. Jika kita ingin mengunduh data yang ditampilkan kita bisa memilih tanda panah pada sebelah tombol<em> <strong>Send<\/strong><\/em> dan pilih <em><strong>Send and Download<\/strong><\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":11948,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11948\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_5-1024x177.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<h2>Literatur &amp; Pustaka<\/h2>\r\n<p><a href=\"https:\/\/youtu.be\/1VVy8h_tp1M\">[Video] Apa itu REST API<\/a><\/p>\r\n<p><a href=\"https:\/\/martinfowler.com\/articles\/microservices.html\">https:\/\/martinfowler.com\/articles\/microservices.html<\/a><\/p>\r\n<p><a href=\"https:\/\/medium.com\/codelabs-unikom\/microservices-apaan-tuh-b9f5d56e8848\">https:\/\/medium.com\/codelabs-unikom\/microservices-apaan-tuh-b9f5d56e8848<\/a><\/p>\r\n<p><a href=\"https:\/\/www.otto.de\/jobs\/technology\/techblog\/artikel\/why-microservices_2016-03-20.php\">https:\/\/www.otto.de\/jobs\/technology\/techblog\/artikel\/why-microservices_2016-03-20.php<\/a><\/p>\r\n<p><a href=\"https:\/\/www.otto.de\/jobs\/technology\/techblog\/artikel\/on-monoliths-and-microservices_2015-09-30.php\">https:\/\/www.otto.de\/jobs\/technology\/techblog\/artikel\/on-monoliths-and-microservices_2015-09-30.php<\/a><\/p>\r\n<p><a href=\"https:\/\/glints.com\/id\/lowongan\/microservices-adalah\/#.YG4bhegza00\">https:\/\/glints.com\/id\/lowongan\/microservices-adalah\/#.YG4bhegza00<\/a><\/p>\r\n<p><a href=\"https:\/\/blog.javan.co.id\/micro-services-versus-monolithic-architecture-what-are-they-e17ddc8d3910\">https:\/\/blog.javan.co.id\/micro-services-versus-monolithic-architecture-what-are-they-e17ddc8d3910<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-10-07 08:00:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:41:10","waktu_publish_formatted":" Kamis, 07 Oktober 2021. 08:00:00 WIB."},{"id":1120,"uuid":"93c31a81-cc88-4006-b69d-2f35e7e77a34","author_user_id":11253,"materi_section_id":326,"judul":"Mengelola Versioning dengan GIT","permalink":"mengelola-versioning-dengan-git","konten":"<p><!-- wp:heading --><\/p>\r\n<p><!-- wp:heading --><\/p>\r\n<h2 id=\"apa-itu-git\"><strong>Apa itu Git ?<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Git adalah sebuah&nbsp;<em>Version Control System<\/em>&nbsp;yaitu sistem yang mengelola perubahan dari sebuah dokumen, program komputer, website dan kumpulan informasi lain.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Selain itu, Git memungkinkan para pengembang perangkat lunak dari berbagai belahan dunia mengerjakan banyak projek bersama-sama tanpa mengharuskan bertatap muka.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Git sendiri disimpan dalam sebuah folder atau directory project yang biasa di sebut repository<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"installasi-git\"><strong>Installasi Git<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"installasi-di-windows-dan-mac\"><code>Installasi di Windows dan Mac<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menginstall git ke dalam windows dan mac, download terlebih dahulu file instalasi nya dari halaman&nbsp;<a href=\"https:\/\/git-scm.com\/download\">download git<\/a>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":4753,\"linkDestination\":\"custom\"} --><\/p>\r\n<figure class=\"wp-block-image\"><img class=\"wp-image-4753\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/image-36-1024x767.png\" alt=\"\" \/>\r\n<figcaption>halaman download git dari<a href=\"https:\/\/git-scm.com\/download\">&nbsp;git scm<\/a><\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>jika sudah terdownload, klik file instalasi lalu ikuti instruksi instalasi (klik next saja sampai selesai).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":4754} --><\/p>\r\n<figure class=\"wp-block-image\"><img class=\"wp-image-4754\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/image-37.png\" alt=\"\" \/>\r\n<figcaption>instalasi git, klik next sampai instalasi selesai<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>setelah instalasi selesai, kita dapat mengecek apakah Git sudah terinstall dengan cara membuka cmd atau command prompt lalu ketikkan perintah <code>git --version<\/code>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":6305} --><\/p>\r\n<figure class=\"wp-block-image\"><img class=\"wp-image-6305\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-25.png\" alt=\"\" \/>\r\n<figcaption>memastikan git sudah terpasang dengan mengecek versi git yang sudah terinstall<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"installasi-di-ubuntu\"><code>Installasi di Ubuntu<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menginstall git ke dalam ubuntu dalam hal ini ubuntu versi 18.04 cukup masuk terminal lalu jalankan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ sudo apt update<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>lalu jalankan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ sudo apt install git<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>lalu anda bisa mengecek git sudah terinstall dengan mengetikkan perintah&nbsp;<code>git --version<\/code>&nbsp;di terminal<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":6635} --><\/p>\r\n<figure class=\"wp-block-image\"><img class=\"wp-image-6635\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-34.png\" alt=\"\" \/>\r\n<figcaption>memastikan git sudah terpasang dengan mengecek versi git yang sudah terinstall<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2 id=\"setup-git\"><strong>Setup Git<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>setelah menginstall git, hal yang di lakukan selanjutnya adalah setup git config email dan username seperti di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>git config --global user.name \"username anda\"\r\ngit config --global user.email \"email anda\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>anda dapat melihat hasil config ini dengan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>git config -l<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading --><\/p>\r\n<h2><strong>Cara Kerja Git<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:image {\"id\":15022,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15022\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/cara-kerja-git-1024x448.png\" alt=\"\" \/>\r\n<figcaption>Skema repositori Git<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Gambar di atas menjelaskan alur kerja dalam mengelola sebuah repositori dengan Git. Terdapat beberapa bagian yang terhubung seperti Remote, Repository, dan Workspace. Berikut penjelasan mengenai bagian-bagian tersebut\"<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3><code>remote<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Remote adalah alamat repositori yang disimpan di server\/cloud dari hosting penyedia Git seperti Github, Gitlab, Bitbucket, etc. Di remote ini kita dapat menyimpan kode\/file\/folder dan bertukar kode atau berkolaborasi dengan pengguna Git lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3><code>workspace<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Workspace adalah direktori atau folder di lokal komputer kita yang sedang kita kelola menggunakan Git. Di dalam satu workspace bisa terdiri dari kumpulan file dan folder. Setiap perubahan dan tambahan yang kita lakukan di dalam workspace akan terdeteksi oleh Git. Cara untuk mengecek status pekerjaan kita dalam satu workspace bisa gunakan perintah <code>git status<\/code>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3><code>Repository(local)<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Repository atau local repository pada gambar di atas adalah sistem pengelolaan versi yang berada di dalam folder\/direktori workspace yang sedang kita kelola. Setiap kita melakukan perubahan dan tambahan pada workspace maka kita dapat menyimpannya ke dalam repository local dengan perintah <code>git add<\/code> dan <code>git commit<\/code>. Setelah perubahan tersebut tersimpan di repository local maka kita dapat mengunggah perubahan tersebut menuju remote repository dengan perintah <code>git push<\/code>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"perintah-dasar-git\"><strong>Perintah Dasar Git<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"git-init\"><code>git init<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><code>git init<\/code> adalah perintah untuk inisialisasi atau memasangkan git pada sebuah direktori\/folder yang sedang terbuka di command prompt atau terminal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":6306} --><\/p>\r\n<figure class=\"wp-block-image\"><img class=\"wp-image-6306\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-26.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>pada contoh di atas, setelah memberikan perintah git init akan muncul keterangan &ldquo;Initialized empty Git repository in . . . &rdquo; yang berarti folder git-demo yang sedang dibuka di cmd sudah dapat menggunakan Git di dalamnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"git-add\"><code>git add&nbsp;<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><code>git add<\/code>&nbsp;yaitu perintah git untuk menambahkan perubahan-perubahan pada direktori project sebelum menyimpan perubahan tersebut. Misalkan di repository project kita terdapat file index.html yang ingin kita simpan perubahannya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ git add index.html<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"git-commit\"><code>git commit<\/code>&nbsp;<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><code>git commit<\/code>yaitu perintah dari git untuk menyimpan perubahan yang ada di repository dan perintah ini biasanya disertakan dengan&nbsp;<code>-m \"[keterangan_perubahan_yang_dilakukan]\"&nbsp;<\/code>untuk menuliskan perubahan yang di lakukan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>git commit -m \"menambahkan index.html\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"git-status\"><code>git status<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>git status adalah perintah dalam git untuk memeriksa status repository, apakah ada file baru, perubahan pada file atau file sudah di add, atau apakah perubahan sudah di commit atau belum.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":6612} --><\/p>\r\n<figure class=\"wp-block-image\"><img class=\"wp-image-6612\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-29.png\" alt=\"\" \/>\r\n<figcaption>contoh tampilan ketika menggunakan git status<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"git-push\"><code>git push<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>git push adalah perintah dalam git untuk mengirimkan perubahan perubahan file pada repository<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"git-pull\"><code>git pull<\/code><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>git pull adalah perintah dalam git untuk mengabil perubahan terakhir dari repository di git<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Membuat project Git dan mengelolanya<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Membuat Repository Baru<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Repository atau repo di Gitlab biasa disebut dengan project. Berikut langkah-langkah untuk membuat repository baru:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Setelah login anda akan menuju halaman Projects yang berisi semua repository yang anda miliki. Jika Anda user baru maka belum ada repository yang tersedia. Di halaman tersebut anda akan melihat tombol New Project di sebelah kanan atas. Klik tombol tersebut.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LlbproPcbeCtKgKYGvN%2F-Llbq3l7Zcukr3daq0H_%2FScreenshot%20from%202019-07-04%2015-07-43.png?alt=media&amp;token=fa940493-e855-4331-92ad-8139dff079c6\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Pada halaman membuat project baru, isi kolom project-name dengan nama yang Anda inginkan, misalkan: my first repo.<\/li>\r\n<li class=\"\">Pada kolom visibility level Anda akan melihat tiga pilihan yaitu Private, Internal, dan Public. Private artinya repo yang akan kita buat bersifat rahasia, hanya Anda dan orang yang Anda beri akses saja yang bisa membukanya. Sedangkan pilihan Internal berarti repo Anda akan dapat dilihat oleh semua user Gitlab. Pilihan \"Public\" berarti repo Anda akan terlihat oleh orang dari mana saja walaupun dia tidak memiliki akun gitlab. Pilih yang sesuai kebutuhan misalkan : Public.<\/li>\r\n<li class=\"\">Di bagian bawahnya terdapat pilihan checkbox \"Initialize repository with a README\". Centang saja jika anda ingin langsung clone repository nya setelah dibuat.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LlbproPcbeCtKgKYGvN%2F-LlbqFzdUNMEHljLQNHA%2FScreenshot%20from%202019-07-04%2015-24-41.png?alt=media&amp;token=187ff3fe-30b6-4e97-8ec8-713145d30615\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika berhasil maka Anda akan diarahkan menuju halaman project atau repo yang telah dibuat. Jika sebelumnya kita centang \"Initialize repository with a README\" maka repository kita akan berisi file README.md.<\/li>\r\n<li>Pada Bagian kanan atas terdapat tombol clone. Ketika diklik maka akan keluar dua pilihan \"Clone with SSH\" dan \"Clone with HTTPS\". Pilih saja clone dengan HTTPS. Klik tombol salin\/copy supaya langsung otomatis tercopy pada clipboard. Jika ingin clone dengan SSH maka anda harus setting dulu akun anda agar terhubung dengan komputer Anda.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LlbslGZ-w-tHwbKNuXb%2F-LlbsvawiXHthWqDmYZO%2FScreenshot%20from%202019-07-04%2016-10-48.png?alt=media&amp;token=89280629-8db4-4abd-aa2a-2f55671e08e0\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah itu menuju ke terminal atau cmd. Arahkan menuju folder dimana anda ingin menyimpan repository yang sudah Anda buat. Berikan perintah git clone &lt;link_anda_yang_barusan_dicopy&gt; (tanda &lt;&gt; hanyalah sebagai penanda template tidak usah ditulis di perintah cmd)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git clone &lt;your_repository_link_url&gt;<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Jika sudah berhasil diclone maka akan ditemukan folder dengan nama repository di Gitlab. Cara mengeceknya dengan perintah \"ls\" atau \"dir\".<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ ls\r\nmy-first-repo   <\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengupload perubahan project dengan git push<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Ketika kita sudah berhasil clone repository kita di Gitlab maka tentu kita ingin melakukan update atau penambahan code pada project kita. Agar perbaruan yang kita simpan di local (komputer) kita dapat kita perbaharui juga di repository Gitlab maka kita bisa lakukan dengan git push. Berikut langkah-langkahnya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Ketika kita sudah memberikan perubahan terhadap suatu file atau membuat folder-folder baru pada folder project kita maka cara mengecek status perbaruan adalah dengan git status<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git status\r\nOn branch master\r\nYour branch is up to date with 'origin\/master'.\r\n \r\nChanges not staged for commit:\r\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\r\n  (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\r\n \r\n modified:   README.md\r\n \r\nno changes added to commit (use \"git add\" and\/or \"git commit -a\") <\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Setelah git status maka akan ditampilkan list file yang \"modified\" atau \"untracked\". \"modified\" artinya adalah kita mengubah file yang sebelumnya ada sedangkan \"untracked\" artinya file tersebut sama sekali baru di repository. Dalam contoh di atas terdapat perubahan pada file \"README.md\".<\/li>\r\n<li class=\"\">Untuk menaikkan perubahan (stage) yang kita buat maka berikan perintah git add<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git add README.md\r\n\r\n\/\/ Jika ada terdapat banyak file dan kita ingin naikkan semuanya maka perintahnya: \r\n$ git add .  <\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Sekarang perubahan tadi sudah pada tahap \"staged\". jika kita cek status nya lagi maka akan didapati berbeda:<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git status \r\nOn branch master\r\nYour branch is up to date with 'origin\/master'.\r\n \r\nChanges to be committed:\r\n  (use \"git reset HEAD &lt;file&gt;...\" to unstage)\r\n \r\n modified:   README.md <\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Selanjutnya adalah memberikan laporan atau commit terhadap perubahan yang kita buat dengan git commit.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\"> $ git commit -m \"Pesan saya: Mengubah README.md\"<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">tanda \"-m\" pada perintah commit artinya kita ingin memberikan pesan atau laporan terhadap perubahan yang sudah dibuat. Dalam hal ini laporannya adalah \"Pesan saya: mengubah README.md\"<\/li>\r\n<li class=\"\">Selanjutnya adalah push untuk mengirim \/upload perubahan yang ada di local computer kita menuju repository yang ada di Gitlab. Jika kita berada di branch bernama master maka perintahnya adalah:<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git push origin master <\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>Jika branch yang sedang kita miliki di local adalah branch lain selain master maka cara push nya adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git push origin &lt;nama_branch&gt;<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>Jika langkah tersebut sudah maka kita sudah berhasil mengupload perubahan yang kita buat di repository kita. \ud83e\udd42<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Git branch dan merge request (optional)<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Membuat branch baru dan melakukan merge request<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Clone repository<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Terlebih dahulu lakukan clone terhadap repository project.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git clone https:\/\/gitlab.com\/some-project \r\n$ cd some-project<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>Catatan: Link https di atas hanyalah contoh link dari sebuah repository. Link https tersebut bisa diperoleh di halaman gitlab pada bagian clone.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Buat branch baru<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah di-clone dan masuk ke folder project nya, buatlah branch baru . (myname hanyalah contoh nama branch, kita bisa mengubah sesuai nama yang diinginkan)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git branch myname\r\n$ git checkout myname <\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>maka sekarang kita sudah berada di branch baru dan dapat mulai melakukan pekerjaan kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan:<\/p>\r\n<p><code>myname<\/code> hanya contoh , silakan sesuaikan sendiri nama branch masing-masing.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"push-ke-branch\">Push ke branch<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah pekerjaan selesai, kita akan melakukan upload atau push ke branch kita sendiri.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">$ git add . \r\n$ git commit -m \"some message\"\/\/ push ke branch \r\n$ git push origin myname<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan: <br \/><code>\"some message\"<\/code> hanyalah contoh pesan atau komentar pada sebuah commit. Silahkan isi dengan jenis update yang dikerjakan.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"membuat-merge-request\">Membuat merge request<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah melakukan push ke branch sendiri maka selanjutnya melakukan merge request.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Secara default pada halaman project akan tersedia tombol \"create merge request\".<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LldepAZorMgXgsf4exP%2F-Lldo6E7VUbbizSnzZRM%2Fmerge-request.jpeg?alt=media&amp;token=672f6a87-a9ad-4b11-a72c-d03bc6a820c2\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika tombol tersebut tersedia, klik tombol tersebut untuk menuju halaman merge request.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada halaman merge request isilah kolom title dengan pesan commit atau laporan progress pekerjaan misalkan : done, work in progress atau WIP, dsb.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LldepAZorMgXgsf4exP%2F-LldpcFElD1xcptGIuSF%2Ftitle%20merge-request.jpeg?alt=media&amp;token=e97935be-d331-420a-9fb5-ec74fb539608\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu, klik submit merge request maka pekerjaan kita sudah disubmit ke merge request dan akan direview oleh pengelola project.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<h2>Literatur Tambahan<\/h2>\r\n<p>[video] <a href=\"https:\/\/www.youtube.com\/watch?v=lTMZxWMjXQU&amp;list=PLFIM0718LjIVknj6sgsSceMqlq242-jNf\" target=\"_blank\" rel=\"noopener\" data-rich-text-format-boundary=\"true\">Web Programming UNPAS &ndash; GIT &amp; GITHUB<\/a><\/p>\r\n<p><a href=\"https:\/\/www.hostinger.co.id\/tutorial\/tutorial-git-dasar-cara-menggunakan-git\">https:\/\/www.hostinger.co.id\/tutorial\/tutorial-git-dasar-cara-menggunakan-git<\/a><\/p>\r\n<p><a href=\"https:\/\/www.atlassian.com\/git\/tutorials\/learn-git-with-bitbucket-cloud\">https:\/\/www.atlassian.com\/git\/tutorials\/learn-git-with-bitbucket-cloud<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-10-08 08:00:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:41:24","waktu_publish_formatted":" Jumat, 08 Oktober 2021. 08:00:00 WIB."}]},{"id":327,"uuid":"34174a96-c962-48a2-949d-512f1b8e0e0a","materi_id":33,"nama":"Materi Pekan 4","permalink":"materi-pekan-4","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-07-15 08:20:31","posting":[{"id":1121,"uuid":"1808ee1c-39e0-40ff-a04e-515fe8d45d2e","author_user_id":11253,"materi_section_id":327,"judul":"Flask - Mysql","permalink":"flask-mysql","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada pelatihan kali ini kita akan menggunakan flask, mysql dan python untuk membuat rest api dari aplikasi perpustakaan yang sudah kita buartdari pekan ketiga.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Pengenalan Flask<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Flask adalah kerangka micro (miro framework) Python yanf dipergunakan untuk membuat aplikasi web ataupun REST API. Flask berbasis Werkzeug, Jinja 2<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Micro disini bukan berarti aplikasi yang kita buat harus muat dalam satu berkas python, akan tetapi flask tetap menjaga fungsionalitas minimum dari suatu aplikasi web tanpa adanya tambahan-tambahan berlebihan. Walaupun begitu, user tetap dimudahkan jika ingin melakukan kustomisasi pada flask.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Inilah yang menjadi alasan dipilihnya Flask dibanding Django sebagai basis routing kita untuk membuat REST API pada backend. Menggunakan Django untuk hal ini adalah <em>overkill<\/em> dimana kita hanya membutuhkan kebutuhan routingnya saja.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Menggunakan Flask<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita lakukan instalasi library yang kita butuhkan, jangan lupa untuk menyalakan virtual environment kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install flask<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah instalasi selesai dilakukan kita bisa membuat sebuah aplikasi web sederhana dengan Flask.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama buat sebuah file bernama app.py, dan pada berkas tersebut kita akan menuliskan kode seperti di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route(\"\/\")\r\ndef main():\r\n    return \"Welcome!\"\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    app.run()\r\n    \r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jalankan pada cmd\/terminal, file kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>python app.py<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu jalankanlah pada web browser kalian dengan menggunakan alamat<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>localhost:5000<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang akan kita jelaskan masing-masing kode tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>pertama kita melakukan import Flask Class dari library flask. ini akan menjadi objek bagi aplikasi WSGI kita<\/li>\r\n<li>kita buat sebuah objek berbasis Flask class yang bernama <em>app<\/em><\/li>\r\n<li>@app.route adalah adalah decorator yang digunakan untuk memberitahukan pada Flask, url apa yang akan digunakan pada fungsi di bawahnya. Pada kasus ini kita menggunakan alamat <em>root<\/em> (\"\/\").<\/li>\r\n<li>definisikan fungsi yang dijalankan ketika kita masuk ke root url. dalam hal ini main() dengan return \"Welcome!\"<\/li>\r\n<li>jalankan program kita dengan menggunakan app.run()<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Konsep dasar ini akan kita gunakan untuk mengembangkan aplikasi yang sudah kita buat kemarin dan mengubahnya menjadi sebuah REST API.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Projek Perpustakaan<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada akhir pekan 3 kita sudah belajar untuk membuat proyek pada GITLAB. Sekarang mari kita pergunakan hal tersebut. masuk kedalam GITLab lalu masuk ke proyek mysqlapp. Siapkan sebuah folder app, dan masuk ke dalam folder app tersebut. di terminal ketikan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cd app<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>git clone https:\/\/gitlab.com\/thio-perdana-project\/sanbercode\/backendpython\/perpustakaan\/mysqlapp.git<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>setelah selesai masuklah kedalam folder mysqlapp,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cd mysqlapp<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan memindahkan folder mysql dan project perpustakaan (pada pekan ketiga hari pertama) ke dalam folder ini. Hasilnya adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":16101,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-16101\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1-4.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>kita tambahkan file __init__.py dengan isi dikosongkan terlebih dahulu. Fungsi __init__.py disini mirip dengan fungsi __init__() saat kita membuat class.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Isi dari <em>app.py<\/em> akan kita ubah dan hapus beberapa isinya menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from models.customers import database\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route(\"\/\")\r\ndef main():\r\n    return \"Welcome!\"\r\n\r\n  \r\n\r\nif __name__ == \"__main__\":\r\n    mysqldb = database()\r\n    if mysqldb.db.is_connected():\r\n        print('Connected to MySQL database')\r\n    \r\n    app.run(debug=True)\r\n    \r\n    if mysqldb.db is not None and mysqldb.db.is_connected():\r\n        mysqldb.db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>debug = true , membuat aplikasi kita dalam mode debug. sehingga jika ada perubahan akan langsung teraplikasikan tanpa kita harus merestart server flask kita. Ingat untuk mematikan mode ini dalam saat dalam fase produksi.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>isi dari <em>customers.py <\/em>adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mysql.connector import connect\r\n\r\nclass database:\r\n    def __init__(self):\r\n        try:\r\n            self.db = connect(host='localhost',\r\n                              database='perpustakaan',\r\n                              user='root',\r\n                              password='Mysqlbase103')\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def showUsers(self):\r\n        try:  \r\n            cursor = self.db.cursor()\r\n            query ='''select * from customers'''\r\n            cursor.execute(query)\r\n            result = cursor.fetchall()\r\n            return result\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def showUserById(self, **params):\r\n        try:\r\n            cursor = self.db.cursor()\r\n            query = '''\r\n                select * \r\n                from customers \r\n                where userid = {0};\r\n            '''.format(params[\"userid\"])\r\n            \r\n            cursor.execute(query)\r\n            result = cursor.fetchone()\r\n            return result\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def insertUser(self, **params):\r\n        try:\r\n            column = ', '.join(list(params['values'].keys()))\r\n            values = tuple(list(params['values'].values()))\r\n            crud_query = '''insert into customers ({0}) values {1};'''.format(column, values)\r\n            # print(crud_query)\r\n            cursor = self.db.cursor()\r\n            cursor.execute(crud_query)\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def updateUserById(self, **params):\r\n        try:\r\n            userid = params['userid']\r\n            values = self.restructureParams(**params['values'])\r\n            crud_query = '''update customers set {0} where userid = {1};'''.format(values, userid)\r\n\r\n            cursor = self.db.cursor()\r\n            cursor.execute(crud_query)\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def deleteUserById(self, **params):\r\n        try:\r\n            userid = params['userid']\r\n            crud_query = '''delete from customers where userid = {0};'''.format(userid)\r\n\r\n            cursor = self.db.cursor()\r\n            cursor.execute(crud_query)\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def dataCommit(self):\r\n        self.db.commit()\r\n        \r\n    def restructureParams(self, **data):\r\n        list_data = ['{0} = \"{1}\"'.format(item[0],item[1]) for item in data.items()]\r\n        result = ', '.join(list_data)\r\n        return result<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada Kesempatan pertama kita akan mencoba membuat sebuah API untuk melihat data user keseluruhan dan by Id. Pada by Id akan diperlihatkan bagaimana mengambil data input berupa json.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita kan membuat routing untuk fungsi melihat semua user. semua kode dikerjakan pada <em>app.py<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from models.customers import database\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route(\"\/\")\r\ndef main():\r\n    return \"Welcome!\"\r\n\r\n@app.route(\"\/users\")\r\ndef showUsers():\r\n    pass\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    mysqldb = database()\r\n    if mysqldb.db.is_connected():\r\n        print('Connected to MySQL database')\r\n    \r\n    app.run(debug=True)\r\n    \r\n    if mysqldb.db is not None and mysqldb.db.is_connected():\r\n        mysqldb.db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita menggunakan routing users dan membuat fungsi showUser(). Untuk memanggil semua user kita akan menggunakan metode showUsers pada berkas customers.py.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>@app.route(\"\/users\")\r\ndef showUsers():\r\n    dbresult = mysqldb.showUsers()\r\n    print (dbresult)\r\n\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita jalankan filenya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>python app.py<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan pengujian kita akan menggunakan postman, buka postman kalian dan isikan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>localhost:5000\/users<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>pada postman dan tekan <em>SEN<\/em>D.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":16105,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-16105\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2-3.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang cek terminal\/cmd kalian, semua hasil print() akan ditampilkan disana bukan pada postman. Jika ingin menampilkan dalam postman kita harus menggunakan return pada postman kita, tapi bentuk data kita tidak boleh list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[(1, 'userpertama', 'rudi', 'roundhouse', 'rudi.roundhouse@gmail.com'), (2, 'userkedua', 'shiroe', 'ishigami', 'shiroe.ishigami@gmail.com'), (3, 'userketiga', 'akatsuki', 'horizon', 'akatsuki.horizon@gmail.com')]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>karena data kita membutuhkan bentuk dict untuk diubah menjadi json maka kita ubah list tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>@app.route(\"\/users\")\r\ndef showUsers():\r\n    dbresult = mysqldb.showUsers()\r\n    result = []\r\n    for items in dbresult:\r\n        user = {\r\n            \"id\" : items[0],\r\n            \"username\" : items[1],\r\n            \"firstname\" : items[2],\r\n            \"lastname\" : items[3],\r\n            \"email\" : items[4]            \r\n        }\r\n        result.append(user)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengembalikan data pada user yang meminta datanya, maka kita harus menggunakan return. sebelum itu mari kita import libray yang dibutuhkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from flask import Flask, jsonify\r\nimport json<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>jsonify digunakan untuk mengubah dict kita menjadi json saat dikeluarkan. Lalu kita tambahkan config untuk menonaktifkan konfig pengurutan dari jsonify<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>app = Flask(__name__)\r\napp.config['JSON_SORT_KEYS'] = False<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>kode kita menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from models.customers import database\r\nfrom flask import Flask, jsonify\r\nimport json\r\n\r\napp = Flask(__name__)\r\napp.config['JSON_SORT_KEYS'] = False\r\n\r\n@app.route(\"\/\")\r\ndef main():\r\n    return \"Welcome!\"\r\n\r\n@app.route(\"\/users\")\r\ndef showUsers():\r\n    dbresult = mysqldb.showUsers()\r\n    result = []\r\n    for items in dbresult:\r\n        user = {\r\n            \"id\" : items[0],\r\n            \"username\" : items[1],\r\n            \"firstname\" : items[2],\r\n            \"lastname\" : items[3],\r\n            \"email\" : items[4]            \r\n        }\r\n        result.append(user)\r\n        \r\n    return jsonify(result)\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    mysqldb = database()\r\n    if mysqldb.db.is_connected():\r\n        print('Connected to MySQL database')\r\n    \r\n    app.run(debug=True)\r\n    \r\n    if mysqldb.db is not None and mysqldb.db.is_connected():\r\n        mysqldb.db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita jalankan pada postman, maka akan kita dapatkan pada tab body<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16106,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16106\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/3-3.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang pada akan buat fungsi untuk mencari user by id. buat routing pada \/user<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>@app.route(\"\/user\", methods=[\"POST\"])\r\ndef showUser():\r\n    pass<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>methods=[\"POST\"] dituliskan untuk memastkan routing kita hanya akan menerima metode POST.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Karena kita membutuhkan inputan berupa userid maka kita akan mengunakan method request yang disediakan oleh flask. import terlebih dahulu methodnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from models.customers import database\r\nfrom flask import Flask, jsonify, request\r\nimport json\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Json digunakan untuk mengambil data berupa json. karena pertukaran informasi pada microservice nanti akan menggunakan json. Sekarang kita panggil panggil fungsi showUserById pada customers,py.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>@app.route(\"\/user\", methods=[\"POST\"])\r\ndef showUser():\r\n    params = request.json\r\n    dbresult = mysqldb.showUserById(**params)\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti sebelumnya kita akan ubah hasilnya menjadi json. karena hasilnya tidak berbentuk list tapi tuple maka kita tidak membutuhkan iterasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>@app.route(\"\/user\", methods=[\"POST\"])\r\ndef showUser():\r\n    params = request.json\r\n    dbresult = mysqldb.showUserById(**params)\r\n    user = {\r\n        \"id\" : dbresult[0],\r\n        \"username\" : dbresult[1],\r\n        \"firstname\" : dbresult[2],\r\n        \"lastname\" : dbresult[3],\r\n        \"email\" : dbresult[4]            \r\n    }\r\n        \r\n    return jsonify(user)  <\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita coba routing kita pada postman.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16107,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16107\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/4-1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pastikan beberapa hal pada postman kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Methodnya adalah POST<\/li>\r\n<li>isikan parameter userid kita pada <em>Body <\/em> --&gt; <em>raw<\/em> --&gt; <em>JSON<\/em><\/li>\r\n<li>bentuknya adalah json dengan key userid dan value adalah nilai useridnya.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil akhir pada berkas <em>app,py<\/em> kita adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from models.customers import database\r\nfrom flask import Flask, jsonify, request\r\nimport json\r\n\r\napp = Flask(__name__)\r\napp.config['JSON_SORT_KEYS'] = False\r\n\r\n@app.route(\"\/\")\r\ndef main():\r\n    return \"Welcome!\"\r\n\r\n@app.route(\"\/users\")\r\ndef showUsers():\r\n    dbresult = mysqldb.showUsers()\r\n    result = []\r\n    for items in dbresult:\r\n        user = {\r\n            \"id\" : items[0],\r\n            \"username\" : items[1],\r\n            \"firstname\" : items[2],\r\n            \"lastname\" : items[3],\r\n            \"email\" : items[4]            \r\n        }\r\n        result.append(user)\r\n        \r\n    return jsonify(result)\r\n\r\n\r\n@app.route(\"\/user\", methods=[\"POST\"])\r\ndef showUser():\r\n    params = request.json\r\n    dbresult = mysqldb.showUserById(**params)\r\n    user = {\r\n        \"id\" : dbresult[0],\r\n        \"username\" : dbresult[1],\r\n        \"firstname\" : dbresult[2],\r\n        \"lastname\" : dbresult[3],\r\n        \"email\" : dbresult[4]            \r\n    }\r\n        \r\n    return jsonify(user)    \r\n\r\nif __name__ == \"__main__\":\r\n    mysqldb = database()\r\n    if mysqldb.db.is_connected():\r\n        print('Connected to MySQL database')\r\n    \r\n    app.run(debug=True)\r\n    \r\n    if mysqldb.db is not None and mysqldb.db.is_connected():\r\n        mysqldb.db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<h2>Pustaka Tambahan<\/h2>\r\n<p><a href=\"https:\/\/flask.palletsprojects.com\/en\/1.1.x\/quickstart\/#a-minimal-application\">https:\/\/flask.palletsprojects.com\/en\/1.1.x\/quickstart\/#a-minimal-application<\/a><\/p>\r\n<p><a href=\"https:\/\/flask.palletsprojects.com\/en\/1.1.x\/quickstart\/#debug-mode\">https:\/\/flask.palletsprojects.com\/en\/1.1.x\/quickstart\/#debug-mode<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-10-11 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:41:47","waktu_publish_formatted":" Senin, 11 Oktober 2021. 08:00:00 WIB."},{"id":1122,"uuid":"b475b395-b6e2-4755-9340-fef6650938da","author_user_id":11253,"materi_section_id":327,"judul":"FastAPI - MongoDB","permalink":"fastapi-mongodb","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi kali ini kita akan mencoba membuat sebuah services dengan memanfaatkan FastAPI dan MongoDB.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Pengenalan FastAPI<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"5bcc\">Jika Flask sendiri sudah merupakan microframework yang lebih ringan dibanding django maka FastAPI lebih dibandingkan Flask. FastAPI adalah web framework yang dikhususkan untuk pembuatan API yang diklaim memiliki kecepatan dan penulisan kode yang mordern<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"5ba7\">Fitur-fitur pada FastAPI diantaranya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>Cepat<\/strong>, Lebih cepat dari flask, sehingga jika kita membutuhkan framework hanya untuk pembuatan REST API maka fast api bisa jadi salah satu pilihan<\/li>\r\n<li><strong>Cepat untuk development<\/strong>, kemudahan dalam penulisan kode juga yang menjadi alasan kecepatan yang tinggi dalam development<\/li>\r\n<li><strong>Minim Bug<\/strong><\/li>\r\n<li><strong>Mudah dipahami<\/strong><\/li>\r\n<li><strong>Kode yang singkat<\/strong><\/li>\r\n<li><strong>Berbasis pada Open API<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading --><\/p>\r\n<h2>Menggunakan FastAPI<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita lakukan instalasi library yang kita butuhkan, jangan lupa untuk menyalakan virtual environment kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install fastapi<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jangan lupa untuk melakukan instalasi server,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install uvicorn<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah instalasi selesai dilakukan kita bisa membuat sebuah aplikasi web sederhana dengan FastAPI.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama buat sebuah file bernama main.py, dan pada berkas tersebut kita akan menuliskan kode seperti di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from fastapi import FastAPI\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n\r\n@app.get(\"\/\")\r\nasync def read_main():\r\n    return {\"message\": \"Hello Bigger Applications!\"}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jalankan pada cmd\/terminal, file kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>uvicorn main:app --reload<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu jalankanlah pada web browser kalian dengan menggunakan alamat<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>localhost:8000<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang akan kita jelaskan masing-masing kode tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>pertama kita melakukan import FastAPI<\/li>\r\n<li>kita buat sebuah objek berbasis FasAPI class yang bernama <em>app<\/em><\/li>\r\n<li>@app.get adalah adalah decorator yang digunakan untuk memberitahukan pada FastAPI, url apa yang akan digunakan pada fungsi di bawahnya dan juga metode yang digunakan. Pada kasus ini kita menggunakan alamat <em>root<\/em> (\"\/\") dan metode get.<\/li>\r\n<li>definisikan fungsi yang dijalankan ketika kita masuk ke root url. dalam hal ini main() dengan return \"Hello Bigger Applications!\"<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Konsep dasar ini akan kita gunakan untuk mengembangkan aplikasi yang sudah kita buat kemarin dan mengubahnya menjadi sebuah REST API.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Projek Perpustakaan<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada akhir pekan 3 kita sudah belajar untuk membuat proyek pada GITLAB. Sekarang mari kita pergunakan hal tersebut. masuk kedalam GITLab lalu masuk ke proyek mysqlapp. Siapkan sebuah folder app, dan masuk ke dalam folder app tersebut. di terminal ketikan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cd app<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Contohnya saya menggunakan proyek yang sudah saya siapkan, silahkan menggunakan proyek yang kemarin dibuat pada tugas terakhir.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>git clone https:\/\/gitlab.com\/thio-perdana-project\/sanbercode\/backendpython\/perpustakaan\/mongodbapp.git<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>setelah selesai masuklah kedalam folder mongodbapp<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>cd mongodbapp<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan memindahkan folder mongodb dan project perpustakaan (pada pekan ketiga hari kdua) ke dalam folder ini. Lalu tambahkan berkas books_api.py dan book_route.py. Ubah nama file app.py menjadi main.py<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":16114,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-16114\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1-5.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>book_api.py digunakan untuk menyimpan fungsi-fungsi pengolahan yang digunakan pada API kita nanti. book_route.py digunakan untuk menyimpan routing. Ini bukanlah desain yang terbaik tapi paling sederhana untuk mengerti REST API pada FastAPI<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>kita tambahkan file __init__.py dengan isi dikosongkan terlebih dahulu. Fungsi __init__.py disini mirip dengan fungsi __init__() saat kita membuat class.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Isi dari <em>main.py<\/em> akan kita ubah dan hapus beberapa isinya menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from fastapi import FastAPI\r\nfrom books_route import router as books_router\r\n\r\napp = FastAPI()\r\n\r\napp.include_router(books_router)\r\n\r\n@app.get(\"\/\")\r\nasync def read_main():\r\n    return {\"message\": \"Hello Bigger Applications!\"}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>app.include_router () dipakai untuk memasukkan alamat routing pada file books_route kita pada file utama.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>isi dari <em>books_model.py <\/em>adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient\r\nfrom bson.objectid import ObjectId\r\n\r\nclass database:\r\n    def __init__(self):\r\n        try:\r\n            self.nosql_db = MongoClient()\r\n            self.db = self.nosql_db.perpustakaan\r\n            self.mongo_col = self.db.books\r\n            print(\"database connected\")\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def showBooks(self):\r\n        result = self.mongo_col.find()\r\n        return [item for item in result]\r\n    \r\n    def showBookById(self,**params):\r\n        result = self.mongo_col.find_one({\"_id\":ObjectId(params[\"id\"])})\r\n        return result\r\n    \r\n    def searchBookByName(self, **params):\r\n        query = {\"nama\" : {\"$regex\": \"{0}\".format(params[\"nama\"]), \"$options\": \"i\"}}\r\n        result = self.mongo_col.find(query)\r\n        return result\r\n    \r\n    def insertBook(self,document):\r\n        self.mongo_col.insert_one(document)\r\n    \r\n    def updateBookById(self,**params):\r\n        query_1 = {\"_id\":ObjectId(params[\"id\"])}\r\n        query_2 = {\"$set\": params[\"data\"]}\r\n        self.mongo_col.update_one(query_1,query_2)\r\n    \r\n    def deleteBookById(self, id):\r\n        query = {\"_id\":ObjectId(params[\"id\"])}\r\n        self.mongo_col.delete()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada Kesempatan pertama kita akan mencoba membuat REST API untuk melihat data semua buku, buku by id, dan buku by name.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita kan membuat routing untuk fungsi melihat semua user. semua kode dikerjakan pada <em>book_route.py<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from fastapi import APIRouter\r\nfrom books_api import *\r\n\r\nrouter = APIRouter()\r\n\r\n@router.post(\"\/bookbyid\")\r\nasync def view_search_books_id(params:dict):\r\n    result = search_books_id(**params)\r\n    return result\r\n  \r\n@router.post(\"\/bookbyname\")\r\nasync def view_search_books_by_name(params:dict):\r\n    result = search_book_by_name(**params)\r\n    return result\r\n\r\n@router.post(\"\/books\")\r\nasync def view_search_books_by_name():\r\n    result = search_books()\r\n    return result<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>router = APIRouter() digunakan untuk menginisasi obyek router kita yang akan dipanggil pada <em>main.py<\/em><\/li>\r\n<li>pada inputan fungsi usahakan untuk selalu menjelaskan tipe data input kita. pada contoh adalah dict.<\/li>\r\n<li>semua fungsi pengolahan dipanggil langsung dari <em>books_api.py<\/em><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Isi dari <em>books_api.py <\/em>adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from pymongo import MongoClient\r\nfrom models.books_model import database as db\r\nimport csv, json\r\nimport json\r\nfrom bson import ObjectId\r\n\r\ndb = db()\r\n\r\ndef objIdToStr(obj):\r\n    return str(obj[\"_id\"])\r\n\r\ndef search_book_by_name(**params):\r\n    data_list = []\r\n    for book in db.searchBookByName(**params):\r\n        book[\"_id\"] = objIdToStr(book)\r\n        data_list.append(book)\r\n    return data_list\r\n\r\ndef search_books():\r\n    data_list = []\r\n    for book in db.showBooks():\r\n        book[\"_id\"] = objIdToStr(book)\r\n        data_list.append(book)\r\n    return data_list\r\n\r\ndef search_books_id(**params):\r\n    result = db.showBookById(**params)\r\n    result[\"_id\"] = objIdToStr(result)\r\n    return result\r\n        \r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>fungsi objIdToStr() digunakan untuk mengubah tipe ObjectId pada hasil mongoDB menjadi string yang bisa ditampilkan melalui FastAPI.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita jalankan server kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>uvicorn main:app --reload<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan pengujian kita akan menggunakan postman. Pertama kita akan melakukan pengujian untuk melihat semua buku.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>http:\/\/127.0.0.1:8000\/books<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>pada postman dan tekan <em>SEN<\/em>D.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":16115,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-16115\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2-4.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menguji pencarian by id kita bisa menggunakan alamat<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>http:\/\/127.0.0.1:8000\/bookbyid<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>dan pada body ketikkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\r\n    \"id\" : \"606eb84fffd2af0ed0b16048\"\r\n}\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16116,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16116\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/3-4.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menguji pencarian by name kita bisa menggunakan alamat<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>http:\/\/127.0.0.1:8000\/bookbyname<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>dan pada body ketikkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\r\n    \"nama\" : \"harry\"\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16118,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16118\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/4-2.png\" alt=\"\" \/><\/figure>\r\n<p>&nbsp;<\/p>\r\n<p>Pada beberapa hari kedepan kita akan belajar untuk menggabungkan semua yang kita pelajari menjadi sebuah microservices perpustakaan yang saling terhubung. Dimana service peminjaman dan user akan dihandle oleh Mysql - Flask, serta Data buku yang banyak akan dihandle oleh MongoDB - FastAPI.<\/p>\r\n<p>&nbsp;<\/p>\r\n<h2>Literatur Tambahan<\/h2>\r\n<p><a href=\"https:\/\/fastapi.tiangolo.com\/\">https:\/\/fastapi.tiangolo.com\/<\/a><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=MCP4ObRjwv4\">https:\/\/www.youtube.com\/watch?v=MCP4ObRjwv4<\/a><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=7t2alSnE2-I&amp;pp=qAMBugMGCgJpZBAB\">https:\/\/www.youtube.com\/watch?v=7t2alSnE2-I&amp;pp=qAMBugMGCgJpZBAB<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-10-12 08:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:41:58","waktu_publish_formatted":" Selasa, 12 Oktober 2021. 08:00:00 WIB."},{"id":1123,"uuid":"e8061f98-75a8-4182-be6b-bc9bda5e7475","author_user_id":11253,"materi_section_id":327,"judul":"Keamanan Endpoint API dengan JWT","permalink":"keamanan-endpoint-api-dengan-jwt","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>JWT adalah kependekan dari JSON Web Token. JWT adalah sebuah token berbentuk string panjang yang digunakan sebagai sarana autorisasi, autentikasi dan pertukaran informasi. Jika mayoritas aplikasi web akan menggunakan session yang disimpan di dalam basisdata untuk mengetahui apakah seseorang masih login atau sudah terlogout, maka pada API sendiri kita menggunakan JWT yang disimpan pada cookies browser. JWT itu sendiri membawa jenis tokennya, data, dan tanda verifikasinya sendiri yang diencode menggunakan teknik encode dan secret key. Sehingga token ini bisa digunakan lebih oleh satu user karena dia tidak memerlukan pihak ketiga untuk mengautentikasi token tersebut. Cocok digunakan untuk kita yang membutuhkan akses ke suatu endpoint api dan menggunakan untuk menjalankan lebih dari satu aplikasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan lihat struktur dasarnya Tokennya dimana terdiri dari tiga bagian yaitu yang pertama header lalu kedua bagian payloadnya atau datanya dan yang ketiga adalah bagian verify signature.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>-&nbsp;<strong>Headernya<\/strong>&nbsp;terdiri dari Algoritma dan type jwt yang dipakai.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.dumetschool.com\/uploads\/fck\/\/Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-2.PNG\" alt=\"Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-2\" \/>\r\n<figcaption>sumber:www.dumetschool.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>-&nbsp;<strong>Payloadnya<\/strong>&nbsp;adalah data yang ingin kita kirimkan atau sebagai acuan saat aplikasi server melakukan encode.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.dumetschool.com\/uploads\/fck\/\/Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-3.PNG\" alt=\"Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-2\" \/>\r\n<figcaption>sumber:www.dumetschool.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>-&nbsp;<strong>Verify Signature<\/strong>&nbsp;adalah hasil dari Hash atau gabungan dari isi encode Header dan Payloadnya lalu ditambahkan kode secretnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.dumetschool.com\/uploads\/fck\/\/Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-4.PNG\" alt=\"Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-4\" \/>\r\n<figcaption>sumber:www.dumetschool.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil dari ketiga bagian tersebut akan menghasilkan sebuah token panjang yang setiap bagiannya dibedakan dengan warna pada gambar di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.dumetschool.com\/uploads\/fck\/\/Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-5.PNG\" alt=\"Mengenal-Konsep-JSON-Web-Token-JWT-30-04-2017-5\" \/>\r\n<figcaption>sumber:www.dumetschool.com<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika ingin mencoba untuk membuat JWT dengan generator khusus maka silahkan kunjungi situs resminya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>https:\/\/jwt.io\/<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":16135,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16135\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/3-5-1024x514.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>&nbsp;<\/h2>\r\n<h2>&nbsp;<\/h2>\r\n<h2>Mengaplikasikan pada Proyek Perpustakaan yang Disederhanakan<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan mencoba untuk mengaplikasikan konsep JWT ini pada aplikasi perpustakaan kita. Aplikasi yang akan kita gunakan adalah aplikasi user menggunakan mysql-flask. Karena kita hanya akan mencontohkan maka REST API yang akan kita gunakan hanya dua, yaitu mencari semua user dan mencari user dengan id.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita siapkan dulu folder dan berkas kita. Akan ada sedikit perubahan dan penyesuaian dibanding proyek perpustakaan yang lengkap. Pada kesempatan ini, kita akan memisahkan antara routing dan fungsi controllernya. Siapkan seperti pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":16122,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-16122\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/1-6.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Berkas <em><strong>app.py<\/strong><\/em> akan kita isi dengan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from controller import customers\r\nfrom flask import Flask, jsonify, request\r\n\r\napp = Flask(__name__)\r\napp.config['JSON_SORT_KEYS'] = False\r\n\r\n@app.route(\"\/users\", methods=[\"POST\"])\r\n\r\ndef showUsers():\r\n    return customers.shows()\r\n\r\n@app.route(\"\/user\", methods=[\"POST\"])\r\ndef showUser():\r\n    param = request.json\r\n    return customers.show(**params)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(debug=True)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Berkas <em><strong>models\/customers.py<\/strong><\/em> akan kita isi dengan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from mysql.connector import connect\r\n\r\n\r\nclass database:\r\n    def __init__(self):\r\n        try:\r\n            self.db = connect(host='localhost',\r\n                            database='perpustakaan',\r\n                            user='root',\r\n                            password='Mysqlbase103')\r\n            if self.db.is_connected():\r\n                print('Connected to MySQL database')\r\n        except Exception as e:\r\n            print(e)\r\n    \r\n    def showUsers(self):\r\n        cursor = self.db.cursor()\r\n        query ='''select * from customers'''\r\n        cursor.execute(query)\r\n        result = cursor.fetchall()\r\n        return result\r\n\r\n    def showUserById(self, **params):\r\n        cursor = self.db.cursor()\r\n        query = '''\r\n            select * \r\n            from customers \r\n            where userid = {0};\r\n        '''.format(params[\"userid\"])\r\n        \r\n        cursor.execute(query)\r\n        result = cursor.fetchone()\r\n        return result\r\n\r\n    \r\n    def closeConnection(self):\r\n        if self.db is not None and self.db.is_connected():\r\n            self.db.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Berkas <em><strong>controller\/customers.py<\/strong><\/em> akan kita isi dengan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from models.customers import database\r\nfrom flask import Flask, jsonify, request\r\n\r\nmysqldb = database()\r\n\r\n\r\ndef shows():\r\n    dbresult = mysqldb.showUsers()\r\n    result = []\r\n    print(dbresult)\r\n    for items in dbresult:\r\n        user = {\r\n            \"id\" : items[0],\r\n            \"username\" : items[1],\r\n            \"firstname\" : items[2],\r\n            \"lastname\" : items[3],\r\n            \"email\" : items[4]            \r\n        }\r\n        result.append(user)\r\n        \r\n    return jsonify(result)\r\n\r\ndef show(**params):\r\n    dbresult = mysqldb.showUserById(**params)\r\n    user = {\r\n        \"id\" : dbresult[0],\r\n        \"username\" : dbresult[1],\r\n        \"firstname\" : dbresult[2],\r\n        \"lastname\" : dbresult[3],\r\n        \"email\" : dbresult[4]            \r\n    }\r\n        \r\n    return jsonify(user)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Nah sekarang mari kita install librarynya, sebelumnya jangan lupa untuk menyalakan virtual environmentnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install flask-jwt-extended<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan ubah berkas <strong><em>app.py<\/em><\/strong>. kita import modulenya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from flask_jwt_extended import JWTManager<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita masukkan configurasi untuk Secret Key yang akan kita gunakan. Pada kesempatan kali ini saya menggunakan \"testkunci\" sebagai secret key.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>app = Flask(__name__)\r\napp.config['JSON_SORT_KEYS'] = False\r\napp.config['JWT_SECRET_KEY'] = \"testkunci\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Terakhir inisiasi JWTManager,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>jwt = JWTManager(app)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan ubah berkas <strong><em>models\/customers.py<\/em><\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Karena kita tidak memiliki password, maka untuk verifikasi akan digunakan email. Maka dari itu kita akan menyiapkan fungsi untuk memanggil username dan email berdasar pada email.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    def showUserByEmail(self, **params):\r\n        cursor = self.db.cursor()\r\n        query = '''\r\n            select * \r\n            from customers \r\n            where email = \"{0}\" ;\r\n        '''.format(params[\"email\"])\r\n        \r\n        cursor.execute(query)\r\n        result = cursor.fetchone()\r\n        return result<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah mengubah model maka kita akan mengubah controller kita, yang akan kita lakukan adalah kita akan menyiapkan Endpoint API baru untuk membuat Token kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan ubah berkas <strong><em>controller\/customers.py<\/em><\/strong>. Pertama mari kita import modul yang kita butuhkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from flask_jwt_extended import *\r\nimport datetime<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita buat fungsinya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>def token(**params):\r\n    dbresult = mysqldb.showUserByEmail(**params)\r\n    if dbresult is not None:\r\n        user = {\r\n            \"username\" : dbresult[1],\r\n            \"email\" : dbresult[4]            \r\n        }\r\n        expires = datetime.timedelta(days=1)\r\n        expires_refresh = datetime.timedelta(days=3)\r\n        access_token = create_access_token(user, fresh=True, expires_delta=expires)\r\n        \r\n        data = {\r\n            \"data\": user,\r\n            \"token_access\": access_token\r\n        }\r\n    else:\r\n        data = {\r\n            \"message\":\"Email tidak terdaftar\"\r\n        }\r\n        \r\n    return jsonify(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>variabel expires dibuat untuk menentukan masa berlaku dari token kita.<\/li>\r\n<li>create_access_token() adalah metode yang digunakan untuk membuat access_token kita.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Nah sekarang kita kembali lagi ke <strong><em>app.py<\/em><\/strong><em> <\/em> untuk menambahkan Endpoint untuk fungsi token kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>@app.route(\"\/requesttoken\", methods=[\"POST\"])\r\ndef requestToken():\r\n    params = request.json\r\n    return customers.token(**params)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Persiapan kita selesai. Sekarang saatnya kita menerapkan pengecekan JWT pada Endpoint API yang kita inginkan. Untuk hal ini kita akan menggunakan decorator yang sudah disediakan oleh flask_jwt_extended yaitu @jwt_required().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk kesempatan kali ini kita akan mencoba memberikan keamanan lebih pada saat melakukan pengecekan semua user tapi dibebaskan untuk melihat user dari idnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan ubah berkas <strong><em>controller\/customers.py<\/em><\/strong> dan ubah pada fungsi shows()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>@jwt_required()\r\ndef shows():\r\n    dbresult = mysqldb.showUsers()\r\n    result = []\r\n    print(dbresult)\r\n    for items in dbresult:\r\n        user = {\r\n            \"id\" : items[0],\r\n            \"username\" : items[1],\r\n            \"firstname\" : items[2],\r\n            \"lastname\" : items[3],\r\n            \"email\" : items[4]            \r\n        }\r\n        result.append(user)\r\n        \r\n    return jsonify(result)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita cek menggunakan postman, Langkah pertama adalah kita akan membuat token kita, kita masuk ke (Jangan lupa jalankan file server kita)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>localhost:5000\/requesttoken<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>masukkannya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\r\n    \"email\": [email dalam string, silahkan liat email terdaftar dengan menggunakan mysqlworkbench pada basisdata perpustkaan]\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika berhasil, hasilnya adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\r\n    \"data\": {\r\n        \"username\": \"userpertama\",\r\n        \"email\": \"rudi.roundhouse@gmail.com\"\r\n    },\r\n    \"token_access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6dHJ1ZSwiaWF0IjoxNjE4MzU3NDk1LCJqdGkiOiJjYzQ4OTI5MC1jYjJhLTRhYzEtYjI2ZS00MWViZTU3ODcxZmYiLCJuYmYiOjE2MTgzNTc0OTUsInR5cGUiOiJhY2Nlc3MiLCJzdWIiOnsidXNlcm5hbWUiOiJ1c2VycGVydGFtYSIsImVtYWlsIjoicnVkaS5yb3VuZGhvdXNlQGdtYWlsLmNvbSJ9LCJleHAiOjE2MTg0NDM4OTV9.fT-EGiElyHgfJR3tb76BT6bFfWhpyNrnxzLooBiDEDE\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Simpan access token tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>langkah kedua, kita akan mencoba mengakses Endpoint yang mengharuskan autentikasi. ketikkan pada postman.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>localhost:5000\/users<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>{\r\n    \"msg\": \"Missing Authorization Header\"\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Karena kita sudah terapkan jwt_required() pada endpoint ini maka kita harus memasukkan access token yang kita miliki. Caranya adalah dengan menggunakan tab authorization dan pilih Bearer key, setelah itu isikan token kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":16133,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-16133\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2-5.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Ketika kita mencoba untuk mengakses kembali endpoint tersebut, akan menghasilkan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[\r\n    {\r\n        \"id\": 1,\r\n        \"username\": \"userpertama\",\r\n        \"firstname\": \"rudi\",\r\n        \"lastname\": \"roundhouse\",\r\n        \"email\": \"rudi.roundhouse@gmail.com\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"username\": \"userkedua\",\r\n        \"firstname\": \"shiroe\",\r\n        \"lastname\": \"ishigami\",\r\n        \"email\": \"shiroe.ishigami@gmail.com\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"username\": \"userketiga\",\r\n        \"firstname\": \"akatsuki\",\r\n        \"lastname\": \"horizon\",\r\n        \"email\": \"akatsuki.horizon@gmail.com\"\r\n    }\r\n]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti itulah penjelasan sederhana tentang apa itu JWT dan bagaimana kita menggunakan untuk mengaplikasikan autorisasi pada endpoint api kita.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<h2>Referensi Pustaka<\/h2>\r\n<p><a href=\"https:\/\/dev.to\/itsfaqih\/apa-itu-jwt-json-web-token-28g6\">https:\/\/dev.to\/itsfaqih\/apa-itu-jwt-json-web-token-28g6<\/a><\/p>\r\n<p><a href=\"https:\/\/blog.evilfactory.id\/pasang-pengaman-di-rest-api\/\">https:\/\/blog.evilfactory.id\/pasang-pengaman-di-rest-api\/<\/a><\/p>\r\n<p><a href=\"https:\/\/www.gamelab.id\/news\/537-restapipython\">https:\/\/www.gamelab.id\/news\/537-restapipython<\/a><\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-10-13 08:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":"2021-09-19 16:42:06","waktu_publish_formatted":" Rabu, 13 Oktober 2021. 08:00:00 WIB."}]},{"id":329,"uuid":"4a859223-5505-4a84-a039-1c3495426cc0","materi_id":33,"nama":"Tugas Akhir","permalink":"tugas-akhir","urutan":6,"created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":null,"posting":[{"id":1467,"uuid":"5c16109f-c9a8-43ad-9434-b59a3d508991","author_user_id":11253,"materi_section_id":329,"judul":"Batch 28","permalink":"batch-28","konten":"<ol>\r\n<li>Tugas dikumpulkan paling lambat Minggu, 17 Oktober 2021 pukul 21.00 WIB<\/li>\r\n<li>Push tugas ke repository GIT<\/li>\r\n<li>Link Repository dimasukkan pada dasboard peserta, Pada menu pengumpulan \"Tugas Akhir\"<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1pWLPaK7sJkXxQOcandapOVhvTTmuUTD8\/view?usp=sharing\">Tugas Akhir<\/a><\/p>\r\n<p><a href=\"https:\/\/youtu.be\/Qdgoh6BmJtI\">Video Penjelasan Tugas Akhir<\/a><\/p>","waktu_publish":"2021-10-13 20:22:00","status_publish":"publish","urutan":6,"created_by":11253,"updated_by":11253,"created_at":"2021-10-13 15:02:49","updated_at":"2021-10-13 20:22:50","waktu_publish_formatted":" Rabu, 13 Oktober 2021. 20:22:00 WIB."}]}],"list_kelas":[{"id":21,"uuid":"2839c44d-0e69-40a1-a80a-e4d858dbfa75","kategori_kelas_id":17,"versi":"1.0.0","created_by":11253,"updated_by":11253,"created_at":"2021-03-10 10:04:21","updated_at":null},{"id":33,"uuid":"f7d1d1a3-43fc-40f1-8692-712581b83138","kategori_kelas_id":17,"versi":"2.0.0","created_by":11253,"updated_by":11253,"created_at":"2021-06-06 16:16:48","updated_at":null}],"is_done":1}