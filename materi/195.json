{"response_code":"00","response_msg":"Berhasil mendapatkan materi kelas","materi_kelas":{"id":32,"uuid":"2250a743-0e65-4c84-ab45-4e6c362e1a79","kategori_kelas_id":20,"versi":"2.0.0","created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":null},"section":[{"id":315,"uuid":"f57b2765-6ca6-48e0-84ab-dddb5e59f6e5","materi_id":32,"nama":"Pendahuluan","permalink":"pendahuluan","urutan":0,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-09-27 21:39:19","posting":[{"id":1066,"uuid":"177fb119-3270-41a8-86e7-4f9ed2e1fabe","author_user_id":8222,"materi_section_id":315,"judul":"Persiapan Perangkat","permalink":"persiapan-perangkat","konten":"<div class=\"edit-post-visual-editor__post-title-wrapper\">\r\n<div class=\"wp-block editor-post-title editor-post-title__block\">&nbsp;<\/div>\r\n<\/div>\r\n<div>\r\n<div class=\"block-editor-block-list__layout is-root-container\">\r\n<p id=\"block-252b02e3-efa3-4c6c-b159-79772d2b62d5\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"252b02e3-efa3-4c6c-b159-79772d2b62d5\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Selamat datang peserta Bootcamp Sanbercode kelas Flutter Mobile Apps Development . Sebelum membahas proses membuat aplikasi menggunakan SDK Flutter, terlebih dahulu kita akan membahas berbagai perangkat yang perlu dipersiapkan.<\/p>\r\n<h2 id=\"block-a32f14e0-5a71-4afa-8d95-3f235f9526d0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"a32f14e0-5a71-4afa-8d95-3f235f9526d0\" data-type=\"core\/heading\" data-title=\"Tajuk\">Perangkat yang diperlukan<\/h2>\r\n<p id=\"block-b6fd11f3-36c7-4067-9c99-eb8d12cff6fd\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b6fd11f3-36c7-4067-9c99-eb8d12cff6fd\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk mengikuti bootcamp Flutter ini, diperlukan perangkat utama yaitu <strong>PC\/Laptop<\/strong> yang terhubung dengan <strong>Internet<\/strong>. Spesifikasi PC\/Laptop minimal memiliki <strong>RAM 4GB<\/strong>.<\/p>\r\n<p id=\"block-7a0e20fb-fb2d-4002-8665-a58c92f13df0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7a0e20fb-fb2d-4002-8665-a58c92f13df0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dan untuk mempermudah proses pengembangan aplikasi, diperlukan perangkat <strong>smartphone Android<\/strong> dengan versi OS minimal <strong>5.0 Lollipop<\/strong>. Jika tidak, maka dapat menggunakan emulator Android seperti AVD (Android Virtual Device) yang terdapat pada <a href=\"https:\/\/developer.android.com\/studio\">Android Studio <\/a>(pastikan spesifikasi PC\/Laptop memenuhi system requirement pada Android Studio).<\/p>\r\n<h2 id=\"block-f43d81b8-7fbb-4464-abdf-4c303ced2464\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"f43d81b8-7fbb-4464-abdf-4c303ced2464\" data-type=\"core\/heading\" data-title=\"Tajuk\">Perangkat Lunak dan Teknologi yang digunakan<\/h2>\r\n<h3 id=\"block-17fb8530-88ab-42ce-9a33-9ab9263cf275\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"17fb8530-88ab-42ce-9a33-9ab9263cf275\" data-type=\"core\/heading\" data-title=\"Tajuk\">1. Terminal atau Console<\/h3>\r\n<p id=\"block-dac7b330-8714-43e6-97ab-6424fceae68d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"dac7b330-8714-43e6-97ab-6424fceae68d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada Bootcamp kali ini, diperlukan sebuah terminal untuk mengeksekusi berbagai perintah dasar yang berkaitan dengan Git, Node, dan Expo\/React Native CLI. Kita bisa menggunakan terminal bawaan dari Sistem Operasi yang digunakan seperti Command Prompt\/Windows PowerShell pada OS Windows dan Terminal pada OS Linux maupun OSX. Dan ketika melakukan proses instalasi Git juga terdapat Git Bash yang memiliki fungsi yang serupa. Selain itu, peserta juga bisa menggunakan <a href=\"https:\/\/cmder.net\/\">cmder<\/a> (terutama yang menggunakan OS Windows) karena cmder memiliki banyak fitur yang tidak dimiliki command prompt atau terminal bawaan. Proses instalasi bisa dilakukan menggunakan konfigurasi default\/recommended<\/p>\r\n<h3 id=\"block-701e6370-0a8b-4ac5-9df7-b40b7014f6c0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"701e6370-0a8b-4ac5-9df7-b40b7014f6c0\" data-type=\"core\/heading\" data-title=\"Tajuk\">2. Git<\/h3>\r\n<p id=\"block-7ad91e3d-f2d1-47c9-ab2a-6c285333d2e0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7ad91e3d-f2d1-47c9-ab2a-6c285333d2e0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/git-scm.com\/\">Git <\/a>merupakan version control yang banyak digunakan oleh para programmer atau software developer. Untuk dapat menggunakannya, download dan install <a href=\"https:\/\/git-scm.com\/\">Git <\/a>sesuai dengan platform OS yang bersangkutan. Dan jalankan perintah instalasi dengan konfigurasi default\/recommended.<\/p>\r\n<h3 id=\"block-015986ee-5c19-45af-8eb0-48f2a1e1e8bc\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"015986ee-5c19-45af-8eb0-48f2a1e1e8bc\" data-type=\"core\/heading\" data-title=\"Tajuk\">3. Visual Studio Code<\/h3>\r\n<p id=\"block-67394900-407f-41b9-9342-60da3f982c72\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"67394900-407f-41b9-9342-60da3f982c72\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/code.visualstudio.com\/\">Visual Studio Code<\/a> adalah salah satu IDE (Integrated Development Environment) yang direkomendasikan untuk digunakan selama bootcamp ini. Salah satu kelebihannya adalah kemudahan pengoperasian dan user inteface yang lebih mudah dipahami oleh orang yang awam dalam pemrograman. Selain itu juga terdapat banyak extension atau plugin yang sangat membantu dalam menuliskan kode selama membangun suatu program\/aplikasi. Beberapa extension yang disarankan untuk ditambahkan adalah Prettier - Code formatter, Material Icon Theme, dan ES7 React\/Redux\/React-Native\/JS snippets (opsional).<\/p>\r\n<p id=\"block-c134d464-a2e8-44d4-9a47-5e9dcd3579f7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c134d464-a2e8-44d4-9a47-5e9dcd3579f7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">IDE lainnya yang juga dapat digunakan adalah <a href=\"https:\/\/www.sublimetext.com\/\">Sublime Text<\/a> atau <a href=\"https:\/\/atom.io\/\">Atom<\/a>. Untuk kemudahan proses pembelajaran kami tidak merekomendasikan Notepad atau Notepad++<\/p>\r\n<h3 id=\"block-805eed72-74c3-4aaf-9129-ed65e54ae13c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"805eed72-74c3-4aaf-9129-ed65e54ae13c\" data-type=\"core\/heading\" data-title=\"Tajuk\">4. Postman<\/h3>\r\n<p id=\"block-37ea20b4-b7d5-4b86-be84-10a37359c17b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"37ea20b4-b7d5-4b86-be84-10a37359c17b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/www.postman.com\/\">Postman<\/a> adalah sebuah aplikasi yang berfungsi sebagai REST Client untuk uji coba REST API. Postman biasa digunakan oleh developer pembuat API sebagai tools untuk menguji API yang telah dibuat.<\/p>\r\n<p id=\"block-9ff5ca51-1664-495a-aa31-61692dcf67a0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"9ff5ca51-1664-495a-aa31-61692dcf67a0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Anda bisa download Postman sesuai sistem operasi yang dipakai atau digunakan. Untuk link download postman bisa ditemukan <a href=\"https:\/\/www.postman.com\/\">disini<\/a>.<\/p>\r\n<h2 id=\"block-765ba1b6-d3ea-42c2-bd8b-ac63b6e53a27\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"765ba1b6-d3ea-42c2-bd8b-ac63b6e53a27\" data-type=\"core\/heading\" data-title=\"Tajuk\">5. dart SDK<\/h2>\r\n<p id=\"block-bb9eab9b-55b7-4560-9bdd-66f3f97a9ede\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"bb9eab9b-55b7-4560-9bdd-66f3f97a9ede\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dart Sdk adalah software development kid yang fungsinya untuk mengenali bahasa yang digunakan, untuk sdk dart dapat di download disini https:\/\/dart.dev\/get-dart<\/p>\r\n<h2 id=\"block-0d897dd6-f217-43f5-b601-638328ec2e34\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"0d897dd6-f217-43f5-b601-638328ec2e34\" data-type=\"core\/heading\" data-title=\"Tajuk\">6. Sdk Flutter<\/h2>\r\n<p id=\"block-3cd1cdd5-30ca-41db-b04f-0c3f9a7a78bf\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3cd1cdd5-30ca-41db-b04f-0c3f9a7a78bf\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sdk flutter ini adalah software developmemt kid yang fungsinya untuk membuild aplikasi flutter, bdanya dengan dart, jika dart hanya ke bahasa nya jika flutter ke component dan lifecycle nya untuk donwload silahkan menuju ke link ini :<\/p>\r\n<p id=\"block-367e3d08-5ec7-4788-979e-15af0f201882\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"367e3d08-5ec7-4788-979e-15af0f201882\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">https:\/\/flutter.dev\/docs\/get-started\/install<\/p>\r\n<p id=\"block-3cf52276-95ee-4433-bc62-1bfd7d0905a0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3cf52276-95ee-4433-bc62-1bfd7d0905a0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">untuk tutorial installasi youtube silahkan ikuti ini :<\/p>\r\n<h2 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3cf52276-95ee-4433-bc62-1bfd7d0905a0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>7. Andoroid Studio&nbsp;<\/strong><\/h2>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3cf52276-95ee-4433-bc62-1bfd7d0905a0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Android studio juga perlu diinstall agar environtment dapat di setting untuk link silahkan menuju kesini :<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3cf52276-95ee-4433-bc62-1bfd7d0905a0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">https:\/\/developer.android.com\/studio<\/p>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-08-16 08:00:00","status_publish":"publish","urutan":1,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-08-16 07:23:40","waktu_publish_formatted":" Senin, 16 Agustus 2021. 08:00:00 WIB."},{"id":1067,"uuid":"5b440ed2-2ec7-4992-99c1-78e791a7a707","author_user_id":8222,"materi_section_id":315,"judul":"Proses Pengumpulan Tugas","permalink":"proses-pengumpulan-tugas","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setiap harinya Anda diminta untuk menyelesaikan tugas dan\/atau quiz yang diberikan. Disarankan Anda untuk membuat satu folder khusus dalam local PC\/Laptop untuk menyimpan file-file tugas yang terhubung dengan repository project pada tugas Git. Berikut tahapan atau tata cara mengumpulkan tugas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Tugas Dart<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tugas Dart yang diberikan pada 2 pekan pertama merupakan tugas per kasus. Dalam hal ini tahapan yang bisa digunakan adalah sebagai berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buat folder tugas (misal \"tugas 5 - array\")<\/li>\r\n<li>Setelah masuk ke dalam folder, buat file tugas (misal \"tugasArray.dart\")<\/li>\r\n<li>Jika di dalam tugas terdapat beberapa soal, Anda bisa gunakan fitur toggle comment pada visual studio code untuk pemisah antar soal (dengan menekan shortcut Ctrl + \/ pada Windows atau \u2318\/ pada Mac). contoh:\r\n<pre class=\"wp-block-preformatted\">\/\/ Soal 1 <br \/>{ jawaban soal 1 } <br \/>\/\/ Soal 2 <br \/>{ jawaban soal 2 } <br \/>\/\/ dst.<\/pre>\r\n<\/li>\r\n<li>Jika tugas telah selesai, upload file tugas ke Gitlab (Anda bisa menggunakan command di bawah ini).\r\n<pre class=\"wp-block-preformatted\">$ git add .   <br \/>$ git commit -m \"update tugas 5\"    <br \/>$ git push <\/pre>\r\n<\/li>\r\n<li>Jika proses git push telah berhasil, periksa halaman Gitlab Anda dan masuk ke menu \"<strong>Repository<\/strong>\" =&gt; \"<strong>Commits<\/strong>\" (yang terdapat di sidebar) kemudian copy link commit tugas Anda.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":3578,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-3578\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/PengumpulanTugas4-1024x482.png\" alt=\"\" \/>\r\n<figcaption>Contoh Copy Link Commit<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buka halaman web <a href=\"\/login\">sanbercode.com<\/a> masuk ke \"<strong>member area<\/strong>\" dan lakukan <strong>login<\/strong>. Masuk ke menu \"<strong>Kelas Training<\/strong>\" =&gt; \"<strong>Kelas yang Diikuti<\/strong>\" dan tekan tombol \"<strong>Akses Kelas<\/strong>\" pada kelas yang telah terdaftar.<\/li>\r\n<li>Selanjutnya masuk ke tab \"<strong>kelola tugas<\/strong>\" =&gt; <strong>Pilih Nama Tugas<\/strong> =&gt; tekan \"<strong>Input Tugas<\/strong>\" dan masukkan link commit yang telah di copy tadi.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Tambahan untuk tampilan buat perhari perfolder<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11587,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11587\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/tampilan-1024x536.png\" alt=\"\" \/>\r\n<figcaption>Contoh Tampilan Tugas1 - Tugas 15, Quiz 1-3<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Tugas Flutter<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada 2 pekan terakhir, Anda akan mengerjakan tugas menggunakan Flutter. Untuk mengurangi proses pembuatan projek baru yang cukup memakan waktu (proses flutter <code>init NamaProyek<\/code>) maka Anda disarankan untuk mengerjakannya di folder projek yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Salah satu cara yang disarankan adalah dengan membuat project pada folder tugas (berbarengan dengan kumpulan folder tugas dart).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Namun jika ingin membuat repository yang berbeda, maka bisa mengikuti tahapan berikut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Pada saat Anda akan mulai diminta membuat projek baru. Lakukan proses pembuatan projek expo (misal nama projek adalah SanbercodeProject).\r\n<pre class=\"wp-block-preformatted\">$ expo init SanberApp<\/pre>\r\n<\/li>\r\n<li>Buat repository baru di Gitlab, set visibility level \"<strong>Private<\/strong>\", tetapi <strong>tanpa centang\/non-aktifkan \"Initialize repository with a README\"<\/strong>.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":3573,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-3573\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/PengumpulanTugas-1024x487.png\" alt=\"Pembuatan Project Baru Tugas Expo\" \/>\r\n<figcaption>Pembuatan Repository Projek Baru untuk Tugas Expo<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":3575,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-3575\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/PengumpulanTugas3-1024x483.png\" alt=\"\" \/>\r\n<figcaption>Instruksi Menghubungkan Projek Expo dengan Repository Gitlab<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Masuk ke halaman projek Gitlab baru tersebut dan ikuti perintah pada bagian \"Push an existing folder\". (command yang perlu dijalankan seperti di bawah ini).\r\n<pre class=\"wp-block-preformatted\">$ cd SanberApp \/\/ masuk ke folder projek expo    $ git init \/\/ inisiasi ulang git   $ git remote add origin https:\/\/gitlab.com\/bootcamp-rn-0620\/tugas-expo.git                \/\/ gunakan url repo gitlab Anda sendiri yang terdapat di halaman gitlab Anda    $ git add .    $ git commit -m \"Initial commit\"    $ git push -u origin master<\/pre>\r\n<\/li>\r\n<li>Jika proses push berhasil, selanjutnya buat folder tugas di dalam folder projek expo (misal \"tugasComponent\") dan selesaikan tugas di dalam folder tersebut.<\/li>\r\n<li>Jika tugas telah selesai, upload file tugas ke Gitlab (Anda bisa menggunakan command di bawah ini).\r\n<pre class=\"wp-block-preformatted\">$ git add .   $ git commit -m \"update tugas core component\"   $ git push <\/pre>\r\n<\/li>\r\n<li>Jika proses git push telah berhasil, periksa halaman Gitlab Anda dan masuk ke menu \"<strong>Repository<\/strong>\" =&gt; \"<strong>Commits<\/strong>\" (yang terdapat di sidebar) kemudian copy link commit tugas Anda.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":3578,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-3578\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/PengumpulanTugas4-1024x482.png\" alt=\"\" \/>\r\n<figcaption>Copy Link Commit<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buka halaman web <a href=\"\/login\">sanbercode.com<\/a> masuk ke \"<strong>member area<\/strong>\" dan lakukan <strong>login<\/strong>. Masuk ke menu \"<strong>Kelas Training<\/strong>\" =&gt; \"<strong>Kelas yang Diikuti<\/strong>\" dan tekan tombol \"<strong>Akses Kelas<\/strong>\" pada kelas yang telah terdaftar.<\/li>\r\n<li>Selanjutnya masuk ke tab \"<strong>kelola tugas<\/strong>\" =&gt; <strong>Pilih Nama Tugas<\/strong> =&gt; tekan \"<strong>Input Tugas<\/strong>\" dan masukkan link commit yang telah di copy tadi.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Jika terjadi masalah dalam mengikuti tahapan tersebut silahkan disampaikan pada grup diskusi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong>: untuk pembelajaran digunakan gitlab agar seragam, dan lebih mudah trainner dalam memeriksa tugas tersebut<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --><\/p>","waktu_publish":"2021-08-16 08:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-08-16 07:23:53","waktu_publish_formatted":" Senin, 16 Agustus 2021. 08:00:00 WIB."}]},{"id":316,"uuid":"3d0eec7e-7a59-4db0-bf59-f42511840ff4","materi_id":32,"nama":"Materi Week 1","permalink":"materi-week-1","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-09-27 21:39:19","posting":[{"id":1068,"uuid":"3d7a77d4-8e69-4b16-b68d-9ae4b815df33","author_user_id":8222,"materi_section_id":316,"judul":"Hari -1-Git","permalink":"hari-1-git","konten":"<p>Mengenal version control Git dan version control platform Gitlab<\/p>\r\n<h2 id=\"membuat-project-git-dan-mengelolanya\">Membuat project Git dan mengelolanya<\/h2>\r\n<p>Pastikan sudah install git di komputer anda. Jika belum terinstall silakan ikuti langkah-langkahnya di sini:&nbsp;<a href=\"https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-contribute-to-open-source-getting-started-with-git\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-contribute-to-open-source-getting-started-with-git<\/a><\/p>\r\n<h2>Materi Video Hari Pertama&nbsp;<\/h2>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/Lj30FoSL00U\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<p>bagi teman teman yang membutuhkan materi video silahkan akses video diatas<\/p>\r\n<h3 id=\"membuat-repository-baru\">Membuat Repository Baru&nbsp;<\/h3>\r\n<p>Repository atau repo di Gitlab biasa disebut dengan project. Berikut langkah-langkah untuk membuat repository baru:<\/p>\r\n<ul>\r\n<li class=\"\">Setelah login anda akan menuju halaman Projects yang berisi semua repository yang anda miliki. Jika Anda user baru maka belum ada repository yang tersedia. Di halaman tersebut anda akan melihat tombol New Project di sebelah kanan atas. Klik tombol tersebut.<\/li>\r\n<\/ul>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LlbproPcbeCtKgKYGvN%2F-Llbq3l7Zcukr3daq0H_%2FScreenshot%20from%202019-07-04%2015-07-43.png?alt=media&amp;token=fa940493-e855-4331-92ad-8139dff079c6\" alt=\"\" \/><\/figure>\r\n<ul>\r\n<li class=\"\">Pada halaman membuat project baru, isi kolom project-name dengan nama yang Anda inginkan, misalkan: my first repo.<\/li>\r\n<li class=\"\">Pada kolom visibility level Anda akan melihat tiga pilihan yaitu Private, Internal, dan Public. Private artinya repo yang akan kita buat bersifat rahasia, hanya Anda dan orang yang Anda beri akses saja yang bisa membukanya. Sedangkan pilihan Internal berarti repo Anda akan dapat dilihat oleh semua user Gitlab. Pilihan &ldquo;Public&rdquo; berarti repo Anda akan terlihat oleh orang dari mana saja walaupun dia tidak memiliki akun gitlab. Pilih yang sesuai kebutuhan misalkan : Public.<\/li>\r\n<li class=\"\">Di bagian bawahnya terdapat pilihan checkbox &ldquo;Initialize repository with a README&rdquo;. Centang saja jika anda ingin langsung clone repository nya setelah dibuat.<\/li>\r\n<\/ul>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LlbproPcbeCtKgKYGvN%2F-LlbqFzdUNMEHljLQNHA%2FScreenshot%20from%202019-07-04%2015-24-41.png?alt=media&amp;token=187ff3fe-30b6-4e97-8ec8-713145d30615\" alt=\"\" \/><\/figure>\r\n<ul>\r\n<li>Jika berhasil maka Anda akan diarahkan menuju halaman project atau repo yang telah dibuat. Jika sebelumnya kita centang &ldquo;Initialize repository with a README&rdquo; maka repository kita akan berisi file README.md.<\/li>\r\n<li>Pada Bagian kanan atas terdapat tombol clone. Ketika diklik maka akan keluar dua pilihan &ldquo;Clone with SSH&rdquo; dan &ldquo;Clone with HTTPS&rdquo;. Pilih saja clone dengan HTTPS. Klik tombol salin\/copy supaya langsung otomatis tercopy pada clipboard. Jika ingin clone dengan SSH maka anda harus setting dulu akun anda agar terhubung dengan komputer Anda.<\/li>\r\n<\/ul>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LlbslGZ-w-tHwbKNuXb%2F-LlbsvawiXHthWqDmYZO%2FScreenshot%20from%202019-07-04%2016-10-48.png?alt=media&amp;token=89280629-8db4-4abd-aa2a-2f55671e08e0\" alt=\"\" \/><\/figure>\r\n<ul>\r\n<li>Setelah itu menuju ke terminal atau cmd. Arahkan menuju folder dimana anda ingin menyimpan repository yang sudah Anda buat. Berikan perintah git clone &lt;link_anda_yang_barusan_dicopy&gt; (tanda &lt;&gt; hanyalah sebagai penanda template tidak usah ditulis di perintah cmd)<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-preformatted\">$ git clone &lt;your_repository_link_url&gt;<\/pre>\r\n<ul>\r\n<li class=\"\">Jika sudah berhasil diclone maka akan ditemukan folder dengan nama repository di Gitlab. Cara mengeceknya dengan perintah &ldquo;ls&rdquo; atau &ldquo;dir&rdquo;.<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-preformatted\">$ ls\r\nmy-first-repo   <\/pre>\r\n<h3 id=\"mengupload-perubahan-project-dengan-git-push\">Mengupload perubahan project dengan git push<\/h3>\r\n<p>Ketika kita sudah berhasil clone repository kita di Gitlab maka tentu kita ingin melakukan update atau penambahan code pada project kita. Agar perbaruan yang kita simpan di local (komputer) kita dapat kita perbaharui juga di repository Gitlab maka kita bisa lakukan dengan git push. Berikut langkah-langkahnya:<\/p>\r\n<ul>\r\n<li class=\"\">Ketika kita sudah memberikan perubahan terhadap suatu file atau membuat folder-folder baru pada folder project kita maka cara mengecek status perbaruan adalah dengan git status<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-preformatted\">$ git status\r\nOn branch master\r\nYour branch is up to date with 'origin\/master'.\r\n \r\nChanges not staged for commit:\r\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\r\n  (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\r\n \r\n modified:   README.md\r\n \r\nno changes added to commit (use \"git add\" and\/or \"git commit -a\") <\/pre>\r\n<ul>\r\n<li class=\"\">Setelah git status maka akan ditampilkan list file yang &ldquo;modified&rdquo; atau &ldquo;untracked&rdquo;. &ldquo;modified&rdquo; artinya adalah kita mengubah file yang sebelumnya ada sedangkan &ldquo;untracked&rdquo; artinya file tersebut sama sekali baru di repository. Dalam contoh di atas terdapat perubahan pada file &ldquo;README.md&rdquo;.<\/li>\r\n<li class=\"\">Untuk menaikkan perubahan (stage) yang kita buat maka berikan perintah git add<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-preformatted\">$ git add README.md\r\n\r\n\/\/ Jika ada terdapat banyak file dan kita ingin naikkan semuanya maka perintahnya: \r\n$ git add .  <\/pre>\r\n<ul>\r\n<li class=\"\">Sekarang perubahan tadi sudah pada tahap &ldquo;staged&rdquo;. jika kita cek status nya lagi maka akan didapati berbeda:<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-preformatted\">$ git status \r\nOn branch master\r\nYour branch is up to date with 'origin\/master'.\r\n \r\nChanges to be committed:\r\n  (use \"git reset HEAD &lt;file&gt;...\" to unstage)\r\n \r\n modified:   README.md <\/pre>\r\n<ul>\r\n<li class=\"\">Selanjutnya adalah memberikan laporan atau commit terhadap perubahan yang kita buat dengan git commit.<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-preformatted\"> $ git commit -m \"Pesan saya: Mengubah README.md\"<\/pre>\r\n<ul>\r\n<li class=\"\">tanda &ldquo;-m&rdquo; pada perintah commit artinya kita ingin memberikan pesan atau laporan terhadap perubahan yang sudah dibuat. Dalam hal ini laporannya adalah &ldquo;Pesan saya: mengubah README.md&rdquo;<\/li>\r\n<li class=\"\">Selanjutnya adalah push untuk mengirim \/upload perubahan yang ada di local computer kita menuju repository yang ada di Gitlab. Jika kita berada di branch bernama master maka perintahnya adalah:<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-preformatted\">$ git push origin master <\/pre>\r\n<p>Jika branch yang sedang kita miliki di local adalah branch lain selain master maka cara push nya adalah<\/p>\r\n<pre class=\"wp-block-preformatted\">$ git push origin &lt;nama_branch&gt;<\/pre>\r\n<p>Jika langkah tersebut sudah maka kita sudah berhasil mengupload perubahan yang kita buat di repository kita.&nbsp;<img class=\"emoji\" role=\"img\" draggable=\"false\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/13.0.0\/svg\/1f942.svg\" alt=\"\ud83e\udd42\" width=\"25\" height=\"25\" \/><\/p>\r\n<h2 id=\"git-branch-dan-merge-request-optional\">Git branch dan merge request (optional)<\/h2>\r\n<p>Membuat branch baru dan melakukan merge request<\/p>\r\n<h3 id=\"clone-repository\">Clone repository<\/h3>\r\n<p>Terlebih dahulu lakukan clone terhadap repository project.<\/p>\r\n<pre class=\"wp-block-preformatted\">$ git clone https:\/\/gitlab.com\/some-project \r\n$ cd some-project<\/pre>\r\n<p>Catatan: Link https di atas hanyalah contoh link dari sebuah repository. Link https tersebut bisa diperoleh di halaman gitlab pada bagian clone.<\/p>\r\n<h3 id=\"buat-branch-baru\">Buat branch baru<\/h3>\r\n<p>Setelah di-clone dan masuk ke folder project nya, buatlah branch baru . (myname hanyalah contoh nama branch, kita bisa mengubah sesuai nama yang diinginkan)<\/p>\r\n<pre class=\"wp-block-preformatted\">$ git branch myname\r\n$ git checkout myname <\/pre>\r\n<p>maka sekarang kita sudah berada di branch baru dan dapat mulai melakukan pekerjaan kita.<\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan:<\/p>\r\n<p><code>myname<\/code>&nbsp;hanya contoh , silakan sesuaikan sendiri nama branch masing-masing.<\/p>\r\n<\/blockquote>\r\n<h3 id=\"push-ke-branch\">Push ke branch&nbsp;<\/h3>\r\n<p>Setelah pekerjaan selesai, kita akan melakukan upload atau push ke branch kita sendiri.<\/p>\r\n<pre class=\"wp-block-preformatted\">$ git add . \r\n$ git commit -m \"some message\"\/\/ push ke branch \r\n$ git push origin myname<\/pre>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan:<br \/><code>\"some message\"<\/code>&nbsp;hanyalah contoh pesan atau komentar pada sebuah commit. Silahkan isi dengan jenis update yang dikerjakan.<\/p>\r\n<\/blockquote>\r\n<h3 id=\"membuat-merge-request\">Membuat merge request<\/h3>\r\n<p>Setelah melakukan push ke branch sendiri maka selanjutnya melakukan merge request.<\/p>\r\n<p>Secara default pada halaman project akan tersedia tombol &ldquo;create merge request&rdquo;.<\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LldepAZorMgXgsf4exP%2F-Lldo6E7VUbbizSnzZRM%2Fmerge-request.jpeg?alt=media&amp;token=672f6a87-a9ad-4b11-a72c-d03bc6a820c2\" alt=\"\" \/><\/figure>\r\n<p>Jika tombol tersebut tersedia, klik tombol tersebut untuk menuju halaman merge request.<\/p>\r\n<p>Pada halaman merge request isilah kolom title dengan pesan commit atau laporan progress pekerjaan misalkan : done, work in progress atau WIP, dsb.<\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LldepAZorMgXgsf4exP%2F-LldpcFElD1xcptGIuSF%2Ftitle%20merge-request.jpeg?alt=media&amp;token=e97935be-d331-420a-9fb5-ec74fb539608\" alt=\"\" \/><\/figure>\r\n<p>Setelah itu, klik submit merge request maka pekerjaan kita sudah disubmit ke merge request dan akan direview oleh pengelola project.<\/p>\r\n<p>Selengkapnya kamu bisa ikuti juga video tutorial berikut ini:&nbsp;<a href=\"https:\/\/www.youtube.com\/watch?v=HGCTmMSU-Ac&amp;feature=youtu.be\" target=\"_blank\" rel=\"noreferrer noopener\">tutorial merge request<\/a>.<\/p>\r\n<ul>\r\n<li>vscode , link download : <a href=\"https:\/\/code.visualstudio.com\/download\">https:\/\/code.visualstudio.com\/download<\/a><\/li>\r\n<li>Cmder,&nbsp;<em>link download<\/em>:&nbsp;<a href=\"https:\/\/cmder.net\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/cmder.net\/cmder<\/a><\/li>\r\n<li>Git bash,link download: <a href=\"https:\/\/git-scm.com\/downloads\">https:\/\/git-scm.com\/downloads<\/a>, Git bash biasanya ter-<em>install<\/em>&nbsp;jika kita meng-<em>install<\/em>&nbsp;git di pc\/laptop kita.<\/li>\r\n<\/ul>","waktu_publish":"2021-10-25 08:00:00","status_publish":"publish","urutan":1,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:24:47","waktu_publish_formatted":" Senin, 25 Oktober 2021. 08:00:00 WIB."},{"id":1069,"uuid":"f23cf7dd-d854-435f-879d-1045feceb7ff","author_user_id":8222,"materi_section_id":316,"judul":"Hari-1-command Line","permalink":"hari-1-command-line","konten":"<h1 class=\"entry-title\">&nbsp;<\/h1>\r\n<p>Mengenal perintah-perintah dasar pada CLI (Command Line Interface)<\/p>\r\n<h2 id=\"apa-itu-command-line-interface\">Apa itu command line interface?&nbsp;<\/h2>\r\n<p><em>Command line interface<\/em>&nbsp;atau yang biasa kita kenal cmd atau&nbsp;<em>command prompt<\/em>&nbsp;atau&nbsp;<em>terminal&nbsp;<\/em>adalah&nbsp;<em>software&nbsp;<\/em>atau antar muka untuk memberikan perintah-perintah dasar pada komputer kita. Biasanya kita mengoperasikan komputer seperti&nbsp;<em>browsing media<\/em>, mencari&nbsp;<em>file<\/em>, membuat&nbsp;<em>file&nbsp;<\/em>atau&nbsp;<em>folder<\/em>, dan lain-lain dengan GUI (<em>Graphical User Interface<\/em>) yang sudah disediakan pengembang Sistem Operasi seperti&nbsp;<em>Windows<\/em>,&nbsp;<em>Linux<\/em>, atau OSX. Namun pada dasarnya kita juga bisa melakukan operasi-operasi tersebut dalam suatu perintah yang kita kirimkan melalui cmd\/<em>terminal<\/em>. Berikut ini beberapa contohnya:<\/p>\r\n<h4>Menuju&nbsp;<em>folder<\/em>\/direktori tertentu<\/h4>\r\n<p>Untuk menuju&nbsp;<em>folder&nbsp;<\/em>atau direktori tertentu bisa gunakan perintah&nbsp;<code>cd<\/code>&nbsp;atau kepanjangan dari&nbsp;<em>change directory<\/em><\/p>\r\n<pre class=\"wp-block-preformatted\">\/\/ Menuju Desktop\r\n$ cd Desktop\r\n\/\/ Menuju ke direktori <em>parent <\/em>(sebelumnya)\r\n$ cd ..<br \/><br \/><\/pre>\r\n<h4>Mengetahui alamat dari direktori yang sedang dibuka<\/h4>\r\n<p>Terkadang kita butuh tahu sedang dimana posisi terminal kita berjalan. Perintah untuk fungsi ini yaitu&nbsp;<code>pwd<\/code>&nbsp;atau kependekan dari path of working directory<\/p>\r\n<pre class=\"wp-block-preformatted\">$ pwd\r\n\/home\/users\r\n\/\/ sedang berada di folder home\/users<br \/><br \/><\/pre>\r\n<h4>Mengetahui daftar isi dari sebuah direktori\/<em>folder<\/em><\/h4>\r\n<p><em>Kamu bisa gunakan perintah&nbsp;<code>ls<\/code>&nbsp;atau&nbsp;<code>dir<\/code>&nbsp;. contohnya sebagai berikut<\/em><\/p>\r\n<pre class=\"wp-block-preformatted\">$ ls \r\nDocument Desktop Image index.html\r\n$ dir\r\nDocument Desktop Image index.html <br \/><br \/><\/pre>\r\n<h4>Membuat&nbsp;<em>folder<\/em>&nbsp;baru<\/h4>\r\n<p>Perintahnya adalah&nbsp;<code>mkdir<\/code>&nbsp;atau singkatan dari&nbsp;<em>make directory<\/em>. contohnya sebagai berikut<\/p>\r\n<pre class=\"wp-block-preformatted\">\/\/ membuat folder baru bernama new-folder\r\n$ mkdir new-folder\r\n\/\/ mengecek apakah sudah berhasil buat folder baru\r\n$ ls\r\nnew-folder ... ...  <br \/><br \/><\/pre>\r\n<h4>Membuat&nbsp;<em>file&nbsp;<\/em>baru<\/h4>\r\n<p>Gunakan perintah&nbsp;<code>touch<\/code>&nbsp;untuk membuat file baru<\/p>\r\n<pre class=\"wp-block-preformatted\">\/\/ membuat <em>file <\/em>index.html\r\n$ touch index.html\r\n\/\/ mengecek apakah sudah berhasil buat <em>file <\/em>baru\r\n$ ls \r\nindex.html ... ... <br \/><br \/><\/pre>\r\n<h2 id=\"software-terminal-command-line-yang-direkomendasikan\"><em>Software terminal&nbsp;<\/em>\/&nbsp;<em>command line<\/em>&nbsp;yang direkomendasikan<\/h2>\r\n<div class=\"entry-content\">\r\n<p>Untuk OS Windows,&nbsp;<em>terminal&nbsp;<\/em>bawaannya adalah&nbsp;<em>command prompt<\/em>&nbsp;atau cmd yang relatif kurang nyaman untuk dipakai dalam tahap&nbsp;<em>development<\/em>. Oleh karena itu direkomendasikan untuk&nbsp;<em>install terminal<\/em>&nbsp;di bawah ini agar lebih optimal dalam mengerjakan&nbsp;<em>project<\/em>.<\/p>\r\n<ul>\r\n<li>Cmder,&nbsp;<em>link download<\/em>:&nbsp;<a href=\"https:\/\/cmder.net\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/cmder.net\/cmder<\/a><\/li>\r\n<li>Git bash,link download: <a href=\"https:\/\/git-scm.com\/downloads\">https:\/\/git-scm.com\/downloads<\/a>, Git bash biasanya ter-<em>install<\/em>&nbsp;jika kita meng-<em>install<\/em>&nbsp;git di pc\/laptop kita.<\/li>\r\n<li>vscode , link download : https:\/\/code.visualstudio.com\/download<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-10-25 08:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:25:00","waktu_publish_formatted":" Senin, 25 Oktober 2021. 08:00:00 WIB."},{"id":1070,"uuid":"c6d035a5-9234-403a-aea4-1f1d406eb395","author_user_id":8222,"materi_section_id":316,"judul":"Hari-2- Dart Intro, type data dan Keyword","permalink":"hari-2-dart-intro-type-data-dan-keyword","konten":"<p><strong>1. Dart<\/strong>&nbsp;adalah sebuah bahasa pemrograman yang dikembangkan oleh&nbsp;<strong>Google<\/strong>&nbsp;dan digunakan untuk membangun aplikasi&nbsp;<em>mobile<\/em>,&nbsp;<em>desktop<\/em>,&nbsp;<em>backend<\/em>&nbsp;dan&nbsp;<em>web<\/em>, bahasa pemrograman ini bertipe&nbsp;<strong><em>Object Oriented<\/em><\/strong>&nbsp;dimana struktur kode kita berada di dalam&nbsp;<em>Class<\/em>,&nbsp;<em>Class<\/em>&nbsp;berisi data dan&nbsp;<em>method<\/em>. Dart menggunakan&nbsp;<em>C-style syntax<\/em>&nbsp;yang mirip dengan C,Java. Javascript. Swift.<\/p>\r\n<h2>Menjalankan Dart<\/h2>\r\n<p>Ada Bermacam cara untuk menjalankan kode dart yang kita buat&nbsp;<\/p>\r\n<ol>\r\n<li class=\"\">Menjalankan dart di console browser<\/li>\r\n<li class=\"\">Menjalankan dart di tools online seperti <a href=\"https:\/\/dartpad.dev\/\">https:\/\/dartpad.dev\/<\/a><\/li>\r\n<li class=\"\">menjalankan dart dengan dart dev yang tersedia di website resmi dart&nbsp;<\/li>\r\n<\/ol>\r\n<p>Menjalankan dart dengan dart dev<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Pada materi ini kita akan mencoba untuk menjalankan script dengan dart.<\/p>\r\n<p>Dart Sdk adalah software berbasis bahasa pemerograman dart yang dijalankan di sisi server. Jika biasanya dart kita kenal erat kaitannya dengan client\/browser tapi dengan Dart ini kita bisa membangun server menggunakan bahasa Dart.<\/p>\r\n<h2><strong>Rangkuman Materi Video&nbsp;<\/strong><\/h2>\r\n<p><strong><iframe src=\"https:\/\/www.youtube.com\/embed\/sqmTBDXcCCk\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\" data-mce-fragment=\"1\"><\/iframe><\/strong><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<h2><strong>Install Dart&nbsp;<\/strong><\/h2>\r\n<p>Pertama-tama tentu kita harus menginstall terlebih dahulu dart sdk di komputer kita. Berikut ini link untuk download <a href=\"https:\/\/gekorm.com\/dart-windows\/\">https:\/\/gekorm.com\/dart-windows\/<\/a> &nbsp;(disarankan memilih versi STABLE). Untuk OS Windows dan macOs tinggal diikuti saja instalasinya sampai selesai, sedangkan untuk Ubuntu 18.04 kamu bisa install mengikuti <a href=\"https:\/\/dart.dev\/tools\/sdk\/archive\">https:\/\/dart.dev\/tools\/sdk\/archive<\/a>.<\/p>\r\n<p>Untuk mengecek apakah instalasi dart sudah berhasil kita bisa jalankan script di terminal kita:<\/p>\r\n<p><strong>$ dart --version&nbsp;<\/strong><\/p>\r\n<p>Dart SDK version: 2.10.5 (stable) (Tue Jan 19 13:05:37 2021 +0100) on \"windows_x64\"<\/p>\r\n<p>dengan perintah tersebut, diketahui saat ini terinstall dart dengan versi 2.10.5<\/p>\r\n<p>Hello World<\/p>\r\n<p>Untuk menjalankan dart mari kita coba buat file nya terlebih dahulu dengan menuliskan.&nbsp;<\/p>\r\n<p>main.dart<\/p>\r\n<pre class=\"highlight\"><code>void main(){<br \/>   print(\"Hello World\")<br \/>}<br \/><\/code><\/pre>\r\n<p>lalu&nbsp;<\/p>\r\n<p>jika sudah masukan ke folder nya dan jalankan $ dart main.dart<\/p>\r\n<p>Demikian cara untuk menjalankan dart dengan dart sdk.<\/p>\r\n<h2><strong>Dart I\/O (input dan ouput)<\/strong><\/h2>\r\n<p>di dalam pemerogrman dart kita juga dapat menggunakn input dan output, penggunaannya juga tergolong mudah dan cepat&nbsp;<\/p>\r\n<p>dengan menggunakan import 'dart.io'<\/p>\r\n<p>contoh :&nbsp;<\/p>\r\n<div>\r\n<div>\r\n<div>\r\n<div>import 'dart:io';<\/div>\r\n<br \/>\r\n<div>void main(List&lt;String&gt; args) {<\/div>\r\n<div>&nbsp;<\/div>\r\n<div>print(\"masukan password\");<\/div>\r\n<div>&nbsp;<\/div>\r\n<div>StringinputText = stdin.readLineSync()!;<\/div>\r\n<div>&nbsp;<\/div>\r\n<div>print(\"password : ${inputText}\");<\/div>\r\n<div>&nbsp;<\/div>\r\n<div>}<\/div>\r\n<\/div>\r\n<pre><br \/><br \/><\/pre>\r\n<div>\r\n<div>\r\n<pre>&nbsp;<\/pre>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<h2>Data Type&nbsp;<\/h2>\r\n<p>Data Type atau dalam bahasa indonesia Tipe Data adalah sekumpulan informasi yang memiliki nilai dan karakteristik tertentu. Beberapa contoh tipe data pada dart di antaranya:<\/p>\r\n<ol>\r\n<li class=\"\"><strong>Number<\/strong>&nbsp;: tipe data angka<\/li>\r\n<li class=\"\"><strong>String<\/strong>&nbsp;: tipe data berupa text atau kumpulan karakter, biasanya string dibungkus dalam tanda petik ganda (double quote) atau tanda petik tunggal (single quote).<\/li>\r\n<li class=\"\"><strong>Boolean:&nbsp;<\/strong>tipe data dengan nilai&nbsp;<code>true<\/code>&nbsp;atau&nbsp;<code>false<\/code><\/li>\r\n<li class=\"\"><strong>List &amp; <\/strong><strong>maps :&nbsp;<\/strong>daftar tipe data untuk merepresentasikan sekumpulan object<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<h2 id=\"variable\">Variable<\/h2>\r\n<p>Variable adalah suatu blok data untuk menampung sekumpulan data dengan berbagai tipe data apapun. Dengan variable kita bisa menyimpan suatu nilai untuk kemudian kita olah kembali pada program kita. Untuk deklarasi variable dalam dart kita bisa gunakan sintaks <code>var<\/code>&nbsp;lalu diikuti nama variablenya.<\/p>\r\n<p>void main() {<br \/>&nbsp;&nbsp;<br \/>&nbsp; &nbsp;var name = \"John\" ;\/\/ Tipe<br \/>&nbsp; &nbsp;var angka = 12;<br \/>&nbsp; &nbsp;var todayIsFriday = false ;<\/p>\r\n<p>&nbsp; &nbsp;print(name); \/\/ \"John\"<br \/>&nbsp; &nbsp;print(angka) ;\/\/ 12<br \/>&nbsp; &nbsp;print(todayIsFriday); \/\/ false<br \/>&nbsp;&nbsp;<br \/>}<\/p>\r\n<p>Waspadai Pendeklarasian variabel yang tidak bernilai !<\/p>\r\n<p>var items;<\/p>\r\n<p>print(items); \/\/null<\/p>\r\n<h1 id=\"operator\">Operator<\/h1>\r\n<p>Operator adalah karakter khusus yang merepresentasikan sebuah tindakan. Operator terbagi ke dalam beberapa jenis:<\/p>\r\n<ol>\r\n<li>Operator Aritmatika Operator yang melibatkan operasi matematika seperti tambah, kurang, kali, bagi.\r\n<ul>\r\n<li>Tambah&nbsp;<strong>(+)<\/strong><\/li>\r\n<li>Kurang (<strong>&ndash;<\/strong>)<\/li>\r\n<li>Kali (<strong>*<\/strong>)<\/li>\r\n<li>Bagi (<strong>\/<\/strong>)<\/li>\r\n<li>Modulus (<strong>%<\/strong>)<br \/>Modulus adalah sisa bagi. Contohnya 5%3 hasilnya adalah 2, 100%5 hasilnya 0.<\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>Operator Assignment (<code>=<\/code>), Operator untuk mendaftarkan atau meng-assign suatu nilai ke dalam suatu variable\r\n<pre class=\"wp-block-preformatted\"><code>var angka;<\/code> <br \/><code>angka = 10; \/\/ Contoh assignment variable angka dengan nilai 10<\/code><\/pre>\r\n<\/li>\r\n<li>Operator Perbandingan, Operator yang membandingkan suatu nilai dengan nilai yang lain. Hasil dari perbandingan ini akan dikembalikan dalam tipe data boolean&nbsp;<code>true<\/code>&nbsp;atau&nbsp;<code>false<\/code>.\r\n<ul>\r\n<li>Equal Operator (<code>==<\/code>)\r\n<pre class=\"wp-block-preformatted\"><code>var angka = 100;<\/code><br \/><code>print(angka == 100); \/\/ true<\/code><br \/><code>print(angka == 20); \/\/ false<\/code><\/pre>\r\n<\/li>\r\n<li>Not Equal (<code>&nbsp;!=<\/code>&nbsp;)\r\n<pre class=\"wp-block-preformatted\"><code>var sifat = \"rajin\";<\/code><br \/><code>print(sifat != \"malas\"); \/\/ true<\/code><br \/><code>print(sifat != \"bandel\"); \/\/true <\/code><\/pre>\r\n<code><\/code><code><\/code><\/li>\r\n<li>Kurang dari &amp; Lebih Dari (&nbsp;<code>&lt;<\/code>,&nbsp;<code>&gt;<\/code>,&nbsp;<code>&lt;=<\/code>,&nbsp;<code>&gt;=<\/code>)\r\n<pre class=\"wp-block-preformatted\"><code>var number = 17;<\/code><br \/><code>print( number &lt; 20 ); \/\/ true<\/code><br \/><code>print( number &gt; 17 ); \/\/ false<\/code><br \/><code>print( number &gt;= 17 ); \/\/ true, karena terdapat sama dengan<\/code><br \/><code>print( number &lt;= 20 ); \/\/ true<\/code><\/pre>\r\n<\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>Operator Kondisional, Operator yang mengkombinasikan dua nilai kebenaran . Terdapat operator AND (<code>&amp;&amp;<\/code>) dan OR (<code>||<\/code>)\r\n<ul>\r\n<li>OR (&nbsp;<code>||<\/code>&nbsp;)\r\n<pre class=\"wp-block-preformatted\"><code>print(true || true); \/\/ true<\/code><br \/><code>print(true || false); \/\/ true<\/code><br \/><code>print(true || false || false); \/\/ true<\/code><br \/><code>print(false || false); \/\/ false<\/code><\/pre>\r\n<\/li>\r\n<li>AND (&nbsp;<code>&amp;&amp;<\/code>&nbsp;)\r\n<pre class=\"wp-block-preformatted\"><code>print(true &amp;&amp; true); \/\/ true<\/code><br \/><code>print(true &amp;&amp; false); \/\/ false<\/code><br \/><code>print(false &amp;&amp; false); \/\/ false<\/code><br \/><code>print(false &amp;&amp; true &amp;&amp; true); \/\/ false<\/code><br \/><code>print(true &amp;&amp; true &amp;&amp; true); \/\/ true <\/code><\/pre>\r\n<\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<h2 class=\"highlight\"><strong>2. Type Data<\/strong><\/h2>\r\n<p><strong>Mengenal lebih dalam tentang tipe data string pada dart<\/strong><\/p>\r\n<h2><strong>String&nbsp;<\/strong><\/h2>\r\n<p>String adalah tipe data yang berisi karakter-karakter dibungkus dalam tanda petik (<code>\"\"<\/code>&nbsp;atau&nbsp;<code>''<\/code>&nbsp;). Karakter-karakter pada suatu string dapat diakses dengan menggunakan indeks atau posisi karakter berada. Indeks pada string selalu mulai dari 0.<\/p>\r\n<p>void main() {&nbsp;<br \/>&nbsp; var sentences = \"dart\";&nbsp;<br \/>&nbsp; print(sentences[0]); \/\/ \"d\"<br \/>&nbsp; print(sentences[2]);\/\/ \"r\"<br \/>}<\/p>\r\n<p>String pada dart juga memiliki property dan methods tertentu. Property dan methods tersebut bisa kita gunakan dalam memanipulasi data agar sesuai dengan program yang kita inginkan.<\/p>\r\n<h1>&nbsp;Numbers<\/h1>\r\n<p>int : adalah tipe data berdasarkan angka yang tidak membutuhkan koma di belakang&nbsp;<\/p>\r\n<p>double : adalah tipe data yang spesifik sehingga membutuhkan koma&nbsp;<\/p>\r\n<p>contoh :<\/p>\r\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"kwd\">void<\/span><span class=\"pln\"> main<\/span><span class=\"pun\">()<\/span> <span class=\"pun\">{<\/span>\r\n   <span class=\"com\">\/\/ declare an integer<\/span>\r\n   <span class=\"kwd\">int<\/span><span class=\"pln\"> num1 <\/span><span class=\"pun\">=<\/span> <span class=\"lit\">10<\/span><span class=\"pun\">;<\/span>             \r\n     \r\n   <span class=\"com\">\/\/ declare a double value<\/span>\r\n   <span class=\"kwd\">double<\/span><span class=\"pln\"> num2 <\/span><span class=\"pun\">=<\/span> <span class=\"lit\">10.50<\/span><span class=\"pun\">;<\/span>  \r\n\r\n   <span class=\"com\">\/\/ print the values<\/span>\r\n   <span class=\"kwd\">print<\/span><span class=\"pun\">(<\/span><span class=\"pln\">num1<\/span><span class=\"pun\">); \/\/10<\/span>\r\n   <span class=\"kwd\">print<\/span><span class=\"pun\">(<\/span><span class=\"pln\">num2<\/span><span class=\"pun\">); \/\/10.5<\/span>\r\n<span class=\"pun\">}<\/span><\/pre>\r\n<p>&nbsp; <strong>mengubah string menjadi integer, kita dapat mengubah tipe data di dart dengan menggunakan method num.parse()<\/strong><\/p>\r\n<p>contoh : &nbsp;<\/p>\r\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"kwd\">void<\/span><span class=\"pln\"> main<\/span><span class=\"pun\">()<\/span> <span class=\"pun\">{<\/span> \r\n   <span class=\"kwd\">print<\/span><span class=\"pun\">(<\/span><span class=\"pln\">num<\/span><span class=\"pun\">.<\/span><span class=\"pln\">parse<\/span><span class=\"pun\">(<\/span><span class=\"str\">'12'<\/span><span class=\"pun\">));<\/span> \/\/12\r\n   <span class=\"kwd\">print<\/span><span class=\"pun\">(<\/span><span class=\"pln\">num<\/span><span class=\"pun\">.<\/span><span class=\"pln\">parse<\/span><span class=\"pun\">(<\/span><span class=\"str\">'10.91'<\/span><span class=\"pun\">));<\/span> \/\/10.91\r\n<span class=\"pun\">}<br \/><br \/>dan jangan salah memasukan angka atau akan error <br \/><\/span><\/pre>\r\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"kwd\">void<\/span><span class=\"pln\"> main<\/span><span class=\"pun\">()<\/span> <span class=\"pun\">{<\/span> \r\n   <span class=\"kwd\">print<\/span><span class=\"pun\">(<\/span><span class=\"pln\">num<\/span><span class=\"pun\">.<\/span><span class=\"pln\">parse<\/span><span class=\"pun\">(<\/span><span class=\"str\">'12A'<\/span><span class=\"pun\">));<\/span> \r\n   <span class=\"kwd\">print<\/span><span class=\"pun\">(<\/span><span class=\"pln\">num<\/span><span class=\"pun\">.<\/span><span class=\"pln\">parse<\/span><span class=\"pun\">(<\/span><span class=\"str\">'AAAA'<\/span><span class=\"pun\">));<\/span> \r\n<span class=\"pun\">}<br \/><br \/><\/span>kode ini akan menghasilkan error :<\/pre>\r\n<pre class=\"result notranslate\">Unhandled exception: \r\nFormatException: 12A \r\n#0 num.parse (dart:core\/num.dart:446) \r\n#1 main (file:\/\/\/D:\/Demos\/numbers.dart:4:13) \r\n#2 _startIsolate.&lt;anonymous closure&gt; (dart:isolatepatch\/isolate_patch.dart:261) \r\n#3 _RawReceivePortImpl._handleMessage (dart:isolatepatch\/isolate_patch.dart:148)<br \/><br \/><span style=\"font-size: 14pt;\"><strong>Mengubah dari int ke string <\/strong><\/span><br \/><br \/>void main() {&nbsp;<br \/>&nbsp; &nbsp;int j = 45;<br \/>  &nbsp;String t = \"$j\";&nbsp;&nbsp;<br \/>   print(\"hello\"+ t);<br \/>}<br \/><br \/><\/pre>\r\n<h2 id=\"referensi-tambahan\">Referensi Tambahan<\/h2>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/dart_programming\/dart_programming_data_types.htm\">https:\/\/www.tutorialspoint.com\/dart_programming\/dart_programming_data_types.htm<\/a><\/p>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/dart_programming\/dart_programming_string.htm\">https:\/\/www.tutorialspoint.com\/dart_programming\/dart_programming_string.htm<\/a><\/p>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/dart_programming\/dart_programming_boolean.htm\">https:\/\/www.tutorialspoint.com\/dart_programming\/dart_programming_boolean.htm<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<h2><strong>3. Keyword Pada Dart<\/strong><\/h2>\r\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"pun\">&nbsp;<br \/><\/span><\/pre>\r\n<div>\r\n<div>\r\n<div>\r\n<div class=\"block-editor-block-list__layout is-root-container\">\r\n<h1 id=\"block-e3150408-8109-4b27-b7e6-1ab3aa4105ed\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"e3150408-8109-4b27-b7e6-1ab3aa4105ed\" data-type=\"core\/heading\" data-title=\"Tajuk\">Dart: Perbedaan Final dan Const<\/h1>\r\n<p id=\"block-161cd0a7-09c2-4ec9-828c-b2e77f0d0c3c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"161cd0a7-09c2-4ec9-828c-b2e77f0d0c3c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Terkadang kita membuat variabel dan memberi nilainya yang sangat spesifik dengan tujuan agar&nbsp;<strong>tidak pernah<\/strong>&nbsp;mengubah nilainya. Agar program dapat berjalan dengan sesuai yang di harapkan, yang terpenting adalah nilai variabel tetap sama selama masa pemakaiannya. Untuk membuat variabel yang dimaksud menggunakan&nbsp;<strong>const<\/strong>&nbsp;dan&nbsp;<strong>final<\/strong>&nbsp;yang seharusnya digunakan. Sebelum kita membahas tentang&nbsp;<strong>const&nbsp;<\/strong>dan&nbsp;<strong>final<\/strong>, kita perlu mengetahui perbedaan&nbsp;<strong>compile-time<\/strong>&nbsp;dan&nbsp;<strong>runtime<\/strong>.<\/p>\r\n<h3 id=\"block-b5cb2402-9b95-4cde-ac2a-80295920d401\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"b5cb2402-9b95-4cde-ac2a-80295920d401\" data-type=\"core\/heading\" data-title=\"Tajuk\"><em>Compile-Time<\/em>&nbsp;dan&nbsp;<em>Run-Time<\/em><\/h3>\r\n<p id=\"block-fd7c7525-e1c1-48d8-aed9-f0c2bf7c7188\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fd7c7525-e1c1-48d8-aed9-f0c2bf7c7188\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><em>Compile Time<\/em>&nbsp;dan&nbsp;<em>Run Time<\/em>&nbsp;adalah istilah dari pemrograman yang mengarahkan pada tahapan di dalam ruang lingkup pemrograman. Berfungsi untuk membuat sebuah program yang pertama kali kita buat. sehingga&nbsp;<em>source code<\/em>&nbsp;yang kita buat akan menentukan bagaimana program akan berfungsi yang sesuai diharapkan.<\/p>\r\n<h4 id=\"block-a80eeef9-59d6-47cc-b05d-6e52b3feea5b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"a80eeef9-59d6-47cc-b05d-6e52b3feea5b\" data-type=\"core\/heading\" data-title=\"Tajuk\"><em>Compilation<\/em>&nbsp;dan&nbsp;<em>Compile<\/em>&nbsp;Time (Kompilasi dan Waktu Kompilasi)<\/h4>\r\n<p id=\"block-52bbc8b9-4c98-435b-a849-2ddc9880a23a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"52bbc8b9-4c98-435b-a849-2ddc9880a23a\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Komputer tidak dapat memahami kode yang kita tulis dalam bahasa pemrograman yang berbeda, komputer hanya mengetahui satu bahasa yaitu bahasa mesin 1 dan 0.&nbsp;<em>source code<\/em>&nbsp;yang kita tulis harus dikompilasi menjadi kode mesin agar dapat dieksekusi. Proses ini yang disebut&nbsp;<em>compilation<\/em>&nbsp;(Kompilasi).<\/p>\r\n<p id=\"block-fd20e63c-cdab-4dcf-b189-d5b414a8adbf\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fd20e63c-cdab-4dcf-b189-d5b414a8adbf\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sekarang kita telah memahami apa itu kompilasi (<em>compilation<\/em>) yang bisa kita jadikan sebagai dasar pemahaman tentang kompilasi (<em>compilation<\/em>) dan sekarang kita akan mempelajari tentang&nbsp;<em>compile time&nbsp;<\/em>(waktu kompilasi) melalui studi kasus.<\/p>\r\n<p id=\"block-132f4fc1-f4b9-4b06-afa5-ba69978fb902\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"132f4fc1-f4b9-4b06-afa5-ba69978fb902\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sebagai contoh kita akan mendefinisikan beberapa variabel&nbsp;<strong>int<\/strong>&nbsp;dan&nbsp;<strong>double<\/strong>&nbsp;sebagai nilai awal. Variabel ini akan selalu memiliki nilai awal yang sama setiap kali kita menjalankan program. nilai-nilai ini yang ditetapkan pada saat kompilasi. fase siklus hidup pemrograman inilah yang disebut waktu kompilasi (<em>compile time<\/em>).<\/p>\r\n<h4 id=\"block-e0dcbb73-781a-44df-8782-f18a78356372\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"e0dcbb73-781a-44df-8782-f18a78356372\" data-type=\"core\/heading\" data-title=\"Tajuk\"><em>Run dan Run Time<\/em><\/h4>\r\n<p id=\"block-4bbb8699-17ca-41c5-b074-e0abd8182e12\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"4bbb8699-17ca-41c5-b074-e0abd8182e12\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Setelah proses kompilasi, kita dapat menjalankan program kita, ketika kita memberikan var di suatu program yang kita buat menunjukkan bahwa nilai (<em>value<\/em>) yang ditampilkan oleh pernyataan&nbsp;<em>print,&nbsp;<\/em>dapat berubah setiap kali kita menjalankan program, tergantung pada jenis&nbsp;<em>user.<\/em>&nbsp;Hal-hal yang tidak dapat ditentukan hingga program benar-benar saat dijalankan telah&nbsp;<em>fixed<\/em>&nbsp;pada&nbsp;<strong>waktu proses<\/strong>&nbsp;<strong>(<em>run time<\/em>)<\/strong><\/p>\r\n<h3 id=\"block-706efe0d-4b57-4b55-863d-2b32ba5fc35b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"706efe0d-4b57-4b55-863d-2b32ba5fc35b\" data-type=\"core\/heading\" data-title=\"Tajuk\">Immutable pada Dart<\/h3>\r\n<p id=\"block-666966ac-2339-4cf3-9723-8e23f54c9e9f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"666966ac-2339-4cf3-9723-8e23f54c9e9f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sama halnya seperti bahasa pemrograman lain, Dart juga memiliki dua sifat variable yaitu mutable dan immutable. Secara sederhana I<em>mmutable&nbsp;<\/em>artinya&nbsp;<strong>tidak bisa berubah<\/strong>&nbsp;sedangkan&nbsp;<em>Mutable<\/em>&nbsp;artinya&nbsp;<strong>bisa berubah.<\/strong><\/p>\r\n<ul id=\"block-16f0eb2e-a8d7-4da5-93e9-ff1beb6960d8\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"16f0eb2e-a8d7-4da5-93e9-ff1beb6960d8\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>variabel yang bersifat immutable variabel yang tidak bisa dirubah setelah diinialisasi, contoh program di bawah ini akan menghasilkan pesan error, karena kita akan mencoba mengubah nilai awal kedua kalinya.<\/li>\r\n<\/ul>\r\n<pre id=\"block-aff1aa52-44d7-4891-99a9-721dcdae5bb7\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"aff1aa52-44d7-4891-99a9-721dcdae5bb7\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  final umur = 21;<br data-rich-text-line-break=\"true\" \/>  umur = 22;<br data-rich-text-line-break=\"true\" \/>  \/\/ error: 'umur', a final variable, can only be set once<br data-rich-text-line-break=\"true\" \/>  const age = 21;<br data-rich-text-line-break=\"true\" \/>  \/\/ age = 22;<br data-rich-text-line-break=\"true\" \/>  print(umur);<br data-rich-text-line-break=\"true\" \/>  \/\/error: Constant variabels can't be assigned a value<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<ul id=\"block-9980ecdc-c960-449c-9e4b-34c03bfd8cb3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"9980ecdc-c960-449c-9e4b-34c03bfd8cb3\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Ketika kita mendeklarasikan variabel immutable kita harus langsung melakukan inisiasi memberi nilai) pada variabel tersebut, program akan error ketika kita tidak menginisasi nilainya, seperti contoh dibawah ini<\/li>\r\n<\/ul>\r\n<pre id=\"block-632f9956-8c86-42cc-b3f6-4bda1ba63867\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"632f9956-8c86-42cc-b3f6-4bda1ba63867\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  final umur;<br data-rich-text-line-break=\"true\" \/>  \/\/error: The final variable 'umur' must be initialized<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>  const age;<br data-rich-text-line-break=\"true\" \/>  \/\/error: Constant variabels 'age' must be initialized<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-0d361e07-2e3d-43c1-a948-172963cfe24c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"0d361e07-2e3d-43c1-a948-172963cfe24c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">yang benar seperti ini :<\/p>\r\n<pre id=\"block-5502a7fd-4476-4010-a117-2e96ba5983d9\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"5502a7fd-4476-4010-a117-2e96ba5983d9\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  final umur = 21;<br data-rich-text-line-break=\"true\" \/>  <br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>  const age = 22;<br data-rich-text-line-break=\"true\" \/>  <br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-957aacec-cd31-4812-bab7-c03030c46413\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"957aacec-cd31-4812-bab7-c03030c46413\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk membuat immutable variabel pada&nbsp;Dart, kita dapat menggunakan keyword&nbsp;<em>final<\/em>&nbsp;dan&nbsp;<em>const<\/em>.<\/p>\r\n<h4 id=\"block-77e7b70e-7683-42ca-96cf-b929eb17bbbb\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"77e7b70e-7683-42ca-96cf-b929eb17bbbb\" data-type=\"core\/heading\" data-title=\"Tajuk\">Final<\/h4>\r\n<p id=\"block-820fc118-25b9-48eb-9669-6808a8013a98\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"820fc118-25b9-48eb-9669-6808a8013a98\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Final (variabel yang menggunakan&nbsp;<em>keyword&nbsp;<\/em><strong>final<\/strong>) diinialisasi pada saat pertama kali digunakan dan hanya disetel sekali. Dengan kata lain nilai&nbsp;<em>final&nbsp;<\/em>akan diketahui pada saat&nbsp;<em><strong>run-time<\/strong><\/em>.<\/p>\r\n<p id=\"block-0c59f7ce-38b3-41c8-b8a2-7ff489063e74\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"0c59f7ce-38b3-41c8-b8a2-7ff489063e74\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">final dapat digunakan untuk deklarasi variabel&nbsp;<em>immutable<\/em>&nbsp;yang nilainya sudah ataupun belum diketahui pada saat waktu kompilasi berjalan.<\/p>\r\n<pre id=\"block-26788284-0028-42e4-8bc5-267094847508\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"26788284-0028-42e4-8bc5-267094847508\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  final umur = 21;<br data-rich-text-line-break=\"true\" \/>  print(umur);<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/>\/\/output <br data-rich-text-line-break=\"true\" \/>21<\/code><\/pre>\r\n<p id=\"block-2e865426-fd59-4ffe-998b-0b92239fef25\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2e865426-fd59-4ffe-998b-0b92239fef25\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">contoh di atas kita telah menetepkan nilai dari variabel umur = 21, jadi pada saat di&nbsp;<em>compile,&nbsp;<\/em>nilai variabel sudah diketahui nilainya karena diinialisasi secara langsung dengan sebuah&nbsp;<em>value<\/em>. Sehingga ketika di kompilasi nilainya sudah ada.<\/p>\r\n<p id=\"block-11c59c08-50eb-4fa2-ad7f-fc268377a4ce\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"11c59c08-50eb-4fa2-ad7f-fc268377a4ce\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">ada contoh lain penggunaan&nbsp;<em><strong>final<\/strong><\/em>, pada saat kompilasi nilai variabel belum diketahui secara langsung, variabelnya sudah di inialisiasi namun nilainya akan didapatkan saat kompilasi dijalankan.<\/p>\r\n<pre id=\"block-b1040f09-c711-48f7-a29b-030da98b2706\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"b1040f09-c711-48f7-a29b-030da98b2706\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  final waktu = new DateTime.now();<br data-rich-text-line-break=\"true\" \/>  print(waktu);<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>  <br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>\/\/Output<br data-rich-text-line-break=\"true\" \/>2020-10-02 13:22:19.909275<\/code><\/pre>\r\n<p id=\"block-7ccd71bf-0ee7-477a-8099-e0ca1c3d65c8\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7ccd71bf-0ee7-477a-8099-e0ca1c3d65c8\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">contoh diatas menampilkan waktu pada saat kompilasi dijalankan, saat dijalankan program akan menampilkan&nbsp;2020-10-02 13:22:19.909275, namun jika kita menjalankan program diatas untuk kedua kalinya akan menampilkan&nbsp;<em><strong>output<\/strong><\/em>&nbsp;2020-10-02 13:25:59.153939. Mengapa hasilnya berbeda pada setiap kali dijalankan? padahal variabel waktu bersifat<strong>&nbsp;immutable atau tidak bisa dirubah nilai?<\/strong>&nbsp;ini dikarenakan nilai dari new DateTime.now() akan didapatkan setelah program dijalankan\/kompilasi dengan nilai kembalinya berupa waktu sekarang. Oleh karena itu tiap dijalankan hasilnya berbeda. Sehingga dapat kita ketahui nilai dari variabel waktu pada kode final waktu = new DateTime.now() sesungguhnya baru akan didapatkan saat kompilasi dijalankan dan artinya sebelum kompilasi nilainya belum diketahui secara eksplisit.<\/p>\r\n<blockquote id=\"block-07c3c1bf-661f-4baa-8034-ac874e735c88\" class=\"wp-block-quote block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kutip\" data-block=\"07c3c1bf-661f-4baa-8034-ac874e735c88\" data-type=\"core\/quote\" data-title=\"Kutip\">\r\n<div class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Tulis kutipan...\">\r\n<p>Pointnya adalah kata kunci final dapat digunakan untuk inisiasi variabel immutable yang mana nilai variabelnya sudah atau belum diketahui pada saat kompilasi berjalan<\/p>\r\n<\/div>\r\n<\/blockquote>\r\n<h4 id=\"block-3b7823a1-f9d7-4d7e-b0be-18a9fa307959\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"3b7823a1-f9d7-4d7e-b0be-18a9fa307959\" data-type=\"core\/heading\" data-title=\"Tajuk\">Const<\/h4>\r\n<p id=\"block-dc8f0ab3-5c07-4d25-8aed-289752bc6a15\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"dc8f0ab3-5c07-4d25-8aed-289752bc6a15\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Const<\/strong>&nbsp;dapat digunakan untuk deklarasi variabel&nbsp;<strong>immutable&nbsp;<\/strong>yang nilainya bersifat&nbsp;<strong>konstan&nbsp;<\/strong>dan harus sudah diketahui pada saat waktu kompilasi (<em><strong>Compile time<\/strong><\/em>) berjalan, artinya adalah nilai dari variabel tersebut harus sudah di berikan&nbsp;<em>value<\/em>&nbsp;secara langsung.<\/p>\r\n<pre id=\"block-5cdae9cf-3089-4b8e-84df-c75fd0bf0025\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"5cdae9cf-3089-4b8e-84df-c75fd0bf0025\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  const umur = 21;<br data-rich-text-line-break=\"true\" \/>  print(umur);<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>\/\/Output<br data-rich-text-line-break=\"true\" \/>21<br data-rich-text-line-break=\"true\" \/><\/code><\/pre>\r\n<p id=\"block-e3456576-695a-4a4e-b19f-6bc712b0426e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"e3456576-695a-4a4e-b19f-6bc712b0426e\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">contoh diatas saat&nbsp;<em>compile<\/em>&nbsp;nilai variabel sudah diketahui, variabelnya sudah diberi nilai secara langsung.<\/p>\r\n<p id=\"block-3c114115-579f-4da8-8cfd-eab7a3999f5f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3c114115-579f-4da8-8cfd-eab7a3999f5f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">contoh lainnya saat kompilasi nilai variabelnya belum diketahui secara langsung, variabelnya sudah di inialisasi namun nilainya baru didapat saat kompilasi di jalankan.<\/p>\r\n<pre id=\"block-4bfbf7ea-93f4-411d-a8f9-2aed5035b491\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"4bfbf7ea-93f4-411d-a8f9-2aed5035b491\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  const waktu = new DateTime.now();<br data-rich-text-line-break=\"true\" \/>  print(waktu);<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>\/\/Ouput :<br data-rich-text-line-break=\"true\" \/>bin\/main.dart:2:17: Error: New expression is not a constant expression.<br data-rich-text-line-break=\"true\" \/>  const waktu = new DateTime.now(); ^^^<br data-rich-text-line-break=\"true\" \/><\/code><\/pre>\r\n<p id=\"block-3f8e09c3-c85a-4236-80f9-e2e4faf119c5\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3f8e09c3-c85a-4236-80f9-e2e4faf119c5\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">contoh diatas akan menghasilkan pesan error karena nilai dari variabel&nbsp;<em>waktu<\/em>&nbsp;tidak diinialisasi dengan nilai yang bersifat&nbsp;<strong>konstan<\/strong>&nbsp;namun diinialisasi dengan new DateTime.now() yang mana nilainya akan didapatkan setelah program dijalankan. Padahal&nbsp;<strong>const<\/strong>&nbsp;sendiri memerlukan nilai secara langsung dan nilainya harus sudah diketahui sebelum program dikompilasi.<\/p>\r\n<p id=\"block-6f1e5680-0c28-4d20-8186-087cd54e4bc0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6f1e5680-0c28-4d20-8186-087cd54e4bc0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Berbeda&nbsp;<strong>final&nbsp;<\/strong>yang mana nilai dari variabelnya tidak mengapa (tidak error) kalau didapatkan pada saat kompilasi.<\/p>\r\n<div class=\"block-list-appender wp-block\" tabindex=\"-1\">&nbsp;<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<div tabindex=\"0\">&nbsp;<\/div>\r\n<pre class=\"prettyprint notranslate prettyprinted\">&nbsp;<\/pre>\r\n<h2 class=\"highlight\"><strong>&nbsp;<\/strong><br \/><br \/><br \/><br \/><\/h2>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-10-26 08:00:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-26 06:37:57","waktu_publish_formatted":" Selasa, 26 Oktober 2021. 08:00:00 WIB."},{"id":1075,"uuid":"d80c82ff-7b48-4705-a864-d7a58ddd70da","author_user_id":8222,"materi_section_id":316,"judul":"Hari-2-Dart-Null safety","permalink":"hari-2-dart-null-safety","konten":"<h2>Dart Null Safety<\/h2>\r\n<p>Null safety adalah perubahan terbesar yang dibuat pada dart 2.0, untuk mengetahui apa itu null safety perhatikan contoh kode berikut:<\/p>\r\n<pre><code class=\"dart hljs cs\">\r\n<span class=\"hljs-comment\">\/\/ tanpa null safety<\/span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">bool<\/span> <span class=\"hljs-title\">isEmpty<\/span>(<span class=\"hljs-params\">String <span class=\"hljs-keyword\">string<\/span><\/span>)<\/span> =&gt; <span class=\"hljs-keyword\">string<\/span>.length == <span class=\"hljs-number\">0<\/span>;\r\n\r\nmain() {\r\n  isEmpty(<span class=\"hljs-literal\">null<\/span>);\r\n}<\/code><\/pre>\r\n<div>Jika kita menjalankan program tersebut tanpa null safety, maka program tersebut akan error,&nbsp; bayangkan jika ada kode pada aplikasi flutter yang ada buat tanpa null safety dan aplikasi tersebut crash pada saat sedang berjalan, tentunya user tidak akan senang dengan hal tersebut, demikian juga anda sebagai pembuat aplikasinya.<\/div>\r\n<pre><code class=\"dart hljs cs\"><span class=\"hljs-comment\">\/\/dengan null safety<\/span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">bool<\/span> <span class=\"hljs-title\">isEmpty<\/span>(<span class=\"hljs-params\">String? <span class=\"hljs-keyword\">string<\/span><\/span>)<\/span> =&gt; <span class=\"hljs-keyword\">string<\/span>?.length == <span class=\"hljs-number\">0<\/span>;\r\n\r\nmain() {\r\n  isEmpty(<span class=\"hljs-literal\">null<\/span>);\r\n}<\/code><br \/><br \/><br \/><\/pre>\r\n<div>Ketika kita memilih menggunakan null safety, secara default tipe-tipe data yang kita gunakan,adalah non-nullable yang artinya nilainya tidak boleh berisi null \"sampai kita mengatakan boleh berisi null\", dengan null safety, error pada saat runtime akan dimunculkan\/diberitahu pada saat edit-time analisis error, dengan null safety, semua variabel berikut adalah non-nullable.<\/div>\r\n<pre><code class=\"dart hljs java\">\r\n<span class=\"hljs-comment\">\/\/ Pada null-safe Dart, tidak ada satupun variabel berikut berisi null<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> i = <span class=\"hljs-number\">42<\/span>; <span class=\"hljs-comment\">\/\/ Inferred to be an int.<\/span>\r\nString name = getFileName();\r\n<span class=\"hljs-keyword\">final<\/span> b = Foo();\r\n<\/code><\/pre>\r\n<div>Untuk mengindikasikan bahwa variabel tersebut bisa berisi null, maka tambahkan opreator ? pada saat melakukan deklarasi variabel.<\/div>\r\n<pre><code class=\"dart hljs cs\"><span class=\"hljs-keyword\">int<\/span>? bilangan = <span class=\"hljs-literal\">null<\/span>;\r\n<\/code><\/pre>\r\n<div>Pada saat membuat program jika kita tahu bahwa suatu variabel non-nullable akan di-inisialisasi ke nilai bukan null sebelum digunakan, tetapi Dart Analyzer tidak akan mengizinkan dan menampilkan pesan error pada saat edit-time, maka gunakan keyword late sebelum tipe data dari variabel tersebut, perhatikan kode berikut:<\/div>\r\n<pre><code class=\"dart hljs cs\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Segitiga<\/span> {\r\n  <span class=\"hljs-keyword\">int<\/span> _alas;\r\n  <span class=\"hljs-keyword\">int<\/span> _tinggi;\r\n  \r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">set<\/span> <span class=\"hljs-title\">alas<\/span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-keyword\">value<\/span><\/span>)<\/span> =&gt; _alas = <span class=\"hljs-keyword\">value<\/span>;\r\n  \r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">set<\/span> <span class=\"hljs-title\">tinggi<\/span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-keyword\">value<\/span><\/span>)<\/span> =&gt; _tinggi = <span class=\"hljs-keyword\">value<\/span>;\r\n  \r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">double<\/span> <span class=\"hljs-title\">luas<\/span>()<\/span> {\r\n    <span class=\"hljs-keyword\">return<\/span> (_alas * _tinggi) \/ <span class=\"hljs-number\">2<\/span>;\r\n  }\r\n}\r\n<\/code><\/pre>\r\n<pre>Kode tersebut akan menghasilkan error:<\/pre>\r\n<pre>Error: Field '_alas' should be initialized because its type 'double' doesn't allow null.\r\n  double alas;\r\n         ^^^^\r\n         \r\nError: Field '_tinggi' should be initialized because its type 'double' doesn't allow null.\r\n  double tinggi;\r\n         ^^^^^^\r\n<\/pre>\r\n<div>Jika kita yakin bahwa variabel _alas dan _tinggi tidak akan pernah berisi nilai null, tetapi kita tidak ingin melakukan inisialisasi nilai awal, maka tambahkan keyword late untuk mengatasi error tersebut, perhatikan kode berikut:<\/div>\r\n<div>&nbsp;<\/div>\r\n<div>\r\n<pre><code class=\"dart hljs cs\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Segitiga<\/span> {\r\n  late <span class=\"hljs-keyword\">int<\/span> _alas;\r\n  late <span class=\"hljs-keyword\">int<\/span> _tinggi;\r\n  \r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">set<\/span> <span class=\"hljs-title\">alas<\/span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-keyword\">value<\/span><\/span>)<\/span> =&gt; _alas = <span class=\"hljs-keyword\">value<\/span>;\r\n  \r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">set<\/span> <span class=\"hljs-title\">tinggi<\/span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-keyword\">value<\/span><\/span>)<\/span> =&gt; _tinggi = <span class=\"hljs-keyword\">value<\/span>;\r\n  \r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">double<\/span> <span class=\"hljs-title\">luas<\/span>()<\/span> {\r\n    <span class=\"hljs-keyword\">return<\/span> (_alas * _tinggi) \/ <span class=\"hljs-number\">2<\/span>;\r\n  }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">main<\/span>()<\/span> {\r\n  <span class=\"hljs-keyword\">var<\/span> sg = Segitiga();\r\n  sg.alas = <span class=\"hljs-number\">5<\/span>;\r\n  sg.tinggi = <span class=\"hljs-number\">10<\/span>;\r\n  print(sg.luas());\r\n}\r\n<\/code><\/pre>\r\nKeyword late mempunyai 2 efek, yaitu:&nbsp;\r\n<div>\r\n<ol>\r\n<li>Dart Analyzer tidak akan meminta kita untuk menginisialisasi nilai awal dari variabel yang non-nullable.<\/li>\r\n<li>Dart runtime akan malas (lazy) menginisialisasi variabel late, sebagai contoh: jika ada instance variabel non-nullable harus dikalkulasi, maka dengan menambahkan keyword late akan mendelay kalkulasi tersebut sampai penggunaan pertama sekali variable tersebut.&nbsp;<\/li>\r\n<\/ol>\r\n&nbsp;Untuk efek no. 2 perhatikan contoh berikut:<br \/>\r\n<pre><code class=\"dart hljs cpp\">\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-title\">calculate<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\r\n  <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">4<\/span> * <span class=\"hljs-number\">5<\/span>;\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\r\n  <span class=\"hljs-keyword\">int<\/span> a = calculate();\r\n  <span class=\"hljs-keyword\">int<\/span> b = <span class=\"hljs-number\">10<\/span>;\r\n\r\n  print(b);\r\n  print(b);\r\n  print(a);\r\n}\r\n<\/code><\/pre>\r\n<div>Gunakan Editor VS. Code sehingga kita bisa melakukan debug,&nbsp;<\/div>\r\n<div>\r\n<ul>\r\n<li>Kemudian set breakpoint pada void main(),&nbsp;<\/li>\r\n<li>Klik debug pada editor,&nbsp;<\/li>\r\n<li>Klik step over sebanyak 2 kali, maka akan tampil nilai variabel a: 20,&nbsp;<\/li>\r\n<li>Kemudian klik stop pada debug.&nbsp;<\/li>\r\n<\/ul>\r\n<div class=\"separator\"><a href=\"https:\/\/1.bp.blogspot.com\/-G_ZE7AGS6ME\/YFQPROHhoHI\/AAAAAAAABd8\/rmGPZYFItLUeUdbzWaKwqmm9eshJ5rzDgCLcBGAsYHQ\/s663\/non-late-debuger.png\"><img src=\"https:\/\/1.bp.blogspot.com\/-G_ZE7AGS6ME\/YFQPROHhoHI\/AAAAAAAABd8\/rmGPZYFItLUeUdbzWaKwqmm9eshJ5rzDgCLcBGAsYHQ\/w640-h616\/non-late-debuger.png\" width=\"640\" height=\"616\" border=\"0\" data-original-height=\"638\" data-original-width=\"663\" \/><\/a><\/div>\r\n<br \/>\r\n<div>&nbsp;<\/div>\r\n<div>Modifikasi program tersebut dengan menambahkan keyword late sebelum tipe data variabel a, perhatikan kode berikut:<\/div>\r\n<\/div>\r\n<div>&nbsp;<\/div>\r\n<pre><code class=\"dart hljs cpp\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-title\">calculate<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\r\n  <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">4<\/span> * <span class=\"hljs-number\">5<\/span>;\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\r\n  late <span class=\"hljs-keyword\">int<\/span> a = calculate();\r\n  <span class=\"hljs-keyword\">int<\/span> b = <span class=\"hljs-number\">10<\/span>;\r\n\r\n  print(b);\r\n  print(b);\r\n  print(a);\r\n}\r\n<\/code><\/pre>\r\n<div>kemudian lakukan seperti langkah sebelumnya dan klik debug, dan lihat bahwa pada variabel a: &lt;not initialized&gt;, klik step over sampai ke print(a) yaitu pada saat pertama sekali variabel a digunakan, hal ini membuktikan bahwa variabel tersebut akan di inisialisasi oleh dart Runtime pada saat pertama kali digunakan.&nbsp;<\/div>\r\n<\/div>\r\n<div>&nbsp;<\/div>\r\n<div class=\"separator\"><a href=\"https:\/\/1.bp.blogspot.com\/-_F0X3U0wAh0\/YFQPY5-9k6I\/AAAAAAAABeA\/ux-vtvz0auUdqUetNSCEK3Kl5341rVU4QCLcBGAsYHQ\/s663\/late-debuger.png\"><img src=\"https:\/\/1.bp.blogspot.com\/-_F0X3U0wAh0\/YFQPY5-9k6I\/AAAAAAAABeA\/ux-vtvz0auUdqUetNSCEK3Kl5341rVU4QCLcBGAsYHQ\/w640-h616\/late-debuger.png\" width=\"640\" height=\"616\" border=\"0\" data-original-height=\"638\" data-original-width=\"663\" \/><\/a><\/div>\r\n<br \/>\r\n<div>&nbsp;<\/div>\r\n<h4>Menggunakan Variabel dan Ekspresi&nbsp;<\/h4>\r\n<div>Dengan null safety, Dart analyzer akan menghasilkan error ketika menemukan nilai nullable pada variabel non-nullable, dengan demikian kita akan bisa membuat kode lebih aman. Ketka menggunakan variabel nullable atau ekspresi, pastikan kita menangani nilai null tersebut, sebagai contoh, kita dapat menggunakan ekspresi statemen if, operator ?? atau operator ? untuk menangani kemungkinan nilai null tersebut. Misalnya skenario pada program kita adalah kita memberikan nilai non-nullable dengan variabel nullable, hal ini memungkinkan variabel non-nullable berisi nilai null, oleh karena itu kita harus menangani nilai null tersebut, perhatikan potongan kode berikut:<\/div>\r\n<div>\r\n<div>&nbsp;<\/div>\r\n<pre><code class=\"dart hljs cpp\"><span class=\"hljs-keyword\">int<\/span>? aNullableInt;\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">()<\/span> <\/span>{\r\n  \r\n  <span class=\"hljs-keyword\">int<\/span> b = aNullableInt ?? <span class=\"hljs-number\">0<\/span>;\r\n  \r\n  print(b);\r\n}\r\n<\/code><\/pre>\r\n<div>Jika kita lihat kode tersebut, ada kemungkinan variabel aNullableInt berisi nilai null, dengan demikian variabel b (non-nullable) perlu menangani hal tersebut, yaitu apa bila variabel aNullableInt berisi nilai null maka ganti dengan 0. (int b = aNullableInt ?? 0) Kode berikut sama tujuannya seperti kode sebelumnya hanya menggunakan statemen if.<\/div>\r\n<pre><code class=\"dart hljs cs\">\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-title\">nilaiInt<\/span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">int<\/span>? aNullableInt<\/span>)<\/span> {\r\n&nbsp;&nbsp; &nbsp;<span class=\"hljs-keyword\">if<\/span> (aNullableInt == <span class=\"hljs-literal\">null<\/span>) {\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-number\">0<\/span>;\r\n&nbsp;&nbsp; &nbsp;}\r\n&nbsp;&nbsp; &nbsp;<span class=\"hljs-keyword\">return<\/span> aNullableInt;\r\n}\r\n<\/code><\/pre>\r\n<div>Jika kita yakin bahwa suatu ekspresi dengan variabel nullable tidak akan berisini nilai null, maka kita bisa menambahkan ! untuk membuat Dart memperlakukannya sebagai non-nullable, lebih jelasnya perhatikan contoh berikut:<\/div>\r\n<pre><code class=\"dart hljs cpp\">\r\n<span class=\"hljs-keyword\">int<\/span>? aNullableInt=<span class=\"hljs-number\">10<\/span>;\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">()<\/span> <\/span>{  \r\n  <span class=\"hljs-keyword\">int<\/span> b = aNullableInt;\r\n}\r\n<\/code><\/pre>\r\n<div>Kode tersebut akan error, karena variabel non-nullable di beri nilai variabel nullable, agar Dart memperlakukan int b = aNullableInt sebaga non-nullable maka tambahkan ! di akhir variabel nullable, dengan demikian kode tersebut menjadi:<\/div>\r\n<pre><code class=\"dart hljs cpp\">\r\n<span class=\"hljs-keyword\">int<\/span>? aNullableInt=<span class=\"hljs-number\">10<\/span>;\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">()<\/span> <\/span>{  \r\n  <span class=\"hljs-keyword\">int<\/span> b = aNullableInt!;\r\n}\r\n<\/code><\/pre>\r\n<div>Catatan Penting: Jika kita tidak yakin bahwa nilai dari variabel nullable tidak akan pernah berisi null maka jangan gunakan operator !. Jika kita menggunakan null-safety pada variabel, maka kita tidak bisa menggunakan member access operator (.), perhatikan contoh berikut:<\/div>\r\n<pre><code class=\"dart hljs cpp\">\r\n<span class=\"hljs-keyword\">double<\/span>? d;\r\n<span class=\"hljs-comment\">\/\/print(d.floor()); ini akan error<\/span>\r\n<span class=\"hljs-comment\">\/\/gunakan operator ? untuk dapat mengakses fungsi floor<\/span>\r\nprint(d?.<span class=\"hljs-built_in\">floor<\/span>())<\/code><br \/><br \/><br \/><\/pre>\r\n<h4>LIST, SET, DAN MAP<\/h4>\r\n<div>List, set dan map adalah type collection pada Dart yang sering digunakan, oleh karena itu kita perlu mengetahui bagaimana collection tersebut digunakan dengan null-safety.<\/div>\r\n<div>&nbsp;<\/div>\r\n<p>List dan Set<\/p>\r\n<div>Ketika kita mendeklarasikan tipe list atau set, kita pikirkan apa yang bisa null. tabel berikut menunjukkan kemungkinan list dari string dengan null-safety:<\/div>\r\n<div>&nbsp;<\/div>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<thead>\r\n<tr>\r\n<th>Tipe<\/th>\r\n<th>List Bisa Null?<\/th>\r\n<th>Item (String) Bisa Null?&nbsp;<\/th>\r\n<th>Keterangan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td>&nbsp;List&lt;String&gt;<\/td>\r\n<td align=\"center\">No<\/td>\r\n<td align=\"center\">No<\/td>\r\n<td>&nbsp;non-null list berisi item non-null strings<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&nbsp;List&lt;String&gt;?<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<td align=\"center\">No<\/td>\r\n<td>&nbsp;list nullable berisi item string non-nullable&nbsp;<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&nbsp;List&lt;String?&gt;<\/td>\r\n<td align=\"center\">No<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<td>&nbsp;list non-nullable berisi item string nullable<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&nbsp;List&lt;String?&gt;?&nbsp;<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<td>&nbsp;list nullable berisi item nullable<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre>&nbsp;<\/pre>\r\n<div>Perhatikan potongan kode berikut untuk mendeklarasikan list dan set:\r\n<pre><code class=\"dart hljs php\"><span class=\"hljs-keyword\">var<\/span> nameList = &lt;String<span class=\"hljs-meta\">?&gt;<\/span>[<span class=\"hljs-string\">'Andrew'<\/span>, <span class=\"hljs-string\">'Anjan'<\/span>, <span class=\"hljs-string\">'Anya'<\/span>];\r\n<span class=\"hljs-keyword\">var<\/span> nameSet = &lt;String<span class=\"hljs-meta\">?&gt;<\/span>{<span class=\"hljs-string\">'Andrew'<\/span>, <span class=\"hljs-string\">'Anjan'<\/span>, <span class=\"hljs-string\">'Anya'<\/span>};\r\n<\/code><\/pre>\r\n<p>Tipe Map&nbsp;<\/p>\r\n<\/div>\r\n<div>Map mengembalikan nilai lookup null, untuk lebih jelasnya perhatikan contoh berikut:\r\n<pre><code class=\"dart hljs cs\"><span class=\"hljs-keyword\">var<\/span> myApp = &lt;String, <span class=\"hljs-keyword\">int<\/span>&gt;{<span class=\"hljs-string\">'satu'<\/span>: <span class=\"hljs-number\">1<\/span>};\r\n<span class=\"hljs-keyword\">var<\/span> d = myMap[<span class=\"hljs-string\">'dua'<\/span>];\r\n<\/code><\/pre>\r\nHasil dari variabel d adalah null dan mempunyai tipe int? Sama seperti list dan set, map bisa memiliki beberapa opsi null-safety<\/div>\r\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\r\n<thead>\r\n<tr>\r\n<th>Tipe<\/th>\r\n<th>Map Bisa Null?<\/th>\r\n<th>Item (Int) Bisa Null?&nbsp;<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td>&nbsp;Map&lt;String, int&gt;<\/td>\r\n<td align=\"center\">No<\/td>\r\n<td align=\"center\">No*<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&nbsp;Map&lt;String, int&gt;?<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<td align=\"center\">No*<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&nbsp;Map&lt;String, int?&gt;<\/td>\r\n<td align=\"center\">No<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&nbsp;Map&lt;String, int?&gt;?&nbsp;<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<td align=\"center\">Yes<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre>&nbsp;<\/pre>\r\n<div><em>* Walaupun semua nilai int di map adalah non-null, akan tetapi ketika kita menggunakan invalid key untuk mencari nilai pada map, maka yang dikembalikan adalah null.&nbsp;<\/em><\/div>\r\n<div>&nbsp;<\/div>\r\n<div>\r\n<div>Karena pada saat mengambil data pada map bisa mengembalikan nilai null, kita tidak bisa memberikan nilainya pada variabel non-nullable, perhatikan potongan kode berikut:<\/div>\r\n<div>\/\/ Memberikan hasil dari lookup ke variabel non-nullable<\/div>\r\n<pre><code class=\"class hljs cs\"><span class=\"hljs-comment\">\/\/ akan menyebabkan error<\/span><\/code><\/pre>\r\n<div><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-keyword\">value<\/span> = &lt;String, <span class=\"hljs-keyword\">int<\/span>&gt;{<span class=\"hljs-string\">'one'<\/span>: <span class=\"hljs-number\">1<\/span>}[<span class=\"hljs-string\">'one'<\/span>]; <span class=\"hljs-comment\">\/\/ ERROR<\/span><\/div>\r\n<pre><code class=\"class hljs cs\"><\/code><\/pre>\r\n<div>Kode tersebut akan menampilkan pesan error sebagai berikut:<\/div>\r\n<div>&nbsp;<\/div>\r\n<div>A value of type 'int?' can't be assigned to a variable of type 'int' because 'int?' is nullable and 'int' isn't.<\/div>\r\n<div>int value = &lt;String, int&gt;{'one': }['one'];<\/div>\r\n<div>Salah satu cara untuk mengatasinya kita bisa menggunakan operator ?.<\/div>\r\n<pre><code class=\"dart hljs cs\"><span class=\"hljs-keyword\">int<\/span>? <span class=\"hljs-keyword\">value<\/span> = &lt;String, <span class=\"hljs-keyword\">int<\/span>&gt;{<span class=\"hljs-string\">'one'<\/span>: <span class=\"hljs-number\">1<\/span>}[<span class=\"hljs-string\">'one'<\/span>];\r\n<\/code><\/pre>\r\n<div>Cara lainnya adalah menggunakan operator ! pada akhir (dengan catatan kita yakin nilanya tidak akan null)<\/div>\r\n<pre><code class=\"dart hljs cs\"><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-keyword\">value<\/span> = &lt;String, <span class=\"hljs-keyword\">int<\/span>&gt;{<span class=\"hljs-string\">'one'<\/span>: <span class=\"hljs-number\">1<\/span>}[<span class=\"hljs-string\">'one'<\/span>]!;\r\n<\/code><\/pre>\r\n<div>Pendekatan yang aman pada saat mengambil data adalah kita dapat menguji dengan statemen if atau menggunakan operator ??, perhatikan contoh berikut:<\/div>\r\n<div>var aMap = &lt;String, int&gt;{'one': 1};<\/div>\r\n<pre><code class=\"dart hljs cs\">...<\/code><\/pre>\r\n<div><span class=\"hljs-keyword\">int<\/span> <span class=\"hljs-keyword\">value<\/span> = aMap[<span class=\"hljs-string\">'one'<\/span>] ?? <span class=\"hljs-number\">0<\/span>; <span class=\"hljs-comment\">\/\/ jika nilai dari aMap adalah null maka ganti dengan 0<\/span><\/div>\r\n<div>&nbsp;<\/div>\r\n<div>&nbsp;<\/div>\r\n<div><span class=\"hljs-comment\">sumber : https:\/\/www.seredata.com\/2021\/03\/dart-null-safety.html<\/span><\/div>\r\n<pre><code class=\"dart hljs cs\"><\/code><\/pre>\r\n<\/div>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-10-26 08:00:00","status_publish":"publish","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-26 08:04:03","waktu_publish_formatted":" Selasa, 26 Oktober 2021. 08:00:00 WIB."},{"id":1072,"uuid":"5e33c03a-105f-49f3-97eb-20f87acae77b","author_user_id":8222,"materi_section_id":316,"judul":"Hari-3-Conditional","permalink":"hari-3-conditional","konten":"<p>Kondisional adalah sebuah metode yang melakukan pengecekan terhadap suatu pernyataan atau premis apakah bernilai benar atau tidak, jika benar maka akan menjalankan sebuah block code tertentu.<\/p>\r\n<h2>materi video<\/h2>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/Qm3nrFvWMeo\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<h2>Operator Ternary<\/h2>\r\n<p>Operator ternary bisa dikatakan operator seperti&nbsp;<code class=\"language-text\">if-else<\/code>&nbsp;namun lebih pendek penulisannya, sebagai contoh disini kita akan mengecek apakah seseorang ini benar adalah&nbsp;<code class=\"language-text\">wahyu<\/code>, jika benar maka&nbsp;<code class=\"language-text\">print(\"wahyu\")<\/code>&nbsp;jika tidak maka&nbsp;<code class=\"language-text\">print(\"bukan\")<\/code>. Pertama kita gunakan&nbsp;<code class=\"language-text\">if-else<\/code>&nbsp;seperti dibawah ini.<\/p>\r\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void<\/span> <span class=\"token function\">main<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">{<\/span>\r\n        <span class=\"token keyword\">var<\/span> isThisWahyu <span class=\"token operator\">=<\/span> <span class=\"token boolean\">true<\/span><span class=\"token punctuation\">;<\/span>\r\n    \r\n        <span class=\"token keyword\">if<\/span><span class=\"token punctuation\">(<\/span>isThisWahyu<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">{<\/span>\r\n            <span class=\"token function\">print<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">\"wahyu\"<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n        <span class=\"token punctuation\">}<\/span><span class=\"token keyword\">else<\/span><span class=\"token punctuation\">{<\/span>\r\n            <span class=\"token function\">print<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">\"bukan\"<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n        <span class=\"token punctuation\">}<\/span>\r\n    <span class=\"token punctuation\">}<\/span><\/code><\/pre>\r\n<p>Nah dengan ternary operator, kita dapat mempersingkatnya menjadi.<\/p>\r\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\r\n<pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">void<\/span> <span class=\"token function\">main<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">{<\/span>\r\n        <span class=\"token keyword\">var<\/span> isThisWahyu <span class=\"token operator\">=<\/span> <span class=\"token boolean\">true<\/span><span class=\"token punctuation\">;<\/span>\r\n        isThisWahyu <span class=\"token operator\">?<\/span> <span class=\"token function\">print<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">\"wahyu\"<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">:<\/span> <span class=\"token function\">print<\/span><span class=\"token punctuation\">(<\/span><span class=\"token string\">\"bukan\"<\/span><span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\r\n    <span class=\"token punctuation\">}<\/span><\/code><\/pre>\r\n<\/div>\r\n<p>Cukup mudah untuk dipahami, <code class=\"language-text\">?<\/code>&nbsp;digunakan untuk kondisi&nbsp;<code class=\"language-text\">true<\/code>, dan&nbsp;<code class=\"language-text\">:<\/code>&nbsp;digunakan sebagai pengganti&nbsp;<code class=\"language-text\">else<\/code>.<\/p>\r\n<h2 id=\"kondisional-dengan-if-else-if-else\">Kondisional dengan&nbsp;<code>if \/ else if \/ else<\/code>&nbsp;<\/h2>\r\n<ul>\r\n<li>Contoh 1 menjalankan kode jika premis bernilai&nbsp;<code>true<\/code>\r\n<pre class=\"wp-block-preformatted\"><code>void main() {&nbsp;<\/code><br \/><code>  if ( true) {<\/code><br \/><code>&nbsp; &nbsp; print(\"jalankan code\");<\/code><br \/><code>&nbsp; }<\/code><br \/><code>}<\/code><\/pre>\r\n<\/li>\r\n<li>Contoh 2 kode tidak dijalankan jika premis bernilai&nbsp;<code>false<\/code>\r\n<pre class=\"wp-block-preformatted\"><code>void main() {&nbsp;<\/code><br \/><code>&nbsp; if ( false ) {<\/code><br \/><code>  &nbsp; print(\"Program tidak jalan code\");<\/code><br \/><code>&nbsp; }<\/code><br \/><code>}<\/code><\/pre>\r\n<\/li>\r\n<li>Contoh 3 Premis dengan perbandingan suatu nilai\r\n<pre class=\"wp-block-preformatted\"><code>void main() {&nbsp;<\/code><br \/><code>&nbsp;var mood = \"happy\";<\/code><br \/><code>  if ( mood == \"happy\" ) {<\/code><br \/><code>      print(\"hari ini aku bahagia!\");<\/code><br \/><code>   }<\/code><br \/><code>}<\/code><\/pre>\r\n<\/li>\r\n<\/ul>\r\n<p>Di dalam kondisional dikenal juga dengan istilah branching atau percabangan. Dengan percabangan kita bisa mengecek nilai kebenaran dari berbagai premis yang kita sediakan. cara menambahkan kondisi atau premis lain dari premis pertamanya adalah dengan sintaks&nbsp;<code>else<\/code>&nbsp;. Contohnya ketika kita diminta untuk membeli telur dan buah ke minimarket oleh ibu kita maka akan banyak sekali kondisi atau kemungkinan yang terjadi dalam perjalanan kita membeli barang-barang tersebut di supermarket.<\/p>\r\n<ul>\r\n<li>Contoh 4 Branching sederhana\r\n<div>\r\n<div><code>void&nbsp;main()&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;var&nbsp;minimarketStatus&nbsp;=&nbsp;\"open\";<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;if&nbsp;(minimarketStatus&nbsp;==&nbsp;\"open\")&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(\"saya&nbsp;akan&nbsp;membeli&nbsp;telur&nbsp;dan&nbsp;buah\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;}&nbsp;else&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(\"minimarketnya&nbsp;tutup\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;}<\/code><\/div>\r\n<div><code>}<\/code><\/div>\r\n<\/div>\r\n<p>Kondisi else di atas adalah kondisi selain&nbsp;<code>minimarketStatus == \"open\"<\/code>&nbsp;.<\/p>\r\n<\/li>\r\n<li>Contoh 5 Branching dengan kondisi\r\n<pre class=\"wp-block-preformatted\">&nbsp;<\/pre>\r\n<div>\r\n<div><code>void&nbsp;main()&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;var&nbsp;minimarketStatus&nbsp;=&nbsp;\"close\";<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;var&nbsp;minuteRemainingToOpen&nbsp;=&nbsp;5;<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;if&nbsp;(minimarketStatus&nbsp;==&nbsp;\"open\")&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(\"saya&nbsp;akan&nbsp;membeli&nbsp;telur&nbsp;dan&nbsp;buah\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(minuteRemainingToOpen&nbsp;&lt;=&nbsp;5)&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(\"minimarket&nbsp;buka&nbsp;sebentar&nbsp;lagi,&nbsp;saya&nbsp;tungguin\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;}&nbsp;else&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(\"minimarket&nbsp;tutup,&nbsp;saya&nbsp;pulang&nbsp;lagi\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;}<\/code><\/div>\r\n<div><code>}<\/code><\/div>\r\n<\/div>\r\n<pre class=\"wp-block-preformatted\"><code><\/code><\/pre>\r\n<p>contoh di atas kita memberikan kondisi tambahan yaitu jika minimarket akan buka kurang atau sama dengan 5 menit lagi maka saya akan menunggu.<\/p>\r\n<\/li>\r\n<\/ul>\r\n<p>Selain Branching atau percabangan, kondisional juga dapat memiliki sarang atau tumpukan yaitu terdapat kondisional di dalam sebuah kondisional.<\/p>\r\n<ul>\r\n<li>Contoh 6 Kondisional bersarang\r\n<div>\r\n<div><code>void&nbsp;main()&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;var&nbsp;minimarketStatus&nbsp;=&nbsp;\"open\";<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;var&nbsp;telur&nbsp;=&nbsp;\"soldout\";<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;var&nbsp;buah&nbsp;=&nbsp;\"soldout\";<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;if&nbsp;(minimarketStatus&nbsp;==&nbsp;\"open\")&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(\"saya&nbsp;akan&nbsp;membeli&nbsp;telur&nbsp;dan&nbsp;buah\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(telur&nbsp;==&nbsp;\"soldout\"&nbsp;||&nbsp;buah&nbsp;==&nbsp;\"soldout\")&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(\"belanjaan&nbsp;saya&nbsp;tidak&nbsp;lengkap\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(telur&nbsp;==&nbsp;\"soldout\")&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(\"telur&nbsp;habis\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(buah&nbsp;==&nbsp;\"soldout\")&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(\"buah&nbsp;habis\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;}<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;}&nbsp;else&nbsp;{<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(\"minimarket&nbsp;tutup,&nbsp;saya&nbsp;pulang&nbsp;lagi\");<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;}<\/code><\/div>\r\n<div><code>}<\/code><\/div>\r\n<\/div>\r\n<p>pada kondisi di atas minimarketnya sudah buka lalu cek kondisi selanjutnya cek apakah telur atau buah habis. Karena kondisinya adalah jika telur ATAU buah salah satunya ada yang soldout maka belanjaan saya lengkap. Demikian seterusnya akan mengecek kondisi-kondisi yang disediakan dalam logika program yang dibuat.<\/p>\r\n<\/li>\r\n<\/ul>\r\n<h2 id=\"kondisional-dengan-switch-case\">Kondisional dengan&nbsp;<code>Switch Case<\/code>&nbsp;<\/h2>\r\n<p>Cara lain untuk melakukan pengecekan kondisi atau conditional adalah dengan&nbsp;<code>switch case<\/code>. Penggunaan switch case mirip seperti kita menyalakan tombol switch pada remote. Jika kondisi tombol yang dipijit adalah tombol dengan nomer tertentu maka akan menjalankan prorgram tertentu.<\/p>\r\n<ul>\r\n<li>Contoh 7 Kondisional dengan&nbsp;<code>switch case<\/code>\r\n<pre class=\"wp-block-preformatted\"><code>void main() {&nbsp;<\/code><br \/><code>var buttonPushed = 1;<\/code><br \/><code>switch(buttonPushed) {<\/code><br \/><code>&nbsp; case 1: &nbsp; { print('matikan TV!'); break; }<\/code><br \/><code>&nbsp; case 2: &nbsp; { print('turunkan volume TV!'); break; }<\/code><br \/><code>&nbsp; case 3: &nbsp; { print('tingkatkan volume TV!'); break; }<\/code><br \/><code>&nbsp; case 4: &nbsp; { print('matikan suara TV!'); break; }<\/code><br \/><code>&nbsp; default: &nbsp;{ print('Tidak terjadi apa-apa'); }}<\/code><br \/><code>}<\/code><\/pre>\r\n<p>Pada kode di atas, switch akan mengevaluasi nilai&nbsp;<code>buttonPushed<\/code>&nbsp;jika&nbsp;<code>case<\/code>&nbsp;yang ditemui cocok dengan nilai yang diberikan maka kode pada&nbsp;<code>case<\/code>&nbsp;tersebut akan dijalankan sehingga pada console akan dimunculkan &ldquo;<code>matikan TV!<\/code>&ldquo;. Pada setiap case terdapat&nbsp;<code>break<\/code>&nbsp;yang berfungsi untuk menghentikan proses switch agar tidak menjalankan case yang lain. Juga terdapat&nbsp;<code>default<\/code>&nbsp;yaitu kondisi dimana tidak ditemukan&nbsp;<code>case&nbsp;<\/code>yang sesuai.<\/p>\r\n<\/li>\r\n<\/ul>","waktu_publish":"2021-10-27 08:00:00","status_publish":"publish","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-26 06:33:02","waktu_publish_formatted":" Rabu, 27 Oktober 2021. 08:00:00 WIB."},{"id":1073,"uuid":"9ceb46e3-b850-414a-9f4a-6b466ae5c86b","author_user_id":8222,"materi_section_id":316,"judul":"Hari-4-Looping","permalink":"hari-4-looping","konten":"<p>Loop\/Iteration adalah tindakan mengulang \/ merepetisi sebuah proses, dengan tujuan untuk mendapatkan deret hasil, atau dengan tujuan mendapatkan hasil tertentu dengan repetisi. Setiap proses repetisi ini disebut sebagai Iteration atau Looping.<\/p>\r\n<p>Untuk melakukan looping\/iteration, Dart menyediakan beberapa jenis iteration, yaitu:<\/p>\r\n<ul>\r\n<li class=\"\">while-loop<\/li>\r\n<li class=\"\">for-loop<\/li>\r\n<\/ul>\r\n<p>Materi Video&nbsp;<\/p>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/RidfbpWxG58\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<h2 id=\"while-loop\"><strong>While-loop<\/strong><\/h2>\r\n<p>While-loop adalah iterasi yang akan mengulang sebuah proses dengan sebuah kondisi tertentu.<\/p>\r\n<p>Berikut adalah cara atau struktur penulisan while-loop:<\/p>\r\n<pre class=\"wp-block-preformatted\">while([Kondisi]) { \/\/ Kondisi yang menentukan apakah program akan melakukan iterasi. \r\n\/\/ Berupa boolean atau true\/false.\r\n  [Proses] \/\/ Merupakan proses yang akan dijalankan dalam satu iterasi\r\n}<\/pre>\r\n<p>Pada while-loop, statement&nbsp;<code>while<\/code>&nbsp;akan mengambil sebuah nilai&nbsp;<code>true<\/code>&nbsp;atau&nbsp;<code>false<\/code>&nbsp;dari hasil kondisi yang diberikan. Apabila statement&nbsp;<code>while<\/code>&nbsp;mendapatkan nilai&nbsp;<code>true<\/code>, maka proses yang berada didalam curly bracket (<code>{ }<\/code>) akan dijalankan. Looping akan terus dilakukan selama kondisi while-loop masih&nbsp;<code>true<\/code>.<\/p>\r\n<p>Untuk mencegah looping berjalan terus-menerus, dilakukan sebuah proses yang akan mengubah kondisi yang sedemikian rupa yang bertujuan untuk menghentikan looping dengan menghasilkan kondisi yang&nbsp;<code>false<\/code>.<\/p>\r\n<p><strong>Contoh Looping While-loop 1<\/strong>&nbsp;Looping Angka 1-9 Sederhana<\/p>\r\n<pre class=\"wp-block-preformatted\">void main (){<br \/>&nbsp; var flag = 1;<br \/>&nbsp; while(flag &lt; 10) {&nbsp;<br \/>&nbsp; print (\"iterasi ke\"+ flag.toString());&nbsp;<br \/>&nbsp; flag++; \/\/ Mengubah nilai flag dengan menambahkan 1<br \/>&nbsp; }&nbsp;<br \/>}<\/pre>\r\n<p>Kamu bisa mencoba kode di atas https:\/\/dartpad.dev\/<\/p>\r\n<p><strong>Contoh Looping While-loop 2<\/strong>&nbsp;Looping Mengembalikan Angka Total<\/p>\r\n<div>\r\n<div>\r\n<pre>void main() {<br \/>&nbsp; var deret = 5;<br \/>&nbsp; var jumlah = 0;<br \/>&nbsp; while (deret &gt; 0) {<br \/>&nbsp; &nbsp; \/\/ Loop akan terus berjalan selama nilai deret masih di atas 0<br \/>&nbsp; &nbsp; jumlah += deret; \/\/ Menambahkan nilai variable jumlah dengan angka deret<br \/>&nbsp; &nbsp; deret--; \/\/ Mengubah nilai deret dengan mengurangi 1<br \/>&nbsp; &nbsp; print('Jumlah saat ini: ' + jumlah.toString());<br \/>&nbsp; }<br \/><br \/>&nbsp; print(jumlah);<br \/>}<\/pre>\r\n<\/div>\r\n<\/div>\r\n<p>Kamu bisa mencoba kode di atas&nbsp; https:\/\/dartpad.dev\/<\/p>\r\n<h2 id=\"for-loop\">For-loop&nbsp;<\/h2>\r\n<p>For-loop adalah bentuk lain dari iterasi, dimana statement&nbsp;<code>for<\/code>&nbsp;menjadi kontrol atas loop yang dilakukan. Hal ini yang menjadi pembeda antara for-loop dengan while-loop.<\/p>\r\n<p>Berikut adalah cara atau struktur penulisan for-loop:<\/p>\r\n<pre class=\"wp-block-preformatted\">for([Inisialisasi], [Kondisi], [Incremental\/Decremental]) {\r\n  [Proses] \/\/ Merupakan proses yang akan dijalankan dalam satu iterasi\r\n} <\/pre>\r\n<p>Pada for-loop, statement&nbsp;<code>for<\/code>&nbsp;akan menampung tiga parameter, yaitu sebut saja inisialisasi, kondisi, dan incremental\/decremental. Ketiga parameter ini akan menjadi kontrol kapan loop ini harus berhenti. Pada parameter pertama, yaitu inisialisasi, sebuah variable diberikan nilai awal atau default. Pada parameter kedua, yaitu kondisi, for-loop akan terus berjalan selama kondisi ini masih terpenuhi, dengan kata lain, mengandung nilai&nbsp;<code>true<\/code>. Pada parameter kedua, yaitu incremental\/decremental, variabel yang menjadi kontrol terhadap loop ini akan diubah nilainya.<\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><em>Best Practice:<\/em>&nbsp;Walaupun memang for-loop dapat mengubah kondisi di dalam proses, namun best practice dari penggunaan for-loop adalah seluruh kendali atau kontrol dari looping ditentukan oleh variable yang diinisialisasi, di increment\/decrement, dan juga kondisi for-loop pun menggunakan variable tersebut.<\/p>\r\n<\/blockquote>\r\n<p>Untuk memudahkan kamu mendapatkan gambaran jelas tentang penggunaan for-loop, mari kita gunakan kedua contoh while-loop dan kita tulis ulang dalam bentuk for-loop.<\/p>\r\n<p><strong>Contoh Looping For-loop 1<\/strong>&nbsp;Looping Angka 1-9 Sederhana<\/p>\r\n<pre class=\"wp-block-preformatted\">void main(){<br \/> for(var angka = 1; angka &lt; 10; angka++) {\r\n   print('Iterasi ke-' + angka.toString());\r\n } <br \/>}<\/pre>\r\n<p>Kamu bisa mencoba kode di atas&nbsp; <a href=\"https:\/\/dartpad.dev\/\">https:\/\/dartpad.dev\/<\/a><\/p>\r\n<p><strong>Contoh Looping For-loop 2<\/strong>&nbsp;Looping Mengembalikan Angka Total<\/p>\r\n<div>\r\n<pre>void&nbsp;main()&nbsp;{<br \/><br \/>&nbsp;&nbsp;var&nbsp;jumlah&nbsp;=&nbsp;0;<br \/><br \/>&nbsp;&nbsp;for&nbsp;(var&nbsp;deret&nbsp;=&nbsp;5;&nbsp;deret&nbsp;&gt;&nbsp;0;&nbsp;deret--)&nbsp;{<br \/><br \/>&nbsp;&nbsp;&nbsp;&nbsp;jumlah&nbsp;+=&nbsp;deret;<br \/><br \/>&nbsp;&nbsp;&nbsp;&nbsp;print('Jumlah&nbsp;saat&nbsp;ini:&nbsp;'&nbsp;+&nbsp;jumlah.toString());<br \/><br \/>&nbsp;&nbsp;}<br \/><br \/>&nbsp;&nbsp;print('Jumlah&nbsp;terakhir:&nbsp;'&nbsp;+&nbsp;jumlah.toString());<br \/><br \/>}<\/pre>\r\n<\/div>\r\n<p>Kamu bisa mencoba kode di atas <a href=\"https:\/\/dartpad.dev\/\">https:\/\/dartpad.dev\/<\/a><\/p>\r\n<p><strong>Contoh Looping For-loop 3<\/strong>&nbsp;Looping Dengan Increment dan Decrement Lebih dari 1<\/p>\r\n<div>\r\n<pre>void&nbsp;main()&nbsp;{<br \/><br \/>&nbsp;&nbsp;for&nbsp;(var&nbsp;deret&nbsp;=&nbsp;0;&nbsp;deret&nbsp;&lt;&nbsp;10;&nbsp;deret&nbsp;+=&nbsp;2)&nbsp;{<br \/><br \/>&nbsp;&nbsp;&nbsp;&nbsp;print('Iterasi&nbsp;dengan&nbsp;Increment&nbsp;counter&nbsp;2:&nbsp;'&nbsp;+&nbsp;deret.toString());<br \/><br \/>&nbsp;&nbsp;}<br \/><br \/>&nbsp;&nbsp;print('-------------------------------');<br \/><br \/>&nbsp;&nbsp;for&nbsp;(var&nbsp;deret&nbsp;=&nbsp;15;&nbsp;deret&nbsp;&gt;&nbsp;0;&nbsp;deret&nbsp;-=&nbsp;3)&nbsp;{<br \/><br \/>&nbsp;&nbsp;&nbsp;&nbsp;print('Iterasi&nbsp;dengan&nbsp;Decrement&nbsp;counter&nbsp;:&nbsp;'&nbsp;+&nbsp;deret.toString());<br \/><br \/>&nbsp;&nbsp;}<br \/><br \/>}<\/pre>\r\n<\/div>\r\n<p>Kamu bisa mencoba kode di atas di <a href=\"https:\/\/dartpad.dev\/\">https:\/\/dartpad.dev\/<\/a><\/p>\r\n<h4><strong>Waspadai Infinite Looping!<\/strong><\/h4>\r\n<p>Dengan sengaja atau tidak sengaja, kode kamu mungkin dapat menghasilkan infinite looping, atau looping yang tidak akan pernah berhenti. Bila ini terjadi, segera periksa statement kondisi kamu.<\/p>\r\n<p><strong>contoh :&nbsp;<\/strong><\/p>\r\n<div>\r\n<pre>void&nbsp;main()&nbsp;{<br \/><br \/>&nbsp;&nbsp;var&nbsp;flag&nbsp;=&nbsp;1;<br \/><br \/>&nbsp;&nbsp;while&nbsp;(flag&nbsp;&lt;&nbsp;10)&nbsp;{<br \/><br \/>&nbsp;&nbsp;&nbsp;&nbsp;\/\/&nbsp;Loop&nbsp;akan&nbsp;terus&nbsp;berjalan,&nbsp;karena&nbsp;nilai&nbsp;flag&nbsp;tidak&nbsp;pernah&nbsp;berubah<br \/><br \/>&nbsp;&nbsp;&nbsp;&nbsp;print('Iterasi&nbsp;ke-'&nbsp;+&nbsp;flag.toString());<br \/><br \/>&nbsp;&nbsp;}<br \/><br \/>}<\/pre>\r\n<\/div>","waktu_publish":"2021-10-28 08:00:00","status_publish":"publish","urutan":6,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-26 06:33:02","waktu_publish_formatted":" Kamis, 28 Oktober 2021. 08:00:00 WIB."},{"id":1074,"uuid":"5a97fdfd-167a-40c9-b3f9-25c8c3e40945","author_user_id":8222,"materi_section_id":316,"judul":"Hari-5-Function","permalink":"hari-5-function","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Function adalah sebuah blok kode yang disusun sedemikian rupa untuk menjalankan sebuah tindakan. Blok kode ini dibuat untuk dapat bisa digunakan kembali. Cara atau bentuk penulisan function adalah sebagai berikut:<\/p>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/4p3FPRod5dY\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">function nama_function(parameter 1, parameter 2, ...) {\r\n  [Isi dari function berupa tindakan]\r\n  return [expression];\r\n}<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>Kode di atas tidak dapat kita copy-paste kan langsung, melainkan hanya sebuah bentuk penulisan&nbsp;<code>function<\/code>. Sebuah&nbsp;<code>function<\/code>, umumnya melakukan tindakan dan sebelum&nbsp;<code>function<\/code>&nbsp;berakhir,&nbsp;<code>function<\/code>&nbsp;bisa mengembalikan nilai dengan cara menambahkan sintaks return.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita juga dapat mengirimkan nilai ke dalam sebuah&nbsp;<code>function<\/code>&nbsp;dengan mencantumkannya ke dalam tanda kurung dalam penulisan&nbsp;<code>function<\/code>. Untuk mengirimkan nilai lebih dari satu, gunakan tanda&nbsp;<code>,<\/code>&nbsp;sebagai pemisah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Contoh Function 1:<\/strong>&nbsp;Function sederhana tanpa return<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">void main(){&nbsp;&nbsp;<br \/>&nbsp; tampilkan();<br \/>}<br \/>tampilkan(){<br \/>&nbsp; print(\"Hello Peserta Bootcamp\");<br \/>}<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Contoh Function 2:<\/strong>&nbsp;Function sederhana dengan return<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">void main(){<br \/>&nbsp; print(munculkanangka());<br \/>}<br \/><br \/>munculkanangka(){<br \/>&nbsp; return 2;<br \/>}<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Contoh Function 3:<\/strong>&nbsp;Function dengan parameter<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">void main(){<br \/>&nbsp; print(kalikanDua(6));<br \/>}<br \/><br \/>kalikanDua(angka){<br \/>&nbsp; return angka * 2;<br \/>}<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Contoh Function 4:<\/strong>&nbsp;Pengiriman parameter lebih dari satu<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">void main(){<br \/>&nbsp; print(kalikan(5,6));<br \/>}<br \/><br \/>kalikan(x, y){<br \/>&nbsp; return x * y;<br \/>}<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Contoh Function 5:<\/strong>&nbsp;Inisialisasi parameter dengan nilai default<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">void main(){<br \/>&nbsp; tampilkanangka(5);<br \/>}<br \/><br \/>tampilkanangka(n1,{s1:45}){<br \/>  print(n1); \/\/hasil akan 5 karena initialisasi 5 didalam value tampilkan<br \/>  print(s1); \/\/hasil adalah 45 karena dari parameter diisi 45<br \/>}<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Waspadai pengiriman parameter yang&nbsp;<strong>UNDEFINED!<\/strong><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Kita juga dapat menampung function sebagai variable dengan sebuah bentuk function yang dinamakan Anonymous Function.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>void main(){\r\n&nbsp; print(functionPerkalian(5,6)); &nbsp; &nbsp;\r\n}\r\n\r\nfunctionPerkalian(angka1, angka2){\r\n&nbsp; return angka1 * angka2;\r\n}\r\n\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading --><\/p>\r\n<h2>&nbsp;<\/h2>\r\n<p><!-- \/wp:code --><\/p>","waktu_publish":"2021-10-29 08:00:00","status_publish":"publish","urutan":7,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-26 06:33:02","waktu_publish_formatted":" Jumat, 29 Oktober 2021. 08:00:00 WIB."}]},{"id":317,"uuid":"661669d3-5062-425a-84ec-08aebf630233","materi_id":32,"nama":"Tugas Week 1","permalink":"tugas-week-1","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-25 21:36:39","posting":[{"id":1076,"uuid":"a48fb5f4-db80-4d5d-9b20-5f4694bd195f","author_user_id":8222,"materi_section_id":317,"judul":"Tugas-1-Git","permalink":"tugas-1-git","konten":"<p><!-- wp:paragraph --><\/p>\r\n<h2 id=\"block-1a14382a-0239-4549-8ef8-3e0a7995de36\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block is-selected rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"1a14382a-0239-4549-8ef8-3e0a7995de36\" data-type=\"core\/heading\" data-title=\"Tajuk\">1. Buat repository project baru<\/h2>\r\n<p>Buatlah satu repository project baru dengan nama project \"<strong>BootcampFlutter<\/strong>\", pastikan visibility level di set \"<strong>private<\/strong>\", dan centang pada bagian \"<strong>Initialize repository with a README<\/strong>\".<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":14998,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-14998\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-1024x467.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2 id=\"2-buat-branch-baru\">2. Clone repository<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Lakukanlah clone dari project yang telah dibuat. Kemudian masuk ke folder project yang telah di clone<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15000,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15000\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-1-1024x530.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">&nbsp;<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>lalu copy text yang ada di dalam Clone With HTTPS lalu jalankan perintah ini di terminal\/cmd<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">git clone [hasil copy dari clone with https]<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>lalu pindahkan ke folder project yang sudah di clone ke directory local bisa di document\/ music\/ video<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"3-menambahkan-file-baru\">3. Menambahkan folder dan file baru<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>BootcampFlutter\/\r\n  Tugas-1-Git\/\r\n    data_diri.txt<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Buat folder baru dengan nama \"Tugas-1-Git\" dan di dalamnya tambahkan file \"data_diri.txt\". Isi file \"data_diri.txt\" adalah :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>nama: achmad hilmy firdaus<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>email: hilmy@gmail.com<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>telegram akun : @achmadhilmy<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>phone : 0987655<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre id=\"block-92d75b40-e5fb-44b6-a155-adade489a4cb\" class=\"wp-block-preformatted\"><strong>Setelah Selesai mengerjakan tugas nya : <\/strong>\r\n\r\n1. git init\r\n2. git add .\r\n3. git commit -m \"Pengumpulan Tugas 1\"\r\n4. git push origin master <\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:heading --><\/p>\r\n<h2>4. Kumpulkan tugas<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya kumpulkan tugas Anda setelah melakukan commit di gitlab dan pastikan sudah masuk file nya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15001,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15001\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-2-1024x526.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>setelah itu tambahkan member<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Dan Pastikan <\/strong>repository statusnya <strong>Private <\/strong>dan tambahkan juga id member trainner :@HilmyAch135 sebagai maintener<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15002,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15002\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-3-1024x536.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><\/p>\r\n<p>Untuk selengkapnya, tata cara pengumpulan tugas dapat melihat halaman &ldquo;Pendahuluan&rdquo;, bagian Proses Pengumpulan Tugas yang ada di materi paling awal di <a href=\"\/\">sanbercode<\/a>.com<\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-10-25 08:00:00","status_publish":"publish","urutan":1,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:26:29","waktu_publish_formatted":" Senin, 25 Oktober 2021. 08:00:00 WIB."},{"id":1077,"uuid":"9ba1e0d5-125f-487b-86bf-af29305b62d1","author_user_id":8222,"materi_section_id":317,"judul":"Tugas-2-Intro Dart","permalink":"tugas-2-intro-dart","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada tugas kali ini buatlah folder baru (Tugas 2 &ndash; TypeData) yang berisikan file dengan nama <strong>type.dart<\/strong>&nbsp;(untuk Tugas type data). Simpan folder tugas ini di dalam folder repository project yang dikerjakan pada <strong>BootcampFlutter<\/strong>.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>untuk tugas ini cukup 1 file, jadi sistemmnya jika sudah selesai boleh di comment jadi misal nomor 1 selesai bisa di comment dan dilanjutkan ke nomor berikutnya, cara commentnya yaitu dengan cara di blok lalu <strong>ctrl+capslock + ?\/<\/strong> atau dapat juga <strong>\/\/<\/strong> dengan tanda 2 kali<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"a-string-challenges\">A. Tugas String<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li><strong>Soal No. 1 (Membuat kalimat)<\/strong>,<br \/>Terdapat kumpulan variable dengan data string sebagai berikut&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var word = 'dart';<br \/>var second = 'is';<br \/>var third = 'awesome';<br \/>var fourth = 'and';<br \/>var fifth = 'I';<br \/>var sixth = 'love';<br \/>var seventh = 'it!'; Buatlah agar kata-kata di atas menjadi satu kalimat . Output: Dart is awesome and I love it!<br \/><br \/><\/li>\r\n<li><strong>&nbsp;Soal No.2 Mengurai kalimat (Akses karakter dalam string)<\/strong>,<br \/>Terdapat satu kalimat seperti berikut: var sentence = \"I am going to be Flutter Developer\";<br \/><br \/>var exampleFirstWord = sentence[0] ;<br \/>var exampleSecondWord = sentence[2] + sentence[3] ;<br \/>var thirdWord; \/\/ lakukan sendiri<br \/>var fourthWord; \/\/ lakukan sendiri<br \/>var fifthWord; \/\/ lakukan sendiri<br \/>var sixthWord; \/\/ lakukan sendiri<br \/>var seventhWord; \/\/ lakukan sendiri<br \/><br \/><br \/>print('First Word: ' + exampleFirstWord);<br \/>print('Second Word: ' + secondWord);<br \/>print('Third Word: ' + thirdWord);<br \/>print('Fourth Word: ' + fourthWord);<br \/>print('Fifth Word: ' + fifthWord);<br \/>print('Sixth Word: ' + sixthWord);<br \/>print('Seventh Word: ' + seventhWord);<br \/><br \/>Buat menjadi Output berikut: First word: I<br \/>Second word: am<br \/>Third word: going<br \/>Fourth word: to<br \/>Fifth word: be<br \/>Sixth word: Flutter<br \/>Seventh word: Developer<br \/><br \/>3.<strong> Dengan menggunakan I\/O pada dart buatlah input dinamis yang akan menginput nama depan dan belakang dan jika di enter<\/strong><br \/><strong>akan menggabungkan nama depan dan belakang<\/strong><br \/><br \/>contoh :<br \/><br \/>masukan nama depan :<br \/>hilmy<br \/>masukan nama belakang :<br \/>firdaus<br \/><br \/>nama lengkap anda adalah:<br \/>hilmy firdaus<br \/><br \/>4. Dengan menggunakan operator operasikan variable berikut ini menjadi bentuk operasi <strong>perkalian<\/strong>, <strong>penjumlahan<\/strong>, <strong>pengurangan <\/strong>dan <strong>pembagian <\/strong>a = 5,&nbsp; b = 10 jadi misal a * b = 5 * 10 = 50 dst.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>Contoh Output <\/strong>:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15441,\"width\":289,\"height\":185,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large is-resized\"><img class=\"wp-image-15441\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/soal.png\" alt=\"\" width=\"289\" height=\"185\" \/><\/figure>\r\n<p>Setelah selesai commit kedalam repository masing masing dan jangan lupa dikumpulkan di sanbercode.com<\/p>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-10-26 08:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:26:40","waktu_publish_formatted":" Selasa, 26 Oktober 2021. 08:00:00 WIB."},{"id":1080,"uuid":"7943651f-9c91-4287-ac4e-5f5b91d2dbb5","author_user_id":8222,"materi_section_id":317,"judul":"Tugas-3-Conditional","permalink":"tugas-3-conditional","konten":"<div>Pada tugas kali ini buatlah folder baru (Tugas-3 &ndash; Conditional) yang berisikan file dengan nama&nbsp;conditional.dart(untuk Tugas Conditional). Simpan folder tugas ini di dalam folder repository project yang dikerjakan pada BootcampFlutter.<\/div>\r\n<h3>1. Ternary operator&nbsp;<\/h3>\r\n<p>Petunjuk : untuk membuat sebuah kondisi ternary dimna anda akan di minta untuk menginstall aplikasi dengan jawaban Y\/T , jadi tugas teman teman sekrang adalah memberi jawaban y\/t saat ada input mau diinstall aplikasi, apabila ( y )maka akan menampilkan \"anda akan menginstall aplikasi dart\", jika (T)&nbsp; maka akan keluar pesan \"aborted\" <strong>(Gunakan I\/O)<\/strong>.<\/p>\r\n<h3>2. If-else if dan else<\/h3>\r\n<p>Petunjuk : Kita akan memasuki dunia game werewolf. Pada saat akan bermain kamu diminta memasukkan nama dan peran . Untuk memulai game pemain harus memasukkan variable&nbsp;<code>nama<\/code>&nbsp;dan&nbsp;<code>peran<\/code>. Jika pemain tidak memasukkan nama maka game akan mengeluarkan warning &ldquo;<code>Nama harus diisi!<\/code>&ldquo;. Jika pemain memasukkan nama tapi tidak memasukkan peran maka game akan mengeluarkan warning &ldquo;<code>Pilih Peranmu untuk memulai game<\/code>&ldquo;. Terdapat tiga peran yaitu penyihir, guard, dan werewolf. Tugas kamu adalah membuat program untuk mengecek input dari pemain dan hasil response dari game sesuai input yang dikirimkan.<\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Petunjuk:<\/p>\r\n<ul>\r\n<li>Nama dan peran diisi dengan i\/o dan bisa diisi apa saja<\/li>\r\n<li>Nama perlu dicek persis sesuai dengan input\/output<\/li>\r\n<li>Buat kondisi if-else untuk masing-masing peran<\/li>\r\n<\/ul>\r\n<\/blockquote>\r\n<p>Input:<\/p>\r\n<pre class=\"wp-block-preformatted\">var nama = \"John\"\r\nvar peran = \"\"<\/pre>\r\n<p>Output:<\/p>\r\n<div class=\"wp-block-preformatted\">\/\/ Output untuk Input nama = '' dan peran = '' \" , apabila kosong semua Nama harus diisi!\"<\/div>\r\n<div class=\"wp-block-preformatted\">&nbsp;<\/div>\r\n<div class=\"wp-block-preformatted\">\/\/Output untuk Input nama = 'John' dan peran = '' \"apabila cuman diisi nama akan muncul Halo John, Pilih peranmu untuk memulai game!\"<\/div>\r\n<div class=\"wp-block-preformatted\">&nbsp;<\/div>\r\n<div class=\"wp-block-preformatted\">\/\/Output untuk Input nama = 'Jane' dan peran 'Penyihir' \"Selamat datang di Dunia Werewolf, Jane\" \"Halo Penyihir Jane, kamu dapat melihat siapa yang menjadi werewolf!\"<\/div>\r\n<div class=\"wp-block-preformatted\">&nbsp;<\/div>\r\n<div class=\"wp-block-preformatted\">\/\/Output untuk Input nama = 'Jenita' dan peran 'Guard' \"Selamat datang di Dunia Werewolf, Jenita\" \"Halo Guard Jenita, kamu akan membantu melindungi temanmu dari serangan werewolf.\"<\/div>\r\n<div class=\"wp-block-preformatted\">&nbsp;<\/div>\r\n<div class=\"wp-block-preformatted\">\/\/Output untuk Input nama = 'Junaedi' dan peran 'Werewolf' \"Selamat datang di Dunia Werewolf, Junaedi\" \"Halo Werewolf Junaedi, Kamu akan memakan mangsa setiap malam!\"<\/div>\r\n<div class=\"wp-block-preformatted\">&nbsp;<\/div>\r\n<div class=\"wp-block-preformatted\">&nbsp;<strong>(Gunakan I\/O)<\/strong>&nbsp;<br \/><br \/><\/div>\r\n<h3 class=\"wp-block-preformatted\"><strong>3. Switch case<\/strong><\/h3>\r\n<p class=\"wp-block-preformatted\">Kamu adalah seorang penyair yang setiap hari memberikan quotes yang sangat berguna untuk orang- orang sekitar mu buatlah sebuah swith case yang dapat menampung quotes tiap harinya :&nbsp;<\/p>\r\n<p class=\"wp-block-preformatted\"><strong>Senin :&nbsp;<\/strong><\/p>\r\n<div>\r\n<div>Segala&nbsp;sesuatu&nbsp;memiliki&nbsp;kesudahan,&nbsp;yang&nbsp;sudah&nbsp;berakhir&nbsp;biarlah&nbsp;berlalu&nbsp;dan&nbsp;yakinlah&nbsp;semua&nbsp;akan&nbsp;baik-baik&nbsp;saja.<\/div>\r\n<\/div>\r\n<p class=\"wp-block-preformatted\"><strong>Selasa :&nbsp;<\/strong><\/p>\r\n<div>\r\n<div>Setiap&nbsp;detik&nbsp;sangatlah&nbsp;berharga&nbsp;karena&nbsp;waktu&nbsp;mengetahui&nbsp;banyak&nbsp;hal,&nbsp;termasuk&nbsp;rahasia&nbsp;hati.<\/div>\r\n<\/div>\r\n<p class=\"wp-block-preformatted\"><strong>Rabu :&nbsp;<\/strong><\/p>\r\n<div>\r\n<div>Jika&nbsp;kamu&nbsp;tak&nbsp;menemukan&nbsp;buku&nbsp;yang&nbsp;kamu&nbsp;cari&nbsp;di&nbsp;rak,&nbsp;maka&nbsp;tulislah&nbsp;sendiri.<\/div>\r\n<\/div>\r\n<p class=\"wp-block-preformatted\"><strong>Kamis:&nbsp;<\/strong><\/p>\r\n<div>\r\n<div>Jika&nbsp;hatimu&nbsp;banyak&nbsp;merasakan&nbsp;sakit,&nbsp;maka&nbsp;belajarlah&nbsp;dari&nbsp;rasa&nbsp;sakit&nbsp;itu&nbsp;untuk&nbsp;tidak&nbsp;memberikan&nbsp;rasa&nbsp;sakit&nbsp;pada&nbsp;orang&nbsp;lain.<\/div>\r\n<\/div>\r\n<p class=\"wp-block-preformatted\"><strong>Jumat:&nbsp;<\/strong><\/p>\r\n<div>\r\n<div>Hidup&nbsp;tak&nbsp;selamanya&nbsp;tentang&nbsp;pacar.<\/div>\r\n<\/div>\r\n<p class=\"wp-block-preformatted\"><strong>Sabtu :&nbsp;<\/strong><\/p>\r\n<div>\r\n<div>Rumah&nbsp;bukan&nbsp;hanya&nbsp;sebuah&nbsp;tempat,&nbsp;tetapi&nbsp;itu&nbsp;adalah&nbsp;perasaan.<\/div>\r\n<\/div>\r\n<p class=\"wp-block-preformatted\"><strong>Minggu :&nbsp;<\/strong><\/p>\r\n<div>\r\n<div>Hanya&nbsp;seseorang&nbsp;yang&nbsp;takut&nbsp;yang&nbsp;bisa&nbsp;bertindak&nbsp;berani.&nbsp;Tanpa&nbsp;rasa&nbsp;takut&nbsp;itu&nbsp;tidak&nbsp;ada&nbsp;apapun&nbsp;yang&nbsp;bisa&nbsp;disebut&nbsp;berani.<\/div>\r\n<div>&nbsp;<\/div>\r\n<div>&nbsp;<strong>(Gunakan I\/O)<\/strong><\/div>\r\n<\/div>\r\n<h3>4. Switch Case<\/h3>\r\n<p>Kamu akan diberikan sebuah data dalam tiga variabel, yaitu <code>hari<\/code>,&nbsp;<code>bulan<\/code>, dan&nbsp;<code>tahun<\/code>. Disini kamu diminta untuk membuat format tanggal. Misal tanggal yang diberikan adalah hari 1, bulan 5, dan tahun 1945. Maka, output yang harus kamu proses adalah menjadi 1 Mei 1945.<\/p>\r\n<p>Gunakan&nbsp;<code>switch case<\/code> untuk kasus ini, <strong>tidak perlu menggunakna i\/o<\/strong>!<\/p>\r\n<p>Contoh:<\/p>\r\n<pre class=\"wp-block-preformatted\">var hari = 21; \r\nvar bulan = 1; \r\nvar tahun = 1945;\r\n\/\/  Maka hasil yang akan tampil di console adalah: '21 Januari 1945'; <\/pre>\r\n<p><strong>Skeleton Code \/ Code yang dicontohkan yang perlu diikuti dan dimodifikasi<\/strong><\/p>\r\n<p class=\"wp-block-preformatted\">var tanggal; \/\/ assign nilai variabel tanggal disini! (dengan angka antara 1 - 31) var bulan;<\/p>\r\n<p class=\"wp-block-preformatted\">\/\/ assign nilai variabel bulan disini! (dengan angka antara 1 - 12) var tahun;<\/p>\r\n<p class=\"wp-block-preformatted\">\/\/ assign nilai variabel tahun disini! (dengan angka antara 1900 - 2200)<\/p>\r\n<p class=\"wp-block-preformatted\"><br \/><strong>&nbsp;(I\/O tidak perlu)<\/strong><br \/><br \/><\/p>\r\n<p>Jika sudah selesai, silahkan push (<code>git add<\/code>,&nbsp;<code>git commit<\/code>, dan&nbsp;<code>git push<\/code>) hasil pekerjaan Anda ke repository Gitlab masing-masing (gunakan repository project <strong>BootcampFlutter<\/strong>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>","waktu_publish":"2021-10-27 08:00:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:26:51","waktu_publish_formatted":" Rabu, 27 Oktober 2021. 08:00:00 WIB."},{"id":1078,"uuid":"2ed199f9-ef05-4f5e-bfba-ac15f4d1cd00","author_user_id":8222,"materi_section_id":317,"judul":"Tugas-4-Looping","permalink":"tugas-4-looping","konten":"<p>Pada tugas kali ini buatlah folder baru (Tugas 4 &ndash; Looping) yang berisikan file dengan nama <strong>looping.dart<\/strong>&nbsp;. Simpan folder tugas ini di dalam folder repository project yang dikerjakan pada <strong>BootcampFlutter<\/strong><\/p>\r\n<h3 id=\"no-1-looping-while\">No. 1 Looping&nbsp;<code>While&nbsp;<\/code><\/h3>\r\n<p>Pada tugas ini kamu diminta untuk melakukan looping dalam dart dengan menggunakan syntax <code>while<\/code>. Untuk membuat tantangan ini lebih menarik, kamu juga diminta untuk membuat suatu looping yang menghitung maju dan menghitung mundur. Jangan lupa tampilkan di console juga judul &lsquo;LOOPING PERTAMA&rsquo; dan &lsquo;LOOPING KEDUA&rsquo;.&rdquo;<\/p>\r\n<p>Output:<\/p>\r\n<pre class=\"wp-block-preformatted\">LOOPING PERTAMA\r\n2 - I love coding\r\n4 - I love coding\r\n6 - I love coding\r\n8 - I love coding\r\n10 - I love coding\r\n12 - I love coding\r\n14 - I love coding\r\n16 - I love coding\r\n18 - I love coding\r\n20 - I love coding\r\nLOOPING KEDUA\r\n20 - I will become a mobile developer\r\n18 - I will become a mobile developer                                                                              \r\n16 - I will become a mobile developer\r\n14 - I will become a mobile developer\r\n12 - I will become a mobile developer\r\n10 - I will become a mobile developer\r\n8 - I will become a mobile developer\r\n6 - I will become a mobile developer\r\n4 - I will become a mobile developer\r\n2 - I will become a mobile developer<\/pre>\r\n<h3 id=\"no-2-looping-menggunakan-for\">No. 2 Looping menggunakan&nbsp;<code>for<\/code><\/h3>\r\n<p>Pada tugas ini kamu diminta untuk melakukan looping dalam dart dengan menggunakan syntax <code>for<\/code>. Untuk membuat tantangan ini lebih menarik, kamu juga diminta untuk memenuhi syarat tertentu yaitu:<\/p>\r\n<p>SYARAT:<br \/>A. Jika angka ganjil maka tampilkan Santai<br \/>B. Jika angka genap maka tampilkan Berkualitas<br \/>C. Jika angka yang sedang ditampilkan adalah kelipatan 3 DAN angka ganjil maka tampilkan I Love Coding.<\/p>\r\n<pre class=\"wp-block-preformatted\">OUTPUT \r\n1 - Santai\r\n2 - Berkualitas\r\n3 - I Love Coding \r\n4 - Berkualitas\r\n5 - Santai\r\n6 - Berkualitas\r\n7 - Santai\r\n8 - Berkualitas\r\n9 - I Love Coding\r\n10 - Berkualitas\r\n11 - Santai\r\n12 - Berkualitas\r\n13 - Santai\r\n14 - Berkualitas\r\n15 - I Love Coding\r\n16 - Berkualitas\r\n17 - Santai\r\n18 - Berkualitas\r\n19 - Santai\r\n20 - Berkualitas<\/pre>\r\n<h3 id=\"no-3-membuat-persegi-panjang\">No. 3 Membuat Persegi Panjang #<\/h3>\r\n<p>Kamu diminta untuk menampilkan persegi dengan dimensi 8&times;4 dengan tanda pagar (#) dengan perulangan atau looping. Looping boleh menggunakan syntax apa pun (<code>while<\/code>,&nbsp;<code>for<\/code>,&nbsp;<code>do while<\/code>).<\/p>\r\n<p>Output:<\/p>\r\n<pre class=\"wp-block-preformatted\">########\r\n########\r\n########\r\n######## <\/pre>\r\n<h3 id=\"no-4-membuat-tangga\">No. 4 Membuat Tangga&nbsp;<\/h3>\r\n<p>Kali ini kamu diminta untuk menampilkan sebuah segitiga dengan tanda pagar (#) dengan dimensi tinggi 7 dan alas 7. Looping boleh menggunakan syntax apa pun (<code>while<\/code>,&nbsp;<code>for<\/code>,&nbsp;<code>do while<\/code>).<\/p>\r\n<p>Output:<\/p>\r\n<pre class=\"wp-block-preformatted\">#\r\n##\r\n###\r\n####\r\n#####\r\n######\r\n#######<\/pre>\r\n<pre class=\"wp-block-preformatted\">&nbsp;<\/pre>\r\n<p>Jika sudah selesai dikerjakan, silahkan&nbsp;<em>push&nbsp;<\/em>hasil pekerjaan Anda ke repository Gitlab masing-masing (gunakan repository project <strong>BootcampFlutter<\/strong>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>","waktu_publish":"2021-10-28 08:00:00","status_publish":"publish","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:27:03","waktu_publish_formatted":" Kamis, 28 Oktober 2021. 08:00:00 WIB."},{"id":1079,"uuid":"04ca96e8-c09c-4c41-91b3-90a42854763d","author_user_id":8222,"materi_section_id":317,"judul":"Tugas-5-function","permalink":"tugas-5-function","konten":"<p>Pada tugas kali ini buatlah folder baru (Tugas 5 &ndash; Function) yang berisikan file dengan nama <strong>function.dart<\/strong>. Simpan folder tugas ini di dalam folder repository project yang dikerjakan pada Folder yang telah di buat kemarin <strong>BootcampFlutter<\/strong>.<\/p>\r\n<h3 id=\"no-1\">No. 1&nbsp;<\/h3>\r\n<p>Tulislah sebuah function dengan nama teriak() yang mengembalikan nilai &ldquo;Halo Sanbers!&rdquo; yang kemudian dapat ditampilkan di console.<\/p>\r\n<pre class=\"wp-block-preformatted\"> \r\nprint(teriak()) \/\/ \"Halo Sanbers!\" <\/pre>\r\n<h3 id=\"no-2\">No. 2&nbsp;<\/h3>\r\n<p>Tulislah sebuah function dengan nama kalikan() yang mengembalikan hasil perkalian dua parameter yang di kirim.<\/p>\r\n<pre class=\"wp-block-preformatted\">\/*\r\n    Tulis code function di sini\r\n*\/\r\n \r\nvar num1 = 12\r\nvar num2 = 4\r\n \r\nvar hasilKali = kalikan(num1, num2)\r\nprint(hasilKali) \/\/ 48<\/pre>\r\n<h3 id=\"no-3\">No. 3&nbsp;<\/h3>\r\n<p>Tulislah sebuah function dengan nama introduce() yang memproses paramater yang dikirim menjadi sebuah kalimat perkenalan seperti berikut: &ldquo;Nama saya [name], umur saya [age] tahun, alamat saya di [address], dan saya punya hobby yaitu [hobby]!&rdquo;<\/p>\r\n<pre class=\"wp-block-preformatted\">\/* \r\n    Tulis kode function di sini\r\n*\/\r\n \r\nvar name = \"Agus\"\r\nvar age = 30\r\nvar address = \"Jln. Malioboro, Yogyakarta\"\r\nvar hobby = \"Gaming\"\r\n \r\nvar perkenalan = (name, age, address, hobby);\r\nprint(perkenalan) \/\/ Menampilkan \"Nama saya Agus, umur saya 30 tahun, alamat saya di Jln. Malioboro, Yogyakarta,<br \/> dan saya punya hobby yaitu Gaming!\" <br \/><br \/><br \/><\/pre>\r\n<p><strong>No.4<\/strong><\/p>\r\n<p>Tulislah sebuah function untuk memfaktorialkan angka, misal 6! = 720, didapat dari 6 = 6*5*4*3*2*1 dan jika angka kurang dari sama <strong>&lt;=<\/strong> dengan 0, maka akan me return 1, selain itu menampilkan hasil faktorialnya<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>NB: Silahkan coding menurut versinya masing masing, tidak ada aturan baku&nbsp;<\/strong><\/p>\r\n<p>Jika sudah selesai dikerjakan, silahkan&nbsp;<em>push&nbsp;<\/em>hasil pekerjaan Anda ke&nbsp;<em>repository&nbsp;<\/em>Gitlab masing-masing (gunakan&nbsp;<em>repository project<\/em> <strong>BootcampFlutter<\/strong>). Jangan lupa&nbsp;<em>submit link commit<\/em>&nbsp;Anda ke sanbercode.com.<\/p>","waktu_publish":"2021-10-29 08:00:00","status_publish":"publish","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:27:18","waktu_publish_formatted":" Jumat, 29 Oktober 2021. 08:00:00 WIB."}]},{"id":318,"uuid":"d9a96f8b-2f74-4ae0-8499-dc36924bbcde","materi_id":32,"nama":"Materi Week 2","permalink":"materi-week-2","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-25 21:36:39","posting":[{"id":1084,"uuid":"648998b0-7aa9-408e-a88e-39f58c7df973","author_user_id":8222,"materi_section_id":318,"judul":"Hari-6-List dan Maps","permalink":"hari-6-list-dan-maps","konten":"<pre class=\"wp-block-preformatted\"><br \/><!-- wp:paragraph --><\/pre>\r\n<p><strong>video materi refrensi<br \/><\/strong><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=6xWVWDvmqeU&amp;t=89s\">https:\/\/www.youtube.com\/watch?v=6xWVWDvmqeU&amp;t=89s<\/a><\/p>\r\n<p>https:\/\/www.youtube.com\/watch?v=zvao-m2BDVA<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:embed {\"url\":\"https:\/\/www.youtube.com\/embed\/Jy4elW9Y64M?t=111s\",\"type\":\"rich\",\"providerNameSlug\":\"handler-sematan\",\"responsive\":true,\"className\":\"\"} --><\/pre>\r\n<figure class=\"wp-block-embed is-type-rich is-provider-handler-sematan wp-block-embed-handler-sematan\"><\/figure>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:embed --> <!-- wp:heading --><\/pre>\r\n<h2>1. <strong>List&nbsp;<\/strong><\/h2>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p>list adalah sebuah object koleksi yang menyimpan daftar objek\/ suatu kelompok nilai atau data yang disusun berdasarkan urutan index. Dalam Dart list dinyatakan dalam tipe List, untuk membuat list sendiri, kita dapat menggunakan kurung [ ], sama seperti pada array contoh :&nbsp;<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p><code>void main() {<\/code><br \/><code>&nbsp; List &lt;int&gt; list = [23, 24, 25];<\/code><br \/><code>&nbsp; print(list[0]);<\/code><br \/><code>&nbsp; print(list[1]);<\/code><br \/><code>&nbsp; print(list[2]);<\/code><br \/><code>}<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p>Sedangkan penambahan elemen ke dalam objek list dilakukan dengan cara menambahkan metode add(), seperti berikut.<code>void&nbsp;main()&nbsp;{<\/code><code>&nbsp;&nbsp;List&nbsp;&lt;int&gt;&nbsp;list&nbsp;=&nbsp;[23,&nbsp;24,&nbsp;25];<\/code><code>&nbsp;&nbsp;list.add(0);&nbsp;&nbsp;<\/code><code>&nbsp;&nbsp;print(list[0]);<\/code><code>&nbsp;&nbsp;print(list[1]);<\/code><code>&nbsp;&nbsp;print(list[2]);<\/code><code>&nbsp;&nbsp;print(list[3]);<\/code><code>}<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:heading --><\/pre>\r\n<h2><strong>2.&nbsp;Tipe Data Map<\/strong><\/h2>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p>Pengertian dari tipe data map dalam dart adalah objek koleksi yang setiap elemennya berupa pasangan kunci&nbsp;<em>(key)&nbsp;<\/em>dan nilai&nbsp;<em>(value)<\/em>. Terdapat asosiasi antara kunci dan nilai pada setiap elemen yang terdapat didalam elemen map.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p>Dalam satu objek map, kunci harus bersifat unik,namun tidak dengan nilai. Hal ini berarti bahwa satu nilai yang sama bisa saja muncul pada beberapa elemen map<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p>Dalam dart, map dinyatakan dengan tipe map. Objek dari kelas Map dibuat dengan menggunakan tanda { }, dengan bentuk umum sebagai berikut.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p><strong>contoh <\/strong>:&nbsp;<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p><code>void main() {<br \/>&nbsp;&nbsp;<br \/>&nbsp; Map&lt;String, String&gt; kota = {'jkt' : 'Jakarta', 'bdg' : 'Bandung', 'sby' : 'Surabaya'};<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br \/>&nbsp; print(kota['jkt']);<br \/>&nbsp; print(kota['bdg']);<br \/>&nbsp; print(kota['sby']);<br \/>}<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:heading --><\/pre>\r\n<h2><strong>3. Menampilkan berbagai tipe data&nbsp;<\/strong><\/h2>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p>selayaknya array pada bahasa pemerograman lain list juga bisa kita buat menjadi sebuah variable dan untuk menampilkan kita bisa menggunakan looping for, contoh :&nbsp;<code>main()&nbsp;{&nbsp;&nbsp;var languages = [\"C\", \"C++\", \"Java\", \"Dart\", \"Javascript\", 2 , 34];<\/code><br \/><code>&nbsp;&nbsp;for(var&nbsp;language&nbsp;in&nbsp;languages){&nbsp;&nbsp;&nbsp;&nbsp;print(language);&nbsp;&nbsp;}<\/code><br \/><code>&nbsp;&nbsp;print(\"Total&nbsp;bahasa:&nbsp;${languages.length}\");}<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:heading --><\/pre>\r\n<h2><strong>4. List Multidemensi<\/strong><\/h2>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p>Multidimensional list atau list multidimensi adalah list yang berisi list di dalamnya. Jumlah dimensi bergantung seberapa dalam list tersebut memiliki list di dalamnya. Cara akses nilai dari list multidimensi sama seperti list satu dimensi seperti biasa namun jumlah indeksnya terdapat sebanyak dimensi nya.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\"> var arrayMulti = [ \r\n    [1, 2, 3],\r\n    [4, 5, 6],\r\n    [7, 8, 9]\r\n]\r\n\/\/ Maka sebagai gambaran, indeks dari array tersebut adalah \r\n\/*\r\n    [\r\n        [(0,0), (0,1), (0,2)],\r\n        [(1,0), (1,1), (1,2)],\r\n        [(2,0), (2,1), (2,2)]\r\n    ] \r\n*\/\r\nvoid main(){\r\nprint(arrayMulti[0][0]) \/\/ 1 \r\nprint(arrayMulti[1][0]) \/\/ 4\r\nprint(arrayMulti[2][1]) \/\/ 8\r\n}\r\n\r\n<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:heading --><\/pre>\r\n<h2 id=\"block-50012072-689c-46eb-a229-238864c429f0\"><strong>5. Method yang ada pada List dan maps <\/strong><\/h2>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"block-50012072-689c-46eb-a229-238864c429f0\">Ketika membuat aplikasi, kita pasti akan berurusan dengan yang namanya List. Pada kali ini kita akan mengambil utility method list dari Dart yang sering digunakan dan diterapkan.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"f3f3\">forEach()<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"23fc\">function untuk menampilkan tiap-tiap elements.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/pre>\r\n<p><code>var perusahaan = [&lsquo;bukalapak&rsquo;, &lsquo;tokopedia&rsquo;, &lsquo;blibli&rsquo;];<br \/>perusahaan.forEach((data)=&gt; print(data)); bukalapak tokopedia blibli<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":5} --><\/pre>\r\n<h5 id=\"48b9\">contains()<\/h5>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"9a4b\">Mengecekan&nbsp;element&nbsp;dalam&nbsp;list, yang mana return bool.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">var perusahaan = [&lsquo;bukalapak&rsquo;, &lsquo;tokopedia&rsquo;, &lsquo;blibli&rsquo;, &lsquo;salestock&rsquo;];<br \/> print(perusahaan.contains(&lsquo;bukalapak&rsquo;));<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"047a\">sort()<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"0f50\">untuk melakukan sorting pengurutan dalam list.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">var randomdata = [1,3,5,20,4,2];<br \/> randomdata.sort((a, b)=&gt; a.compareTo(b));<br \/> print(randomdata);<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"cde6\">reduce(), fold()<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"e5e3\">kompres list pada element jadi single value.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">var sumData = randomdata.reduce((cur, next)=&gt; cur + next);<br \/>print(sumData); \/\/\/ 35const currentValue = 10;<br \/>var nextSum = randomdata.fold(currentValue, (cur, next)=&gt; cur + next);<br \/>print(nextSum); \/\/ 45<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"8098\">every()<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"a762\">untuk melakukan check, apakah tiap element yang di iterasi memenuhi&nbsp;<code>test<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">List&lt;Map&lt;String, dynamic&gt;&gt; listUser = [<br \/> {&lsquo;nama&rsquo;: &lsquo;bekasi&rsquo;, &lsquo;umur&rsquo;: 240},<br \/> {&lsquo;nama&rsquo;: &lsquo;boyolali&rsquo;, &lsquo;umur&rsquo;: 200},<br \/> {&lsquo;nama&rsquo;: &lsquo;jakarta&rsquo;, &lsquo;umur&rsquo;: 100},<br \/> {&lsquo;nama&rsquo;: &lsquo;surabaya&rsquo;, &lsquo;umur&rsquo;: 100},<br \/>];var example = listUser.every((data) =&gt; data[&lsquo;umur&rsquo;] &gt;= 100);<br \/>print(example); \/\/\/true<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"0746\">where(), firstWhere(), singleWhere()<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"35b9\">mengembalikan nilai list setelah memenuhi kondisi.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">var userYoung = listUser.where((data)=&gt; data[&lsquo;umur&rsquo;] &gt; 100);<br \/> print(userYoung);<br \/> <br \/> var userFirstYoung = listUser.firstWhere((data)=&gt; data[&lsquo;umur&rsquo;] &lt; 200);<br \/> print(userFirstYoung); \/\/\/ {&lsquo;nama&rsquo;: &lsquo;jakarta&rsquo;, &lsquo;umur&rsquo;: 100},<br \/> <br \/> var userSingle = listUser.singleWhere((data)=&gt; data[&lsquo;umur&rsquo;] &lt;= 100);<br \/> print(userSingle); \/\/\/ error karena ada dua kondisi yang benar<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"43ff\"><strong><em>firstWhere<\/em><\/strong>&nbsp;itu&nbsp;ngambil list pertama dari banyak element&nbsp;<strong>true<\/strong>, dan&nbsp;<strong>singleWhere<\/strong>&nbsp;itu adalah kondisi true hanya boleh satu.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"95e9\">take(), skip()<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"1780\">ingin mengambil beberapa element dari banyaknya data pada list, gunakan method&nbsp;<code>take()<\/code>&nbsp;dan&nbsp;<code>skip()<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">var dataTestCase = [1, 2, 3, 4, 10, 90];<br \/>print(dataTestCase.take(2)); \/\/\/ (1, 2)<br \/>print(dataTestCase.skip(2)); \/\/\/ (3, 4, 10, 90)<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"6559\">expand()<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"085a\">ingin melakukan flatMap? sangat bisa dengan menggunakan&nbsp;<code>expand()<\/code><\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">var pairs = [[1, 2], [&lsquo;a&rsquo;, &lsquo;b&rsquo;], [3, 4]];<br \/>var flatmaps = pairs.expand((pair)=&gt; pair);<br \/>print(flatmaps);<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":4} --><\/pre>\r\n<h4 id=\"19f5\">List Comprehensions<\/h4>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/pre>\r\n<p id=\"3a02\">ini bukan method tapi ini adalah update terbaru dari&nbsp;<code>dart 2.3.2<\/code>&nbsp;yang mana Dart bisa membuat list comprehension seperti pada bahasa pemogramman python.<\/p>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/pre>\r\n<pre class=\"wp-block-preformatted\">var comph = [1,2,3,4];<br \/>var newCom = [for(var a in comph) &lsquo;new ${a}&rsquo;];<br \/><br \/><br \/><strong>Add dan AddAll<\/strong><br \/><br \/>ini merupakan method yang di pakai untuk menambahkan index pada list kita contohnya :<br \/><br \/>void main(){<br \/><br \/><\/pre>\r\n<div>\r\n<pre>&nbsp;&nbsp;List&lt;int&gt;&nbsp;myList&nbsp;=&nbsp;[];<br \/><br \/>&nbsp;&nbsp;List&lt;int&gt;&nbsp;list&nbsp;=&nbsp;[1,2,3];<br \/><br \/>&nbsp;&nbsp;myList.add(1);<br \/><br \/>&nbsp;&nbsp;myList.addAll(list);<br \/><br \/>&nbsp;&nbsp;myList.forEach((bilangan)=&gt;{<br \/><br \/>&nbsp;&nbsp;&nbsp;&nbsp;print(bilangan)<br \/><br \/>});<\/pre>\r\n<\/div>\r\n<pre class=\"wp-block-preformatted\"><br \/>}<\/pre>\r\n<pre class=\"wp-block-preformatted\"><!-- \/wp:preformatted --><br \/><br \/><\/pre>","waktu_publish":"2021-11-01 08:00:00","status_publish":"publish","urutan":1,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:27:46","waktu_publish_formatted":" Senin, 01 November 2021. 08:00:00 WIB."},{"id":1083,"uuid":"4a940117-baa9-48b7-aeab-3d39c2d4a263","author_user_id":8222,"materi_section_id":318,"judul":"Hari-7-Object Oriented","permalink":"hari-7-object-oriented","konten":"<p>Secara singkat class dapat diartikan blueprint dari suatu objek, maksudnya adalah kita mendesain suatu objek berdasarkan class yang kita buat, sebagai contoh dalam dunia nyata, jika kita ingin membuat sebuah objek meja maka kita perlu menggambar rancangan meja tersebut, dengan demikian kita akan mulai membuat meja berdasarkan rancangan tersebut, jika rancangannya baik maka hasilnya baik, begitu juga sebaliknya, jadi class dapat kita analogikan sebagai rancangannya dan hasil dari rancangan tersebut adalah objeknya.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Video Reff :&nbsp;<\/p>\r\n<p>https:\/\/youtu.be\/pUyBapbZ4g8<\/p>\r\n<h2>Mendefenisikan Class<\/h2>\r\n<p>Untuk membuat kelas kita gunakan keyword class yang telah disediakan oleh bahasa Dart. Perhatikan contoh berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>class Dadu {\r\n\r\n}<\/code><br \/><br \/><\/pre>\r\n<p>Pertama kita mulai dengan keyword class, diikuti dengan nama kelasnya yaitu Dadu, kemudian tubuh kelas diawali dengan buka kurung kurawal \"{\" dan diakhiri dengan tutup kurung kurawal } Jika sebuah kelas telah dibuat, maka kita langsung dapat menciptakan objek dari kelas tersebut, tentu jika kelas kita seperti contoh kelas Dadu, maka objek tersebut tidak dapat melakukan apapun, karena kita belum menambahkan atribut ataupun metode kedalamnya. untuk menciptakan objek pada pemrograman dart kita gunakan keyword new. Perhatikan contoh program berikut ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>\r\nDadu dd = new Dadu();<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Diawali dengan nama kelas yaitu Dadu kemudian nama objeknya yaitu dd (kita bisa menentukan nama objek yang lain tidak harus dd) kemudian new diakhiri dengan nama kelas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>nama_kelas nama_objek = new nama_kelas();<\/code><\/pre>\r\n<h2 id=\"contoh-functional\">contoh functional&nbsp;<\/h2>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/29.png\" alt=\"\" width=\"857\" height=\"244\" \/><\/p>\r\n<p>akan di ubah ke dalam class dibawah ini<\/p>\r\n<p><strong>pada main.dart<\/strong><\/p>\r\n<p><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/29-1.png\" alt=\"\" width=\"664\" height=\"453\" \/><\/strong><\/p>\r\n<h2 id=\"2-enkapsulasi-pembungkusan\">2. Enkapsulasi (Pembungkusan)<\/h2>\r\n<p><strong>Enkapsulasi<\/strong>&nbsp;(<strong><em>encapsulation<\/em><\/strong>) adalah&nbsp;<em>sebuah metode untuk mengatur struktur class dengan cara menyembunyikan&nbsp;alur&nbsp;kerja dari class tersebut<\/em>.<\/p>\r\n<p><strong><em>Struktur class<\/em><\/strong>&nbsp;yang dimaksud adalah&nbsp;<strong>property<\/strong>&nbsp;dan&nbsp;<strong>method<\/strong>. Dengan&nbsp;<em>enkapsulasi<\/em>, kita bisa membuat pembatasan akses kepada&nbsp;<em>property<\/em>&nbsp;dan&nbsp;<em>method<\/em>, sehingga hanya&nbsp;<em>property&nbsp;<\/em>dan&nbsp;<em>method<\/em>&nbsp;tertentu saja yang bisa diakses dari luar class.&nbsp;<em>Enkapsulasi<\/em>&nbsp;juga dikenal dengan istilah &lsquo;<strong><em>information hiding&rsquo;<\/em><\/strong>. Dengan&nbsp;<em>enkapsulasi<\/em>, kita bisa memilih&nbsp;<em>property<\/em>&nbsp;dan&nbsp;<em>method<\/em>&nbsp;apa saja yang boleh diakses, dan mana yang tidak boleh diakses. Dengan menghalangi kode program lain untuk mengubah&nbsp;<em>property<\/em>&nbsp;tertentu,&nbsp;<em>class<\/em>&nbsp;menjadi lebih terintegrasi, dan menghindari kesalahan ketika seseorang &lsquo;<em>mencoba<\/em>&rsquo; mengubahnya. Programmer yang merancang&nbsp;<em>class<\/em>&nbsp;bisa menyediakan&nbsp;<em>property<\/em>&nbsp;dan&nbsp;<em>method<\/em>&nbsp;khusus yang memang ditujukan untuk diakses dari luar.Pada pemrograman dart tidak ada keyword untuk membuat attribut atau metode menjadi private atau pun public, untuk membuat attribut ataupun fungsi menjadi private, cukup tambahkan underscore &ldquo;_&rdquo; sebelum nama attribut ataupun metode.<\/p>\r\n<h2 id=\"getter-dan-setter\">Getter dan setter<\/h2>\r\n<p><strong>main.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<pre class=\"wp-block-code\"><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/29-2.png\" alt=\"\" width=\"860\" height=\"442\" \/><\/strong><br \/><strong>pada persegi_panjang.dart<\/strong><br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/29-3.png\" \/><br \/>.<\/pre>\r\n<div class=\"wp-block-code\"><br \/>\r\n<h2>3. Inheritance<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Inheritance<\/strong>&nbsp;adalah konsep OOP dimana sebuah class dapat menurunkan&nbsp;<strong>property&nbsp;<\/strong>dan&nbsp;<strong>method<\/strong>&nbsp;yang dimilikinya kepada&nbsp;<strong>class&nbsp;<\/strong>lain. Konsep&nbsp;<strong>inheritance&nbsp;<\/strong>dipakai untuk memanfaatkan fitur&nbsp;<em>code reuse<\/em>, yakni menghindari terjadinya duplikasi kode program.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dalam bahasa Indonesia, inheritance ini disebut juga sebagai&nbsp;pewarisan atau penurunan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Konsep&nbsp;<em>inheritance<\/em>&nbsp;membuat sebuah struktur atau hierarchy&nbsp;<strong>class&nbsp;<\/strong>dalam kode program. Class yang akan diturunkan&nbsp;bisa disebut sebagai&nbsp;<strong>class induk (parent class), super class,&nbsp;<\/strong>atau&nbsp;<strong>base class<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sedangkan class yang menerima penurunan&nbsp;bisa disebut sebagai&nbsp;<strong>class anak (child class), sub class, derived class&nbsp;<\/strong>atau&nbsp;<strong>heir class<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Tidak semua property dan method class induk akan diturunkan. Property dan method dengan hak akses&nbsp;<strong>private<\/strong>&nbsp;tidak akan diturunkan kepada class anak. Hanya property dan method dengan hak akses&nbsp;<strong>protected&nbsp;<\/strong>dan&nbsp;<strong>public&nbsp;<\/strong>saja yang bisa diakses dari class anak.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>contoh<\/strong>:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>main.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15668,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15668\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-12.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>character.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15670,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15670\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-13.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>godzila.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15671,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15671\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-14.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>ultramen.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15672,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15672\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-15.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>jdi yang dimaksut dengan inharitance dari class ultramen dan godzila adalah extends, dimana class ultramen dan godzila mewarisi sifat dari character yang dimana character memiliki object berupa level point sehingga saat dikumpulkan di main.dart secara default godzilla dan ultramen dari mengisi dari levelPoint yang ada pada parentnya yaitu character.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>4. Polymorism<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Polymorphism adalah konsep di mana suatu objek yang berbeda-beda dapat diakses melalui interface yang sama. Sebuah objek yang polymorphic dapat beradaptasi dengan metode apapun yang diimplementasikan pada objek tersebut, dan setiap class memiliki interpretasinya tersendiri terhadap interfacenya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>contoh :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>main.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15680,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15680\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-16.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>operasi_math.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15682,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15682\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-17.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>perkalian.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15684,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15684\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-18.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>pembagian.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15685,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15685\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-19.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>(SubBab) Tambahan Constructor<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Constructor<\/strong>&nbsp;adalah method khusus yang akan dijalankan secara otomatis pada saat sebuah objek dibuat (<em>instansiasi<\/em>), yakni ketika perintah &ldquo;<strong>new<\/strong>&rdquo; dijalankan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Constructor biasa digunakan untuk membuat proses awal dalam mempersiapkan objek, seperti memberi nilai awal kepada property, memanggil method internal dan beberapa proses lain yang digunakan untuk mempersiapkan&nbsp;objek.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>main.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15691,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15691\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-20.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>mahasiswa.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15692,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><\/figure>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15692\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-21.png\" alt=\"\" \/><\/figure>\r\n<br \/><br \/><code><\/code><\/div>","waktu_publish":"2021-11-02 08:02:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:27:57","waktu_publish_formatted":" Selasa, 02 November 2021. 08:02:00 WIB."},{"id":1082,"uuid":"569e0dcb-6078-4bf9-8c88-8d1a7af58714","author_user_id":8222,"materi_section_id":318,"judul":"Hari -8-Async, Future, Await","permalink":"hari-8-async-future-await","konten":"<p id=\"block-d59702b6-0e0f-47e9-84e5-6b485af7c913\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Di dalam dunia pemrograman dart terdapat dua cara dalam menjalankan program: Synchronous dan Asynchronous. Synchronous artinya program berjalan secara berurutan sedangkan Asynchronous artinya program berjalan bersama-sama.<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">refrensi video :&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/youtu.be\/fMLGZDmmjNU\">https:\/\/youtu.be\/fMLGZDmmjNU<\/a><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/youtu.be\/fMLGZDmmjNU\">https:\/\/youtu.be\/fMLGZDmmjNU<\/a><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/youtu.be\/fMLGZDmmjNU\">https:\/\/youtu.be\/fMLGZDmmjNU<\/a><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d59702b6-0e0f-47e9-84e5-6b485af7c913\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">&nbsp;<\/p>\r\n<p id=\"block-72a8ffd6-5747-4d57-85c2-54babd99d2f7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block is-hovered rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"72a8ffd6-5747-4d57-85c2-54babd99d2f7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Terkadang di dalam program yang kita buat terdapat suatu sintaks yang mengharuskan code pada baris tersebut untuk dijalankan terlebih dahulu sebelum menjalankan sintaks pada baris selanjutnya. Hal ini dikenal dengan istilah&nbsp;<strong>blocking<\/strong>. Sebaliknya&nbsp;<strong>non-blocking<\/strong>&nbsp;artinya program berjalan dengan mengeksekusi sintaks dari baris ke baris secara paralel (bersama-sama) .<\/p>\r\n<figure id=\"block-c0379777-2432-49bf-ab3e-58a9eaa982f6\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"c0379777-2432-49bf-ab3e-58a9eaa982f6\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LmaxxI-WCdSbno_EMIf%2F-Lmb1Y86xkSMjjQR9D_D%2Fcontrol-io.svg?alt=media&amp;token=28454ce2-c28b-4149-bd72-7fa57d83737c\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah assets%2F-LlUaK30_GFBvMOdUWKf%2F-LmaxxI-WCdSbno_EMIf%2F-Lmb1Y86xkSMjjQR9D_D%2Fcontrol-io.svg\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-1f53130b-6dc7-4872-9a38-0a3c2dfeec27\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1f53130b-6dc7-4872-9a38-0a3c2dfeec27\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Perhatikan contoh program di bawah ini:<\/p>\r\n<pre id=\"block-dbe87eca-29de-4d10-979f-50fe5d85e80f\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"dbe87eca-29de-4d10-979f-50fe5d85e80f\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">import&nbsp;'dart:async';<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>void&nbsp;main&nbsp;(){<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;print(\"saya&nbsp;dijalankan&nbsp;pertama\");<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;var&nbsp;timer&nbsp;=&nbsp;Timer(Duration(seconds:&nbsp;3),&nbsp;()=&gt;print('saya&nbsp;dijalankan&nbsp;terakhir'));<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;print(\"saya&nbsp;dijalankan&nbsp;kedua\");&nbsp;<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-61f28891-f675-4946-a103-af45df258f30\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"61f28891-f675-4946-a103-af45df258f30\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jika kita jalankan program di atas, maka yang akan tampil terlebih dahulu di print adalah &ldquo;saya dijalankan pertama&rdquo; dan yang kedua adalah coding terakhir dan yang dicetak terakhir adalah var timer, walaupun ditulisa kedua karena proses async yang teradapat pada dart.<\/p>\r\n<h2 id=\"block-7ad6b903-c54a-4301-8f31-810f843c0d4a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"7ad6b903-c54a-4301-8f31-810f843c0d4a\" data-type=\"core\/heading\" data-title=\"Tajuk\"><strong>Future&nbsp;<\/strong><\/h2>\r\n<p id=\"block-0cee44e6-87ee-49ff-a485-282dbe05a3bd\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"0cee44e6-87ee-49ff-a485-282dbe05a3bd\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Future merupakan salah satu keyword yang disediakan oleh dart yang seperti namanya yaitu masa depan, jadi keyword ini gunanya untuk mengembalikan masa depan atau mengembalikan nilainya untuk waktu yang akan datang&nbsp;<\/p>\r\n<p id=\"block-c2502c66-319a-475a-a380-9d8d9a63c763\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c2502c66-319a-475a-a380-9d8d9a63c763\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">contoh penggunaan future&nbsp;<\/p>\r\n<pre id=\"block-c69f1462-cc43-4082-b5c6-e6a97d4617ca\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"c69f1462-cc43-4082-b5c6-e6a97d4617ca\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void&nbsp;main()&nbsp;{<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;fetchUserOrder();<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;print('Ambil&nbsp;Datanya');<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>Future&lt;void&gt;&nbsp;fetchUserOrder()&nbsp;{<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;return&nbsp;Future.delayed(Duration(seconds:&nbsp;2),<br data-rich-text-line-break=\"true\" \/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;()&nbsp;=&gt;&nbsp;print('Selamat&nbsp;datang&nbsp;Peserta&nbsp;bootcamp&nbsp;flutter'));<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<h2 id=\"block-372f4400-981a-4742-bf0c-cdc2ba66e1f2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"372f4400-981a-4742-bf0c-cdc2ba66e1f2\" data-type=\"core\/heading\" data-title=\"Tajuk\">Bekerja dengan async dan await<\/h2>\r\n<p id=\"block-168e4d68-004f-40d9-90e1-67b22466f9f7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"168e4d68-004f-40d9-90e1-67b22466f9f7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Keyword Async dan Awair menyediakan cara deklaratis untuk mendefinisikan fungsi asynchronous dan menggunakna valuenya. dalam menggunakan async dan await ingat pedoman dasar ini :<\/p>\r\n<ol id=\"block-2078c1c5-3b2c-4145-b293-106d208d811f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"2078c1c5-3b2c-4145-b293-106d208d811f\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>sebelumn menggunakan asynchronous terlebih dahulu tambahkan keywod async sebelum body<\/li>\r\n<li>keyword await akan berfungsi apabila dia berada dalam fungsi async<\/li>\r\n<li>dan berikut ini merupakan contoh yang mengkonversi dari fungsi synchronous ke dalam asynchronous<\/li>\r\n<\/ol>\r\n<pre id=\"block-df18b504-f9fd-4b5a-aef0-93ede890da00\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"df18b504-f9fd-4b5a-aef0-93ede890da00\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() async {&middot;&middot;&middot; }<\/code><\/pre>\r\n<p id=\"block-b23b06d4-2d57-421e-ab30-fadd76f7b9a5\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b23b06d4-2d57-421e-ab30-fadd76f7b9a5\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">jika fungsi memiliki tipe pengembalian yang di deklarasikan, maka perlu di perbaharui type menjadi Future&lt;T&gt;, dimana T adalah tipe nilai yang dikembalikan oleh fungsi, jika fungsi pengembaliannya tidak secara eksplisit maka tipe data akan menjadi Future&lt;void&gt;<\/p>\r\n<p id=\"block-d754b011-51d6-43cd-a596-0cf3abcb67e3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d754b011-51d6-43cd-a596-0cf3abcb67e3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">contoh :<\/p>\r\n<pre id=\"block-aac98f6d-e1b9-43e3-ab31-f0b49cb20d9a\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"aac98f6d-e1b9-43e3-ab31-f0b49cb20d9a\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">Future&lt;void&gt; main() async { &middot;&middot;&middot; }<\/code><\/pre>\r\n<pre id=\"block-f85f1bf8-0941-4036-9e59-48c92cfed069\" class=\"block-editor-rich-text__editable wp-block-preformatted block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Praformat\" data-block=\"f85f1bf8-0941-4036-9e59-48c92cfed069\" data-type=\"core\/preformatted\" data-title=\"Praformat\">Sekarang Anda memiliki fungsi async, Anda dapat menggunakan kata kunci await untuk menunggu hingga Future selesai:<\/pre>\r\n<pre id=\"block-be90bde4-6e76-463e-97ef-f149346c4b23\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"be90bde4-6e76-463e-97ef-f149346c4b23\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">print(await createOrderMessage());<\/code><\/pre>\r\n<h2 id=\"block-b4f698cb-781f-4f91-a5cd-76018d013c9c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"b4f698cb-781f-4f91-a5cd-76018d013c9c\" data-type=\"core\/heading\" data-title=\"Tajuk\">Contoh Synchronous<\/h2>\r\n<p id=\"block-47bd14c1-480d-49b7-ac96-61e5f20aebf3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok kosong; mulai menulis atau ketik garing untuk memilih blok\" data-block=\"47bd14c1-480d-49b7-ac96-61e5f20aebf3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<pre id=\"block-297d584f-32b5-4a47-8f82-f13bed5fff89\" class=\"block-editor-rich-text__editable wp-block-preformatted block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Praformat\" data-block=\"297d584f-32b5-4a47-8f82-f13bed5fff89\" data-type=\"core\/preformatted\" data-title=\"Praformat\">String createOrderMessage() {<br data-rich-text-line-break=\"true\" \/>  var order = fetchUserOrder();<br data-rich-text-line-break=\"true\" \/>  return 'Your order is: $order';<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>Future&lt;String&gt; fetchUserOrder() =&gt;<br data-rich-text-line-break=\"true\" \/>    \/\/ Imagine that this function is<br data-rich-text-line-break=\"true\" \/>    \/\/ more complex and slow.<br data-rich-text-line-break=\"true\" \/>    Future.delayed(<br data-rich-text-line-break=\"true\" \/>      Duration(seconds: 2),<br data-rich-text-line-break=\"true\" \/>      () =&gt; 'Large Latte',<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>void main() {<br data-rich-text-line-break=\"true\" \/>  print('Fetching user order...');<br data-rich-text-line-break=\"true\" \/>  print(createOrderMessage());<br data-rich-text-line-break=\"true\" \/>}<\/pre>\r\n<h2 id=\"block-cc7e4308-22b2-485a-91f8-fe4583204af5\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"cc7e4308-22b2-485a-91f8-fe4583204af5\" data-type=\"core\/heading\" data-title=\"Tajuk\">Contoh Asynchronous<\/h2>\r\n<pre id=\"block-40f9f002-50b6-4a80-9b2f-beec0940a461\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"40f9f002-50b6-4a80-9b2f-beec0940a461\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">Future&lt;String&gt; createOrderMessage() async {<br data-rich-text-line-break=\"true\" \/>  var order = await fetchUserOrder();<br data-rich-text-line-break=\"true\" \/>  return 'Your order is: $order';<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>Future&lt;String&gt; fetchUserOrder() =&gt;<br data-rich-text-line-break=\"true\" \/>    \/\/ Imagine that this function is<br data-rich-text-line-break=\"true\" \/>    \/\/ more complex and slow.<br data-rich-text-line-break=\"true\" \/>    Future.delayed(<br data-rich-text-line-break=\"true\" \/>      Duration(seconds: 2),<br data-rich-text-line-break=\"true\" \/>      () =&gt; 'Large Latte',<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>Future&lt;void&gt; main() async {<br data-rich-text-line-break=\"true\" \/>  print('Fetching user order...');<br data-rich-text-line-break=\"true\" \/>  print(await createOrderMessage());<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<pre id=\"block-b46c83bc-50fa-4abe-8989-cbe107c4ee24\" class=\"block-editor-rich-text__editable wp-block-preformatted block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Praformat\" data-block=\"b46c83bc-50fa-4abe-8989-cbe107c4ee24\" data-type=\"core\/preformatted\" data-title=\"Praformat\">contoh asynchronous akan berbeda dalam tiga hal:<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>Jenis return\/kembalian untuk createOrderMessage () berubah dari String ke Future &lt;String&gt;.<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>keyword async muncul sebelum body fungsi untuk createOrderMessage () dan main ().<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>keyword await muncul sebelum memanggil fungsi Asynchronous fetchUserOrder () dan createOrderMessage ().<\/pre>\r\n<h2 id=\"block-eaa349f9-3e66-46e5-a08b-c7a1bd195d3a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"eaa349f9-3e66-46e5-a08b-c7a1bd195d3a\" data-type=\"core\/heading\" data-title=\"Tajuk\">Handling Error<\/h2>\r\n<p id=\"block-49b44039-550d-4001-b4ee-c1f8c920f661\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"49b44039-550d-4001-b4ee-c1f8c920f661\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">untuk menangani handling error function async gunakan, try-catch jadi apabila succes akan masuk ke try dan jika error akan di tangani oleh catch<\/p>\r\n<p id=\"block-b5554653-8dfe-4f28-9ac1-d629e9d82bcd\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b5554653-8dfe-4f28-9ac1-d629e9d82bcd\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">dan berikut ini merupakan<strong> contoh struktur coding try catch<\/strong> :<\/p>\r\n<pre id=\"block-6028fc42-43f7-4532-b69a-bba42e29e4a5\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"6028fc42-43f7-4532-b69a-bba42e29e4a5\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">try {<br data-rich-text-line-break=\"true\" \/>  var order = await fetchUserOrder();<br data-rich-text-line-break=\"true\" \/>  print('Awaiting user order...');<br data-rich-text-line-break=\"true\" \/>} catch (err) {<br data-rich-text-line-break=\"true\" \/>  print('Caught error: $err');<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<h2 id=\"block-ae973f25-7a7a-47a4-a2e5-e02f0b4c148d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"ae973f25-7a7a-47a4-a2e5-e02f0b4c148d\" data-type=\"core\/heading\" data-title=\"Tajuk\">Try-Catch contoh di dalam program<\/h2>\r\n<pre id=\"block-318165a3-8d96-441e-8509-2ceee96ba868\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"318165a3-8d96-441e-8509-2ceee96ba868\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">Future&lt;void&gt; printOrderMessage() async {<br data-rich-text-line-break=\"true\" \/>  try {<br data-rich-text-line-break=\"true\" \/>    var order = await fetchUserOrder();<br data-rich-text-line-break=\"true\" \/>    print('Awaiting user order...');<br data-rich-text-line-break=\"true\" \/>    print(order);<br data-rich-text-line-break=\"true\" \/>  } catch (err) {<br data-rich-text-line-break=\"true\" \/>    print('Caught error: $err');<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>Future&lt;String&gt; fetchUserOrder() {<br data-rich-text-line-break=\"true\" \/>  \/\/ Imagine that this function is more complex.<br data-rich-text-line-break=\"true\" \/>  var str = Future.delayed(<br data-rich-text-line-break=\"true\" \/>      Duration(seconds: 4),<br data-rich-text-line-break=\"true\" \/>      () =&gt; throw 'Cannot locate user order');<br data-rich-text-line-break=\"true\" \/>  return str;<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/><br data-rich-text-line-break=\"true\" \/>Future&lt;void&gt; main() async {<br data-rich-text-line-break=\"true\" \/>  await printOrderMessage();<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<h2 id=\"block-ea57079f-f6ba-4f3a-8ac1-838d2313d357\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block is-hovered rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"ea57079f-f6ba-4f3a-8ac1-838d2313d357\" data-type=\"core\/heading\" data-title=\"Tajuk\">Bekerja dengan synchronous dan asynchronous<\/h2>\r\n<p id=\"block-0c62795d-c804-4eed-a006-e3b8be65e518\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"0c62795d-c804-4eed-a006-e3b8be65e518\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">dengan menggabungkan 2 blok ini kita dapat membuat ui kita menjadi lebih interaktif, shingga lebih memudahkan kita dalam menyajikan data yang interaktif, contoh penggunaan synchronous dan asynchronus sebagai berikut :<\/p>\r\n<figure id=\"block-2d8f7516-662f-47d5-ae4e-983f1e11f3c2\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"2d8f7516-662f-47d5-ae4e-983f1e11f3c2\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h2 id=\"block-9d21034f-e011-46ac-9478-be9c759e2cc2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"9d21034f-e011-46ac-9478-be9c759e2cc2\" data-type=\"core\/heading\" data-title=\"Tajuk\">Bekerja dengan future dan delayed tanpa async await<\/h2>\r\n<p id=\"block-2e4294bc-72d9-4d9a-85a1-e7e9039acc98\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2e4294bc-72d9-4d9a-85a1-e7e9039acc98\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">dengan menggunakan method future kita juga dapat membuat sebuah asynchrobnous dengan sama sama lebih mudah, berikut ini adalha contoh nya<\/p>\r\n<figure id=\"block-fb328841-d180-45fd-bf5a-8832498fccad\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"fb328841-d180-45fd-bf5a-8832498fccad\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-1.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-1.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h2 id=\"block-f28d1f89-349d-40a2-bc9a-e19374a46b3d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"f28d1f89-349d-40a2-bc9a-e19374a46b3d\" data-type=\"core\/heading\" data-title=\"Tajuk\">Bekerja dengan async, await, future<\/h2>\r\n<p id=\"block-99c2cbbb-282e-402a-a3d3-43bbaad9abe4\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"99c2cbbb-282e-402a-a3d3-43bbaad9abe4\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">dengan menggabungkan ketiganya kita dapat membuat aplikasi kita jauh lebih powerfull lagi dibanding kita harus bekerja dengan beberapa method sendiri- sendiri, untuk contoh penggunaanya sebagai berikut :<\/p>\r\n<figure id=\"block-1f707543-de7b-46aa-b9e0-0c78e713a70d\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"1f707543-de7b-46aa-b9e0-0c78e713a70d\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-2.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-2.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<div class=\"block-list-appender wp-block\" tabindex=\"-1\">&nbsp;<\/div>","waktu_publish":"2021-11-03 08:01:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:28:08","waktu_publish_formatted":" Rabu, 03 November 2021. 08:01:00 WIB."},{"id":1412,"uuid":"381f80cf-b272-429c-8532-f67ddd558817","author_user_id":8222,"materi_section_id":318,"judul":"Hari-9-Mockup","permalink":"hari-9-mockup","konten":"<p>Sebelum membuat aplikasi baik itu web based atau mobile biasanya akan dibuat terlebih dahulu sebuah prototipe atau desain mockup. Secara umum proses desain melingkupi : sketsa (level konsep) -&gt; Wireframe (level komponen) -&gt; Mockup\/Prototype (level menghias\/interaktif).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Tools untuk membuat Mockup yang direkomendasikan adalah <a href=\"https:\/\/www.figma.com\/\" target=\"_blank\" rel=\"noreferrer noopener\">Figma<\/a> (Silahkan sign up \/ buat akun figma).<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Video Refrensi :&nbsp;<\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=M_Ab2WP2jjg\">https:\/\/www.youtube.com\/watch?v=M_Ab2WP2jjg<\/a><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=M_Ab2WP2jjg\">https:\/\/www.youtube.com\/watch?v=M_Ab2WP2jjg<\/a><\/p>\r\n<p>https:\/\/www.youtube.com\/watch?v=M_Ab2WP2jjg<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"tahap-sketsa-konsep\">Tahap Sketsa (Konsep)<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tahap yang penting sebelum mendesain wireframe atau bahkan mockup adalah riset user. Pada bagian ini kita diminta untuk memetakan proses bisnis menjadi halaman-halaman (screens) yang dibutuhkan untuk mencapai tujuan (goals) tertentu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Cara memetakan proses bisnis tersebut salah satunya dengan menggambar diagram alir (flow chart). Contohnya sebuah aplikasi untuk pemesanan makanan seperti berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LwhGr1COan0ubgdHP7O%2F-LwiIK3G1bWDmNobGc6h%2F0_5OwU4KmsV9tQt2e5.png?alt=media&amp;token=80357f8d-8ba2-4848-88ee-df258938b1e0\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Membuat sketsa<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tahap selanjutnya adalah mulai menggambar sketsa berdasarkan satu per satu step yang ada pada diagram alir menjadi sebuah sketsa kasar. Sketsa bisa dibuat dengan coretan di atas kertas atau bisa menggunakan tools sketsa sederhana di komputer.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setiap sketsa harus berpedoman pada dua pertanyaan dasar:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li class=\"\">Apa tujuan dari halaman\/screen tersebut dibuat?<\/li>\r\n<li class=\"\">Bagaimana halaman\/screen tersebut dapat membantu user mencapai tujuan(goal)?<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut ini contoh sebuah sketsa dari halaman Home aplikasi pemesanan makanan:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img src=\"https:\/\/gblobscdn.gitbook.com\/assets%2F-LlUaK30_GFBvMOdUWKf%2F-LwiJ_ohbzQ9BOlF375a%2F-LwiMvtV4UPXLLnDaowi%2F0_Pn4SiOYlxofkC2Cp.png?alt=media&amp;token=e827e9bc-44db-4a34-b2c8-b63092024229\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika diperhatikan sketsa di atas hanya digambarkan dengan blok-blok komponen berbentuk persegi sederhana saja.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"tahap-wireframe\">Tahap Wireframe<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tahap selanjutnya setelah membuat sketsa adalah menggambar wireframe berdasarkan sketsa yang sudah dibuat pada tahap konsep. Membuat wireframe artinya menggambarkan komponen-komponen pada sketsa dengan komponen yang lebih detail misalkan : komponen input (form), komponen button, komponen text, atau komponen gambar dan lain-lain.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"memilih-frame\">Memilih Frame<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Agar lebih aktual dengan ukuran sebenarnya, gunakanlah frame sesuai dengan yang diinginkan. Misalkan pilihlah device Android atau iPhone.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"referensi\">Referensi:<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/uxplanet.org\/a-step-by-step-guide-to-creating-mobile-app-wireframes-ede2e5c53a75\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/uxplanet.org\/a-step-by-step-guide-to-creating-mobile-app-wireframes-ede2e5c53a75<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading --><\/p>\r\n<h2>Figma<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada tahap membuat Mockup diperlukan aplikasi yang dapat membantu komunikasi antara Client, Designer, dan Developer. Salah satu tools yang bisa digunakan adalah Figma (tools lain yang umum digunakan adalah Sketch, Adobe XD, Adobe Ilustrator, dan lain-lain).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat beberapa kelebihan dari Figma dibandingkan dengan aplikasi\/tools lainnya, antara lain:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Salah satunya adalah kemampuannya dalam melakukan kolaborasi antar desainer. Figma memungkinkan 2 atau lebih UI Designer untuk berkerja sama secara langsung dalam satu waktu.<\/li>\r\n<li>Dan karena figma berbasis web, sehingga user dari figma tidak harus melakukan proses instalasi aplikasinya.<\/li>\r\n<li>Terlebih, figma cenderung memiliki banyak fitur yang dapat digunakan secara gratis.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengetahui bagaimana cara menggunakan Figma terutama dalam membangun suatu desain aplikasi mobile, dapat langsung mengunjungi bagian tugas-9-mockup<\/p>","waktu_publish":"2021-11-04 08:00:00","status_publish":"publish","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-09-27 21:48:05","updated_at":"2021-10-24 12:28:22","waktu_publish_formatted":" Kamis, 04 November 2021. 08:00:00 WIB."},{"id":1085,"uuid":"d3f5d3fe-09df-4b83-bbec-7c4ccb425ae8","author_user_id":8222,"materi_section_id":318,"judul":"Hari-10-Intro Flutter","permalink":"hari-10-intro-flutter","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p id=\"block-a80550ed-3a78-473d-aa97-7a6f457a6c88\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"a80550ed-3a78-473d-aa97-7a6f457a6c88\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Flutter adalah&nbsp;<em>software development kit&nbsp;<\/em>(SDK) buatan google yang berfungsi untuk membuat aplikasi mobile menggunakan bahasa pemrograman Dart, baik untuk Android maupun iOS. Dengan Flutter, aplikasi Android dan iOS dapat dibuat menggunakan basis kode dan bahasa pemrograman yang sama, yaitu Dart, bahasa pemrograman yang juga diproduksi oleh Google pada tahun 2011. Sebelumnya, aplikasi murni (native) untuk Android perlu dibuat menggunakan bahasa Java atau Kotlin, sedangkan aplikasi iOS perlu dibuat menggunakan bahasa pemrograman Objective-C atau Swift. Flutter ditunjukan untuk mempermudah dan mempercepat proses pengembangan aplikasi mobile yang dapat berjalan di atas Android dan iOS, tanpa harus mempelajari dua bahasa pemrograman secara terpisah.<\/p>\r\n<p id=\"block-013e42c6-e3cb-4edc-9060-61b366bb076f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"013e42c6-e3cb-4edc-9060-61b366bb076f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Flutter dapat dikatakan sebagai produk Google yang masih relatif baru. Rilis perdana Flutter, versi alpha (v.0.0.6), dipublikasikan pada bulan Mei 2017. Saat artikel ini ditulis, versi Flutter terbaru adalah&nbsp;<a href=\"https:\/\/storage.googleapis.com\/flutter_infra\/releases\/stable\/windows\/flutter_windows_v1.12.13+hotfix.5-stable.zip\">v1.12.13+hotfix.5<\/a>&nbsp;. Flutter dapat diperoleh dari situs resmisnya,&nbsp;<a href=\"https:\/\/flutter.dev\/\">https:\/\/flutter.dev\/<\/a>.<\/p>\r\n<p id=\"block-0fdd7ee1-285a-46e7-90d5-a63e80f7d2b5\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok kosong; mulai menulis atau ketik garing untuk memilih blok\" data-block=\"0fdd7ee1-285a-46e7-90d5-a63e80f7d2b5\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<h2 id=\"block-06e36630-66fc-4ca9-b34d-6e7ab8b4591b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"06e36630-66fc-4ca9-b34d-6e7ab8b4591b\" data-type=\"core\/heading\" data-title=\"Tajuk\">Apa itu Agile?<\/h2>\r\n<p id=\"block-6ba74429-3a0a-444f-aba8-d45e43409db6\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6ba74429-3a0a-444f-aba8-d45e43409db6\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Agile Development Methods adalah sekelompok metodologi pengembangan perangkat lunak yang didasarkan pada pengembangan berulang, di mana persyaratan dan solusinya berkembang melalui kolaborasi antara tim lintas fungsi yang mengatur sendiri.<\/p>\r\n<p id=\"block-4fbb8164-7e49-4624-b141-7034bbb973ea\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"4fbb8164-7e49-4624-b141-7034bbb973ea\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Nilai utama dalam Development Agile adalah memungkinkan tim untuk memberikan nilai lebih cepat, dengan kualitas dan prediksi yang lebih baik, dan bakat yang lebih besar untuk merespons perubahan.<\/p>\r\n<p id=\"block-f205ecfe-7f39-4d1f-9164-337d548c74ee\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f205ecfe-7f39-4d1f-9164-337d548c74ee\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jadi, Bisa disimpulkan jika Agile merupakan model development jangka pendek yang memerlukan adaptasi cepat dan pengembangan terhadap perubahan dalam bentuk apapun.&nbsp;&nbsp;<\/p>\r\n<p id=\"block-770dad66-67d4-4dca-9166-3dfaa614d879\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"770dad66-67d4-4dca-9166-3dfaa614d879\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pengembangan Agile mengacu pada setiap proses development yang selaras dengan konsep Agile Manifesto. Agile Manifesto sendiri dikembangkan oleh empat belas tokoh terkemuka di industri perangkat lunak.<\/p>\r\n<p id=\"block-e8136139-b81d-47d4-af6c-69a359b68f5a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"e8136139-b81d-47d4-af6c-69a359b68f5a\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Agile Software Development memiliki tujuan sebagai berikut :<\/p>\r\n<ol id=\"block-6b060a66-208c-4a85-b71e-24157f2db077\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"6b060a66-208c-4a85-b71e-24157f2db077\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>High-value &amp; working App system,<\/li>\r\n<li>Iterative, incremental, evolutionary,<\/li>\r\n<li>Cost control &amp; value-driven development,<\/li>\r\n<li>High-quality production,<\/li>\r\n<li>Flexible &amp; risk management,&nbsp;<\/li>\r\n<li>Collaboration,.<\/li>\r\n<li>Self-organizing, self-managing teams.<\/li>\r\n<\/ol>\r\n<h2 id=\"block-e682a46a-fe2e-418b-9732-6aa227e49840\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"e682a46a-fe2e-418b-9732-6aa227e49840\" data-type=\"core\/heading\" data-title=\"Tajuk\">Perbedaan Agile dan Scrum<\/h2>\r\n<p id=\"block-d31c995c-aa43-4a44-a208-65ac0d6c51c8\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d31c995c-aa43-4a44-a208-65ac0d6c51c8\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/www.jagoanhosting.com\/blog\/ini-makna-scrum-dalam-dunia-development-product\/\">Scrum<\/a>&nbsp;dan Kanban adalah dua agile development method yang paling banyak digunakan saat ini. Jadi bisa dikatakan jika scrum merupakan bagian dari Agile Development, Scrum paling sering digunakan untuk mengelola pengembangan perangkat lunak dan produk yang kompleks, dengan menggunakan praktik berulang dan bertahap.<\/p>\r\n<figure id=\"block-344b2507-8e7b-47ed-ad20-15113e871e2b\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"344b2507-8e7b-47ed-ad20-15113e871e2b\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/www.jagoanhosting.com\/blog\/wp-content\/uploads\/2020\/04\/scrumprocess-1024x607-1.png\" alt=\"Scrum Proses Agile Development\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<figcaption class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Tulis penjelasan...\">SCRUM PROSES PADA AGILE DEVELOPMENT | SOURCE : CPRIME.COM<\/figcaption>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-f548ef36-a1fb-4d91-bd37-01a0b07b6bb5\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f548ef36-a1fb-4d91-bd37-01a0b07b6bb5\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dengan adanya&nbsp;<a href=\"https:\/\/www.jagoanhosting.com\/blog\/scrum-master-pasti-paham-cara-menjalankan-daily-scrum\/\">proses scrum<\/a>, Memungkinkan organisasi untuk menyesuaikan dengan lancar persyaratan yang berubah dengan cepat, dan menghasilkan produk yang sesuai tujuan. Jadi Scrum secara signifikan meningkatkan produktivitas dan mengurangi waktu untuk manfaat relatif terhadap proses &ldquo;waterfall &rdquo; klasik.<\/p>\r\n<h2 id=\"block-7ed6b94a-b6c6-4cc8-afde-6cd11fdb8fc1\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"7ed6b94a-b6c6-4cc8-afde-6cd11fdb8fc1\" data-type=\"core\/heading\" data-title=\"Tajuk\">Jenis-Jenis Agile Development Method<\/h2>\r\n<p id=\"block-e400985e-8305-4703-accc-d7fe395899d0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"e400985e-8305-4703-accc-d7fe395899d0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dalam pengembangan software, Agile Development dibagi menjadi beberapa jenis. Berikut adalah jenis-jenis Agile dalam Development Method<\/p>\r\n<ol id=\"block-d1abc684-08e6-423c-921a-469ddd4f6946\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"d1abc684-08e6-423c-921a-469ddd4f6946\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Extreme Programming (XP)<\/li>\r\n<li>Adaptive Software Development (ASD)<\/li>\r\n<li>Dynamic Systems Development Method (DSDM)<\/li>\r\n<li>Scrum Methodology.<\/li>\r\n<li>Crystal.<\/li>\r\n<li>Feature Driven Development (FDD)<\/li>\r\n<li>Agile Modeling (AM)<\/li>\r\n<li>Rational Unified Process.<\/li>\r\n<\/ol>\r\n<p id=\"block-adc3b052-c76f-486e-8487-a4557a772c79\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"adc3b052-c76f-486e-8487-a4557a772c79\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Diantara jenis-jenis agile yang sudah disebutkan tersebut, Yang cukup banyak digunakan yaitu Extreme Programming, Dynamic Systems Development Method (DSDM), Scrum, dan Adaptive Software Development (ASD).<\/p>\r\n<p id=\"block-dfde8d5f-175a-4edc-8319-3233a7345408\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"dfde8d5f-175a-4edc-8319-3233a7345408\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk Extreme programming biasanya diterapkan pada pengembangan software dengan tim kecil hingga medium. Untuk DSDM, Agile jenis ini lebih mengutamakan pada keterlibatan pengguna secara berkesinambungan sehingga dapat mempercepat dalam pengembangan software.<\/p>\r\n<p id=\"block-3cb8911c-d009-4288-8e1e-eb68836049b7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block is-hovered rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3cb8911c-d009-4288-8e1e-eb68836049b7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Scrum lebih mengutamakan pada kekuatan kolaborasi tim dalam development software. Sedangkan untuk&nbsp; Adaptive Software Development merupakan metode atau jenis agile development method yang menerapkan teknik membangun software secara kompleks<\/p>\r\n<h2 id=\"block-f1c5a10a-b24e-4b9b-82a0-8328e570a9a3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"f1c5a10a-b24e-4b9b-82a0-8328e570a9a3\" data-type=\"core\/heading\" data-title=\"Tajuk\">Manfaat Menggunakan Agile<\/h2>\r\n<p id=\"block-c20ff55d-b294-4c4c-9c42-82d704e8bb7b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c20ff55d-b294-4c4c-9c42-82d704e8bb7b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Banyak sekali manfaat Agile Development Method, Bukan hanya bagi Tim developer saja, Manfaat bisa didapatkan oleh client, vendor, hingga manajer produk dan proyek.&nbsp;<\/p>\r\n<p id=\"block-d987b4f2-a5c4-4bf1-8413-54eaaba4ccc2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block is-hovered rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d987b4f2-a5c4-4bf1-8413-54eaaba4ccc2\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dengan Agile Vendor dapat mengurangi pemborosan dengan memfokuskan upaya pengembangan pada fitur bernilai tinggi, dan peningkatan efisiensi. Sehingga Pelanggan dapat menemukan bahwa vendor lebih responsif terhadap permintaan pengembangan.<\/p>\r\n<p id=\"block-9849fbce-f4e8-49a5-ac37-a35b2395ba0e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"9849fbce-f4e8-49a5-ac37-a35b2395ba0e\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Bagi tim developer, Penggunaan Agile seperti Scrum dapat menguntungkan anggota Tim dengan mengurangi pekerjaan yang tidak produktif dan memberi mereka lebih banyak waktu untuk melakukan pekerjaan yang mereka sukai.<\/p>\r\n<p id=\"block-9ced2715-8a92-42cb-b18b-c5ffc392968b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"9ced2715-8a92-42cb-b18b-c5ffc392968b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Tak hanya itu, Manajer produk dan proyek juga mendapatkan manfaat saat menggunakan Agile Development Method. Dengan Scrum dapat membuat penyelarasan antara pekerjaan dan kebutuhan klien lebih mudah dengan cara memberikan kesempatan untuk memprioritaskan pekerjaan dan memastikan pengiriman nilai maksimum.<\/p>\r\n<p id=\"block-de571ddd-9eae-4588-8265-b11e7755b865\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"de571ddd-9eae-4588-8265-b11e7755b865\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Selain itu Agile memiliki kelebihan diantaranya :&nbsp;<\/p>\r\n<ul id=\"block-a21b9479-90e2-4607-ab40-86cac89dbfba\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"a21b9479-90e2-4607-ab40-86cac89dbfba\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Menambah produktivitas tim<\/li>\r\n<li>Menambah kualitas dari perangkat lunak<\/li>\r\n<li>Menambah kepuasan dari klien<\/li>\r\n<li>Menghemat biaya<\/li>\r\n<\/ul>\r\n<h2 id=\"block-06e938eb-181f-4a06-8706-4b5c9b1d248a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"06e938eb-181f-4a06-8706-4b5c9b1d248a\" data-type=\"core\/heading\" data-title=\"Tajuk\">Prinsip Utama dalam Agile development<\/h2>\r\n<p id=\"block-b482f2af-27e3-4b16-ae8b-d1caef31c4c3\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b482f2af-27e3-4b16-ae8b-d1caef31c4c3\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dalam Agile Development Method terdapat prinsip utama atau dikenal dengan Agile Manifesto. Menurut laman&nbsp;<a href=\"https:\/\/www.huffpost.com\/entry\/12-principles-of-agile-so_b_9523990\">Huffpost<\/a>, Agile Manifesto Memiliki 12 poin, 12 poin tersebut perlu diperhatikan agar penerapan Agile lancar.<\/p>\r\n<ol id=\"block-dc7a7929-f535-435d-ae7b-afb3ee6971e9\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"dc7a7929-f535-435d-ae7b-afb3ee6971e9\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Lebih menekankan&nbsp;<a href=\"https:\/\/www.jagoanhosting.com\/blog\/ini-alasan-kenapa-pelayanan-terbaik-untuk-pelanggan-harus-kita-gencarkan\/\">kepuasan klien<\/a>&nbsp;sebagai prioritas utama dengan cara menghasilkan produk lebih awal secara berkelanjutan<\/li>\r\n<li>Selalu terbuka dalam menerima perubahan meskipun mengalami keterlambatan dalam mengembangkan piranti perangkat lunak. Perubahan tersebut akan memberikan keuntungan yang kompetitif bagi para klien<\/li>\r\n<li>Dapat menghasilkan software yang bisa bekerja dengan baik, mulai dari hitungan minggu maupun bulan dan memiliki preferensi dalam jangka waktu lebih pendek<\/li>\r\n<li>Rekanan bisnis dan developer harus bekerjasama selama proyek IT sedang berlangsung.<\/li>\r\n<li>Mengembangkan proyek pada orang-orang yang termotivasi. Adanya lingkungan yang mendukung akan membuat mereka untuk segera menyelesaikan pekerjaannya dengan baik.<\/li>\r\n<li>Komunikasi secara langsung adalah metode yang efektif dan efisien untuk menyampaikan informasi dan mengembangkan software.<\/li>\r\n<li>Software yang bekerja dengan baik adalah ukuran utama sebuah kemajuan proyek IT.<\/li>\r\n<li>Agile Development mampu mengembangkan proyek dan pengembangan secara berkelanjutan. Dengan dukungan yang stabil dari sponsor, developer dan pengguna.<\/li>\r\n<li>Keunggulan teknis menjadi hal yang patut diperhatikan untuk meningkatkan sebuah agility.<\/li>\r\n<li>Kesederhanaan adalah hal yang paling penting dalam Agile Development yakni memaksimalkan sumber daya yang ada<\/li>\r\n<li>Segala kebutuhan dan desain software terbaik muncul dari tim yang mampu mengorganisir diri sendiri.<\/li>\r\n<li>Tim pengembang secara berkala akan melakukan refleksi mengenai bagaimana cara bekerja yang lebih efektif dan menyeleraskannya dengan pola kerja mereka.<\/li>\r\n<\/ol>\r\n<div class=\"block-list-appender wp-block\" tabindex=\"-1\">&nbsp;<\/div>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-05 08:00:00","status_publish":"publish","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:28:36","waktu_publish_formatted":" Jumat, 05 November 2021. 08:00:00 WIB."}]},{"id":319,"uuid":"4960057c-3256-4b47-81a9-d680133b298d","materi_id":32,"nama":"Tugas Week 2","permalink":"tugas-week-2","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":null,"posting":[{"id":1086,"uuid":"0ecf0f2a-7223-42db-822b-f0d65f281cf9","author_user_id":8222,"materi_section_id":319,"judul":"Tugas-6-List&Maps","permalink":"tugas-6-list-maps","konten":"<p>Pada tugas kali ini buatlah folder baru (Tugas 6 &ndash; ListMaps) yang berisikan file dengan nama <strong>list.dart<\/strong>&nbsp;. Simpan folder tugas ini di dalam folder repository project yang dikerjakan kemarin <strong>BootcampFlutter<\/strong><\/p>\r\n<figure id=\"block-55cfd7f4-954f-4876-8a6b-733fff942e06\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"55cfd7f4-954f-4876-8a6b-733fff942e06\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/05\/soal-1-list.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah soal-1-list.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<figure id=\"block-43d4fc3f-6fe6-4413-8992-db5233a2f7c6\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"43d4fc3f-6fe6-4413-8992-db5233a2f7c6\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/05\/soal-2-list.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah soal-2-list.png\" \/><\/div>\r\n<\/figure>\r\n<p><!-- wp:image {\"id\":16297,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16297\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/05\/soal-3-1-list.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16298,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16298\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/05\/soal-3-2-list.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16300,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16300\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/05\/soal-4-list.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><\/p>\r\n<pre class=\"wp-block-preformatted\">&nbsp;<\/pre>\r\n<div class=\"entry-content\">\r\n<h2 id=\"soal-no-4-array-multidimensi\"><\/h2>\r\n<\/div>","waktu_publish":"2021-11-01 08:03:00","status_publish":"publish","urutan":1,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:28:53","waktu_publish_formatted":" Senin, 01 November 2021. 08:03:00 WIB."},{"id":1087,"uuid":"ee261e41-a64a-4b70-ad01-a373efa479b7","author_user_id":8222,"materi_section_id":319,"judul":"Tugas-7-OOP","permalink":"tugas-7-oop","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada tugas kali ini buatlah folder baru (Tugas-7- oop). Simpan folder tugas ini di dalam folder repository project yang dikerjakan pada Folder Kemarin yaitu <strong>bootcampflutter<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Soal 1 (Mengubah Prosedural ke Class)<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>buatlah sebuah folder baru dengan nama <strong>soal1 <\/strong>lalu di dalamnya buat file baru yaitu <strong>soal1.dart<\/strong>, lalu dari sistem prosedural ini ubahlah menjadi class dan object sehingga dapat di panggil luasnya berupa class dan object<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/29-6.png\" \/> <br \/><\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading --><\/p>\r\n<h2>Soal 2 Enkapsulasi(Pembungkusan)<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Buatlah folder baru di dalam <strong>Tugas-7-oop<\/strong>&nbsp;dengan nama <strong>Tugas-Enkapsulasi, <\/strong>Dengan menggunakan teknik engkapsulasi buatlah sebuah class yang menerima parameter untuk menghitung luas lingkaran, rule nya gunakan validasi apabila input nilai -(min) maka harus di di kalikan -1 agar nilai tetap positif, selain itu boleh menggunakan <strong>method getter dan setter<\/strong> atau hanya menggunakan property <strong>getter dan setter<\/strong>, jadi boleh dipilih salah satu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>main.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/29-7.png\" \/>\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p><strong>lingkaran.dart<\/strong><\/p>\r\n<p><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/29-8.png\" \/><\/strong><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<h2>Soal 3 (Inheritance)<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Buatlah folder baru di dalam <strong>Tugas-7-oop<\/strong>&nbsp;dengan nama <strong>Tugas-Inheritance<\/strong> lalu di dalam folder tersebut beri lagi file pada soal ini buatlah 5 class dan 1 main, isinya adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>armor_titan.dart<\/li>\r\n<li>attack_titan.dart<\/li>\r\n<li>beast_titan.dart<\/li>\r\n<li>human.dart<\/li>\r\n<li>main.dart<\/li>\r\n<li>titan.dart<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>pada<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>class 1 armor_titan memiliki object string yaitu terjang()=&gt;\"dush.. dush..\" ,<\/p>\r\n<p>class 2 attack_titan memiliki object string yaitu punch()=&gt;\"blam.. blam..\"<\/p>\r\n<p>class 3 beast_titan memiliki object string yaitu lempar()=&gt;\"wush wush..\",<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>class 4 human memiliki object string yaitu killAlltitan()=&gt;\"&nbsp;Sasageyo&nbsp;...&nbsp;Shinzo&nbsp;Sasageyo...\"<\/p>\r\n<p>selanjautnya di file titan.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>buatlah class titan yang memiliki _powerPoint; yang akan men-get dan men-set nilai dari powerPoint masing masing turunannya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pada kelas 1 - 4 akan inheritance dari class titan, jadi otomatis akan memiliki power point setiap class nya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pada main.dart isilah value powerPoint yang ada pada 5 class dan juga tampilkan masing masing powertpoint nya jika powerPoint di bawah 5 maka akan di cetak 5 dan juga cetak masing masing object yang ada pada class masing-masing yang terdapat pada child class 1-4.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Soal 4 Polymorism<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Buatlah folder baru di dalam <strong>Tugas-7-oop<\/strong>&nbsp;dengan nama <strong>Tugas-Polymorism<\/strong> lalu di dalam folder tersebut beri lagi file class dengan nama <strong>bangun_datar<\/strong>, <strong>segitiga<\/strong>, <strong>lingkaran<\/strong>, <strong>persegi<\/strong>, dan juga file <strong>main.dart <\/strong>untuk menjalankan classnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pada bangun_datar akan mereturn luas dan keliling,<\/p>\r\n<p>pada class Lingkaran akan mengextend dari bangun_datar<\/p>\r\n<p>setelah itu akan dimasukan object nya yaitu rumus keliling dan luas ,<\/p>\r\n<p>class <strong>persegi <\/strong>juga sama, adanya object luas sisi * sisi dan keliling =&nbsp; 4 * sisi&nbsp; ,<\/p>\r\n<p>class <strong>segitiga <\/strong>ada luas = 0.5 * alas * tinggi, keliling = a +b + t, segitiga yang digunakan yaitu siku-siku<\/p>\r\n<p>class <strong>lingkaran <\/strong>ada luas = 3.14 * jari-jari * jari-jari, keliling = 2 * pi * jari-jari&nbsp;<\/p>\r\n<p>dan <strong>main.dart<\/strong> akan memanggil object <strong>bangun_datar.dart,<\/strong> selain itu juga akan memanggil class segitiga, persegi dan lingkaran dan akan mencetak luas dan keliling;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Soal 5 Constructor<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Buatlah folder baru di dalam <strong>Tugas-7-oop<\/strong>&nbsp;dengan nama<strong> Tugas-constructor<\/strong>, di folder ini berisi main.dart dan juga employee.dart di dalam class employee buatlah object yang berisi id, name , departement , lalu panggil ke main.dart sebagai object yang akan bisa diisi value nya isi value bebas boleh nama pribadi teman-teman.<\/p>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai dikerjakan, silahkan <em>push <\/em>hasil pekerjaan Anda ke <em>repository <\/em>Gitlab masing-masing (gunakan <em>repository project<\/em> yang sama <strong>bootcampFlutter <\/strong>yang digunakan folder Tugas-6-oop). Jangan lupa <em>submit link commit<\/em> Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-02 08:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:29:06","waktu_publish_formatted":" Selasa, 02 November 2021. 08:00:00 WIB."},{"id":1089,"uuid":"777943d6-7fae-4d5c-a951-ee022cf82086","author_user_id":8222,"materi_section_id":319,"judul":"Tugas-8-Async, Await, Future","permalink":"tugas-8-async-await-future","konten":"<p><!-- wp:heading --><\/p>\r\n<h2><strong>Soal 1 Synchronous to Asynchronous<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Buatlah folder baru yaitu <strong>Tugas-9-AsyncAwaitFuture<\/strong>, setelah itu buat file baru untuk mengerjakan soal 1 yaitu <strong>soal1.dart <\/strong>kemudian ketikan coding di bawah ini, selanjutnya ubahlah coding synchronous berikut kedalam coding asynchronous dengan menggunakan async await dan future, untuk output yang diharpakan yaitu saat di compile pertama munculnya yaitu luffy, zoro, killer dan nama character one piece selanjutnya 3 detik kemudian muncul get data [done] , name 3: hilmy<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Nb: coding boleh di ubah- ubah sesuai kebutuhan dan logic dari teman-teman<\/strong><\/p>\r\n<p><strong>Nb: coding boleh di ubah- ubah sesuai kebutuhan dan logic dari teman-teman<\/strong><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15713,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15713\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-22.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>2. Future delayed<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>buatlah file baru dengan nama <strong>soal2.dart <\/strong>kemudian&nbsp;dengan menggunakan function future delayed buatlah output dari coding ini menjadi life is never flat, tidak perlu menggunakan async await<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15717,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15717\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-23.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>3. Async, Await and future<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>buatlah file baru dengan nama <strong>soal3.dart <\/strong>kemudian dengan menggunakan async await dan future ubahlah string berikut menjadi sebuah subtitle lagu,<\/p>\r\n<p>jdi awal masuk akan mencetak \"Ready. sing\" setelah itu ada jeda 5 detik kemudian akan mucul line ( ) yang akan mencetak pernahkan kau merasa,<\/p>\r\n<p>setelah mencetak line() kemudian ada jeda waktu 3 detik untuk mencetak line2( ) yang berisi pernahkah kau merasa ...........&nbsp;<\/p>\r\n<p>setelah mencetak line2() kemudian ada jeda waktu 2 detik untuk mencetak line3( ) yang berisi pernahkah kau merasa,<\/p>\r\n<p>dan terakhir yaitu memunculkan&nbsp; line4( ) dengan jeda 1 detik dari line 3 ke line 4yang berisi, &nbsp;hatimu hampa pernahkah kau merasa hati mu kosong ............<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>Output video :<\/strong><\/p>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/1w9_fNNQ3GE\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15722\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-24.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15722,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-03 08:00:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:29:18","waktu_publish_formatted":" Rabu, 03 November 2021. 08:00:00 WIB."},{"id":1413,"uuid":"f91aa04f-09d9-4ffc-be76-da3cec0eebf7","author_user_id":8222,"materi_section_id":319,"judul":"Tugas-9-Mockup","permalink":"tugas-9-mockup","konten":"<p id=\"block-fb31d07f-edc0-49ba-9ad3-7f29a1597684\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fb31d07f-edc0-49ba-9ad3-7f29a1597684\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<p id=\"block-fb31d07f-edc0-49ba-9ad3-7f29a1597684\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fb31d07f-edc0-49ba-9ad3-7f29a1597684\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">sebelum memulai membangun suatu aplikasi diperlukan mockup atau desain dari aplikasi yang akan dibangun. Pada tugas kali ini, Anda diminta untuk membuat mockup dari suatu aplikasi mobile yang menampilkan daftar skill dan project dari seorang developer\/programmer. (Anda dapat mencari inspirasi di <a href=\"https:\/\/www.behance.net\/\">behance.net<\/a>, <a href=\"https:\/\/dribbble.com\/\">dribbble.com<\/a>, <a href=\"https:\/\/www.pinterest.com\/\">pinterest.com<\/a>, dan berbagai situs lainnya)<\/p>\r\n<p id=\"block-4a0cd01f-19b3-446e-9db8-48dae7c62d7b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"4a0cd01f-19b3-446e-9db8-48dae7c62d7b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Hal yang perlu diperhatikan:<\/p>\r\n<p id=\"block-e53ab095-8349-4301-ace0-bf6bd06d91e9\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"e53ab095-8349-4301-ace0-bf6bd06d91e9\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Fokus tugas ini adalah pada <strong>Bagaimana membuat mockup yang user-friendly <\/strong>dan <strong>Bagaimana membagi komponen-komponen yang terdapat pada suatu desain UI aplikasi mobile<\/strong>, bukan pada aspek bagaimana membuat desain bertaraf internasional dan dapat dijual (tentu boleh membuat desain yang indah dan semenarik mungkin).<\/p>\r\n<p id=\"block-34d630c6-353f-426e-87cc-44548df668a2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"34d630c6-353f-426e-87cc-44548df668a2\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Catatan terkait aplikasi yang akan dibuat, antara lain:<\/p>\r\n<ul id=\"block-afe07f9f-c8a8-4bbf-81d7-bc1623b159e4\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"afe07f9f-c8a8-4bbf-81d7-bc1623b159e4\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Target user dari aplikasi ini adalah seorang developer\/programmer, yang ingin menghubungkan antara industri dan juga pencari kerja dari berbagai usia dan keahlian.<\/li>\r\n<li>Studi kasus ini akan memiliki beberapa fitur yang harus di buat, list perusahaan yang ingin merekrut, range-salary yang diterima dan compoany profile.<\/li>\r\n<li>Tujuan aplikasi ini adalah agar peserta dapat membuat aplikasi real seperti contoh kasus jobstreet\/linkedIn dan lain lain<\/li>\r\n<\/ul>\r\n<p id=\"block-1ed0690d-2370-4dd2-a9f9-1295d10d6334\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1ed0690d-2370-4dd2-a9f9-1295d10d6334\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Mockup aplikasi ini terdiri dari (minimal) 4 halaman. Kriteria dari masing-masing halaman adalah sebagai berikut:<\/p>\r\n<h3 id=\"block-0173a3e0-8f73-4da0-b633-4e2703b2bd0c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"0173a3e0-8f73-4da0-b633-4e2703b2bd0c\" data-type=\"core\/heading\" data-title=\"Tajuk\">1. Halaman Login\/Register<\/h3>\r\n<p id=\"block-018d63ce-f141-4d85-83e6-161bdc568a70\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"018d63ce-f141-4d85-83e6-161bdc568a70\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sesuai namanya, halaman ini merupakan halaman yang akan digunakan untuk melakukan kegiatan login\/masuk ke aplikasi atau register\/mendaftar ke aplikasi. Minimal 1 halaman (Halaman Login saja atau Halaman Register saja). Beberapa komponen yang harus ada pada halaman ini adalah:<\/p>\r\n<ul id=\"block-d7a071cf-7e2a-4ed2-9764-de769d19ee9b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"d7a071cf-7e2a-4ed2-9764-de769d19ee9b\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Nama Aplikasi (bebas, boleh menggunakan Sanber App)<\/li>\r\n<li>Logo\/Icon Aplikasi (bebas, boleh hanya berupa bentuk kotak\/lingkaran dengan background, atau bentuk lain yang dapat merepresentasikan logo)<\/li>\r\n<li>Kotak input nama user \/ email<\/li>\r\n<li>Kotak input password<\/li>\r\n<li>Kotak input konfirmasi password (hanya untuk halaman register)<\/li>\r\n<li>Tombol untuk login\/register<\/li>\r\n<\/ul>\r\n<p id=\"block-2b90484f-17b8-4694-a170-8bb4346cd3a6\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b90484f-17b8-4694-a170-8bb4346cd3a6\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Anda diperbolehkan menambahkan fitur atau komponen lain sesuai keinginan Anda.<\/p>\r\n<h3 id=\"block-74a8351b-49ca-4197-833a-5f84c30ff1ba\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"74a8351b-49ca-4197-833a-5f84c30ff1ba\" data-type=\"core\/heading\" data-title=\"Tajuk\">2. Halaman About\/Tentang Saya<\/h3>\r\n<p id=\"block-8d1de702-e489-4583-87ad-1d0cc791cac4\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"8d1de702-e489-4583-87ad-1d0cc791cac4\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Halaman ini berisikan informasi identitas atau profil Anda sebagai developer atau pembuat aplikasi (bukan untuk user). Data atau informasi yang digunakan pada halaman ini boleh bersifat fiktif (seperti pada data akun media sosial dan portofolio). Komponen yang harus ada dalam halaman ini adalah:<\/p>\r\n<ul id=\"block-2d98cbf1-f95a-415e-ac66-d99b3881da5b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"2d98cbf1-f95a-415e-ac66-d99b3881da5b\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Foto<\/li>\r\n<li>Nama Lengkap<\/li>\r\n<li>Akun media sosial (minimal terdapat akun facebook, twitter, dan instagram)<\/li>\r\n<li>skill yang di kuasai<\/li>\r\n<\/ul>\r\n<p id=\"block-f11f8eed-57a1-48bf-858f-b834a8a9442a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f11f8eed-57a1-48bf-858f-b834a8a9442a\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Anda boleh menambahkan fitur atau komponen lain yang Anda inginkan.<\/p>\r\n<h3 id=\"block-5fdbd06f-976c-4ac8-86df-dc9a66503aad\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"5fdbd06f-976c-4ac8-86df-dc9a66503aad\" data-type=\"core\/heading\" data-title=\"Tajuk\">3. Halaman Dashboard (List Jobs)<\/h3>\r\n<p id=\"block-3d7c76df-27fa-4ef2-8ad5-47e63a3dbda4\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3d7c76df-27fa-4ef2-8ad5-47e63a3dbda4\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<p>Halaman ini berisi daftar perusahaan yang tersedia\/ yang telah membuka lowongan dengan spesifikasi sebagai berikut ini&nbsp;<\/p>\r\n<ol>\r\n<li>halaman dashboard berisi tentang list yang isinya judul posisi yang diawarkan, nama perusahaan yang ingin merekrut, alamat perusahaan yang ingin merekrut dan range salary yang diberikan&nbsp;<\/li>\r\n<li>boleh di tambah dengan search bar atau filter berdasarkan jobs<\/li>\r\n<\/ol>\r\n<p><strong>4. Halaman splash screen&nbsp;<\/strong><\/p>\r\n<ol>\r\n<li>halaman ini bisa berisi tentang splash screen atau tampilan awal untuk sebuah aplikasi saat muncul pertama kali<\/li>\r\n<li>pemilihan warna dan logo silahkan bebas dari source mana saja&nbsp;<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-1abc5b10-dd31-422c-bfdd-f9563e16fba2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1abc5b10-dd31-422c-bfdd-f9563e16fba2\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Anda boleh menambahkan fitur atau komponen lain yang Anda inginkan.<\/p>\r\n<p id=\"block-71de9cd9-382e-4384-8dce-cee55a7b3830\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"71de9cd9-382e-4384-8dce-cee55a7b3830\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jika sudah selesai mengerjakan, silahkan mengirimkan link share file figma Anda ke sanbercode.com. Link share tersebut dapat ditemukan pada bagian kanan atas, dengan menekan tombol \"Share\" dan klik pada bagian \"copy link\". Pastikan link dapat diakses oleh semua yang memiliki link (set \"Anyone with link\" dan \"can view\").<\/p>\r\n<p id=\"block-d3cf3cd0-0903-433c-aece-106369c654ff\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d3cf3cd0-0903-433c-aece-106369c654ff\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Apabila butuh inspirasi silahkan lihat halaman berikut ini :<\/p>\r\n<p><strong>Example mackup<\/strong><\/p>\r\n<ol>\r\n<li><strong>Splash screen<\/strong>\r\n<div>&nbsp;<\/div>\r\n<\/li>\r\n<\/ol>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/Splash-2.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah Splash-2.png\" \/><\/p>\r\n<p><strong>2. HomeScreen&nbsp;<\/strong><\/p>\r\n<p><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/Home-4-1.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah Home-4-1.png\" \/><\/strong><\/p>\r\n<p><strong>3. Login \/ Register<\/strong><\/p>\r\n<p><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/login.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah login.png\" \/><\/strong><\/p>\r\n<p><strong>4. about me&nbsp;<\/strong><\/p>\r\n<p><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/about-me.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah about-me.png\" \/><\/strong><\/p>\r\n<p id=\"block-f2ea231e-7884-49a6-9e80-ec3aa15009dd\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" contenteditable=\"true\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f2ea231e-7884-49a6-9e80-ec3aa15009dd\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>","waktu_publish":"2021-11-04 08:00:00","status_publish":"publish","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-09-27 21:48:53","updated_at":"2021-10-24 12:29:29","waktu_publish_formatted":" Kamis, 04 November 2021. 08:00:00 WIB."},{"id":1090,"uuid":"29af0a94-39bd-40d7-908a-3a1d6a0f7284","author_user_id":8222,"materi_section_id":319,"judul":"Tugas-10-Intro Flutter","permalink":"tugas-10-intro-flutter","konten":"<div id=\"editor\" class=\"block-editor__container hide-if-no-js\">\r\n<div class=\"components-drop-zone__provider\">\r\n<div class=\"components-navigate-regions\">\r\n<div class=\"edit-post-layout is-mode-visual is-sidebar-opened has-metaboxes interface-interface-skeleton\">\r\n<div class=\"interface-interface-skeleton__editor\">\r\n<div class=\"interface-interface-skeleton__body\">\r\n<div class=\"interface-interface-skeleton__content\" tabindex=\"-1\" role=\"region\" aria-label=\"Konten penyunting\">\r\n<div class=\"edit-post-visual-editor editor-styles-wrapper\" tabindex=\"-1\">\r\n<div class=\"block-editor__typewriter\">\r\n<div class=\"block-editor-writing-flow\">\r\n<div class=\"edit-post-visual-editor__post-title-wrapper\">\r\n<h2 class=\"wp-block editor-post-title editor-post-title__block\"><strong>Materi Video<\/strong><\/h2>\r\n<p><strong><iframe src=\"https:\/\/www.youtube.com\/embed\/eWGpEkB26ls\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/strong><\/p>\r\n<\/div>\r\n<div>\r\n<div class=\"block-editor-block-list__layout is-root-container\">\r\n<h2 id=\"block-00cfbd17-b24d-43d5-8677-7b308834321c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"00cfbd17-b24d-43d5-8677-7b308834321c\" data-type=\"core\/heading\" data-title=\"Tajuk\">Persiapan Install Flutter<\/h2>\r\n<p id=\"block-86d4848a-34f3-459b-b315-baf4ab6b7511\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"86d4848a-34f3-459b-b315-baf4ab6b7511\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Terdapat beberapa tahapan yang harus dilakukan sebelum dapat menggunakan Flutter untuk proses&nbsp;<em>development<\/em>. Berikut beberapa hal yang perlu kamu persiapkan:<\/p>\r\n<h3 id=\"block-67f5cbb0-bea3-44f9-8cf8-8ed67d1c63de\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"67f5cbb0-bea3-44f9-8cf8-8ed67d1c63de\" data-type=\"core\/heading\" data-title=\"Tajuk\">System requirements<\/h3>\r\n<p id=\"block-13ae3620-3806-43cc-b2b9-f3571ceb7f34\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"13ae3620-3806-43cc-b2b9-f3571ceb7f34\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Operation System<\/strong>: Jika kamu menggunakan Windows, minimal versi 7 SP1 atau yang terbaru dan pastikan 64-bit. Sedangkan Linux dan Mac hanya wajib menggunakan 64-bit.<\/p>\r\n<p id=\"block-8cbbba2e-0bc7-4325-aa59-73748a578a09\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"8cbbba2e-0bc7-4325-aa59-73748a578a09\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Disk Space<\/strong>: Jika kamu menggunakan Windows, sediakan ruang sekitar 400 MB (tidak termasuk tools\/IDE). Linux membutuhkan 600 MB dengan ketentuan yang sama, sedangkan Mac membutuhkan 700 MB.<\/p>\r\n<p id=\"block-33b3ddcb-649c-45f9-87b3-acdcef85c7ae\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"33b3ddcb-649c-45f9-87b3-acdcef85c7ae\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Tools<\/strong>: Pastikan kamu telah menginstall&nbsp;<code>git<\/code>&nbsp;dan dapat digunakan melalui&nbsp;<em>command line<\/em>.<\/p>\r\n<h3 id=\"block-08cb787f-a40e-42c4-81d2-8f28a78185b7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"08cb787f-a40e-42c4-81d2-8f28a78185b7\" data-type=\"core\/heading\" data-title=\"Tajuk\">Install Android Studio<\/h3>\r\n<p id=\"block-af606aec-5259-4c78-8796-e93a555331d2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"af606aec-5259-4c78-8796-e93a555331d2\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Mungkin sebagian teman-teman bertanya-tanya, kenapa sih harus meng-<em>install<\/em>&nbsp;Android studio? Kan penggunaan RAM-nya besar? Tenang saja, yang dibutuhkan dari Android studio adalah&nbsp;<em>dependecies<\/em>&nbsp;yang menyertainya, sehingga kedepannya kita tidak perlu menjalankannya dan dapat menggunakan&nbsp;<em>Editor<\/em>&nbsp;lain untuk menuliskan&nbsp;<em>code<\/em>&nbsp;kamu. Berikut beberapa hal yang dibutuhkan Flutter dari Android Studio untuk proses&nbsp;<em>development<\/em>&nbsp;Android:<\/p>\r\n<ol id=\"block-1c982fea-f5eb-4f9f-9fc0-a8c2b3e7f5c8\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"1c982fea-f5eb-4f9f-9fc0-a8c2b3e7f5c8\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Android SDK<\/li>\r\n<li>Android SDK Platform-Tools<\/li>\r\n<li>Android SDK Build-Tools<\/li>\r\n<\/ol>\r\n<p id=\"block-25029941-15ca-4814-8d42-78b75a4636d7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"25029941-15ca-4814-8d42-78b75a4636d7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Tahapannya, silahkan&nbsp;<em>download<\/em>&nbsp;dan&nbsp;<em>install<\/em>&nbsp;<a href=\"https:\/\/developer.android.com\/studio\/\">Android Studio<\/a>&nbsp;sesuai dengan sistem operasi yang kamu punya. Pada kotak&nbsp;<em>dialog<\/em>&nbsp;\"<strong><em>Android Studio Setup Wizard<\/em><\/strong>\", pastikan kamu meng-<em>install<\/em>&nbsp;ketiga bagian yang telah disebutkan diatas. Atau kamu dapat ke&nbsp;<em>menu<\/em>&nbsp;<strong>Tools<\/strong>&nbsp;&gt;&nbsp;<strong>SDK Manager<\/strong><\/p>\r\n<figure id=\"block-3b4107b2-277e-44cd-983a-4f8f6fe10752\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"3b4107b2-277e-44cd-983a-4f8f6fe10752\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/Untitled-presentation.jpg\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah Untitled-presentation.jpg\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-fcc3aeef-344f-49e2-9868-2a26becca929\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"fcc3aeef-344f-49e2-9868-2a26becca929\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kemudian pilih tab&nbsp;<strong>SDK Tools<\/strong>&nbsp;dan centang ketiga komponen diatas<\/p>\r\n<figure id=\"block-b9b322f8-813a-42de-82bc-ce9309d52170\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"b9b322f8-813a-42de-82bc-ce9309d52170\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-5.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-5.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h3 id=\"block-0e4a4465-c367-477c-a759-d3db05c27956\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"0e4a4465-c367-477c-a759-d3db05c27956\" data-type=\"core\/heading\" data-title=\"Tajuk\">Install Flutter SDK<\/h3>\r\n<p id=\"block-53be24cd-42f0-4a76-b39e-f3fde1516ff7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"53be24cd-42f0-4a76-b39e-f3fde1516ff7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Selain SDK yang telah didapatkan dari Android Studio, Flutter juga mewajibkan kita untuk meng-<em>install<\/em>&nbsp;SDK yang telah disediakannya. Berikut adalah beberapa tahapan instalasi&nbsp;<strong>Flutter SDK<\/strong>.<\/p>\r\n<ol id=\"block-f06387d0-9b4c-4be5-9aee-fc9d600c5d09\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"f06387d0-9b4c-4be5-9aee-fc9d600c5d09\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Buka halaman&nbsp;<a href=\"https:\/\/flutter.io\/get-started\/install\/\">Flutter Install<\/a>, kemudian pilih sistem operasi yang kamu gunakan.<\/li>\r\n<\/ol>\r\n<figure id=\"block-8421be3c-d5f9-4f4a-82e4-2b176417450a\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"8421be3c-d5f9-4f4a-82e4-2b176417450a\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/basic-1\/Flutter_-_Choose_OS-optimize.png\" alt=\"panduan install flutter\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-105b5d54-c4c5-49fa-97c5-28d9da8f1e72\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"105b5d54-c4c5-49fa-97c5-28d9da8f1e72\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">2. Pada bagian&nbsp;<strong>Flutter SDK<\/strong>,&nbsp;<em>download<\/em>&nbsp;SDK dari&nbsp;<em>link<\/em>&nbsp;yang telah disediakan.<\/p>\r\n<figure id=\"block-5816ccc0-da63-4940-81fc-2c1a5d0e83ce\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"5816ccc0-da63-4940-81fc-2c1a5d0e83ce\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/basic-1\/Flutter_-_Install_SDK-optimize.png\" alt=\"install sdk flutter\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-ce2b9eb5-8c18-4822-aefa-8366811d29c2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"ce2b9eb5-8c18-4822-aefa-8366811d29c2\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">3. <em>Extract file<\/em>&nbsp;<strong>Flutter SDK<\/strong>&nbsp;yang telah kamu&nbsp;<em>download<\/em>, dan tempatkan dimanapun kamu inginkan (<strong>Warning<\/strong>: Jika menggunakan Windows, jangan diletakkan ke dalam folder yang membutuhkan&nbsp;<em>permission<\/em>, seperti:&nbsp;<strong>C:\/Program Files<\/strong>). Karena saya menggunakan windows, saya meletakkannya di dalam folder local Disk c\/src\/flutter.<\/p>\r\n<figure id=\"block-3ba61112-275a-4b85-a60f-ce4adc04f9e2\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"3ba61112-275a-4b85-a60f-ce4adc04f9e2\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-16.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-16.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-b8fc1194-c73d-4145-9dd8-67958f4f2780\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b8fc1194-c73d-4145-9dd8-67958f4f2780\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">4. Kemudian tambahkan&nbsp;<strong data-rich-text-format-boundary=\"true\">PATH<\/strong>&nbsp;dari Flutter SDK yang telah kita&nbsp;<em>extract<\/em><\/p>\r\n<figure id=\"block-315888e8-6f2d-4fe0-a342-476cfeebcc0e\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"315888e8-6f2d-4fe0-a342-476cfeebcc0e\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-17-1024x510.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-17-1024x510.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-b466ee9c-be12-4847-a4c0-e5feb4b7b057\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b466ee9c-be12-4847-a4c0-e5feb4b7b057\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Note<\/strong>: Jika kamu menggunakan Windows, pastikan&nbsp;<em>file<\/em><code>flutter_console.bat<\/code>&nbsp;berada di dalam folder&nbsp;<code>flutter<\/code>, kemudian&nbsp;<em>double click<\/em>&nbsp;file tersebut.<\/p>\r\n<figure id=\"block-0b553d0e-48a2-461d-9a94-d9b30c692950\" class=\"wp-block-image block-editor-block-list__block wp-block is-resized size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"0b553d0e-48a2-461d-9a94-d9b30c692950\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-18-1024x511.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-18-1024x511.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-49bd0b07-01e4-48ce-83cb-9e23eb430a9c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"49bd0b07-01e4-48ce-83cb-9e23eb430a9c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">5. Terakhir,&nbsp;<em>running command<\/em>:&nbsp;<code>flutter doctor<\/code>&nbsp;untuk mengecek apakah masih ada&nbsp;<em>dependecies<\/em>&nbsp;yang belum ter-<em>install<\/em>.<\/p>\r\n<figure id=\"block-1abe7b8a-bf4e-4a01-befe-32f1a7199de0\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"1abe7b8a-bf4e-4a01-befe-32f1a7199de0\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-19-1024x465.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-19-1024x465.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h2 id=\"block-72636aa0-af28-4b1a-926f-934be639c515\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"72636aa0-af28-4b1a-926f-934be639c515\" data-type=\"core\/heading\" data-title=\"Tajuk\"><br data-rich-text-line-break=\"true\" \/>Konfigurasi Editor<\/h2>\r\n<p id=\"block-736d32c0-294f-439a-896a-61afc013de66\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"736d32c0-294f-439a-896a-61afc013de66\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Editor memiliki peran penting dalam proses&nbsp;<em>development<\/em>, tak peduli kamu menggunakan bahasa pemrograman apapun. Flutter sendiri memberikan opsi lain yang dapat digunakan selain Android Studio, yakni&nbsp;<strong>VS Code<\/strong>. Berikut beberapa tahapan yang dapat kamu lakukan untuk konfigurasi VS Code:<\/p>\r\n<ol id=\"block-65ac7a87-025a-4530-929c-f2455fbca555\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"65ac7a87-025a-4530-929c-f2455fbca555\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Pastikan kamu telah meng-<em>install<\/em>&nbsp;VS Code versi terbaru<\/li>\r\n<li>Tekan&nbsp;<strong>Ctrl + Shift + P<\/strong>&nbsp;atau&nbsp;<strong>View &gt; Command Palette<\/strong><\/li>\r\n<li>Pada kotak yang tersedia, ketikkan&nbsp;<strong>Extensions: Install Extension<\/strong>, kemudian tekan enter<\/li>\r\n<li>Pada kontak pencarian yang tersedia, ketikkan:&nbsp;<code>flutter<\/code>. Kemudian pilih&nbsp;<strong>Flutter<\/strong>, lalu tekan&nbsp;<em>install<\/em>.<img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/basic-1\/Flutter_-_vscode-optimize.png\" alt=\"flutter install vscode\" \/><strong>Note<\/strong>: Jangan lupa untuk meng-<em>install<\/em>&nbsp;<code>Dart<\/code>&nbsp;<em>plugin<\/em>&nbsp;juga, pada gambar lokasinya terletak paling bawah.<\/li>\r\n<li><em>Reload<\/em>&nbsp;VS Code kamu agar dapat menggunakan&nbsp;<em>extension<\/em>&nbsp;yang baru saja di-<em>install<\/em>.<\/li>\r\n<li>Untuk memastikan, buka kembali&nbsp;<strong>View &gt; Command palette<\/strong>, kemudian ketikkan&nbsp;<code>Flutter: Run Flutter Doctor<\/code>. Pastikan&nbsp;<em>output<\/em>&nbsp;yang kamu terima sama dengan ketika menjalankan&nbsp;<em>command<\/em>&nbsp;<code>flutter doctor<\/code>&nbsp;pada terminal.<\/li>\r\n<\/ol>\r\n<h2 id=\"block-15607892-406e-4b02-aaa6-3fb612fbe554\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"15607892-406e-4b02-aaa6-3fb612fbe554\" data-type=\"core\/heading\" data-title=\"Tajuk\">Mempersiapkan Smartphone \/ Emulator<\/h2>\r\n<p id=\"block-2e9a3f32-5ec7-453f-a428-fcc94f140831\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2e9a3f32-5ec7-453f-a428-fcc94f140831\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">untuk emultor temen-temen dapat menggunakan device asli\/ handphone android teman teman atau dapat juga menggunakan emulator bawaan android studio<\/p>\r\n<figure id=\"block-e47620b6-f3a0-403c-b203-2de12e49e12e\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"e47620b6-f3a0-403c-b203-2de12e49e12e\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-20-1024x515.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-20-1024x515.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<figcaption class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Tulis penjelasan...\">ini adalah vysor penampakan awal dengan menyambungkan dengan kabel usb<\/figcaption>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-a242d48d-1757-4c1f-b8f8-1d230d9d914d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"a242d48d-1757-4c1f-b8f8-1d230d9d914d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">untuk <strong data-rich-text-format-boundary=\"true\">vysor <\/strong>dapat di download disini : https:\/\/www.vysor.io\/<\/p>\r\n<p id=\"block-81cdca9d-f72b-4e17-b12d-cadd20ae0507\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"81cdca9d-f72b-4e17-b12d-cadd20ae0507\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">dan jangan lupa setelah masuk vysor hp temen temen di mode debug agar vysor dapat mendetect device temen-temen<\/p>\r\n<p id=\"block-24c2813c-0d96-47ef-ba4c-e93c6a6bf737\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"24c2813c-0d96-47ef-ba4c-e93c6a6bf737\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">jika pada hp xiomi ada pada MIUI version di pencet selama 7 kali sampai keluar developer<\/p>\r\n<figure id=\"block-3080923d-4991-46b0-8fc1-fa21c312682b\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"3080923d-4991-46b0-8fc1-fa21c312682b\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-14.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-14.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-23ed1128-cb3b-4851-83fa-046f4147befa\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"23ed1128-cb3b-4851-83fa-046f4147befa\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">lalu setelah itu masuk ke dalam developer option yang ada pada <strong data-rich-text-format-boundary=\"true\">additional<\/strong> <strong>setting<\/strong>-&gt;<strong>developer options<\/strong><\/p>\r\n<figure id=\"block-8a39553c-1986-41f0-bdb6-e4f0db7bafa3\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"8a39553c-1986-41f0-bdb6-e4f0db7bafa3\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-15.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-15.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h2 class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"c048075e-9ea4-4fdb-b0d9-b4cd4f50cd24\" data-type=\"core\/heading\" data-title=\"Tajuk\">masuk installasi flutter<\/h2>\r\n<h2 id=\"block-c048075e-9ea4-4fdb-b0d9-b4cd4f50cd24\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"c048075e-9ea4-4fdb-b0d9-b4cd4f50cd24\" data-type=\"core\/heading\" data-title=\"Tajuk\">Via Terminal \/ Command Line<\/h2>\r\n<p id=\"block-09f7eeb4-cadb-432b-a02e-d478939e4468\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"09f7eeb4-cadb-432b-a02e-d478939e4468\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Perlu kita ketahui, jika anda seorang&nbsp;<em>web dev<\/em>, maka sudah menjadi kebiasaan dan keharusan meletakkan&nbsp;<em>project<\/em>&nbsp;yang sedang kita&nbsp;<em>develop<\/em>&nbsp;di dalam direktori&nbsp;<em>web server<\/em>. Berbeda halnya dengan&nbsp;<em>mobile dev<\/em>, kita bebas meletakkan dimana saja selama kamu dapat mengaksesnya dan sebaiknya jangan diletakkan di&nbsp;<em>restrict area<\/em>&nbsp;(<em>note<\/em>: yang membutuhkan&nbsp;<em>permission<\/em>). So, saya berasumsi teman-teman meletakkan&nbsp;<em>project<\/em>&nbsp;di dalam direktori&nbsp;<strong>development<\/strong>.<\/p>\r\n<p id=\"block-4bbef483-8948-422f-b6c0-c0d3de63671a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"4bbef483-8948-422f-b6c0-c0d3de63671a\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada&nbsp;<em>command line<\/em>, arahkan ke dalam direktori&nbsp;<strong>BootcampFlutter<\/strong>:<\/p>\r\n<p id=\"block-426a53ac-d672-4219-aad0-6d1144bd9e0c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"426a53ac-d672-4219-aad0-6d1144bd9e0c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kemudian untuk meng-<em>install<\/em>&nbsp;Flutter gunakan&nbsp;<em data-rich-text-format-boundary=\"true\">command<\/em>:<\/p>\r\n<p id=\"block-4bed341a-405e-4242-bdd3-d732cbb85929\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"4bed341a-405e-4242-bdd3-d732cbb85929\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">$ flutter create sanberappflutter<\/p>\r\n<figure id=\"block-4ecbb10e-d731-44a5-aa55-99b7f4e4673b\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"4ecbb10e-d731-44a5-aa55-99b7f4e4673b\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-6.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-6.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-6bd697f3-19d1-4fb5-aec3-6498ce472313\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6bd697f3-19d1-4fb5-aec3-6498ce472313\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Note<\/strong>:&nbsp;<code>sanberappflutter<\/code> adalah nama folder dari&nbsp;<em>project<\/em> yang akan dibuat. Jadi silahkan disesuaikan yaitu sanberappflutter<\/p>\r\n<p id=\"block-e7343d00-170b-46fe-8d67-f2b08e2ac98b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok kosong; mulai menulis atau ketik garing untuk memilih blok\" data-block=\"e7343d00-170b-46fe-8d67-f2b08e2ac98b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<p id=\"block-f8c4f37d-b99e-4893-979e-bed772ad8af5\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"f8c4f37d-b99e-4893-979e-bed772ad8af5\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">$ cd sanberappflutter<\/p>\r\n<p id=\"block-104f5eb8-76fd-47dc-aa61-c0f9a7b82262\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"104f5eb8-76fd-47dc-aa61-c0f9a7b82262\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">kemudian running command berikut<\/p>\r\n<p id=\"block-51dbc1e7-9ac4-4f10-b4a1-0bd14f4a041f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"51dbc1e7-9ac4-4f10-b4a1-0bd14f4a041f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">$ flutter run<\/p>\r\n<figure id=\"block-5b22558b-f1d6-4781-a1da-a85b82e970aa\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"5b22558b-f1d6-4781-a1da-a85b82e970aa\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-7-1024x563.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-7-1024x563.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<figcaption class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Tulis penjelasan...\">akan ada proses seperti diatas<\/figcaption>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-64361a13-9f4c-4527-be89-209714a6e969\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"64361a13-9f4c-4527-be89-209714a6e969\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">lalu apabila sudah selesai akan tampak hasil seperti ini<\/p>\r\n<figure id=\"block-6639ca55-3abb-44ab-a5ba-ad3dd9e85421\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"6639ca55-3abb-44ab-a5ba-ad3dd9e85421\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-8-1024x524.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-8-1024x524.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h2 id=\"block-a5d6a0b9-aa53-46cc-9c62-546bf5aef9ed\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"a5d6a0b9-aa53-46cc-9c62-546bf5aef9ed\" data-type=\"core\/heading\" data-title=\"Tajuk\">cara kedua untuk install via editor (VSCode)<\/h2>\r\n<p id=\"block-154b29f0-5812-4fb8-97fb-46545044f35c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"154b29f0-5812-4fb8-97fb-46545044f35c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Opsi lainnya meng-<em>install<\/em>&nbsp;Flutter selain menggunakan&nbsp;<em>command line<\/em>&nbsp;adalah menggunakan Editor meskipun sebenarnya dibalik proses ini tetap menggunakan&nbsp;<em>command line<\/em>&nbsp;akan tetapi kita dimudahkan dengan disediakannya GUI, sehingga hanya perlu diklik. Buka&nbsp;<strong>View &gt; Command Paletter<\/strong>, kemudian ketikkan:<\/p>\r\n<p id=\"block-51300278-47e4-4886-846b-162cdbd2c72d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"51300278-47e4-4886-846b-162cdbd2c72d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Flutter: New Project<\/strong><\/p>\r\n<figure id=\"block-46ac55cc-73fe-485c-b751-b1e8ff5de200\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"46ac55cc-73fe-485c-b751-b1e8ff5de200\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/basic-1\/Flutter_-_VScode_install-optimize.png\" alt=\"install flutter via vscode\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-11f7ca9c-6a24-4868-8c70-765f6284d7b1\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"11f7ca9c-6a24-4868-8c70-765f6284d7b1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kemudian pada kotak yang tersedia, masukkan nama&nbsp;<em>project<\/em>&nbsp;yang teman-teman inginkan, misal:&nbsp;<code>sanberappflutter<\/code>,<\/p>\r\n<figure id=\"block-97f360ca-4cfb-4320-b727-7daba65e887d\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"97f360ca-4cfb-4320-b727-7daba65e887d\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/basic-1\/Flutter_-_Enter_name_of_project-optimize.png\" alt=\"Install flutter via vscode\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-12b65306-6814-47c7-b8c1-bd37c8d8a0ac\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"12b65306-6814-47c7-b8c1-bd37c8d8a0ac\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Kemudian tekan&nbsp;<strong>enter<\/strong>. Lalu pilih direktori dimana project tersebut akan disimpan.<\/p>\r\n<figure id=\"block-1ae0e847-87e1-458c-ae62-ed5c647c61be\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"1ae0e847-87e1-458c-ae62-ed5c647c61be\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-11-1024x532.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-11-1024x532.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-23561239-be1e-422f-b827-382dea8f20c6\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"23561239-be1e-422f-b827-382dea8f20c6\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Secara otomatis, VS Code akan membuka jendela baru dan menjalankan proses instalasi, tunggu proses tersebut hingga selesai.<\/p>\r\n<figure id=\"block-1d303d5b-4e62-4491-9a4f-5dff95da9ac7\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"1d303d5b-4e62-4491-9a4f-5dff95da9ac7\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/basic-1\/Flutter_-_VScode_build-optimize.png\" alt=\"building flutter from vscode\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-563839ee-b42b-455b-a4f0-cebd828897ad\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"563839ee-b42b-455b-a4f0-cebd828897ad\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Apabila proses tersebut telah selesai, pastikan emulator kamu berjalan atau&nbsp;<em>device<\/em>&nbsp;kamu terhubung ke komputer, kemudian&nbsp;<em>running<\/em>&nbsp;Flutter pada menu&nbsp;<strong>Debug &gt; Start Debugging<\/strong>&nbsp;atau dengan menekan tombol&nbsp;<strong>F5<\/strong>.<\/p>\r\n<p id=\"block-f5f983d3-5e9e-4c91-b13a-29db200515c2\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok kosong; mulai menulis atau ketik garing untuk memilih blok\" data-block=\"f5f983d3-5e9e-4c91-b13a-29db200515c2\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<h2 id=\"block-993b0d43-48e1-42de-8599-3de827271fc0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"993b0d43-48e1-42de-8599-3de827271fc0\" data-type=\"core\/heading\" data-title=\"Tajuk\">Cara menjalankan selain menggunakan flutter run yaitu dengan menggunakan debugger<\/h2>\r\n<p id=\"block-481cbdac-beb6-411a-97eb-68715a7225be\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"481cbdac-beb6-411a-97eb-68715a7225be\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">yang pertama, masuk ke dalam mode Run and debug yang ada di side bar kiri<\/p>\r\n<figure id=\"block-61b5110f-d3d3-4383-90ac-660b077ab659\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"61b5110f-d3d3-4383-90ac-660b077ab659\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-12-1024x556.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-12-1024x556.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-5d3da7c4-4943-4b1d-a588-0d604813fd48\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"5d3da7c4-4943-4b1d-a588-0d604813fd48\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">lalu tekan Run and Debug<\/p>\r\n<figure id=\"block-8d91cfad-4e97-4324-b220-243674663f2d\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"8d91cfad-4e97-4324-b220-243674663f2d\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-13-1024x555.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-13-1024x555.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<figcaption class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Tulis penjelasan...\">jika aplikasi sudah seperti ini selamat aplikasi anda sudah bisa berjalan<\/figcaption>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-42f2958f-dc2e-4e34-b6d8-48c22e9ee979\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok kosong; mulai menulis atau ketik garing untuk memilih blok\" data-block=\"42f2958f-dc2e-4e34-b6d8-48c22e9ee979\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><\/p>\r\n<p id=\"block-ff7547e7-37dd-40e8-ab18-ae1b6f5e8fd1\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"ff7547e7-37dd-40e8-ab18-ae1b6f5e8fd1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jika sudah selesai dikerjakan, silahkan <em>push <\/em>hasil pekerjaan Anda ke <em>repository <\/em>Gitlab masing-masing (gunakan <em>repository project<\/em> yang sama <strong>bootcampflutter<\/strong> yang digunakan folder <strong>SanberAppFlutter<\/strong>). Jangan lupa <em>submit link commit<\/em> Anda ke sanbercode.com.<\/p>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-11-05 08:00:00","status_publish":"publish","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:29:42","waktu_publish_formatted":" Jumat, 05 November 2021. 08:00:00 WIB."}]},{"id":320,"uuid":"d8f679c4-5440-4f35-b6d3-bd37efba0de5","materi_id":32,"nama":"Materi Week 3","permalink":"materi-week-3","urutan":6,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":null,"posting":[{"id":1092,"uuid":"e781bd05-01f5-41a4-8c18-f5b5c4ba7282","author_user_id":8222,"materi_section_id":320,"judul":"Hari-11-Widget Core Component","permalink":"hari-11-widget-core-component","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Bagi sobat sanber yang belum mengerti apa itu widget, sederhananya pada Flutter seluruh tampilan seperti tombol, gambar, teks, list, ikon, bahkan satu layar pada handphone tersebut merupakan sekumpulan dari banyak widget.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Struktur flutter apps<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>berikut ini merupakan struktur dari flutter apps\/ per page halaman yang akan kita layout, umumnya akan ada scaffold, appbar, body dan didalam body ada widget-widget<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15924,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15924\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-33-1024x543.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>pada warna biru adalah core widget\/component yang terdapat pada flutter, semacam tag html, head, body, footer dst.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"55e3\">Properti pada Widget<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"61ec\">Setiap widget memiliki property, misalnya kita membuat sebuah tombol, lalu kita ingin agar warna backgroundnya itu hijau, dan warna tulisannya putih, lalu teksnya kita tebalkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"93e6\">Untuk melakukan itu semua, maka tombol kita atur melalui propertinya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/632\/1*S-ZIaLQMF9CnsV_c6sHNyw.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"432a\">Dari gambar tersebut kita bisa pelajari bahwa ciri dari widget dia diawali dengan huruf kapital dia berupa class, digambar itu juga kita memiliki widget Scaffold, AppBar, dan Teks.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"62f4\">Lalu widget Scaffold dia memiliki property appBar, sedangkan pada widget AppBar dia memiliki property title, dan backgroundColor.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"c242\">Widget di dalam widget<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"dd2d\">Dalam membuat aplikasi nantinya tentu kita akan menggunakan banyak widget, pada Flutter setiap Widget umumnya memiliki properti&nbsp;<strong>child<\/strong>&nbsp;atau anak, dari properti inilah kita bisa menggunakan widget didalamnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/633\/1*qkbpGZnz9bJtO67IkkAUHA.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Selain child, kita juga mengenal property&nbsp;<strong>children&nbsp;<\/strong>yang artinya anak-anak, sesuai dengan namanya, berarti widget tersebut bisa memiliki banyak widget-widget, sebagai contoh kita ingin menampilkan daftar menu makanan, maka tentu akan banyak widget yang berfungsi untuk menampilkan keterangan nama makanan didalamnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/594\/1*VmiJlxSSHpI2CbWCwsiE6A.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/331\/1*HCXrheAI94fKISZ3zPwzpA.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":1} --><\/p>\r\n<h1 id=\"09d0\"><strong>General Widget<\/strong><\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"bdfd\">Ada banyak sekali widget-widget yang telah disediakan pada flutter, pada kali ini kita akan membahas widget apa saja yang paling penting untuk kita pahami saat pertama kali membuat aplikasi menggunakan Flutter ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"27f9\">Scaffold<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"7d9c\">Scaffold adalah widget utama untuk membuat sebuah halaman pada flutter, scaffold ini memiliki beberapa parameter yang biasa kita gunakan seperti appBar untuk membuat AppBar, body untuk bagian tubuhnya, atau kita juga bisa menambahkan floating action bar, maupun mengganti warna background bodynya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Widget build(BuildContext context) {\r\n  return Scaffold(\r\n    appBar: AppBar(\r\n      title: Text('Sample Code'),\r\n    ),\r\n    body: Center(\r\n      child: Text('You have pressed the button $_count times.')\r\n    ),\r\n    backgroundColor: Colors.blueGrey.shade200,\r\n    floatingActionButton: FloatingActionButton(\r\n      onPressed: () =&gt; setState(() =&gt; _count++),\r\n      tooltip: 'Increment Counter',\r\n      child: const Icon(Icons.add),\r\n    ),\r\n  );\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/188\/1*CZ-tiFDRwGasLIiBP1wr9A.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2 id=\"2f1e\"><strong>Text<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"262b\">Text berfungsi untuk menampilkan sebuah teks biasa, atau bisa kita berikan style dengan menambahkan property style.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>...\r\nbody: Text('Ini Text', style: TextStyle(\r\n                                  color: Colors.blue,\r\n                                  backgroundColor: Colors.pink,\r\n                                  fontSize: 20.0,\r\n                                  fontStyle: FontStyle.italic,\r\n                                  fontWeight: FontWeight.bold\r\n                                  ),)\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/211\/0*EwzFOrz0IZfgJT8R\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2 id=\"f8e0\">Icon<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"80e9\">Widget ini untuk menggunakan icon yang telah disediakan, berikut adalah contohnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>...\r\nbody: Container(\r\n          padding: EdgeInsets.all(16.0),\r\n          child: Row(\r\n            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n            children: &lt;Widget&gt;[\r\n              Column(\r\n                children: &lt;Widget&gt;[\r\n                  Icon(Icons.access_alarm),\r\n                  Text('Alarm')\r\n                ],\r\n              ),\r\n              Column(\r\n                children: &lt;Widget&gt;[\r\n                  Icon(Icons.phone),\r\n                  Text('Phone')\r\n                ],\r\n              ),\r\n              Column(\r\n                children: &lt;Widget&gt;[\r\n                  Icon(Icons.book),\r\n                  Text('Book')\r\n                ],\r\n              ),\r\n            ],\r\n          ),\r\n        )\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/220\/0*Nv-YDImUEl2pFpy-\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2 id=\"37de\">Container<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"9984\">Container merupakan widget yang fungsinya untuk membungkus widget lain sehingga dapat diberikan nilai seperti margin, padding, warna background, atau dekorasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>...\r\nbody: Container(\r\n          padding: EdgeInsets.all(32.0),\r\n          margin: EdgeInsets.fromLTRB(20.0, 10.0, 20.0, 0),\r\n          decoration: BoxDecoration(\r\n            borderRadius: BorderRadius.circular(20.0), \r\n            color: Colors.purple),\r\n          \/\/ color: Colors.purple,\r\n          child: Text('Haiii', style: TextStyle(color: Colors.white, fontSize: 20.0),)\r\n        )\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/218\/0*r6GwNuegL8-k2G_B\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2 id=\"b47c\">Button<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"6f1b\">Terdapat 3 widget Button yang umumnya dipakai yaitu RaisedButton, MaterialButton, dan FlatButton<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"3da8\">Pada raised button dan Material tombol akan sedikit menonjol.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"101e\">Pada flat button tombolnya akan datar tanpa adanya efek-efek seperti bayangan dan lain-lain.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>...\r\nbody: Column(\r\n          children: &lt;Widget&gt;[\r\n            RaisedButton(\r\n              color: Colors.amber,\r\n              child: Text(\"Raised Button\"),\r\n              onPressed: () {},\r\n            ),\r\n            MaterialButton(\r\n              color: Colors.lime,\r\n              child: Text(\"Material Button\"),\r\n              onPressed: () {},\r\n            ),\r\n            FlatButton(\r\n              color: Colors.lightGreenAccent,\r\n              child: Text(\"FlatButton Button\"),\r\n              onPressed: () {},\r\n            ),\r\n          ],\r\n        )\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/218\/0*jCBpWIiBuAQ2fJ4Z\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2 id=\"b597\"><strong>TextFormField<\/strong><\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"ce99\">TextFormField merupakan widget yang berguna untuk membuat form untuk diisi user.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>...\r\nbody: Padding(\r\n          padding: const EdgeInsets.all(8.0),\r\n          child: Form(\r\n            child: Column(\r\n              children: &lt;Widget&gt;[\r\n                TextFormField(\r\n                  decoration: InputDecoration(hintText: \"Username\"),\r\n                ),\r\n                TextFormField(\r\n                  obscureText: true,\r\n                  decoration: InputDecoration(hintText: \"Password\"),\r\n                ),\r\n                RaisedButton(\r\n                  child: Text(\"Login\"),\r\n                  onPressed: () {},\r\n                )\r\n              ],\r\n            ),\r\n          ),\r\n        )\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/miro.medium.com\/max\/220\/0*q6rhCW2A8Frx9DJ6\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Image<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Image merupakan widget yang dapat digunakan untuk menampilkan gambar, bisa menggunakan internet atau dengan local foler<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Internet<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Image.network('https:\/\/cdn.pixabay.com\/photo\/2019\/11\/10\/17\/36\/indonesia-4616370_1280.jpg');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Assets lokal<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Gambar dari asset lokal yaitu file gambar yang ditambahkan kedalam folder aplikasi yang nantinya digunakan untuk menampilkan gambar tanpa koneksi internet. Tahapan menampilkan gambar lokal yaitu :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>buat folder baru&nbsp;<code>assets\/images<\/code><br \/>posisi folder sejajar dengan&nbsp;<strong>pubspec.yaml<\/strong>. Untuk penamaan folder bisa apa aja namun sebaiknya gunakan nama yang umum pada istilah pemrograman. Hal tersebut berguna untuk membantu orang lain apabila bekerja sebagai tim.<\/li>\r\n<li>Masukan gambar ke dalam folder tersebut<\/li>\r\n<li>Registrasikan image \/ gambar yang tadi kita masukan dengan cara edit file&nbsp;<strong>pubspec.yaml<\/strong><\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>flutter:   \r\n  assets:     \r\n    - assets\/images\/paddy-field.jpg<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika memiliki beberapa gambar yang ingin di import maka kita dapat menggunakan cara yang lebih sederhana yaitu hanya menggunakan nama direktori saja.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>flutter:   \r\n  assets:     \r\n    - assets\/images\/<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":502} --><\/p>\r\n<figure class=\"wp-block-image\"><img class=\"wp-image-502\" title=\"Cara Menampilkan Gambar di Flutter 1\" src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/08\/cara-setup-asset-gambar-flutter-1024x740.png\" alt=\"menampilkan gambar di flutter\" \/>\r\n<figcaption>Harap perhatikan tab dan spasi karena apabila posisi value asset sejajar atau menjorok terlalu dalam akan error<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Tampilkan asset image dengan&nbsp;<strong>Image.asset<\/strong>&nbsp;Widget<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Image.asset('assets\/images\/paddy-field.jpg');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh lengkapnya seperti kode dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import 'package:flutter\/material.dart';\r\n\r\nvoid main() =&gt; runApp(BelajarImage());\r\n\r\nclass BelajarImage extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      home: Scaffold(\r\n        appBar: AppBar(\r\n          title: Text(\"belajarFlutter.com\"),\r\n        ),\r\n        body: Image.asset('assets\/images\/paddy-field.jpg'),\r\n      )\r\n    );\r\n  }\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/08\/contoh-menampilkan-gambar-di-flutter-app.png\" alt=\"contoh menampilkan gambar di flutter app\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Format gambar yang support yaitu : JPEG, WebP, GIF, animated WebP\/GIF, PNG, BMP, and WBMP. Penggunaan local image biasanya untuk gambar yang bersifat statis seperti logo aplikasi, background asset. Semakin banyak gambar yang di import maka semakin besar pula ukuran aplikasinya nanti<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>sumber:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>https:\/\/belajarflutter.com\/tutorial-cara-menampilkan-gambar-di-flutter\/<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/medium.com\/flutter-developer-indonesia\/belajar-widget-widget-pada-flutter-flutter-starter-pack-part-1-7f386a02fbb6\">https:\/\/medium.com\/flutter-developer-indonesia\/belajar-widget-widget-pada-flutter-flutter-starter-pack-part-1-7f386a02fbb6<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/flutter.dev\/docs\/development\/ui\/widgets\/material\">https:\/\/flutter.dev\/docs\/development\/ui\/widgets\/material<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-08 08:00:00","status_publish":"publish","urutan":1,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:30:53","waktu_publish_formatted":" Senin, 08 November 2021. 08:00:00 WIB."},{"id":1095,"uuid":"87f0e0e0-9c17-4632-b6db-50139a1dccfa","author_user_id":8222,"materi_section_id":320,"judul":"Hari 12 - Flutter-Styling","permalink":"hari-12-flutter-styling","konten":"<p><!-- wp:heading --><\/p>\r\n<h2><!-- wp:paragraph --><\/h2>\r\n<p>Flutter menggunakan&nbsp;<em>material design<\/em>&nbsp;sebagai&nbsp;<em>style default<\/em>&nbsp;untuk mengatur UI-nya, meskipun kita diberikan kebebasan untuk memodifikasi sesuai dengan keinginan. Maka pada bagian pertama ini, kita akan belajar bagaimana menggunakan&nbsp;<em>widget<\/em>&nbsp;<strong>Scaffold<\/strong>, serta&nbsp;<em>attribute<\/em>&nbsp;apa saja yang perlu kita ketahui.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h2>\r\n<p>Memulai dari awal untuk mengenal satu persatu&nbsp;<em>widget<\/em>&nbsp;Flutter, dimulai dari duet maut&nbsp;<strong>MaterialApp<\/strong>&nbsp;&amp;&nbsp;<strong>Scaffold<\/strong>, Buka&nbsp;<em>file<\/em>&nbsp;<code>lib\/main.dart<\/code>, lalu menjadi<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>import 'package:flutter\/material.dart';\r\n\r\nvoid main() =&gt; runApp(MyApp());\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return null;\r\n  }\r\n}<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p><strong>Penjelasan<\/strong>: Semua&nbsp;<em>widget<\/em>&nbsp;yang biasanya digunakan beserta&nbsp;<em>style<\/em>-nya akan dirangkum oleh&nbsp;<code>material.dart<\/code>&nbsp;yang kita&nbsp;<em>import<\/em>&nbsp;pada&nbsp;<em>line<\/em>&nbsp;pertama. Ketika Flutter dijalankan, maka secara otomatis dia akan mengeksekusi&nbsp;<em>class<\/em>&nbsp;yang menjadi&nbsp;<em>value<\/em>&nbsp;dari&nbsp;<code>runApp()<\/code>&nbsp;yang berada di dalam&nbsp;<em>method<\/em>&nbsp;<code>main()<\/code>.&nbsp;<em>Class<\/em>&nbsp;<code>MyApp()<\/code>&nbsp;meng-<em>extend<\/em>&nbsp;<strong>StatelessWidget<\/strong>, dimana Flutter memiliki dua buah&nbsp;<em>widget<\/em>&nbsp;yang bernama&nbsp;<strong>Stateless<\/strong>&nbsp;dan&nbsp;<strong>Stateful<\/strong>. Perbedaan keduanya secara detail tidak akan kita bahas pada kesempatan kali ini, singkatnya&nbsp;<em>stateless<\/em>&nbsp;adalah&nbsp;<em>widget<\/em>&nbsp;yang tidak akan berubah setelah diinisiasi atau setelah dimuat. Sebaliknya berlaku untuk&nbsp;<em>stateful<\/em>&nbsp;adalah&nbsp;<em>widget<\/em>&nbsp;yang bisa berubah ketika mendapatkan perintah dari pengguna.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h2>\r\n<p>Tiba saatnya untuk menggunakan duet&nbsp;<strong>MaterialApp<\/strong>&nbsp;<em>widget<\/em>&nbsp;dan&nbsp;<strong>Scaffold<\/strong>&nbsp;<em>widget<\/em>, di dalam&nbsp;<em>file<\/em>&nbsp;yang sama, modifikasi menjadi<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>import 'package:flutter\/material.dart';\r\n\r\nvoid main() =&gt; runApp(MyApp());\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      home: Scaffold(\r\n        appBar: AppBar(title: Text(\"Belajar MaterialApp Scaffold\"),),\r\n      ),\r\n    );\r\n  }\r\n}<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p><strong>Penjelasan<\/strong>: Ada beberapa bagian yang perlu dijelasan, diantaranya<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/h2>\r\n<ol>\r\n<li><code>MaterialApp<\/code>&nbsp;adalah sebuah&nbsp;<em>parent<\/em>&nbsp;dimana yang diapitnya akan menerapkan&nbsp;<em>style<\/em>&nbsp;<strong>material design<\/strong>. Selain itu, dia juga memiliki&nbsp;<em>control<\/em>&nbsp;untuk mengatur&nbsp;<em>route, theme, supported locales<\/em>, dan lain sebagainya. Akan tetapi pada seri kali ini kita hanya akan membahas tentang&nbsp;<em>theme<\/em>-nya saja, adapun fungsi lainnya akan dirangkaikan dengan materi lainnya.<\/li>\r\n<li><code>Scaffold<\/code>&nbsp;memiliki peran untuk mengatur struktur visual&nbsp;<em>layout<\/em>&nbsp;dengan mengimplementasikan&nbsp;<em>material design<\/em>, dimana dia juga memiliki kemampuan untuk membuat&nbsp;<em>app bars, drawers, snack bars, bottom sheets dan lain sebagainya<\/em>.<\/li>\r\n<li><code>appBar<\/code>&nbsp;adalah salah satu properti yang dimiliki oleh&nbsp;<strong>Scaffold<\/strong>&nbsp;<em>widget<\/em>&nbsp;untuk membuat sebuah bar pada aplikasi, salah satu contohnya adalah menampilkan teks&nbsp;<strong>Belajar MaterialApp Scaffold<\/strong><\/li>\r\n<\/ol>\r\n<h2><!-- \/wp:list --> <!-- wp:paragraph --><\/h2>\r\n<p>Adapun hasil yang akan kita peroleh seperti gambar di bawah ini<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:image --><\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/widget_flutter_-_scaffold_appbar-optimize.png\" alt=\"\" \/><\/figure>\r\n<h2><!-- \/wp:image --> <!-- wp:paragraph --><\/h2>\r\n<p>Menyelami lebih dalam lagi, kita akan menerapkan beberapa bagian dari&nbsp;<em>attribute<\/em>&nbsp;<code>appBar()<\/code>. Dengan&nbsp;<em>file<\/em>&nbsp;yang sama, modifikasi menjadi<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>import 'package:flutter\/material.dart';\r\n\r\nvoid main() =&gt; runApp(MyApp());\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      home: Scaffold(\r\n        appBar: AppBar(\r\n          leading: Icon(Icons.dashboard),\r\n          title: Text(\"Belajar MaterialApp Scaffold\"), \r\n          actions: &lt;Widget&gt;[\r\n            Icon(Icons.search),\r\n            \/\/ Icon(Icons.find_in_page)\r\n          ],\r\n          actionsIconTheme: IconThemeData(color: Colors.yellow),\r\n          backgroundColor: Colors.pinkAccent,\r\n          bottom: PreferredSize(\r\n            child: Container(\r\n              color: Colors.orange, \r\n              height: 4.0,\r\n            ), \r\n            preferredSize: Size.fromHeight(4.0)\r\n          ),\r\n          centerTitle: true,\r\n        ),\r\n      ),\r\n      debugShowCheckedModeBanner: false,\r\n    );\r\n  }\r\n}<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p><strong>Penjelasan<\/strong>: Berikut beberapa penjelasan dari penggunaan&nbsp;<em>attribute<\/em>&nbsp;di atas, diantaranya<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/h2>\r\n<ol>\r\n<li><strong>leading, title dan actions<\/strong>&nbsp;adalah kesatuan yang membentuk urutan penempatan sesuai dengan urutan nama yang saya&nbsp;<em>bold<\/em>&nbsp;diawal. Ketiganya bisa menampilkan apa saja yang diinginkan, adapun&nbsp;<code>leading<\/code>&nbsp;dan&nbsp;<code>title<\/code>&nbsp;hanya bisa memuat satu&nbsp;<em>widget<\/em>, sedangkan&nbsp;<code>actions<\/code>&nbsp;bisa menampung lebih dari satu&nbsp;<em>widget<\/em>&nbsp;sesuai kebutuhan.<\/li>\r\n<li><code>actionsIconTheme<\/code>&nbsp;akan mengatur&nbsp;<em>theme<\/em>&nbsp;yang ingin diterapkan pada&nbsp;<code>actions<\/code>&nbsp;dengan catatan jika yang dimuat adalah&nbsp;<em>widget<\/em>&nbsp;Icon.<\/li>\r\n<li><code>bottom<\/code>&nbsp;sesuai namanya akan ditempatkan dibawah&nbsp;<em>appbar<\/em>, misalnya saja kita ingin memberikan efek garis pada bottom&nbsp;<em>appbar<\/em>.<\/li>\r\n<li><code>debugShowCheckedModeBanner<\/code>&nbsp;secara&nbsp;<em>default<\/em>&nbsp;bernilai&nbsp;<strong>true<\/strong>&nbsp;yang akan menampilkan&nbsp;<em>debug banner<\/em>&nbsp;pada pojok kanan atas, set&nbsp;<em>value<\/em>-nya jadi&nbsp;<strong>false<\/strong>&nbsp;untuk menghilangkan&nbsp;<em>debug banner<\/em>&nbsp;tersebut.<\/li>\r\n<\/ol>\r\n<h2><!-- \/wp:list --> <!-- wp:paragraph --><\/h2>\r\n<p>Adapun hasil yang akan kita peroleh seperti gambar dibawah ini<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:image --><\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/widget_flutter_-_custom_appbar-optimize.png\" alt=\"\" \/><\/figure>\r\n<h2><!-- \/wp:image --> <!-- wp:paragraph --><\/h2>\r\n<p>Lebih jauh lagi jika diteruskan,&nbsp;<strong>Scaffold<\/strong>&nbsp;memiliki kemampuan untuk membuat&nbsp;<em>drawers<\/em>&nbsp;(menu yang ada disamping),&nbsp;<em>snackbars<\/em>&nbsp;dan lain sebagainya. Akan tetapi pada bagian ini tidak akan dibahas, maka perubahan terakhir yang akan dilakukan adalah mengenal 2&nbsp;<em>attribute<\/em>&nbsp;lainnya yakni&nbsp;<code>floatingActionButton<\/code>&nbsp;dan&nbsp;<code>body<\/code>, modifikasi&nbsp;<em>file<\/em>&nbsp;yang sama menjadi.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>import 'package:flutter\/material.dart';\r\n\r\nvoid main() =&gt; runApp(MyApp());\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      home: Scaffold(\r\n        appBar: AppBar(\r\n          leading: Icon(Icons.dashboard),\r\n          title: Text(\"Belajar MaterialApp Scaffold\"), \r\n          actions: &lt;Widget&gt;[\r\n            Icon(Icons.search),\r\n            \/\/ Icon(Icons.find_in_page)\r\n          ],\r\n          actionsIconTheme: IconThemeData(color: Colors.yellow),\r\n          backgroundColor: Colors.pinkAccent,\r\n          bottom: PreferredSize(\r\n            child: Container(\r\n              color: Colors.orange, \r\n              height: 4.0,\r\n            ), \r\n            preferredSize: Size.fromHeight(4.0)\r\n          ),\r\n          centerTitle: true,\r\n        ),\r\n          \r\n        \/\/PERUBAHAN BARU\r\n        floatingActionButton: FloatingActionButton(\r\n          backgroundColor: Colors.pinkAccent,\r\n          child: Text('+'),\r\n          onPressed: () {},\r\n        ),\r\n        body: null,\r\n        \/\/PERUBAHAN BARU\r\n      ),\r\n      debugShowCheckedModeBanner: false,\r\n    );\r\n  }\r\n}<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p><strong>Penjelasan<\/strong>:&nbsp;<code>floatingActionButton<\/code>&nbsp;digunakan untuk membuat tombol melayang pada pojok kanan bawah, sedangkan&nbsp;<code>body<\/code>&nbsp;memuat&nbsp;<em>content<\/em>&nbsp;yang akan ditampilkan pada&nbsp;<em>frame<\/em>&nbsp;putih yang sedang kosong saat ini.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h2>\r\n<p>Adapun tampilan akhir yang akan kita peroleh terlihat seperti gambar di bawah ini.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:image --><\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/widget_flutter_-_floating_action_button-optimize.png\" alt=\"\" \/><\/figure>\r\n<h2><!-- \/wp:image --> <!-- wp:heading --><\/h2>\r\n<h2>Pasangan Row-Column<\/h2>\r\n<h2><!-- \/wp:heading --> <!-- wp:paragraph --><\/h2>\r\n<p>Jika anda berlatar belakang dari&nbsp;<em>classic web developer<\/em>, maka menggambar&nbsp;<strong>row-column<\/strong>&nbsp;bisa diasumsikan sebagai&nbsp;<em>table<\/em>&nbsp;yang memiliki&nbsp;<em>row<\/em>&nbsp;dan&nbsp;<em>column<\/em>. Sebab dahulu kala, mengatur tata letak bisa memanfaatkan&nbsp;<em>tag table<\/em>&nbsp;pada&nbsp;<em>html<\/em>. Jadi&nbsp;<strong>Row<\/strong>&nbsp;untuk mengatur&nbsp;<em>widget<\/em>&nbsp;agar tersusun secara&nbsp;<em>horizontal<\/em>&nbsp;(<strong><em>red<\/em><\/strong>: dari kiri ke kanan), sedangkan&nbsp;<strong>Column<\/strong>&nbsp;berlaku sebaliknya, yakni secara&nbsp;<em>vertical<\/em>&nbsp;(<strong><em>red<\/em><\/strong>: dari atas ke bawah).<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h2>\r\n<p>Pertama, kita akan belajar bagaimana cara kerja dari Column dengan&nbsp;<em>schema<\/em>&nbsp;yang diinginkan adalah menampilkan 3 buah lingkaran yang tersusun ke bawah. Sekedar informasi bahwa kita hanya akan fokus pada bagian&nbsp;<em>content<\/em>&nbsp;saja, maka seluruh&nbsp;<em>code<\/em>-nya tidak akan saya tampilkan lagi, melainkan hanya pada bagian attribute&nbsp;<code>body<\/code>&nbsp;dari&nbsp;<strong>Scaffold<\/strong>. Buka&nbsp;<em>file<\/em>&nbsp;<code>lib\/main.dart<\/code>&nbsp;dan masukkan&nbsp;<em>code<\/em>&nbsp;berikut pada bagian&nbsp;<em>body<\/em>.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>body: Column(children: &lt;Widget&gt;[\r\n  Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.redAccent, shape: BoxShape.circle),),\r\n  Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.pinkAccent, shape: BoxShape.circle),),\r\n  Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.blueAccent, shape: BoxShape.circle),),\r\n],),<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p><strong>Penjelasan<\/strong>:&nbsp;<strong><em>Column<\/em><\/strong>&nbsp;bisa menampung lebih dari 1&nbsp;<em>widget<\/em>, sehingga kita bisa memasukkan&nbsp;<em>widget<\/em>&nbsp;lainnya di dalam&nbsp;<em>children<\/em>-nya sesuka hati. Seperti yang disinggung di awal bahwa&nbsp;<em>column<\/em>&nbsp;akan menyusun&nbsp;<em>widget<\/em>&nbsp;yang ada di dalamnya dari atas ke bawah.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:image --><\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/widget_flutter_-_column-optimize.png\" alt=\"\" \/><\/figure>\r\n<h2><!-- \/wp:image --> <!-- wp:paragraph --><\/h2>\r\n<p>Penerapa&nbsp;<strong>Row<\/strong>&nbsp;sama saja dengan&nbsp;<em>Column<\/em>, bisa menampung lebih dari 1&nbsp;<em>widget<\/em>&nbsp;di dalamnya. Hanya saja berbeda orientasi penggunaannya saja. Buka&nbsp;<em>file<\/em>&nbsp;yang sama dan modifikasi menjadi.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>body: Row(\r\n  children: &lt;Widget&gt;[\r\n    Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.redAccent, shape: BoxShape.circle),),\r\n    Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.pinkAccent, shape: BoxShape.circle),),\r\n    Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.blueAccent, shape: BoxShape.circle),),\r\n  ],\r\n),<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:image --><\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/widget_flutter_-_row-optimize.png\" alt=\"\" \/><\/figure>\r\n<h2><!-- \/wp:image --> <!-- wp:paragraph --><\/h2>\r\n<p>Selain bekerja secara individu, kita juga bisa memadukan antara&nbsp;<em>row<\/em>&nbsp;dan&nbsp;<em>column<\/em>&nbsp;dalam satu keadaan. Misalnya saja&nbsp;<em>case<\/em>&nbsp;yang diinginkan adalah 3 lingkaran membentuk urutan kebawah dan pada lingkaran terakhir urutannya kesamping.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>body: Column(\r\n  crossAxisAlignment: CrossAxisAlignment.start,\r\n  children: &lt;Widget&gt;[\r\n    Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.redAccent, shape: BoxShape.circle),),\r\n    Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.pinkAccent, shape: BoxShape.circle),),\r\n    Row(\r\n      children: &lt;Widget&gt;[\r\n        Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.blueAccent, shape: BoxShape.circle),),\r\n        Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.redAccent, shape: BoxShape.circle),),\r\n        Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.pinkAccent, shape: BoxShape.circle),),\r\n      ],\r\n    )\r\n  ],\r\n),<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p><strong>Penjelasan<\/strong>: Perpaduan antara&nbsp;<strong>Row &amp; Column<\/strong>&nbsp;di Flutter, dimana Row bisa dimasukkan ke dalam Column, begitpun sebaliknya. Ada hal baru yang kita pelajari yakni penggunaan&nbsp;<code>crossAxisAligment<\/code>, dimana&nbsp;<em>attribute<\/em>&nbsp;ini berfungsi untuk mengatur&nbsp;<em>aligment<\/em>&nbsp;dari Row maupun Column. Adapun sifatnya selalu berlawanan dengan orientasi dari Row &amp; Column tersebut. Misalnya saja, Column memiliki sifat penerapan secara&nbsp;<em>vertical<\/em>, maka&nbsp;<code>crossAxisAligment<\/code>&nbsp;akan mengaturnya secara&nbsp;<em>horizontal<\/em>, begitupun dengan row.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:image --><\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/widget_flutter_-_row_column-optimize.png\" alt=\"\" \/><\/figure>\r\n<h2><!-- \/wp:image --> <!-- wp:paragraph --><\/h2>\r\n<p>Selain&nbsp;<code>crossAxisAligment<\/code>, ada&nbsp;<em>attribute<\/em>&nbsp;lain yang sama pentingnya untuk memaksimalkan fungsi Row &amp; Column. Misalnya saja&nbsp;<em>schema<\/em>&nbsp;yang diinginkan adalah kita ingin mengatur 3 lingkaran paling bawah akan disimpan pada sudut kanan&nbsp;<em>screen<\/em>, sedangkan dua lingkaran lainnya tetap pada posisinya.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h2>\r\n<p>Pada&nbsp;<em>schema<\/em>&nbsp;diatas, kita akan memanfaatkan peran&nbsp;<code>mainAxisAligment<\/code>, tambahkan&nbsp;<em>code<\/em>&nbsp;berikut sebagai attribute&nbsp;<em>row<\/em><\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>body: Column(\r\n  crossAxisAlignment: CrossAxisAlignment.start,\r\n  children: &lt;Widget&gt;[\r\n    Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.redAccent, shape: BoxShape.circle),),\r\n    Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.pinkAccent, shape: BoxShape.circle),),\r\n    Row(\r\n      \r\n      \/\/TAMBAHKAN CODE INI\r\n      mainAxisAlignment: MainAxisAlignment.end,\r\n      \/\/TAMBAHKAN CODE INI\r\n      \r\n      children: &lt;Widget&gt;[\r\n        Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.blueAccent, shape: BoxShape.circle),),\r\n        Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.redAccent, shape: BoxShape.circle),),\r\n        Container(width: 50, height: 50, decoration: BoxDecoration(color: Colors.pinkAccent, shape: BoxShape.circle),),\r\n      ],\r\n    )\r\n  ],\r\n),<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p><strong>Penjelasan<\/strong>:&nbsp;<code>mainAxisAligment<\/code>&nbsp;memiliki peran yang sama dengan&nbsp;<code>crossAxisAligment<\/code>, yakni untuk mengatur&nbsp;<em>aligment<\/em>&nbsp;dari&nbsp;<em>widget<\/em>&nbsp;yang ada di dalamnya. Hanya saja&nbsp;<code>mainAxisAligment<\/code>&nbsp;memiliki sifat yang sejalan dengan&nbsp;<em>widget<\/em>-nya. Misalnya&nbsp;<strong>mainAxisAligment<\/strong>&nbsp;pada Row akan mengatur&nbsp;<em>aligment<\/em>&nbsp;secara&nbsp;<em>horizontal<\/em>, sehingga jika&nbsp;<em>value<\/em>-nya adalah&nbsp;<code>.end<\/code>&nbsp;maka&nbsp;<em>widget<\/em>-nya akan ditempatkan diakhir&nbsp;<em>screen<\/em>&nbsp;secara&nbsp;<em>horizontal<\/em>.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:image --><\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/daengweb.id\/uploads\/galeri\/1\/Flutter\/widget_flutter_-_mainaxisaligment-optimize.png\" alt=\"\" \/><\/figure>\r\n<h2><!-- \/wp:image --> <!-- wp:heading --><\/h2>\r\n<h2>Mengatur Padding<\/h2>\r\n<h2><!-- \/wp:heading --> <!-- wp:paragraph --><\/h2>\r\n<p>Padding adalah jarak atau ruang yang berada di antara border dan konten. Sedangkan margin adalah jarak atau ruang yang berada atau dihitung dari border ke arah luar atau jarak antara border dan konten yang berada di luar border.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h2>\r\n<p>Cara pertama kita bisa menggunakan Widget Padding, dimana widget ini akan mengatur padding untuk widget yang ada di dalamnya.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>Padding(\r\n  padding: EdgeInsets.all(8.0),\r\n  child: const Card(child: Text('Hello World!')),\r\n)<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p>Pada contoh di atas akan menghasilkan padding di semua sisi yaitu atas, kanan, bawah dan kiri. Contoh lain bisa seperti berikut.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:code --><\/h2>\r\n<pre class=\"wp-block-code\"><code>Padding(\r\n  padding: EdgeInsets.fromLTRB(8.0, 5.0, 5.0, 4.0),\r\n  child: const Card(child: Text('Hello World!')),\r\n)<\/code><\/pre>\r\n<h2><!-- \/wp:code --> <!-- wp:paragraph --><\/h2>\r\n<p>Pada contoh di atas akan menghasilkan padding di semua sisi dengan urutan kiri (L), atas (T), kanan (R), bawah (B).<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h2>\r\n<p>Contoh lain untuk mengatur pada sisi tertentu saja bisa seperti berikut.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/h2>\r\n<pre class=\"wp-block-preformatted\">Padding(\r\n  padding: EdgeInsets.only(left:8.0, right:8.0),\r\n  child: const Card(child: Text('Hello World!')),\r\n)<\/pre>\r\n<h2><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h2>\r\n<p>Pada contoh di atas akan menghasilkan padding hanya pada sisi yang kita sebutkan saja. Seperti pada contoh saya hanya menyebut left dan right. Selain menggunakan widget Padding kita juga bisa menggunakan Container sebagai berikut.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/h2>\r\n<pre class=\"wp-block-preformatted\">Container(\r\n  padding: EdgeInsets.only(left:8.0, right:8.0),\r\n  child: const Card(child: Text('Hello World!')),\r\n)<\/pre>\r\n<h2><!-- \/wp:preformatted --> <!-- wp:heading --><\/h2>\r\n<h2>Mengatur Margin<\/h2>\r\n<h2><!-- \/wp:heading --> <!-- wp:paragraph --><\/h2>\r\n<p>Untuk margin kita bisa menggunakannya pada widget container dikarenakan tidak ada widget khusus untuk margin seperti yang dimiliki padding. Sehingga penggunaannya akan seperti berikut.<\/p>\r\n<h2><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/h2>\r\n<pre class=\"wp-block-preformatted\">Container(\r\n  margin: EdgeInsets.all(8.0),\r\n  child: const Card(child: Text('Hello World!')),\r\n)<br \/><br \/><br \/><strong>atau materi video dapat di rangkum di video ini<\/strong><br \/><br \/><br \/><a href=\"https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0\">https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0<\/a><br \/><a href=\"https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0\">https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0<\/a><br \/><a href=\"https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0\">https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0<\/a><br \/><a href=\"https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0\">https:\/\/www.youtube.com\/watch?v=PFkCSLnKKx0<\/a><\/pre>\r\n<h2><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h2>\r\n<p>Dan untuk lebih memahami cara kerja dari row, column, margin, padding sobat sanber dapat langsung mengerjakan soal tugas yang ada pada tugas-12-styling<\/p>\r\n<h2 id=\"target-pertemuan-ini\"><!-- \/wp:paragraph --><\/h2>\r\n<figure class=\"wp-block-image\"><\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-09 08:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:31:06","waktu_publish_formatted":" Selasa, 09 November 2021. 08:00:00 WIB."},{"id":1094,"uuid":"c1b05b21-db66-4ebc-b22f-c43c8ef1d44d","author_user_id":8222,"materi_section_id":320,"judul":"Hari-13-Flutter-Navigation","permalink":"hari-13-flutter-navigation","konten":"<div>\r\n<div>\r\n<div>\r\n<div class=\"block-editor-block-list__layout is-root-container\">\r\n<p id=\"block-1913d8f5-e1e1-4bbd-8e66-c74144bfd048\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1913d8f5-e1e1-4bbd-8e66-c74144bfd048\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada Mater kali ini kita akan membahas navigasi routing pada flutte. dalam sebuah alikasi mobile biasanya memiliki full-screen elemen yang disebut \"screen\" atau \"page\". di Flutter element tersebut disebut route dan di kelola oleh widget Navigator. Widget Navigator berfungsi untuk menampilakn konten ke halaman atau layar baru. jika pada native android, Navigator route di namakan activity dan di ios sebagai viewController. wodget Navigator bekerja seperti tumpukan layar(stack), ia menggunakan prinsip LIFO(Last-In, First Out). ada 2 mthod yang dapat digunakan untuk navigtor pada widget yaitu:&nbsp;<\/p>\r\n<ol id=\"block-43d50305-2b4a-47cb-a135-a849c0fb316e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"43d50305-2b4a-47cb-a135-a849c0fb316e\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>navigator.push() : Methode push digunakan untuk menambahkan rute lain keatas tumpukan screen(stack)saat ini. Halaman baru ditampilkan diatas halaman sebelumnya.<\/li>\r\n<li>Navigator.pop(): Methode pop menghapus rute paling atas dari tumpukan. ini menampilkan halaman sebelumnya kepada pengguna. Simple Routing Flutter Penggunaan widget Navigator untuk routing di flutter yaitu seperti dibawah ini <code>Navigator.push(<\/code><br data-rich-text-line-break=\"true\" \/><code>&nbsp; &nbsp; context,&nbsp;<\/code><br data-rich-text-line-break=\"true\" \/><code>&nbsp; &nbsp; &nbsp; &nbsp;MaterialPageRoute(builder: (context) {<\/code><br data-rich-text-line-break=\"true\" \/><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return AboutPage()<\/code><br data-rich-text-line-break=\"true\" \/><code>&nbsp; &nbsp; &nbsp; })<\/code><br data-rich-text-line-break=\"true\" \/><code>);&nbsp;&nbsp;&nbsp;&nbsp;<\/code><\/li>\r\n<\/ol>\r\n<p id=\"block-63e87732-6c86-450f-ab9a-110f173be284\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"63e87732-6c86-450f-ab9a-110f173be284\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dalam contoh penerapannya, kita akan membuat routing sederhana menggunakan metode Navigator.push untuk navigasi ke layar baru dan Navigator.pop untuk kembali ke layar sebelumnya.<\/p>\r\n<p id=\"block-d3dd33f3-5f13-49e7-bbca-e8cdeca9ab91\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"d3dd33f3-5f13-49e7-bbca-e8cdeca9ab91\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><sub><code>main.dart<\/code><\/sub><\/p>\r\n<pre id=\"block-5a45b45a-bb26-4567-976b-d09e4ec1b738\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"5a45b45a-bb26-4567-976b-d09e4ec1b738\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">import 'package:flutter\/material.dart';<br data-rich-text-line-break=\"true\" \/>void main() {<br data-rich-text-line-break=\"true\" \/>  runApp(MaterialApp(<br data-rich-text-line-break=\"true\" \/>    home: HomePage(),<br data-rich-text-line-break=\"true\" \/>  ));<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/>class HomePage extends StatelessWidget {<br data-rich-text-line-break=\"true\" \/>  @override<br data-rich-text-line-break=\"true\" \/>  Widget build(BuildContext context) {<br data-rich-text-line-break=\"true\" \/>    return Scaffold(<br data-rich-text-line-break=\"true\" \/>      appBar: AppBar(<br data-rich-text-line-break=\"true\" \/>        title: Text('Belajar Routing'),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>      body: Center(<br data-rich-text-line-break=\"true\" \/>        child: ElevatedButton(<br data-rich-text-line-break=\"true\" \/>          onPressed: () {<br data-rich-text-line-break=\"true\" \/>            Route route = MaterialPageRoute(builder: (context) =&gt; AboutPage());<br data-rich-text-line-break=\"true\" \/>            Navigator.push(context, route);<br data-rich-text-line-break=\"true\" \/>          },<br data-rich-text-line-break=\"true\" \/>          child: Text('Tap Untuk ke AboutPage'),<br data-rich-text-line-break=\"true\" \/>        ),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/>class AboutPage extends StatelessWidget {<br data-rich-text-line-break=\"true\" \/>  @override<br data-rich-text-line-break=\"true\" \/>  Widget build(BuildContext context) {<br data-rich-text-line-break=\"true\" \/>    return Scaffold(<br data-rich-text-line-break=\"true\" \/>      appBar: AppBar(<br data-rich-text-line-break=\"true\" \/>        title: Text('Tentang Aplikasi'),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>      body: Center(<br data-rich-text-line-break=\"true\" \/>        child: ElevatedButton(<br data-rich-text-line-break=\"true\" \/>          onPressed: () {<br data-rich-text-line-break=\"true\" \/>            Navigator.pop(context);<br data-rich-text-line-break=\"true\" \/>          },<br data-rich-text-line-break=\"true\" \/>          child: Text('Kembali'),<br data-rich-text-line-break=\"true\" \/>        ),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-2b3e7bd0-ef30-4472-8799-b4799c7f837e\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"2b3e7bd0-ef30-4472-8799-b4799c7f837e\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Contoh kode di atas membuat dua stateless widget dimana halaman awal menggunakan HomePage dan berpindah ke AboutPage saat tombol di tap. Tampilannya seperti gambar di bawah ini<\/p>\r\n<figure id=\"block-c8ccbbf5-8d9d-4872-b834-ba49fa00e48d\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"c8ccbbf5-8d9d-4872-b834-ba49fa00e48d\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/09\/contoh-routing-flutter.gif\" alt=\"contoh routing flutter\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h4 id=\"block-d11524c0-4d2f-42f5-bdb7-2736b8b149a6\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"d11524c0-4d2f-42f5-bdb7-2736b8b149a6\" data-type=\"core\/heading\" data-title=\"Tajuk\">Named Routing<\/h4>\r\n<p id=\"block-1c75a0bb-4ed9-46a1-b60d-e2cfede71e4b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"1c75a0bb-4ed9-46a1-b60d-e2cfede71e4b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sesuai namanya, Named Routing yaitu memberi nama pada routing dengan tujuan untuk mempermudah dalam membaca dan menentukan arah dari suatu navigasi. Sedikit berbeda dengan simple routing, disini kita akan menggunakan Navigator.pushNamed untuk menuju ke halaman baru namun tetap menggunakan Navigator.pop untuk kembali ke halaman sebelumnya.<\/p>\r\n<p id=\"block-545213b6-9ed4-4139-90e1-54b526ec75df\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"545213b6-9ed4-4139-90e1-54b526ec75df\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Navigator.pushNamed membutuhkan dua properti wajib yaitu context dan string sebagai nama routenya. Kita juga dapat mengirim parameter object ke dalam route.<\/p>\r\n<p id=\"block-aac12fba-eec2-4006-a957-ae90ca0c795d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"aac12fba-eec2-4006-a957-ae90ca0c795d\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><code>Navigator.pushNamed(context, String, {Object});<\/code><\/p>\r\n<pre id=\"block-37d8d359-fcc7-4083-b539-43aff49dde16\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"37d8d359-fcc7-4083-b539-43aff49dde16\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">import 'package:flutter\/material.dart';<br data-rich-text-line-break=\"true\" \/>void main() {<br data-rich-text-line-break=\"true\" \/>  runApp(MaterialApp(<br data-rich-text-line-break=\"true\" \/>    initialRoute: '\/',<br data-rich-text-line-break=\"true\" \/>    routes: &lt;String, WidgetBuilder&gt;{<br data-rich-text-line-break=\"true\" \/>      '\/': (context) =&gt; HomePage(),<br data-rich-text-line-break=\"true\" \/>      '\/about': (context) =&gt; AboutPage(),<br data-rich-text-line-break=\"true\" \/>    },<br data-rich-text-line-break=\"true\" \/>  ));<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/>class HomePage extends StatelessWidget {<br data-rich-text-line-break=\"true\" \/>  @override<br data-rich-text-line-break=\"true\" \/>  Widget build(BuildContext context) {<br data-rich-text-line-break=\"true\" \/>    return Scaffold(<br data-rich-text-line-break=\"true\" \/>      appBar: AppBar(<br data-rich-text-line-break=\"true\" \/>        title: Text('Belajar Routing'),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>      body: Center(<br data-rich-text-line-break=\"true\" \/>        child: ElevatedButton(<br data-rich-text-line-break=\"true\" \/>          onPressed: () {<br data-rich-text-line-break=\"true\" \/>            Navigator.pushNamed(context, '\/about');<br data-rich-text-line-break=\"true\" \/>          },<br data-rich-text-line-break=\"true\" \/>          child: Text('Tap Untuk ke AboutPage'),<br data-rich-text-line-break=\"true\" \/>        ),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/>class AboutPage extends StatelessWidget {<br data-rich-text-line-break=\"true\" \/>  @override<br data-rich-text-line-break=\"true\" \/>  Widget build(BuildContext context) {<br data-rich-text-line-break=\"true\" \/>    return Scaffold(<br data-rich-text-line-break=\"true\" \/>      appBar: AppBar(<br data-rich-text-line-break=\"true\" \/>        title: Text('Tentang Aplikasi'),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>      body: Center(<br data-rich-text-line-break=\"true\" \/>        child: ElevatedButton(<br data-rich-text-line-break=\"true\" \/>          onPressed: () {<br data-rich-text-line-break=\"true\" \/>            Navigator.pop(context);<br data-rich-text-line-break=\"true\" \/>          },<br data-rich-text-line-break=\"true\" \/>          child: Text('Kembali'),<br data-rich-text-line-break=\"true\" \/>        ),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-c4a1995d-23fc-4372-995c-72535799c5d7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c4a1995d-23fc-4372-995c-72535799c5d7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Contoh kode diatas akan sama dengan gambar 1.1.<\/p>\r\n<p id=\"block-3bfd6204-4719-4c11-9b16-d55a16266f08\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"3bfd6204-4719-4c11-9b16-d55a16266f08\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Perhatikan potongan kode pada main function dibawah ini<\/p>\r\n<pre id=\"block-d73a1d6f-f0ea-4fce-a21e-32c910551cfd\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"d73a1d6f-f0ea-4fce-a21e-32c910551cfd\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  runApp(MaterialApp(<br data-rich-text-line-break=\"true\" \/>    initialRoute: '\/',<br data-rich-text-line-break=\"true\" \/>    routes: &lt;String, WidgetBuilder&gt;{<br data-rich-text-line-break=\"true\" \/>      '\/': (context) =&gt; HomePage(),<br data-rich-text-line-break=\"true\" \/>      '\/about': (context) =&gt; AboutPage(),<br data-rich-text-line-break=\"true\" \/>    },<br data-rich-text-line-break=\"true\" \/>  ));<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-8c4a0bf2-b7a9-4ae8-acbf-6d7aa1e89cea\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"8c4a0bf2-b7a9-4ae8-acbf-6d7aa1e89cea\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">method initialRoute tidak wajib jika dalam routes kita memiliki &ldquo;\/&rdquo;. Kita juga dapat menggunakan properti home sebagai initialRoute seperti di bawah ini.<\/p>\r\n<pre id=\"block-e12a60cb-4d72-4a44-a2e1-d2deaf705c45\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"e12a60cb-4d72-4a44-a2e1-d2deaf705c45\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">void main() {<br data-rich-text-line-break=\"true\" \/>  runApp(MaterialApp(<br data-rich-text-line-break=\"true\" \/>    home: HomePage(),<br data-rich-text-line-break=\"true\" \/>    routes: &lt;String, WidgetBuilder&gt;{<br data-rich-text-line-break=\"true\" \/>      '\/': (context) =&gt; HomePage(),<br data-rich-text-line-break=\"true\" \/>      '\/about': (context) =&gt; AboutPage(),<br data-rich-text-line-break=\"true\" \/>    },<br data-rich-text-line-break=\"true\" \/>  ));<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<h4 id=\"block-ab18edb1-8886-42f4-8ba4-7c26904bed54\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"ab18edb1-8886-42f4-8ba4-7c26904bed54\" data-type=\"core\/heading\" data-title=\"Tajuk\">Route Generator<\/h4>\r\n<p id=\"block-7990b3a8-3b0c-415f-a9b3-f025ed712ffe\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"7990b3a8-3b0c-415f-a9b3-f025ed712ffe\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Meskipun named routing terlihat lebih baik dari simple routing, namun apabila ingin membuat aplikasi dengan skala yang cukup besar atau ingin mengatur animasi transisi dari tiap routing maka onGenerateRoute merupakan pilihan yang tepat. Dalam tutorial route generator ini kita akan coba memisahkan antara main, screen dan routing file<\/p>\r\n<p id=\"block-677d1a26-821a-4b2e-ae84-b62962665f43\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"677d1a26-821a-4b2e-ae84-b62962665f43\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>Main.dart<\/strong><\/p>\r\n<pre id=\"block-887d8c44-e190-4d35-8e86-b629a7a25b7e\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"887d8c44-e190-4d35-8e86-b629a7a25b7e\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">import 'package:flutter\/material.dart';<br data-rich-text-line-break=\"true\" \/>import 'package:belajar_flutter\/routes.dart';<br data-rich-text-line-break=\"true\" \/>void main() {<br data-rich-text-line-break=\"true\" \/>  runApp(MaterialApp(<br data-rich-text-line-break=\"true\" \/>    onGenerateRoute: RouteGenerator.generateRoute,<br data-rich-text-line-break=\"true\" \/>  ));<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-682bdcfb-73d2-4dee-9113-7fa0f36a516f\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"682bdcfb-73d2-4dee-9113-7fa0f36a516f\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>screen.dart<\/strong><\/p>\r\n<pre id=\"block-10f58e8e-73dd-4561-af3b-86d9816fa83a\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"10f58e8e-73dd-4561-af3b-86d9816fa83a\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">import 'package:flutter\/material.dart';<br data-rich-text-line-break=\"true\" \/>class HomePage extends StatelessWidget {<br data-rich-text-line-break=\"true\" \/>  @override<br data-rich-text-line-break=\"true\" \/>  Widget build(BuildContext context) {<br data-rich-text-line-break=\"true\" \/>    return Scaffold(<br data-rich-text-line-break=\"true\" \/>      appBar: AppBar(<br data-rich-text-line-break=\"true\" \/>        title: Text('Belajar Routing'),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>      body: Center(<br data-rich-text-line-break=\"true\" \/>        child: Column(<br data-rich-text-line-break=\"true\" \/>          mainAxisAlignment: MainAxisAlignment.center,<br data-rich-text-line-break=\"true\" \/>          children: [<br data-rich-text-line-break=\"true\" \/>            ElevatedButton(<br data-rich-text-line-break=\"true\" \/>              onPressed: () {<br data-rich-text-line-break=\"true\" \/>                Navigator.pushNamed(context, '\/about');<br data-rich-text-line-break=\"true\" \/>              },<br data-rich-text-line-break=\"true\" \/>              child: Text('Tap Untuk ke AboutPage'),<br data-rich-text-line-break=\"true\" \/>            ),<br data-rich-text-line-break=\"true\" \/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElevatedButton(<br data-rich-text-line-break=\"true\" \/>              onPressed: () {<br data-rich-text-line-break=\"true\" \/>                Navigator.pushNamed(context, '\/halaman-404');<br data-rich-text-line-break=\"true\" \/>              },<br data-rich-text-line-break=\"true\" \/>              child: Text('Tap Halaman lain'),<br data-rich-text-line-break=\"true\" \/>            ),<br data-rich-text-line-break=\"true\" \/>          ],<br data-rich-text-line-break=\"true\" \/>        ),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<br data-rich-text-line-break=\"true\" \/>class AboutPage extends StatelessWidget {<br data-rich-text-line-break=\"true\" \/>  @override<br data-rich-text-line-break=\"true\" \/>  Widget build(BuildContext context) {<br data-rich-text-line-break=\"true\" \/>    return Scaffold(<br data-rich-text-line-break=\"true\" \/>      appBar: AppBar(<br data-rich-text-line-break=\"true\" \/>        title: Text('Tentang Aplikasi'),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>      body: Center(<br data-rich-text-line-break=\"true\" \/>        child: ElevatedButton(<br data-rich-text-line-break=\"true\" \/>          onPressed: () {<br data-rich-text-line-break=\"true\" \/>            Navigator.pop(context);<br data-rich-text-line-break=\"true\" \/>          },<br data-rich-text-line-break=\"true\" \/>          child: Text('Kembali'),<br data-rich-text-line-break=\"true\" \/>        ),<br data-rich-text-line-break=\"true\" \/>      ),<br data-rich-text-line-break=\"true\" \/>    );<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-30f816a5-7a96-4ed6-9e94-3da20da012cd\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"30f816a5-7a96-4ed6-9e94-3da20da012cd\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong>routes.dart<\/strong><\/p>\r\n<pre id=\"block-9192df08-41a9-4b74-8ee8-534217332b80\" class=\"wp-block-code block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kode\" data-block=\"9192df08-41a9-4b74-8ee8-534217332b80\" data-type=\"core\/code\" data-title=\"Kode\"><code class=\"block-editor-rich-text__editable rich-text\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Kode\">import 'package:flutter\/material.dart';<br data-rich-text-line-break=\"true\" \/>import 'package:belajar_flutter\/screen.dart';<br data-rich-text-line-break=\"true\" \/>class RouteGenerator {<br data-rich-text-line-break=\"true\" \/>  static Route&lt;dynamic&gt; generateRoute(RouteSettings settings) {<br data-rich-text-line-break=\"true\" \/>    \/\/ jika ingin mengirim argument<br data-rich-text-line-break=\"true\" \/>    \/\/ final args = settings.arguments; <br data-rich-text-line-break=\"true\" \/>    switch (settings.name) {<br data-rich-text-line-break=\"true\" \/>      case '\/':<br data-rich-text-line-break=\"true\" \/>        return MaterialPageRoute(builder: (_) =&gt; HomePage());<br data-rich-text-line-break=\"true\" \/>      case '\/about':<br data-rich-text-line-break=\"true\" \/>        return MaterialPageRoute(builder: (_) =&gt; AboutPage());<br data-rich-text-line-break=\"true\" \/>        \/\/ return MaterialPageRoute(builder: (_) =&gt; AboutPage(args));<br data-rich-text-line-break=\"true\" \/>      default:<br data-rich-text-line-break=\"true\" \/>        return _errorRoute();<br data-rich-text-line-break=\"true\" \/>    }<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>  static Route&lt;dynamic&gt; _errorRoute() {<br data-rich-text-line-break=\"true\" \/>    return MaterialPageRoute(builder: (_) {<br data-rich-text-line-break=\"true\" \/>      return Scaffold(<br data-rich-text-line-break=\"true\" \/>        appBar: AppBar(title: Text(\"Error\")),<br data-rich-text-line-break=\"true\" \/>        body: Center(child: Text('Error page')),<br data-rich-text-line-break=\"true\" \/>      );<br data-rich-text-line-break=\"true\" \/>    });<br data-rich-text-line-break=\"true\" \/>  }<br data-rich-text-line-break=\"true\" \/>}<\/code><\/pre>\r\n<p id=\"block-c01627a5-e4f1-4734-8fba-bc4a1a2da0a0\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"c01627a5-e4f1-4734-8fba-bc4a1a2da0a0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">pada contoh diatas kita juga menambahkan error page dimana jika routing tidak ditemukan maka akan menampikan halaman error tersebut<\/p>\r\n<figure id=\"block-3e4bde71-3c7b-4323-9436-1ba7c1157a7b\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"3e4bde71-3c7b-4323-9436-1ba7c1157a7b\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/09\/contoh-generate-routing-flutter.gif\" alt=\"Navigasi Routing di Flutter\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h3 id=\"block-3c1378a4-d983-4e4b-b810-12f4992bf922\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"3c1378a4-d983-4e4b-b810-12f4992bf922\" data-type=\"core\/heading\" data-title=\"Tajuk\">Mengenal Drawer Widget di Flutter<\/h3>\r\n<p>&nbsp;<\/p>\r\n<p><strong>1. untuk dokumentasi lengkapnya :&nbsp;<\/strong><\/p>\r\n<p><a href=\"https:\/\/flutter.dev\/docs\/cookbook\/design\/drawer\">https:\/\/flutter.dev\/docs\/cookbook\/design\/drawer<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-a72fb2b1-049e-4f1d-8d76-5563f364bb07\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"a72fb2b1-049e-4f1d-8d76-5563f364bb07\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Sebelum ke tahap cara membuat navigation drawer, ada baiknya kita mengerti tentang Drawer itu sendiri. Drawer widget merupakan&nbsp;single child widget yang artinya hanya dapat memiliki satu child widget di dalamnya. Karena Drawer hanya memiliki properti child dan bukan children, maka untuk menampatkan item-item lain bisa menggunakan ListView widget. Sebenarnya tidak ada keharusan menggunakan ListView namun keuntungan menggunakan ListView widget dibandingkan dengan column atau widget lainnya yaitu untuk memudahkan dalam mengatur list Item dan vertical scrolling apabila item menu melebihi tinggi layar.<\/p>\r\n<h4 id=\"block-352acb41-6604-40ff-8ea6-87b8a445390a\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"352acb41-6604-40ff-8ea6-87b8a445390a\" data-type=\"core\/heading\" data-title=\"Tajuk\">Anatomi Drawer<\/h4>\r\n<p id=\"block-dad30d6a-5954-4437-bb83-4cdb0194263c\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"dad30d6a-5954-4437-bb83-4cdb0194263c\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Anatomi dari sebuah navigation drawer menurut&nbsp;material design&nbsp;itu ada delapan (8) point, namun disini kita sederhanakan saja menjadi 4 bagian yaitu<\/p>\r\n<ol id=\"block-a8de8fa5-2fa1-4d94-8e56-ef2b667a106b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"a8de8fa5-2fa1-4d94-8e56-ef2b667a106b\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Header,<\/li>\r\n<li>List Item,<\/li>\r\n<li>Divider dan<\/li>\r\n<li>Subtitle<\/li>\r\n<\/ol>\r\n<figure id=\"block-988f4e93-2630-4b60-b835-787f74a25008\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"988f4e93-2630-4b60-b835-787f74a25008\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/08\/contoh-struktur-drawer-di-flutter-1024x876.png\" alt=\"Cara Membuat Navigation Drawer di Flutter\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h4 id=\"block-c3489d47-16ec-4872-8019-602e09b78b7d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"c3489d47-16ec-4872-8019-602e09b78b7d\" data-type=\"core\/heading\" data-title=\"Tajuk\">Jenis Drawer<\/h4>\r\n<p id=\"block-dd8d3ace-f0cd-4c50-a852-1d2512273dbc\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"dd8d3ace-f0cd-4c50-a852-1d2512273dbc\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Jenis Drawer navigasi pada flutter dibagi menjadi dua sesuai dengan letak posisi drawer itu sendiri yaitu drawer dan endDrawer. Drawer yang muncul di sebelah kiri dinamakan drawer, sedangkan apabila muncul dari sebelah kanan dinamakan endDrawer karena menggunakan properti endDrawer<\/p>\r\n<figure id=\"block-1daf8b53-f9f7-4ce4-92e2-be1b7a0f683e\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"1daf8b53-f9f7-4ce4-92e2-be1b7a0f683e\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/08\/jenis-drawer-di-flutter-1024x598.png\" alt=\"jenis drawer pada flutter\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<h3 id=\"block-1fc9667e-2008-469d-92fc-14850fff0e27\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"1fc9667e-2008-469d-92fc-14850fff0e27\" data-type=\"core\/heading\" data-title=\"Tajuk\">Cara membuat navigation drawer pada flutter :<\/h3>\r\n<p>https:\/\/www.youtube.com\/watch?v=Rp3RzZL5VaQ<\/p>\r\n<div id=\"block-fc24e904-827c-4d03-86bc-eb60f2d589c0\" class=\"wp-block-embed wp-embed-aspect-16-9 wp-has-aspect-ratio block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Sematan\" data-block=\"fc24e904-827c-4d03-86bc-eb60f2d589c0\" data-type=\"core\/embed\" data-title=\"Sematan\">\r\n<figure class=\"wp-embed-aspect-16-9 wp-has-aspect-ratio wp-block-embed is-type-video\">\r\n<div class=\"wp-block-embed__wrapper\">&nbsp;<\/div>\r\n<\/figure>\r\n<\/div>\r\n<h2 id=\"block-011ae61b-f9e1-4319-9350-d4e1611acc1d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Tajuk\" data-block=\"011ae61b-f9e1-4319-9350-d4e1611acc1d\" data-type=\"core\/heading\" data-title=\"Tajuk\">Bottom Tab Navigator<\/h2>\r\n<p><strong>1. untuk dokumentasi lengkap dari bottom tab :<\/strong><\/p>\r\n<p><a href=\"https:\/\/api.flutter.dev\/flutter\/material\/BottomNavigationBar-class.html\">https:\/\/api.flutter.dev\/flutter\/material\/BottomNavigationBar-class.html<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-6ac29b7e-545f-4261-a1b4-f0f5f649b629\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6ac29b7e-545f-4261-a1b4-f0f5f649b629\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong data-rich-text-format-boundary=\"true\">Bottom Tab <\/strong><\/p>\r\n<figure id=\"block-964b6188-2db8-4747-b233-4cc7590b4ad0\" class=\"wp-block-image block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"964b6188-2db8-4747-b233-4cc7590b4ad0\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/08\/Screen-Shot-2020-08-09-at-18.07.07.png\" alt=\"Flutter Widget : Cara Membuat Bottom Navigation Bar pada Flutter - Belajar  Flutter\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-6d9bce1f-2649-4a91-8006-96f59bbe548b\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6d9bce1f-2649-4a91-8006-96f59bbe548b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><strong data-rich-text-format-boundary=\"true\">Berikut cara pembuatannya<\/strong><\/p>\r\n<p class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6d9bce1f-2649-4a91-8006-96f59bbe548b\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">https:\/\/www.youtube.com\/watch?v=1y-gfskpMIM<\/p>\r\n<div id=\"block-3f01ab01-cf55-46d4-a015-865389fc77d2\" class=\"wp-block-embed wp-embed-aspect-16-9 wp-has-aspect-ratio block-editor-block-list__block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Sematan\" data-block=\"3f01ab01-cf55-46d4-a015-865389fc77d2\" data-type=\"core\/embed\" data-title=\"Sematan\">\r\n<figure class=\"wp-embed-aspect-16-9 wp-has-aspect-ratio wp-block-embed is-type-video\">\r\n<div class=\"wp-block-embed__wrapper\">&nbsp;<\/div>\r\n<\/figure>\r\n<\/div>\r\n<div class=\"block-list-appender wp-block\" tabindex=\"-1\">\r\n<div class=\"wp-block block-editor-default-block-appender\" data-root-client-id=\"\"><textarea class=\"block-editor-default-block-appender__content\" style=\"margin: 0px; width: 500px; height: 145px;\" role=\"button\" readonly=\"readonly\" rows=\"1\" aria-label=\"Tambahkan blok\"><\/textarea>\r\n<div class=\"components-dropdown block-editor-inserter\">&nbsp;<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<div tabindex=\"0\">&nbsp;<\/div>","waktu_publish":"2021-11-10 08:00:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:31:19","waktu_publish_formatted":" Rabu, 10 November 2021. 08:00:00 WIB."},{"id":1093,"uuid":"40efaa75-cfb3-4a5b-aa6f-72f29bc89149","author_user_id":8222,"materi_section_id":320,"judul":"Hari-14-Rest Api-State","permalink":"hari-14-rest-api-state","konten":"<h2>Stateful vs Stateless Widget<\/h2>\r\n<p>Hal yang unik dan menarik perhatian dari Flutter adalah&nbsp;<strong>stateless<\/strong>&nbsp;dan&nbsp;<strong>stateful<\/strong>&nbsp;<em>widget<\/em>, dimana kedua bagian ini memegang perannya masing-masing.&nbsp;<strong><em>Stateless widget<\/em><\/strong>&nbsp;adalah&nbsp;<em>widget<\/em>&nbsp;statis dimana seluruh konfigurasi yang dimuat didalamnya telah diinisiasi sejak awal. Sedangkan&nbsp;<strong><em>Stateful widget<\/em><\/strong>&nbsp;berlaku sebaliknya dimana sifatnya adalah dinamis, sehingga&nbsp;<em>widget<\/em>&nbsp;ini dapat diperbaharui kapanpun dibutuhkan berdasarkan&nbsp;<em>user actions<\/em>&nbsp;atau ketika terjadinya perubahan data.<\/p>\r\n<p>Untuk lebih jelas mengenai peran keduanya, maka pada artikel ini kita akan mengimplementasikan kedua jenis widget tersebut kedalam&nbsp;<em>case<\/em>&nbsp;yang telah dijelaskan sebelumnya. Pertama, buat&nbsp;<em>project<\/em>&nbsp;baru terlebih dahulu dengan&nbsp;<em>command<\/em>&nbsp;berikut &amp; tunggu hingga proses instalasinya selesai:<\/p>\r\n<p>untuk lebih jelas nya bisa mengikut video ini&nbsp;<\/p>\r\n<p>https:\/\/www.youtube.com\/watch?v=dNlWzMI6CgY<\/p>\r\n<p>&nbsp;<\/p>\r\n<h2>RESTful API<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>API (Application Program Interface) merupakan suatu bentuk interaksi antar program dalam bentuk request dan response, dimana response yang diberikan bergantung pada isi request nya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>REST (Representional State Transfer) adalah suatu arsitektur metode komunikasi untuk pertukaran data yang umumnya menggunakan protokol HTTP. REST menjadikan objek\/data pada server sebagai sumber data yang dapat ditambah, diubah atau dihapus. Dan umumnya REST dapat digunakan di berbagai bahasa pemrograman.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berdasarkan pada definisi keduanya, maka RESTful API merupakan bentuk komunikasi antar program (API) dengan menggunakan arsitektur REST, yang diantaranya menggunakan protokol HTTP. Beberapa metode HTTP yang umum digunakan, antara lain:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>GET, kegiatan menerima data.<br \/>contoh: <code>GET https:\/\/situsweb\/api\/users\/detail\/1<\/code> =&gt; mengambil data detail user dengan id = 1.<\/li>\r\n<li>POST, kegiatan pengiriman\/input data untuk diproses selanjutnya.<br \/>contoh: <code>POST https:\/\/situsweb\/api\/users<\/code> =&gt; mengirim data user.<\/li>\r\n<li>PUT, kegiatan mengubah data.<br \/>contoh <code>PUT https:\/\/situsweb\/api\/users\/update\/1<\/code> =&gt; melakukan update pada data user dengan id = 1.<\/li>\r\n<li>DELETE, kegiatan menghapus data.<br \/>contoh: <code>DELETE https:\/\/situsweb\/api\/users\/delete\/1<\/code> =&gt; menghapus data user dengan id = 1.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Perlu diperhatikan bahwa tidak semua API dapat diakses secara langsung, dan memerlukan Authentication. Dalam hal ini terkadang perlu dilakukan registrasi\/pendaftaran pada situs penyedia API tersebut. Setelah proses pendaftaran, biasanya akan diperoleh kode seperti API key, atau OAUTH token, atau bisa juga dalam bentuk client_id dan client_secret. Kode tersebut harus disertakan setiap kali melakukan request pada situs penyedia API tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Postman<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Postman merupakan salah satu aplikasi terpopuler dalam menangani API. Untuk menggunakannya Anda bisa terlebih dahulu mendownload nya di link berikut: <a href=\"https:\/\/www.postman.com\/downloads\/\">https:\/\/www.postman.com\/downloads\/<\/a>. Setelah mendownload aplikasi Postman tersebut, lakukan instalasi dan kemudian lakukan Sign Up (bisa dilakukan melalui aplikasi atau melalui web berikut: <a href=\"https:\/\/identity.getpostman.com\/signup\">https:\/\/identity.getpostman.com\/signup<\/a>).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah Sign Up dan berhasil masuk ke dalam aplikasi Postman, berikut tampilan yang akan Anda temukan:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5243,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5243\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman1-1024x549.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Collection<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Disarankan untuk mengelompokkan API yang akan digunakan pada satu Collection, dengan cara memilih menu \"Collection\" pada sidebar dan klik \"+ New Collection\" kemudian memasukkan nama Collection tersebut, bisa menggunakan nama Project maupun nama web \/ sumber API nya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5244,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5244\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman4-618x1024.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Request<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya Anda bisa menambahkan request API dengan menekan tombol \"+\" pada menu yang tersedia (1) . Selanjutnya Anda bisa memasukkan URL yang dituju pada bagian yang telah disediakan (2). Pada Postman telah disediakan berbagai method yang dapat Anda temukan pada sebelah kiri dari kolom input URL, mulai dari GET, POST, PUT, DELETE dan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5209,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5209\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman2-1024x549.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dibawah kolom input URL, Anda akan menemukan menu\/tab \"Params\", \"Authentication\", \"Header\", \"Body\", dan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Menu \"Params\" yang dapat digunakan untuk menambah query yang akan membuat URL yang digunakan bertambah panjang (biasanya diawali dengan \"?\").<\/li>\r\n<li>Pada menu \"Authentication\", Anda akan menemukan metode Auth yang terkadang diperlukan untuk dapat mengakses suatu API (umumnya menggunakan API Key, Bearer Token, atau OAuth tergantung sumber\/penyedia API).<\/li>\r\n<li>Pada menu \"Header\", Anda juga dapat mengatur Authentication dengan menggunakan key \"Authentication\" dan value dari Authentication yang diperlukan (misal bearer {token}). Pada bagian ini biasanya dimasukkan informasi tambahan yang digunakan oleh back-end\/server untuk mengatur bagaimana cara response akan diberikan.<\/li>\r\n<li>Menu \"Body\", yang biasa diperlukan ketika menggunakan method \"POST\" atau mengirim suatu form kepada back-end\/server.<\/li>\r\n<\/ul>","waktu_publish":"2021-11-11 08:08:00","status_publish":"publish","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:31:32","waktu_publish_formatted":" Kamis, 11 November 2021. 08:08:00 WIB."},{"id":1430,"uuid":"add1a713-372d-4a2f-993e-5a7e4b60c10b","author_user_id":8222,"materi_section_id":320,"judul":"Hari-15-Authentication","permalink":"hari-15-authentication","konten":"<h1>Flutter &ndash; Firebase Authentication<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:heading --><\/p>\r\n<p>Selain menggunakan API yang telah disediakan back-end developer maupun oleh pihak ketiga (third party), Anda juga dapat membuat API sendiri, misalnya dalam bentuk database dengan menggunakan Firebase. Authentication adalah metode keamanan yang diterapkan saat pengguna akan memasuki sebuah sistem atau aplikasi dengan cara harus memasukan email\/username dan password untuk memastikan bahwa pengguna memang memiliki hak akses ke sebuah sistem.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mulai menggunakannya Anda cukup menuju&nbsp;<a href=\"https:\/\/firebase.google.com\/\">https:\/\/firebase.google.com\/<\/a>&nbsp;dan login menggunakan akun Google Anda. Langkah-langkah yang diperlukan selanjutnya adalah sebagai berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Klik &ldquo;Go to Console&rdquo; yang berada pada bagian kanan atas.<\/li>\r\n<li>Buat Project baru dengan klik &ldquo;Create Project&rdquo; atau &ldquo;Add Project&rdquo; jika sudah pernah membuat project sebelumnya.<\/li>\r\n<li>Masukkan nama project Anda dan klik &ldquo;Continue&rdquo;.<\/li>\r\n<li>Anda bisa meng-enable &ldquo;Google Analytics&rdquo; dan klik &ldquo;Continue&rdquo;.<\/li>\r\n<li>Kemudian Anda akan diminta untuk memilih akun yang digunakan untuk menerima data dari Google Analytics, pilih &ldquo;Default Account for Firebase&rdquo; saja, selanjutnya klik &ldquo;Create Project&rdquo;.<\/li>\r\n<li>Atau Anda bisa meng-disable &ldquo;Google Analytic&rdquo; dan klik &ldquo;Create Project&rdquo;.<\/li>\r\n<li>Selanjutnya Anda tinggal menunggu project selesai dibuat.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":16090,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16090\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-53-1024x543.png\" alt=\"\" \/>\r\n<figcaption>tampilan awal firebase<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>untuk pembuatan project klik tombol tambah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16092,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16092\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-54-1024x521.png\" alt=\"\" \/>\r\n<figcaption>setelah add akan muncul seperti ini dan bisa di continue<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16093,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16093\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-55-1024x499.png\" alt=\"\" \/>\r\n<figcaption>dan ini adalah tampilan dashbord project firebase<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16094,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16094\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-56.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>dan ini merupakan macam macam service yang di tawarkan oleh firebase<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>authentication<\/li>\r\n<li>firestore<\/li>\r\n<li>Realtime Database<\/li>\r\n<li>Storage<\/li>\r\n<li>Hosting<\/li>\r\n<li>Functions<\/li>\r\n<li>Machine Learning<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Authentication mencakup proses authentication mulai dari masuk menggunakan email dan password, google, facebook dapat di handle oleh servis ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>firestore mencakup database sekaligus storage atau gabungan dari realtime database dan storage<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>realtime database adalah database yang memiliki bentuk json dalam penyimpanannya sehingga sangat fleksibel dengan data, dan tidak terbatas dengan table dan relational nya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>storage merupakan proses untuk menyimpan asset yang berupa data gambar, video, music dan lain lain, dapat disimpan di servis ini, dan setiap item yang di simpan memiliki url sendiri sendiri berdasarkan id yang telah di generate oleh firebase<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Hosting adalah servis yang disediakan firebase untuk kita mengupload file web kita yang berupa html<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Dan untuk lebih memahami tentang servis firebase sobat sanber dapat langsung menuju ke dalam latihan yang telah kita sediakan untuk sarana latihan Flutter dan firebase<\/p>","waktu_publish":"2021-11-12 08:00:00","status_publish":"publish","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-10-04 06:45:09","updated_at":"2021-10-24 12:31:47","waktu_publish_formatted":" Jumat, 12 November 2021. 08:00:00 WIB."}]},{"id":321,"uuid":"0644e1c8-0607-4020-8124-212f7c98a86c","materi_id":32,"nama":"Tugas Week 3","permalink":"tugas-week-3","urutan":7,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":null,"posting":[{"id":1097,"uuid":"220f2576-6a12-4aad-bb80-1d538c5caef1","author_user_id":8222,"materi_section_id":321,"judul":"Tugas 11-Flutter Component","permalink":"tugas-11-flutter-component","konten":"<p>Sebelum tugas mulai dikerjakan, berikut video briefing materi Component.<\/p>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/2UmWZ0y4nOU\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:embed {\"url\":\"https:\/\/www.youtube.com\/watch?v=S6hzpyKm_h0\\u0026list=PLM_B8pNCcXu3t0-DelLnrcgyJsyNlrvea\\u0026index=4\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"responsive\":true,\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\">&nbsp;<\/div>\r\n<\/figure>\r\n<p><!-- \/wp:embed --> <!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p><strong>NB Tambahan :&nbsp;<\/strong><\/p>\r\n<p><strong>NB Tambahan :<\/strong><\/p>\r\n<p><strong>NB Tambahan :<\/strong><\/p>\r\n<p>Untuk hari ini tugas telegram akan di majukan menjadi tugas11 yang sebelumnya tugas 12 jadi untuk directorynya sebagai berikut ini <strong>SanberAppFlutter-&gt;lib-&gt;Tugas-&gt;Tugas11, <\/strong>dan juga apabila ada error null safety di tambahkan saja tanda<strong> \"?\", \"!\" dan juga late di depan keyword final atau const nya&nbsp;<\/strong><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Pada tugas kali ini, Anda diminta untuk mulai membiasakan diri melakukan coding menggunakan sintaks-sintaks Flutter. Untuk itu, kali ini Anda bisa mengikuti sebuah video tutorial untuk dapat membangun tampilan\/UI sederhana dari aplikasi Telegram. Sebelum mulai mengikuti tutorial tersebut, ada beberapa tahapan yang perlu dipersiapkan, antara lain:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>1. Mempersiapkan folder<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Dalam mengerjakan tugas ini, silahkan membuat folder \"Tugas\" terlebih dahulu di dalam folder proyek Flutter yang telah dibuat. Dan di dalam folder \"<strong>Tugas<\/strong>\" buatlah folder \"<strong>Tugas11<\/strong>\". Dan di dalam folder \"<strong>Tugas11<\/strong>\", Anda bisa membuat file <strong>Telegram.dart<\/strong> dan <strong>DrawerScreen<\/strong>.<strong>dart <\/strong>dan Models untuk dummy datanya. untuk lebih jelas nya ikuti video diatas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>2. Mendownload data yang diperlukan<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>pada tutorial ini ada beberapa file yaitu models untuk dummy datanya dan juga foto profile, untuk foto profile gunakan foto masing-masing di taruh di folder assets\/img, lalu untuk file models dapat di download di link berikut ini : <a href=\"https:\/\/drive.google.com\/drive\/folders\/1tf8h_AtzO6WqwNhi4yY0xNOPhNDaEVXd?usp=sharing\">https:\/\/drive.google.com\/drive\/folders\/1tf8h_AtzO6WqwNhi4yY0xNOPhNDaEVXd?usp=sharing<\/a>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15164,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15164\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/image-4.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Tutorial Membuat UI Aplikasi Telegram<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut tutorial membangun UI aplikasi mobile Telegram. Ikuti langkah-langkah yang digunakan di video tersebut dan pastikan code yang diikuti dapat dijalankan pada perangkat Android Anda.<\/p>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/FHXkgKWx6Sc\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Dan Bagi Teman-teman yang tidak bisa mengikuti video tutorial, sobat sanber dapat mengikuti coding berikut ini :<\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p><strong>main.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15895,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15895\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-24.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Telegram.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15896,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15896\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-25.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":15897,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15897\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-26.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>DrawerScreen.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15898,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15898\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-27.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":15899,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15899\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-28.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":15900,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15900\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-29.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Model<\/strong>\/Chart_Models.dart (Sudah ada tinggal download)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15902,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15902\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-30-1024x515.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>pubspec.yaml<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15904,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15904\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-31.png\" alt=\"\" \/>\r\n<figcaption>uncoment assets ubah jadi asstes\/img<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>assets\/img<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":15905,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15905\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-32.png\" alt=\"\" \/>\r\n<figcaption>untuk foto silahkan menggunakan foto masing-masing peserta<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:embed {\"url\":\"https:\/\/www.youtube.com\/watch?v=FHXkgKWx6Sc\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"responsive\":true,\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><\/figure>\r\n<p>Jika tutorial tersebut sudah diikuti sampai selesai, selanjutnya silahkan push hasil pekerjaan Anda ke Gitlab. Dan jangan lupa untuk mengumpulkan link commit hasil pekerjaan Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":14989,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":14990,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":14991,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>","waktu_publish":"2021-11-08 08:00:00","status_publish":"publish","urutan":1,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:32:48","waktu_publish_formatted":" Senin, 08 November 2021. 08:00:00 WIB."},{"id":1098,"uuid":"a8371110-cd86-4cc3-b44c-43a91d1ca568","author_user_id":8222,"materi_section_id":321,"judul":"Tugas 12-Styling Flutter","permalink":"tugas-12-styling-flutter","konten":"<p><!-- wp:group --><\/p>\r\n<div class=\"wp-block-group\">\r\n<div class=\"wp-block-group__inner-container\"><!-- wp:columns -->\r\n<div class=\"wp-block-columns\"><!-- wp:column {\"width\":\"100%\"} -->\r\n<div class=\"wp-block-column\"><!-- wp:group -->\r\n<div class=\"wp-block-group\">\r\n<div class=\"wp-block-group__inner-container\"><!-- wp:freeform -->\r\n<p>Pada tugas kali ini, buatlah folder \"Tugas12\" di dalam folder \"Tugas\", kemudian buatlah 2 file yaitu <code>LoginScreen.dart<\/code> dan <code>HomeScreen.dart<\/code> di dalam folder \"Tugas12\" tersebut.<\/p>\r\n<p>Fokus pada tugas ini adalah mengatur layout dan styling dasar, tanpa harus menambahkan library baru. Jadi bagi Anda yang membuat mockup dengan desain yang dirasa sulit untuk diimplementasikan pada Flutter kali ini, dapat lebih fokus pada hal-hal yang sederhana, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Styling dasar: backgroundColor, padding, margin, borderWidth, borderColor, borderRadius.<\/li>\r\n<li>Styling teks: color, fontSize, fontWeight.<\/li>\r\n<li>Styling gambar: height, width,<\/li>\r\n<\/ul>\r\n<p>untuk pergantian page karena navigasi belum di ajarkan jadi pada file main.dart bisa di ganti ganti Homscreen( ) dan Loginscreen( )<\/p>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Anda juga boleh menambahkan styling property lainnya sesuai kebutuhan pada desain mockup Anda.<\/p>\r\n<!-- \/wp:freeform --> <!-- wp:image {\"id\":15968,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-15968\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/image-35.png\" alt=\"\" \/><\/figure>\r\n<!-- \/wp:image --><\/div>\r\n<\/div>\r\n<!-- \/wp:group --><\/div>\r\n<!-- \/wp:column --><\/div>\r\n<!-- \/wp:columns --><\/div>\r\n<\/div>\r\n<p><!-- \/wp:group --> <!-- wp:paragraph --><\/p>\r\n<p>untuk design lengkap figma silahkan akses link berikut ini :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/www.figma.com\/file\/whC7lSyj0cRjI6XYzVKV7Y\/Tugas-13-Layouting?node-id=0%3A1\">https:\/\/www.figma.com\/file\/whC7lSyj0cRjI6XYzVKV7Y\/Tugas-13-Layouting?node-id=0%3A1<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>untuk assets silahkan download disini :&nbsp;<\/p>\r\n<p>https:\/\/drive.google.com\/drive\/folders\/1L-YOeROcoxf6dX_a-6hpf13FVf5aL5bf?usp=sharing<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika tugas sudah selesai dikerjakan, selanjutnya silahkan push hasil pekerjaan Anda ke Gitlab. Dan jangan lupa untuk mengumpulkan link commit\/folder tugas-12 hasil pekerjaan Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-09 08:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:33:00","waktu_publish_formatted":" Selasa, 09 November 2021. 08:00:00 WIB."},{"id":1100,"uuid":"cd51b916-9e40-4fe9-9333-941c9a8f8173","author_user_id":8222,"materi_section_id":321,"judul":"Tugas 13-Flutter Navigation","permalink":"tugas-13-flutter-navigation","konten":"<p>Pada tugas kali ini silahkan membuat folder &ldquo;Tugas13&rdquo; dan disimpan pada folder Tugas Anda yang berada di folder project sanberappflutter. Selanjutnya silahkan mengikuti instruksi yang telah diberikan.<\/p>\r\n<h2 id=\"1-tutorial-react-navigation-5-x\">1. Tugas-13<\/h2>\r\n<p>pada tugas ini gabungkan 3 navigator yang ada pada flutter yang pertama :&nbsp;<\/p>\r\n<ol>\r\n<li>berpindah halaman dari halaman login yang telah dibuat pada tugas 12 ke halaman home screen<\/li>\r\n<li>buat bottom tab navigator untuk halaman homescreen, search dan akun&nbsp;<\/li>\r\n<li>buat drawer navigator untuk menampilkan drawer yang ada pada samping kiri screen<\/li>\r\n<\/ol>\r\n<p>untuk lebih jelasnya bisa melihat contoh video di bawah ini :&nbsp;<\/p>\r\n<p>Pada bagian ini, Pengarahan Tugas ke 13 ,<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/M1wOuYY7atE\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<p>Jika tugas sudah selesai dikerjakan, selanjutnya silahkan push hasil pekerjaan Anda ke Gitlab. Dan jangan lupa untuk mengumpulkan link commit hasil pekerjaan Anda ke sanbercode.com.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-11-10 08:00:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:33:14","waktu_publish_formatted":" Rabu, 10 November 2021. 08:00:00 WIB."},{"id":1435,"uuid":"c3fc8602-3f30-46d8-926a-054257f33079","author_user_id":8222,"materi_section_id":321,"judul":"Tugas-14-RestApi2","permalink":"tugas-14-restapi2","konten":"<h2>Petunjuk Pengerjaan<\/h2>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>1. Menambahkan folder baru di dalam folder Tugas<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>buatlah folder baru dengan nama \"Tugas14\" di dalam folder Tugas di dalam project sanberappflutter<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>2. kerjakan implementasi rest api di bawah ini<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>implementasi kan REST API di dalamnya dengan menggunakan untuk di video menggunakan rest api local tpi untuk hari ini kita gunakan api dari online untuk method nya ada 2 berikut link untuk implementasinya&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>1. Get untuk meminta data dari server <\/strong><\/p>\r\n<p><strong>&nbsp; &nbsp; &nbsp;GET: <\/strong>https:\/\/reqres.in\/api\/users?page=2<\/p>\r\n<p><strong><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/strong><\/p>\r\n<p><strong>2. Get Detail untuk mengembalikan data dari local ke server<\/strong><\/p>\r\n<p><strong>&nbsp; &nbsp; Get Detail:&nbsp;<\/strong> https:\/\/reqres.in\/api\/users\/:id<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>pubspec.yaml<\/strong><\/p>\r\n<p><!-- wp:image {\"id\":16988,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16988\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-5.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>directory file<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17000,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17000\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-17.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16990,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16990\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-7.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>get_data.dart<\/strong><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>Nb: untuk line nomor 28 karena terpotong sedikit tolong tambahkan \" }); \", kurung kurawal, kurung dan juga titik koma<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16992,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16992\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-9.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16993,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16993\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-10.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16995,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16995\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-12.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16996,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16996\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-13.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>get_detail_screen.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16997,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16997\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-14.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16998,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16998\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-15.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":16999,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16999\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-16.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>jika sudah selesai dan sudah bisa menampilkan data dari reqres, lankah selanjutnya silahkan di push kedalam repository nya masing-masing yaitu di bootcampflutter-&gt;sanberappflutter-&gt;lib-&gt;Tugas-&gt;Tugas14. dan jangan lupa di upload di sanbercode.com<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-11 08:00:00","status_publish":"publish","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-10-04 15:30:44","updated_at":"2021-10-24 12:33:42","waktu_publish_formatted":" Kamis, 11 November 2021. 08:00:00 WIB."},{"id":1096,"uuid":"b5115804-26c2-4bf0-b321-8fdcd0359b9e","author_user_id":8222,"materi_section_id":321,"judul":"Tugas 15-Authentication","permalink":"tugas-15-authentication","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p>flutter doctor :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":16385,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-16385\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/06\/image-2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>selanjutnya silahkan ikuti tutorial video berikut ini atau screen shoor di bawah ini inti dari pemberlajaran ini bisa menggunakan authentikasi menggunakan firebase dan juga diintegrasikan dengan menggunakan flutter :<\/p>\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/BKXSOW-Qur8\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\" data-mce-fragment=\"1\"><\/iframe><\/p>\r\n<p><!-- wp:image {\"id\":17033,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17033\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-27.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>NB: google-services.json bisa di peroleh dari firebase<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17037,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17037\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-30-1024x313.png\" alt=\"\" \/>\r\n<figcaption>package com.example.auth_google_email_password digunankan untuk mendaftarkan apps kita di firebase dan mendapatkan google-service.json<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17040,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17040\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-31-1024x542.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17042,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17042\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-32-1024x463.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17043,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17043\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-33.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17044,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17044\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-34.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17045,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17045\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-35.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17047,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17047\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-37.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17046,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17046\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-36-1024x532.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>sanberappflutter-&gt;android-&gt;build.gradle<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17035,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17035\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-29.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><strong>sanberappflutter-&gt;android-&gt;app-&gt;build.gradle<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17034,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17034\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-28.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17032,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17032\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-26.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17024,\"width\":580,\"height\":535,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large is-resized\"><img class=\"wp-image-17024\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-19.png\" alt=\"\" width=\"580\" height=\"535\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>homescreen.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17026,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17026\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-20.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17027,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17027\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-21.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>login_screen.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17028,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17028\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-22.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17029,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17029\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-23.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17030,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17030\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-24.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17031,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17031\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-25.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-12 08:00:00","status_publish":"publish","urutan":6,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:33:54","waktu_publish_formatted":" Jumat, 12 November 2021. 08:00:00 WIB."}]},{"id":322,"uuid":"b333f750-847a-4eb6-a068-773cbab8a413","materi_id":32,"nama":"Materi Week 4","permalink":"materi-week-4","urutan":8,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":null,"posting":[{"id":1102,"uuid":"aaadaa10-0d58-4590-be81-700569a3366c","author_user_id":8222,"materi_section_id":322,"judul":"Hari-16-State Management(GetX)","permalink":"hari-16-state-management-getx-","konten":"<p><strong>pada latihan kali ini kita akan berkenalan dengan state managemen di dart yaitu GetX<\/strong><\/p>\r\n<p>rangkuman materi ada di link url :&nbsp;<\/p>\r\n<p><a href=\"https:\/\/youtu.be\/wuySrzOgevY\">https:\/\/youtu.be\/wuySrzOgevY<\/a><\/p>\r\n<h1>Tentang Get<\/h1>\r\n<ul>\r\n<li>\r\n<p>GetX adalah solusi ekstra-ringan dan powerful untuk Flutter. Ini mengkombinasikan state management dengan performa tinggi, injeksi dependensi yang cerdas, dan route management secara singkat dan praktis.<\/p>\r\n<\/li>\r\n<li>\r\n<p>GetX memiliki 3 prinsip dasar, yang menjadi prioritas untuk semua resource yang ada di dalamnya:&nbsp;<strong>PRODUKTIFITAS, PERFORMA DAN ORGANISASI<\/strong><\/p>\r\n<ul>\r\n<li>\r\n<p><strong>PERFORMA:<\/strong>&nbsp;GetX fokus pada performa dan konsumsi resource minimum. GetX tidak menggunakan Stream atau ChangeNotifier.<\/p>\r\n<\/li>\r\n<li>\r\n<p><strong>PRODUKTIFITAS:<\/strong>&nbsp;GetX menggunakan sintaks yang mudah dan nyaman. Tidak peduli apa yang akan anda lakukan, akan selalu ada cara yang lebih mudah dengan GetX. Ini akan menghemat waktu development, dan meng-ekstrak performa maksimum pada aplikasi anda. Umumnya, developer akan selalu berhubungan dengan penghapusan controller dari memori. Dengan GetX, ini tidak diperlukan, karena resource akan dihapus dari memori secara default ketika tidak digunakan. Jika anda ingin menyimpannnya kedalam memori, anda harus secara eksplisit mendeklarasikan \"permanent: true\" pada dependensi anda. Dengan begitu, selain menghemat waktu, anda juga mengurangi resiko memiliki dependensi yang tidak diperlukan dalam memori. Pemuatan dependensi juga bersifat \"lazy\" secara default.<\/p>\r\n<\/li>\r\n<li>\r\n<p><strong>ORGANISASI:<\/strong>&nbsp;GetX memungkinkan pemisahan View, Presentation Logic, Business Logic, Dependency Injection, dan Navigasi. Anda tidak perlu konteks untuk berpindah antar halaman. Jadi, anda tidak lagi bergantung pada widget tree (visualisasi) untuk hal ini. Anda tidak perlu konteks untuk mengakses controller\/bloc melalui InheritedWidget. Dengan ini, anda benar benar memisahkan presentation logic dan business logic dari lapisan visual. Anda tidak perlu menginjeksi kelas Controller\/Model\/Bloc kedalam widget tree melalui multiprovider, untuk hal ini GetX menggunakan fitur dependency injection nya sendiri, memisahkan DI dari View secara total. Dengan GetX, anda tahu dimana harus mencari setiap fitur dalam aplikasi anda, memiliki kode yang bersih secara default. Ini selain untuk memfasilitasi maintenance, membuat pembagian modul, sesuatu yang hingga saat itu di Flutter tidak terpikirkan, sesuatu yang sangat mungkin. BLoC adalah permulaan awal dalam meng-organisir kode di Flutter, ini memisahkan business logic dari visualisasi. GetX adalah evolusi natural dari ini, tidak hanya memisahkan business logic, tapi juga presentation logic. Injeksi dependensi dan route juga dipisahkan sebagai bonus, dan lapisan data benar-benar terpisah secara menyeluruh. Anda tahu dimana semuanya berada, dan segalanya dengan cara yang lebih mudah daripada membuat sebuah hello world. GetX adalah cara termudah, praktis, dan scalable untuk membangun aplikasi dengan performa tinggi menggunakan Flutter SDK, dengan ekosistem besar di sekelilingnya yang bekerjasama secara sempurna, mudah dipahami untuk pemula, dan akurat untuk ahli. Aman, stabil, up-to-date, dan menawarkan banyak cakupan build-in API yang tidak tersedia di dalam default Flutter SDK.<\/p>\r\n<\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>\r\n<p>GetX tidak \"bloated\". Dirinya memiliki banyak fitur yang memungkinkan anda memulai programming tanpa mengkhawatirkan apapun, namun setiap fiturnya terletak didalam kontainer terpisah, dan hanya dimulai setelah digunakan. Jika anda hanya menggunakan State Management, hanya State Management yang akan di-compile. Jika anda hanya menggunakan routes, state management tidak akan di-compile.<\/p>\r\n<\/li>\r\n<li>\r\n<p>GetX memiliki ekosistem yang besar, komunitas yang juga besar, banyak kolaborator, dan akan di maintenance selama Flutter ada. GetX juga mampu berjalan dengan kode yang sama di Android, iOS, Web, Mac, Linux, Windows, dan server anda.&nbsp;<strong>Juga memungkinkan untuk me-reuse kode yang dibuat di frontend ke backend dengan&nbsp;<a href=\"https:\/\/github.com\/jonataslaw\/get_server\">Get Server<\/a><\/strong>.<\/p>\r\n<\/li>\r\n<\/ul>\r\n<p><strong>Selain itu, seluruh proses development bisa di automasi secara menyeluruh, untuk keduanya (server dan frontend) menggunakan&nbsp;<a href=\"https:\/\/github.com\/jonataslaw\/get_cli\">Get CLI<\/a><\/strong>.<\/p>\r\n<p><strong>Selain itu, untuk lebih meningkatkan produktifitas anda, kami memiliki&nbsp;<a href=\"https:\/\/marketplace.visualstudio.com\/items?itemName=get-snippets.get-snippets\" rel=\"nofollow\">ekstensi untuk VSCode<\/a>&nbsp;dan&nbsp;<a href=\"https:\/\/plugins.jetbrains.com\/plugin\/14975-getx-snippets\" rel=\"nofollow\">ekstensi untuk Android Studio\/Intellij<\/a><\/strong><\/p>\r\n<h1><a id=\"user-content-instalasi\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#instalasi\" aria-hidden=\"true\"><\/a>Instalasi<\/h1>\r\n<p>Tambahkan Get kedalam file&nbsp;<code>pubspec.yaml<\/code>&nbsp;anda:<\/p>\r\n<div class=\"highlight highlight-source-yaml position-relative\">\r\n<pre><span class=\"pl-ent\">dependencies<\/span>:\r\n  <span class=\"pl-ent\">get<\/span>:<\/pre>\r\n<\/div>\r\n<p>Import get didalam file dimana get akan digunakan:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-k\">import<\/span> <span class=\"pl-s\">'package:get\/get.dart'<\/span>;<\/pre>\r\n<\/div>\r\n<h1><a id=\"user-content-aplikasi-counter-menggunakan-getx\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#aplikasi-counter-menggunakan-getx\" aria-hidden=\"true\"><\/a>Aplikasi Counter menggunakan GetX<\/h1>\r\n<p>Proyek \"counter\" yang dibuat secara default ketika membuat proyek Flutter memiliki lebih dari 100 baris (termasuk comment). Untuk menunjukkan kekuatan Get, kami akan mendemonstrasikan bagaimana cara membuat \"counter\" yang mengubah state setiap klik, berpindah, dan berbagi state antar halaman, semua dalam cara yang terorganisir, memisahkan business logic dari view, dalam HANYA 26 BARIS KODE TERMASUK COMMENT.<\/p>\r\n<ul>\r\n<li>Langkah 1: Tambahkan \"Get\" sebelum MaterialApp, mengubahnya menjadi GetMaterialApp<\/li>\r\n<\/ul>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-k\">void<\/span> <span class=\"pl-en\">main<\/span>() <span class=\"pl-k\">=&gt;<\/span> <span class=\"pl-en\">runApp<\/span>(<span class=\"pl-c1\">GetMaterialApp<\/span>(home<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">Home<\/span>()));<\/pre>\r\n<\/div>\r\n<ul>\r\n<li>\r\n<p>Catatan: ini tidak mengubah MaterialApp bawaan Flutter, GetMaterialApp bukan sebuah MaterialApp yang dimodifikasi, itu hanyalah sebuah Widget yang telah dikonfigurasi sebelumnya, yang mana memiliki default MaterialApp sebagai child. Anda bisa mengkonfigurasinya secara manual, namun hal itu benar-benar tidak diperlukan. GetMaterialApp akan membuat route, menginjeksinya, menginjeksi translasi\/terjemahan, dan semua yang anda butuhkan untuk navigasi route. Jika anda hanya menggunakan Get untuk manajemen state atau manajemen dependensi, tidak perlu menggunakan GetMaterialApp. GetMaterialApp diperlukan untuk route, snackbar, internasionalisasi\/terjemahan, bottomSheet, dialog, dan high-level API yang berhubungan dengan route dan ketiadaan konteks.<\/p>\r\n<\/li>\r\n<li>\r\n<p>Catatan&sup2;: Langkah ini hanya diperlukan jika anda akan menggunakan manajemen route (<code>Get.to()<\/code>,&nbsp;<code>Get.back()<\/code>&nbsp;dan seterusnya). Jika anda tidak menggunakannya, langkah 1 tidak diperlukan.<\/p>\r\n<\/li>\r\n<li>\r\n<p>Langkah 2: Buat file baru untuk business logic dan taruh semua variabel, metode, dan kontroler didalamnya. Anda bisa membuat variabel apapun menjadi \"observable\" menggunakan notasi tambahan \".obs\".<\/p>\r\n<\/li>\r\n<\/ul>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-k\">class<\/span> <span class=\"pl-c1\">Controller<\/span> <span class=\"pl-k\">extends<\/span> <span class=\"pl-c1\">GetxController<\/span>{\r\n  <span class=\"pl-k\">var<\/span> count <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">0.<\/span>obs;\r\n  <span class=\"pl-en\">increment<\/span>() <span class=\"pl-k\">=&gt;<\/span> count<span class=\"pl-k\">++<\/span>;\r\n}<\/pre>\r\n<\/div>\r\n<ul>\r\n<li>Langkah 3: Buat file baru untuk View, gunakan StatelessWidget dan hemat penggunaan RAM, dengan Get, anda mungkin tidak perlu lagi menggunakan StatefulWidget.<\/li>\r\n<\/ul>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-k\">class<\/span> <span class=\"pl-c1\">Home<\/span> <span class=\"pl-k\">extends<\/span> <span class=\"pl-c1\">StatelessWidget<\/span> {\r\n\r\n  <span class=\"pl-k\">@override<\/span>\r\n  <span class=\"pl-c1\">Widget<\/span> <span class=\"pl-en\">build<\/span>(context) {\r\n\r\n    <span class=\"pl-c\">\/\/ Instansiasi kelas anda menggunakan Get.put() untuk membuatnya tersedia untuk seluruh \"child\" route dibawahnya.    <\/span>\r\n    <span class=\"pl-k\">final<\/span> <span class=\"pl-c1\">Controller<\/span> c <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-c1\">Controller<\/span>());\r\n\r\n    <span class=\"pl-k\">return<\/span> <span class=\"pl-c1\">Scaffold<\/span>(\r\n      <span class=\"pl-c\">\/\/ Gunakan Obx(() =&gt; ...) untuk mengupdate Text() ketika `count` berubah.<\/span>\r\n      appBar<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">AppBar<\/span>(title<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">Obx<\/span>(() <span class=\"pl-k\">=&gt;<\/span> <span class=\"pl-c1\">Text<\/span>(<span class=\"pl-s\">\"Clicks: ${<span class=\"pl-v\">c<\/span>.<span class=\"pl-v\">count<\/span>}\"<\/span>))),\r\n\r\n      <span class=\"pl-c\">\/\/ Ganti 8 baris Navigator.push menggunan Get.to() agar lebih sederhana. Anda tidak perlu `context`.<\/span>\r\n      body<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">Center<\/span>(child<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">ElevatedButton<\/span>(\r\n              child<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">Text<\/span>(<span class=\"pl-s\">\"Go to Other\"<\/span>), onPressed<span class=\"pl-k\">:<\/span> () <span class=\"pl-k\">=&gt;<\/span> <span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">to<\/span>(<span class=\"pl-c1\">Other<\/span>()))),\r\n      floatingActionButton<span class=\"pl-k\">:<\/span>\r\n          <span class=\"pl-c1\">FloatingActionButton<\/span>(child<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">Icon<\/span>(<span class=\"pl-c1\">Icons<\/span>.add), onPressed<span class=\"pl-k\">:<\/span> c.increment));\r\n  }\r\n}\r\n\r\n<span class=\"pl-k\">class<\/span> <span class=\"pl-c1\">Other<\/span> <span class=\"pl-k\">extends<\/span> <span class=\"pl-c1\">StatelessWidget<\/span> {\r\n  <span class=\"pl-c\">\/\/ Anda bisa meminta Get untuk menemukan kontroler yang digunakan di halaman lain dan redirect ke halaman itu.<\/span>\r\n  <span class=\"pl-k\">final<\/span> <span class=\"pl-c1\">Controller<\/span> c <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">find<\/span>();\r\n\r\n  <span class=\"pl-k\">@override<\/span>\r\n  <span class=\"pl-c1\">Widget<\/span> <span class=\"pl-en\">build<\/span>(context){\r\n     <span class=\"pl-c\">\/\/ Akses variabel `count` yang telah di update.<\/span>\r\n     <span class=\"pl-k\">return<\/span> <span class=\"pl-c1\">Scaffold<\/span>(body<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">Center<\/span>(child<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">Text<\/span>(<span class=\"pl-s\">\"${<span class=\"pl-v\">c<\/span>.<span class=\"pl-v\">count<\/span>}\"<\/span>)));\r\n  }\r\n}<br \/><br \/><\/pre>\r\n<p>Hasil:<\/p>\r\n<p><a href=\"https:\/\/raw.githubusercontent.com\/jonataslaw\/getx-community\/master\/counter-app-gif.gif\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https:\/\/raw.githubusercontent.com\/jonataslaw\/getx-community\/master\/counter-app-gif.gif\" alt=\"\" \/><\/a><\/p>\r\n<p>Ini adalah proyek sederhana, namun sudah membuatnya terlihat jelas betapa powerful kemampuan yang dimiliki Get. Sepanjang proyek anda berkembang, perbedaan ini akan menjadi lebih signifikan.<\/p>\r\n<p>Get di desain untuk bekerja dalam tim, namun juga memudahkan pekerjaan untuk developer perseorangan dan membuatnya menjadi lebih sederhana.<\/p>\r\n<p>Tingkatkan deadline anda, antarkan semuanya tanpa kehilangan performa. Get bukan untuk semua orang, namun jika anda tersinggung dengan frasa tersebut, Get cocok untukmu!<\/p>\r\n<h1><a id=\"user-content-tiga-pilar\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#tiga-pilar\" aria-hidden=\"true\"><\/a>Tiga Pilar<\/h1>\r\n<h2><a id=\"user-content-state-management\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#state-management\" aria-hidden=\"true\"><\/a>State management<\/h2>\r\n<p>Get memiliki dua state manager berbeda: Simple state manager (kami menyebutnya GetBuilder) dan Reactive state manager (GetX\/Obx)<\/p>\r\n<h3><a id=\"user-content-reactive-state-manager\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#reactive-state-manager\" aria-hidden=\"true\"><\/a>Reactive State Manager<\/h3>\r\n<p>Reactive programming bisa meng-alienasi banya orang karena katanya, sulit dimengerti. GetX mengubah reactive programming menjadi sesuatu yang cukup sederhana:<\/p>\r\n<ul>\r\n<li>Anda tidak perlu membuat StreamController.<\/li>\r\n<li>Anda tidak perlu membuat StreamBuilder untuk setiap variabel.<\/li>\r\n<li>Anda tidak perlu membuat kelas untuk setiap state.<\/li>\r\n<li>Anda tidak perlu membuat get untuk sebuah value awal (initial value).<\/li>\r\n<li>Anda tidak perlu menggunakan generator kode.<\/li>\r\n<\/ul>\r\n<p>Reactive programming dengan Get semudah menggunakan setState.<\/p>\r\n<p>Bayangkan anda memiliki variabel nama, dan setiap kali anda mengubahnya, semua widget yang menggunakannya akan berubah secara otomatis.<\/p>\r\n<p>Ini variabel count anda:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-k\">var<\/span> name <span class=\"pl-k\">=<\/span> <span class=\"pl-s\">'Jonatas Borges'<\/span>;<\/pre>\r\n<\/div>\r\n<p>Untuk membuatnya \"observable\", anda hanya perlu menambahkan \".obs\" di belakangnya:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-k\">var<\/span> name <span class=\"pl-k\">=<\/span> <span class=\"pl-s\">'Jonatas Borges'<\/span>.obs;<\/pre>\r\n<\/div>\r\n<p>Dan didalam UI, ketika anda ingin menampilkan value dan update tampilan ketika value itu berubah, cukup lakukan ini:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Obx<\/span>(() <span class=\"pl-k\">=&gt;<\/span> <span class=\"pl-c1\">Text<\/span>(<span class=\"pl-s\">\"${<span class=\"pl-v\">controller<\/span>.<span class=\"pl-v\">name<\/span>}\"<\/span>));<\/pre>\r\n<\/div>\r\n<p>Selesai!&nbsp;<em>Sesederhana<\/em>&nbsp;itu.<\/p>\r\n<h3><a id=\"user-content-detail-lebih-lanjut-mengenai-state-management\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#detail-lebih-lanjut-mengenai-state-management\" aria-hidden=\"true\"><\/a>Detail lebih lanjut mengenai state management<\/h3>\r\n<p><strong>Baca penjelasan lebih lanjut tentang state management&nbsp;<a href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/documentation\/id_ID\/state_management.md\">disini<\/a>. Disana anda akan melihat contoh lebih banyak dan juga perbedaan diantara simple state manager dengan reactive state manager<\/strong><\/p>\r\n<p>Anda akan mendapatkan pemahaman yang baik tentang kekuatan dari GetX.<\/p>\r\n<h2><a id=\"user-content-route-management\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#route-management\" aria-hidden=\"true\"><\/a>Route management<\/h2>\r\n<p>Jika anda ingin menggunakan routes\/snackbars\/dialogs\/bottomsheets tanpa context, GetX luar biasa cocok untuk anda, lihat ini:<\/p>\r\n<p>Tambahkan \"Get\" sebelum MaterialApp, mengubahnya menjadi GetMaterialApp<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">GetMaterialApp<\/span>( <span class=\"pl-c\">\/\/ Sebelumnya: MaterialApp(<\/span>\r\n  home<span class=\"pl-k\">:<\/span> <span class=\"pl-c1\">MyHome<\/span>(),\r\n)<\/pre>\r\n<\/div>\r\n<p>Pindah ke halaman baru:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">to<\/span>(<span class=\"pl-c1\">NextScreen<\/span>());<\/pre>\r\n<\/div>\r\n<p>Pindah ke halaman baru menggunakan nama. Baca detail lebih lanjut tentang penamaan route&nbsp;<a href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/documentation\/id_ID\/route_management.md#navigation-with-named-routes\">disini<\/a><\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">toNamed<\/span>(<span class=\"pl-s\">'\/details'<\/span>);<\/pre>\r\n<\/div>\r\n<p>Untuk menutup snackbar, dialog, bottomsheet, atau apapun yang normalnya anda tutup menggunakan Navigator.pop(context);<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">back<\/span>();<\/pre>\r\n<\/div>\r\n<p>Untuk pergi ke halaman baru dan mencegah user kembali ke halaman sebelumnya (biasanya digunakan untuk SplashScreen, LoginScreen, dsb).<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">off<\/span>(<span class=\"pl-c1\">NextScreen<\/span>());<\/pre>\r\n<\/div>\r\n<p>Untuk pergi ke halaman baru dan batalkan navigasi sebelumnya (berguna untuk shopping cart, polls, dan test).<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">offAll<\/span>(<span class=\"pl-c1\">NextScreen<\/span>());<\/pre>\r\n<\/div>\r\n<p>Sadarkah bahwa anda tidak menggunakan context sama sekali untuk hal tersebut? Itu adalah keuntungan terbesar dalam menggunakan Get route management. Dengan ini, anda bisa mengeksekusi semua metode dari controller, tanpa ragu.<\/p>\r\n<h3><a id=\"user-content-detail-lebih-lanjut-mengenai-route-management\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#detail-lebih-lanjut-mengenai-route-management\" aria-hidden=\"true\"><\/a>Detail lebih lanjut mengenai route management<\/h3>\r\n<p><strong>Get bekerja dengan named route dan juga menawarkan kontrol dengan level yang lebih rendah untuk navigasimu! Dokumentasinya ada&nbsp;<a href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/documentation\/id_ID\/route_management.md\">disini<\/a><\/strong><\/p>\r\n<h2><a id=\"user-content-dependency-management\" class=\"anchor\" href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#dependency-management\" aria-hidden=\"true\"><\/a>Dependency management<\/h2>\r\n<p>Get memiliki dependency manager sederhana dan powerful yang memungkinkan anda mendapatkan kelas yang setara dengan Bloc atau Controller hanya dengan 1 baris kode, tanpa Provider context, tanpa inheritedWidget:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Controller<\/span> controller <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">put<\/span>(<span class=\"pl-c1\">Controller<\/span>());<\/pre>\r\n<\/div>\r\n<ul>\r\n<li>Catatan: Jika anda menggunakan State Manager milik Get, harap untuk lebih memperhatikan&nbsp;<a href=\"https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/documentation\/id_ID\/dependency_management.md#bindings\">Bindings<\/a>&nbsp;api, yang mana akan membuat pengkoneksian View terhadap Controller jadi lebih mudah.<\/li>\r\n<\/ul>\r\n<p>Daripada menginstansiasi kelas anda didalam kelas yang anda gunakan, cukup lakukan hal itu di dalam Get instance, ini akan membuatnya tersedia di semua tempat di Aplikasimu. Jadi anda bisa menggunakan controller (atau class Bloc) secara normal.<\/p>\r\n<p><strong>Tips:<\/strong>&nbsp;Dependency Management Get terpisah dari bagian lain dari package, jadi jika sebagai contoh aplikasi anda sudah menggunakan state manager (tidak peduli apapun itu), anda tidak perlu menulis ulang sama sekali, anda bisa menggunakan dependency injection tanpa masalah.<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre>controller.<span class=\"pl-en\">fetchApi<\/span>();<\/pre>\r\n<\/div>\r\n<p>Bayangkan anda bernavigasi melewati route yang sangat banyak, dan anda membutuhkan data yang tertinggal didalam controller jauh di belakang route sebelumnya, anda akan butuh state manager dikombinasikan dengan Provider atau Get_it, benar kan? Tidak dengan Get. Anda hanya perlu meminta Get untuk \"menemukan\" controllernya, anda tidak perlu dependensi tambahan:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Controller<\/span> controller <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">Get<\/span>.<span class=\"pl-en\">find<\/span>();\r\n<span class=\"pl-c\">\/\/ Ya, terlihat seperti Sulap, Get akan menemukan controller anda, dan akan mengantarkannya ke lokasi anda.<\/span>\r\n<span class=\"pl-c\">\/\/ Anda bisa memiliki 1 juta controller terinisialisasi, Get akan selalu memberimu controller yang tepat.<\/span><\/pre>\r\n<\/div>\r\n<p>Dan setelahnya anda bisa memperoleh data yang tertinggal sebelumnya:<\/p>\r\n<div class=\"highlight highlight-source-dart position-relative\">\r\n<pre><span class=\"pl-c1\">Text<\/span>(controller.textFromApi);<br \/><br \/><br \/>sumber: https:\/\/github.com\/jonataslaw\/getx\/blob\/master\/README.id-ID.md#tentang-get<\/pre>\r\n<\/div>\r\n<\/div>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-11-15 08:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:34:10","waktu_publish_formatted":" Senin, 15 November 2021. 08:00:00 WIB."},{"id":1461,"uuid":"ed297504-c794-43af-a445-a36585c5845c","author_user_id":8222,"materi_section_id":322,"judul":"Hari-17-Route management(GetX)","permalink":"hari-17-route-management-getx-","konten":"<h4><span id=\"Route_Management\">Route Management<\/span><\/h4>\r\n<p>atau dapat mengikuti video referensi berikut ini :<\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=bE9tHQGtuJ8\">https:\/\/www.youtube.com\/watch?v=bE9tHQGtuJ8<\/a><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=bE9tHQGtuJ8\">https:\/\/www.youtube.com\/watch?v=bE9tHQGtuJ8<\/a><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=bE9tHQGtuJ8\">https:\/\/www.youtube.com\/watch?v=bE9tHQGtuJ8<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Jika sebelumnya kamu pernah membaca artikel yang berjudul &ldquo;<a class=\"rank-math-link\" href=\"https:\/\/belajarflutter.com\/memahami-navigasi-routing-di-flutter\/\"><strong>Membuat Navigasi Routing di Flutter<\/strong><\/a>&rdquo; maka dengan menggunakan getX membuat route menjadi sangat sangat sangat mudah.<\/p>\r\n<p><img src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/10\/Route-Management-3-1024x512.png\" alt=\"getx route management\" \/><\/p>\r\n<p>Dapat kita lihat pada gambar diatas, perbedaan sebelum dan setelah menggunakan getX. Sangat sederhana dan mudah. Tidak lagi memerlukan context dan lainnya<\/p>\r\n<pre class=\"wp-block-code copy-the-code-target\">&nbsp;<\/pre>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-11-16 08:00:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-10-11 22:39:28","updated_at":"2021-10-24 12:34:23","waktu_publish_formatted":" Selasa, 16 November 2021. 08:00:00 WIB."},{"id":1463,"uuid":"d80197cb-49f2-4279-8239-4b067c58c725","author_user_id":8222,"materi_section_id":322,"judul":"Hari-18-Management Dependency(GetX)","permalink":"hari-18-management-dependency-getx-","konten":"<h4><span id=\"Dependency_management\">Dependency management<\/span><\/h4>\r\n<p>video referensi dapat di lihat disini :<\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=sRy6psqEEi0\">https:\/\/www.youtube.com\/watch?v=sRy6psqEEi0<\/a><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=sRy6psqEEi0\">https:\/\/www.youtube.com\/watch?v=sRy6psqEEi0<\/a><\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=sRy6psqEEi0\">https:\/\/www.youtube.com\/watch?v=sRy6psqEEi0<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>GetX memiliki pengelola dependensi yang sederhana yang memungkinkan kita mengambil class yang sama dengan Bloc atau Controller Anda hanya dengan 1 baris kode, tanpa provider context, tanpa inheritedWidget<\/p>\r\n<p>Pendekatan GetX cukup sederhana. Alih-alih membuat sebuah instance secara langsung, kita membungkusnya dengan sebuah instance Get (class), seperti ini:<\/p>\r\n<pre class=\"wp-block-code copy-the-code-target\"><code>Get.put(Controller());<\/code><\/pre>\r\n<p><code>Get.put<\/code>&nbsp;membuat dependensi tersedia untuk semua child route. Jadi, jika kita perlu mengakses instance yang sama di beberapa class lain, maka kita dapat melakukannya dengan menggunakan&nbsp;<strong><code>Get.find<\/code><\/strong>.<\/p>\r\n<pre class=\"wp-block-code copy-the-code-target\"><code>class MainPage extends StatelessWidget {\r\n  Controller controller = Get.put(Controller());\r\n}\r\n\r\nclass SecondPage extends StatelessWidget {\r\n  Controller controller = Get.find();\r\n}<\/code><\/pre>\r\n<hr class=\"wp-block-separator\" \/>\r\n<p>Bagaimana ? masih kurang menarik ? okay lanjut ke fiture lainnya<\/p>\r\n<h4><span id=\"Ganti_Tema_hanya_dengan_1_Baris_kode\">Ganti Tema hanya dengan 1 Baris kode<\/span><\/h4>\r\n<p>Membuat dynamic theme juga menjadi mudah dengan GetX, hanya dengan satu baris kode menggunakan&nbsp;<code>Get.changeTheme<\/code>&nbsp;dan selesai<\/p>\r\n<pre class=\"wp-block-code copy-the-code-target\"><code>Get.changeTheme(ThemeData.light());<\/code><\/pre>\r\n<p>atau bisa juga dengan<\/p>\r\n<pre class=\"wp-block-code copy-the-code-target\"><code>Get.changeThemeMode(ThemeMode.dark);<\/code><\/pre>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-1456\" title=\"Flutter GetX : Package Wajib untuk Flutter Developer 4\" src=\"https:\/\/belajarflutter.com\/wp-content\/uploads\/2020\/10\/dynamic-theme-flutter-dengan-getx.gif\" alt=\"dynamic theme flutter dengan\" width=\"308\" height=\"500\" loading=\"lazy\" \/><\/figure>\r\n<p>&nbsp;<\/p>\r\n<h4><span id=\"Membuat_Multi_Bahasa_dan_Locales\">Membuat Multi Bahasa dan Locales<\/span><\/h4>\r\n<p>Kita juga dapat membuat aplikasi multi bahasa dengan menggunakan class translations seperti dibawah ini<\/p>\r\n<p>&nbsp;<\/p>\r\n<\/div>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code copy-the-code-target\"><code>import 'package:get\/get.dart';\r\n\r\nclass Messages extends Translations {\r\n  @override\r\n  Map&lt;String, Map&lt;String, String&gt;&gt; get keys =&gt; {\r\n        'en_US': {\r\n          'hello': 'Hello World',\r\n        },\r\n        'id_ID': {\r\n          'hello': 'Hallo Dunia',\r\n        }\r\n      };\r\n}<br \/><\/code><br \/><br \/>Set Local<br \/><br \/><\/pre>\r\n<pre class=\"wp-block-code copy-the-code-target\"><code>return GetMaterialApp(\r\n    translations: Messages(), \/\/ your translations\r\n    locale: Locale('en', 'US'), \/\/ translations will be displayed in that locale\r\n    fallbackLocale: Locale('id', 'ID'), \/\/ set default jika locale yang dipilih tidak valid.\r\n);<br \/><br \/><\/code>menampilkan text <br \/><br \/>Text('hello'.tr);<\/pre>","waktu_publish":"2021-11-17 08:00:00","status_publish":"publish","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-10-11 23:45:15","updated_at":"2021-10-24 12:35:31","waktu_publish_formatted":" Rabu, 17 November 2021. 08:00:00 WIB."},{"id":1103,"uuid":"33f61cb1-2969-47ad-9ce8-f1c0b67cce38","author_user_id":8222,"materi_section_id":322,"judul":"Hari-18-Final Project Flutter","permalink":"hari-18-final-project-flutter","konten":"<header class=\"entry-header\">\r\n<h1 class=\"entry-title\">Final Project<\/h1>\r\n<\/header>\r\n<div class=\"entry-content\">\r\n<p><iframe src=\"https:\/\/www.youtube.com\/embed\/l9cKhCe4Ecg\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\r\n<h2 id=\"membangun-aplikasi-menggunakan-expo-react-native\"><strong>Membangun Aplikasi menggunakan Flutter<\/strong><\/h2>\r\n<h3 id=\"prasyarat\">Prasyarat<\/h3>\r\n<ol>\r\n<li>Aplikasi dibangun menggunakan Flutter<\/li>\r\n<li>Aplikasi&nbsp;<strong>terhubung dengan API<\/strong>. Boleh menggunakan public apis:&nbsp;<a href=\"https:\/\/github.com\/public-apis\/public-apis\">https:\/\/github.com\/public-apis\/public-apis<\/a>&nbsp;atau sumber API lainnya (misal&nbsp;<a href=\"https:\/\/kawalcorona.com\/api\/\">https:\/\/kawalcorona.com\/api\/<\/a> ). Jumlah API yang digunakan bebas, minimal 1 sumber API, untuk api misalkan servis terbatas boleh di migrate ke firestore\/ realtime database.<\/li>\r\n<li>Minimal memiliki 5 Halaman, antara lain:&nbsp;\r\n<ul>\r\n<li>Halaman Login\/Register Authentication firebase, halaman ini bisa authentication <strong>10 point<\/strong>.<\/li>\r\n<li>Halaman Home \/ Utama (misal pada aplikasi berita, halaman ini mencakup jenis berita yang tersedia\/ menu berita misal berita bola, berita politik dan lain lain berupa icon-icon(<strong>dummy<\/strong>)(<strong>10 point<\/strong>)).<\/li>\r\n<li>Halaman Data api (misal pada aplikasi berita, halaman ini mencakup menampilkan data yang berasal dari rest api (<strong>10 point<\/strong>)).<\/li>\r\n<li>Halaman Profile\/ About Me \/ About Us(<strong>10 point<\/strong>).<\/li>\r\n<li>Halaman Splash Screen atau get Started <strong>(10 point)<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>Menggunakan&nbsp;<strong>BLoc<\/strong>\/<strong>GetX <\/strong>untuk state management(<strong>Optional<\/strong>) nilai plus(<strong>10&nbsp;point<\/strong>).<\/li>\r\n<li>Boleh meneruskan project yang di buat dari hari ke 9 yaitu mockup figma dan disesuaikan berdasarkan Spesifikasi yang telah di tentukan di point 2-5 harap di perhatikan untuk identitas harap menggunakn identitas masing masing peserta.<\/li>\r\n<li>Bagi yang belum memiliki ide bisa mengikuti link berikut ini : https:\/\/www.figma.com\/file\/QArKicnAGxv7iWWMqmfNzP\/Final-Project?node-id=0%3A1<\/li>\r\n<\/ol>\r\n<h3 id=\"teknis-pengerjaan\">Teknis Pengerjaan<\/h3>\r\n<ol>\r\n<li>Kerjakan individu<\/li>\r\n<li>Pengerjaanya menggunakan&nbsp;<strong>satu repository private<\/strong> di Gitlab add @HilmyAch135 as maintener.&nbsp;<\/li>\r\n<li>Build APK dari aplikasi yang dibuat, bisa melihat materi berikut: <br \/>\r\n<p>Atau untuk build apk bisa melihat tutorial yang ada pada materi hari ini :<\/p>\r\n<ol id=\"block-f19e15d2-9dce-499a-9f1e-e20764dad81d\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok: Senarai\" data-block=\"f19e15d2-9dce-499a-9f1e-e20764dad81d\" data-type=\"core\/list\" data-title=\"Senarai\">\r\n<li>Build APK dari aplikasi yang dibuat, bisa melihat materi berikut:<br data-rich-text-line-break=\"true\" \/>Atau untuk build apk bisa melihat tutorial yang ada pada materi hari ini : https:\/\/www.youtube.com\/embed\/tvHc5vTB_8Q<\/li>\r\n<\/ol>\r\n<\/li>\r\n<li>\r\n<p id=\"block-6434de15-6701-4382-a110-d62949863799\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"6434de15-6701-4382-a110-d62949863799\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">pengaturan<\/p>\r\n<figure id=\"block-3180a242-25df-4dd1-bb1a-e3411db3fda1\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"3180a242-25df-4dd1-bb1a-e3411db3fda1\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/07\/image.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<p id=\"block-b32ca47e-e112-4004-b580-a6a524eef5d7\" class=\"block-editor-rich-text__editable block-editor-block-list__block wp-block rich-text\" tabindex=\"0\" role=\"group\" aria-multiline=\"true\" aria-label=\"Blok paragraf\" data-block=\"b32ca47e-e112-4004-b580-a6a524eef5d7\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">catatan: waktu menulis key alias disesuaikan dengan key alias yang terdapat pada generate keyTools nya<\/p>\r\n<figure id=\"block-43672bb6-b0aa-44af-8ddc-402e3e131457\" class=\"wp-block-image block-editor-block-list__block wp-block size-large\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Gambar\" data-block=\"43672bb6-b0aa-44af-8ddc-402e3e131457\" data-type=\"core\/image\" data-title=\"Gambar\">\r\n<div class=\"components-resizable-box__container\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/07\/image-1.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama berkasnya adalah image-1.png\" \/>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<div class=\"components-drop-zone\">&nbsp;<\/div>\r\n<\/figure>\r\n<div class=\"block-list-appender wp-block\" tabindex=\"-1\">&nbsp;<\/div>\r\n<\/li>\r\n<\/ol>\r\n<h3 id=\"pengumpulan\">Pengumpulan<\/h3>\r\n<p>Yang perlu Anda kumpulkan adalah:<\/p>\r\n<ol>\r\n<li>Buat petunjuk berisi tentang spesifikasi aplikasi di beri keterangan , menggunakan api apa saja.<\/li>\r\n<li><strong>Mockup Figma<\/strong>, konsep atau desain aplikasi final project(<strong>10 point<\/strong>)<\/li>\r\n<li><strong>Link repository Gitlab<\/strong> project Anda, yang digunakan dalam mengerjakan final project ini (<strong>10 point<\/strong>).<\/li>\r\n<li><strong>File APK<\/strong> dari aplikasi Final Project dimasukan ke Google Drive (<strong>10 point<\/strong>).<\/li>\r\n<li><strong>Video demo aplikasi<\/strong>, bisa menggunakan screen recorder ketika aplikasi digunakan pada smartphone\/emulator. Harap menampilkan seluruh halaman dan fitur dari aplikasi yang dibuat.<br \/><strong>Catatan<\/strong>: Video demo aplikasi, dikumpulkan dalam bentuk link ke situs penyimpanan Youtube dan beri judul&nbsp;<strong>Final Project Flutter<\/strong>&nbsp;dan hastag<strong> #BootcampDigitalSkill #Sanbercode #Flutter<\/strong>&nbsp;(<strong>10 point<\/strong>).<\/li>\r\n<li><strong>Jika <\/strong>sudah selesai Silahkan jadikan Story di instagram masing-masing dengan hastag <strong>#finalprojectflutter #batch28 #mobileapss<\/strong> dan jangan lupa tag <strong>@sanbercode<\/strong> (<strong>10 point<\/strong>)<\/li>\r\n<li>Batas waktu pengumpulan Final Project kali ini adalah Minggu<strong> 17 Oktober 2021 jam 23.59 WIB<\/strong>, mohon diperhatikan.<\/li>\r\n<li><strong>Apk<\/strong> Dari Flutter masukan google drive dan link kumpulkan di form dibawah ini.<\/li>\r\n<li>Dan akan di adakan closing Kelas pada hari Senin, <strong>18<\/strong> <strong>Oktober 2021 <\/strong>jam 20.00 wib<\/li>\r\n<\/ol>\r\n<h3 id=\"formulir-pengumpulan\">Formulir Pengumpulan<\/h3>\r\n<p>Keempatnya dikumpulkan melalui form berikut:<\/p>\r\n<p><strong>https:\/\/forms.gle\/oF8FMCTB1ttGehSQA<\/strong><\/p>\r\n<p>Selamat Berkreasi !<\/p>\r\n<\/div>","waktu_publish":"2021-11-17 20:00:00","status_publish":"publish","urutan":5,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:35:46","waktu_publish_formatted":" Rabu, 17 November 2021. 20:00:00 WIB."}]},{"id":323,"uuid":"1a62f2ea-a163-40a0-9f65-74aa94a8783d","materi_id":32,"nama":"Latihan Week 4","permalink":"latihan-week-4","urutan":9,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":null,"posting":[{"id":1105,"uuid":"5699d727-8ee0-4dcb-a82f-caf1b1c9fca6","author_user_id":8222,"materi_section_id":323,"judul":"Latihan-1-StateManagement","permalink":"latihan-1-statemanagement","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>untuk latihan kali ini silahkann tambahkan dependencies yang ada pada project yang perlu di tambah yaitu get, keistimewaan dari state management ini adalah bisa menggunakan stateles widget dalam menampilkan data yang berupa json selain itu aplikasi yang kira build jadi lebih rapi lagi&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17120,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17120\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-38.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>buat directory seperti di bawah ini :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17121,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17121\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-39.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":17122,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17122\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-40.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>latihan -&gt;latihan-1-&gt; controller-&gt;appcontroller.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17123,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17123\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-41.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>latihan-&gt;latihan1-&gt;model-&gt;postmodel.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17124,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17124\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-42.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>latihan-&gt;latihan1-&gt;services-&gt;services.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17125,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17125\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-43.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>latihan-&gt;latihan1-&gt;get_data_screen.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17126,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17126\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-44.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>setelah selesai silahkn di upload di directory masing-masing<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-15 00:00:00","status_publish":"publish","urutan":2,"created_by":8222,"updated_by":8222,"created_at":"2021-06-06 08:14:36","updated_at":"2021-10-24 12:36:12","waktu_publish_formatted":" Senin, 15 November 2021. 00:00:00 WIB."},{"id":1462,"uuid":"a39f3790-e520-487e-8bb9-ed616459b53b","author_user_id":8222,"materi_section_id":323,"judul":"Latihan-2-Route management","permalink":"latihan-2-route-management","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Route management gunanya agar di directory folder kita menjadi lebih rapi lagi sehingga dapat di gunankan dengan mudah dan juga setelah di gunakan diharapkan dapat membantu programmer dalam berkolaborasi dalam suatu project dengan mudah dan efisien.untuk mendalami tentnag route management pada getx teman teman dapat mengikuti gambar screen shoot berikut ini&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Sebelum masuk ke dalam latihan Silahkan dibuat dulu folder untuk latihan-2<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17131,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17131\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-45.png\" alt=\"\" \/>\r\n<figcaption>setelah itu buat file nya<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>page_1.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17132,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17132\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-46.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>page_2.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17133,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17133\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-47.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>page_3.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17137,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17137\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-51.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>kemudian buat file routes nya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>page_routes.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17135,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17135\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-49.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>route_name.dart<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17136,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17136\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-50.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>langkah terakhir buat pemanggilan di <strong>main.dart<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17138,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17138\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-52.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Nb : tolong di perhatikan untuk return MyApp menggunakan <strong>GetMaterialApp<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>setelah selesai mengerkana silahkan di commit dan di push di gitlab nya masing masing<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-16 00:00:00","status_publish":"publish","urutan":3,"created_by":8222,"updated_by":8222,"created_at":"2021-10-11 23:27:30","updated_at":"2021-10-24 12:36:28","waktu_publish_formatted":" Selasa, 16 November 2021. 00:00:00 WIB."},{"id":1466,"uuid":"85c43c8b-5af3-4fe2-ad9f-95b93c8abc76","author_user_id":8222,"materi_section_id":323,"judul":"Latihan-3-Dependency Management","permalink":"latihan-3-dependency-management","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Sebelum masuk ke final project silahkan buat <strong>directory baru\/ Project baru<\/strong> jadi tidak sama dengan bootcampflutter bernama final_poject(\"nama-project\"), kemudian atur folder-folder seperti ini :&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":17145,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-17145\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/image-53.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>fungsi dari masin- masing folder yaitu :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li><strong>config<\/strong> untuk menyimpan sambungan dependency misal http<\/li>\r\n<li><strong>controller <\/strong>untuk menyimpan logic antara model dan view\/ Ui<\/li>\r\n<li><strong>model <\/strong>untuk pemodelan data rest api \/ data dari database<\/li>\r\n<li><strong>routes <\/strong>untuk menyimpan routing yang ada pada apps<\/li>\r\n<li><strong>shared <\/strong>bisa untuk menyimpan nama nama variable<\/li>\r\n<li><strong>ui\/pages<\/strong> untuk menyimpan halaman\/ widget yang ada pada aplikasi<\/li>\r\n<li><strong>utils <\/strong>bisa untuk menyimpan data local storage, misal share prefrence<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Nb<\/strong>: untuk catatan untuk penggunaan silahkan di sesuaikan aplikasi teman teman, jika ingin ditambahkan\/ dikurangin tidak menjadi masalah karena kemabali lagi ke dalam kebutuhan teman teman.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>jika sudah selesai silahkan di commit untuk persiapan nanti malam setalah lounching final project silahkan di kerjakan<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-11-17 00:00:00","status_publish":"publish","urutan":4,"created_by":8222,"updated_by":8222,"created_at":"2021-10-13 11:13:25","updated_at":"2021-10-24 12:36:45","waktu_publish_formatted":" Rabu, 17 November 2021. 00:00:00 WIB."}]}],"list_kelas":null,"is_done":0}