{"response_code":"00","response_msg":"Berhasil mendapatkan materi kelas","materi_kelas":{"id":24,"uuid":"c97276f4-82c7-4617-8409-78fc6e82ac20","kategori_kelas_id":3,"versi":"2.0.0","created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null},"section":[{"id":201,"uuid":"05e44c9e-d3f8-46b9-9da5-70a9622291fa","materi_id":24,"nama":"Pendahuluan","permalink":"pendahuluan","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null,"posting":[{"id":714,"uuid":"f1c19914-44b8-407f-ab4e-f8cf331d5c50","author_user_id":4430,"materi_section_id":201,"judul":"Persiapan Perangkat","permalink":"persiapan-perangkat","konten":"<div class=\"entry-content\">\r\n<p>Assalamu&rsquo;alaikum warahmatullahi wabarakatuh..<\/p>\r\n<p>Artikel ini merupakan bab awal yang mencoba untuk membuat kita familiar dengan Python agar kita siap untuk mempelajari data science.<\/p>\r\n<p>Ada tiga buah cara yang bisa dilakukan untuk menggunakan&nbsp;<em>Python Interpreter.<\/em><\/p>\r\n<h2><em>1. Python using pip<\/em><\/h2>\r\n<p>Artikel ini merupakan bab awal yang mencoba untuk membuat kita familiar dengan python agar kita siap untuk mempelajari data science.<\/p>\r\n<ol>\r\n<li>Install Python<\/li>\r\n<li>Pip (Python Package Manager)<\/li>\r\n<li>Install beberapa library\/module agar bisa menjalankan jupyter notebook<\/li>\r\n<\/ol>\r\n<p>Pertama, untuk install python, kita bisa download installernya disini&nbsp;<a href=\"https:\/\/www.python.org\/\">python.org<\/a>. Pilih installer yang sesuai dengan operating system masing-masing.&nbsp;<strong>Catatan:<\/strong> saat ini ada 2 versi python, yaitu python 2.7 dan 3.x, python versi 2.7 pengembangannya sudah dihentikan pada saat artikel ini ditulis. Maka pada course ini dianjurkan untuk menginstall python 3.7xx, 3.8xx.&nbsp;<\/p>\r\n<p>Setelah menginstall python, kita dapat memastikannya dengan membuka commandprompt kemudian ketikan saja &ldquo;python&rdquo;. Setelah itu enter kemudian kita akan masuk ke environment python.<\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1092\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image.png\" sizes=\"(max-width: 972px) 100vw, 972px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image.png 972w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-300x70.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-768x180.png 768w\" alt=\"\" width=\"972\" height=\"228\" \/>\r\n<figcaption>cek python sudah terinstall<\/figcaption>\r\n<\/figure>\r\n<p>Pip (python package manager) juga sudah terinstall di komputer\/laptop masing-masing. Kita dapat memastikannya dengan ketik pip kemudian enter maka akan muncul tampilan sebagai berikut:<\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1093\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-1.png\" sizes=\"(max-width: 984px) 100vw, 984px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-1.png 984w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-1-300x150.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-1-768x385.png 768w\" alt=\"\" width=\"984\" height=\"493\" \/>\r\n<figcaption>check pip sudah terinstall<\/figcaption>\r\n<\/figure>\r\n<p>Terakhir, untuk mempersiapkan environment, kita perlu menginstall beberapa library untuk menjalankan jupyter notebook. Untuk menginstallnya, buka command prompt kemudian lakukan perintah berikut:<\/p>\r\n<pre class=\"wp-block-code\"><code>pip install ipython notebook<\/code><\/pre>\r\n<p>Setelah selesai process installasi, kita bisa check kalau kita telah bisa menjalankan jupyter notebook dengan mengetikan&nbsp;<em>jupyter notebook<\/em>&nbsp;di cmd, kemudian enter. Tunggu beberapa saat, nanti aplikasi jupyter notebook akan terbuka di default browser masing-masing dengan sendirinya. Disarankan untuk tidak dibuka di internet exploler.<\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1094\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-2.png\" sizes=\"(max-width: 962px) 100vw, 962px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-2.png 962w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-2-300x104.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-2-768x266.png 768w\" alt=\"\" width=\"962\" height=\"333\" \/>\r\n<figcaption>membuka applikasi jupyter notebook<\/figcaption>\r\n<\/figure>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1095\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-3-1024x531.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-3-1024x531.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-3-300x156.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-3-768x398.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-3.png 1362w\" alt=\"\" width=\"1024\" height=\"531\" \/>\r\n<figcaption>Tampilan awal jupyter notebook<\/figcaption>\r\n<\/figure>\r\n<p>Mulai saat ini, kita akan belajar python + data science di jupyter notebook ini. Jupyter notebook adalah suatu aplikasi dimana kita bisa membuat kode dan menjalankannya secara interaktif. Untuk mempelajari lebih jauh apa itu jupyter notebook, silakan klik&nbsp;<a href=\"https:\/\/indoml.com\/2019\/09\/29\/pengenalan-dan-panduan-jupyter-notebook-untuk-pemula\/\">disini.<\/a><\/p>\r\n<h2>2. Anaconda<\/h2>\r\n<p>Cara lain untuk mengunduh dan mengunakan Jupyter notebook adalah menggunakan platform Anaconda, ketika teman-teman mengunduh dan menginstal Anaconda maka packages yang dibutuhkan sudah terinstall disana. Cara instalasi anaconda dan dokumentasi lengkapnya, silahkan akses&nbsp;<a href=\"https:\/\/docs.anaconda.com\/anaconda\/install\/\">disini<\/a>. Setelah diinstal, teman-teman bisa launch jupyter notebook melalui Anaconda navigator:<\/p>\r\n<figure class=\"wp-block-image size-large is-resized\" style=\"text-align: center;\"><img class=\"wp-image-12456\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-navigator-1024x564.png\" sizes=\"(max-width: 631px) 100vw, 631px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-navigator-1024x564.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-navigator-300x165.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-navigator-768x423.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-navigator.png 1361w\" alt=\"\" width=\"631\" height=\"347\" \/>\r\n<figcaption>Tampilan Anconda navigator<\/figcaption>\r\n<\/figure>\r\n<p>selain itu teman-teman bisa mengaksesnya melalui anaconda prompt:<\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-12457\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-prompt.png\" sizes=\"(max-width: 982px) 100vw, 982px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-prompt.png 982w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-prompt-300x158.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/anaconda-prompt-768x404.png 768w\" alt=\"\" width=\"982\" height=\"517\" \/>\r\n<figcaption>membuka aplikasi jupyter notebook pada Anaconda prompt<\/figcaption>\r\n<\/figure>\r\n<h2>3. Google Colaboratory<\/h2>\r\n<p>Bagi teman-teman yang mengalami kesulitan dalam instalasi Python, Ipython maupun Anaconda,, tenang.. kita tetap bisa mengikuti kelas ini dengan menggunakan google colaboratory, sebuah tool yang disediakan oleh Google untuk mengeksekusi Python di browser dan jika menggunakan google colab teman-teman tidak perlu melakukan instalasi apapun cukup bermodalkan kuota internet ^_^ , silahkan akses&nbsp;<a href=\"https:\/\/colab.research.google.com\/notebooks\/intro.ipynb\">disini<\/a>.<\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-12458\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/colab-page-1024x504.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/colab-page-1024x504.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/colab-page-300x148.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/colab-page-768x378.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/colab-page.png 1364w\" alt=\"\" width=\"1024\" height=\"504\" \/>\r\n<figcaption>Tampilan google colaboratory<\/figcaption>\r\n<\/figure>\r\n<p>&nbsp;<\/p>\r\n<p><strong>Link Video Installasi Jupyter Notebook dengan Python Interpreter dan Command Prompt (Windows): <a href=\"https:\/\/youtu.be\/OizMT1av9YI\">Disini<\/a><\/strong><\/p>\r\n<\/div>","waktu_publish":"2021-10-24 20:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:02:51","waktu_publish_formatted":" Minggu, 24 Oktober 2021. 20:00:00 WIB."},{"id":715,"uuid":"1220188e-b704-425a-af94-8e3f91cf8c31","author_user_id":4430,"materi_section_id":201,"judul":"Pengerjaan Tugas Harian dan Quiz Pekanan","permalink":"pengerjaan-tugas-harian-dan-quiz-pekanan","konten":"<header class=\"entry-header\">\r\n<h1 class=\"entry-title\"><span style=\"font-size: 14px;\">1. Input Tugas Harian<\/span><\/h1>\r\n<\/header>\r\n<div class=\"entry-content\">\r\n<p>Setelah tugas di kerjakan, simpan(upload) file tugas tersebut (file dengan ekstensi .ipynb) ke dalam google drive masing-masing. Klik kanan file tersebut, kemudian klik &lsquo;Share&rsquo;.<\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-3510\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-40-49-1024x645.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-40-49-1024x645.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-40-49-300x189.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-40-49-768x484.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-40-49.png 1114w\" alt=\"\" width=\"1024\" height=\"645\" \/><\/figure>\r\n<\/div>\r\n<p>Pastikan status &lsquo;Share&rsquo; nya adalah sebagai Editor, kemudian klik &lsquo;Copy link&rsquo;.<\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-3512\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-34-12.png\" sizes=\"(max-width: 645px) 100vw, 645px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-34-12.png 645w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-34-12-300x172.png 300w\" alt=\"\" width=\"645\" height=\"370\" \/><\/figure>\r\n<\/div>\r\n<p>Setelah itu,&nbsp;<em>login&nbsp;<\/em>ke sanbercode.com kemudian akses kelas yang diikuti, pilih tab &lsquo;Kelola Tugas&rsquo;.<\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-3503\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/1-1024x232.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/1-1024x232.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/1-300x68.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/1-768x174.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/1-1536x348.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/1.png 1582w\" alt=\"\" width=\"1024\" height=\"232\" \/><\/figure>\r\n<\/div>\r\n<p>Setelah&nbsp;<strong>memilih<\/strong>&nbsp;tugas yang akan di input pada&nbsp;<strong>menu&nbsp;<em>drop-down<\/em><\/strong>, klik tombol &lsquo;Input Tugas&rsquo;. Kemudian masukkan link share tugas yang telah dikerjakan, berupa link file dari google drive.<\/p>\r\n<figure class=\"wp-block-gallery aligncenter columns-1 is-cropped\">\r\n<ul class=\"blocks-gallery-grid\">\r\n<li class=\"blocks-gallery-item\">\r\n<figure><img class=\"wp-image-3507\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-14-at-16.05.59-1024x325.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-14-at-16.05.59-1024x325.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-14-at-16.05.59-300x95.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-14-at-16.05.59-768x244.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-14-at-16.05.59-1536x487.png 1536w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-14-at-16.05.59.png 1667w\" alt=\"\" width=\"1024\" height=\"325\" data-id=\"3507\" data-full-url=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-14-at-16.05.59.png\" data-link=\"https:\/\/blog.sanbercode.com\/docs\/kurikulum-python-data-science\/tugas-week-1\/google-colab-intro\/screen-shot-2020-06-14-at-16-05-59\/\" \/><\/figure>\r\n<\/li>\r\n<\/ul>\r\n<\/figure>\r\n<p>Tunggu hingga upload berhasil dan muncul&nbsp;<em>pup up&nbsp;<\/em>pemberitahuan bahwa tugas berhasil diinput.<\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-3514\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-52-10.png\" sizes=\"(max-width: 644px) 100vw, 644px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-52-10.png 644w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-52-10-300x184.png 300w\" alt=\"\" width=\"644\" height=\"396\" \/><\/figure>\r\n<\/div>\r\n<h2 id=\"2-pengerjaan-quiz-pekanan\"><br \/>2. Pengerjaan Quiz Pekanan<\/h2>\r\n<p>Quiz pekanan dilakukan tiap akhir pekan (sabtu dan minggu). Pengerjaan Quiz menggunakan menu Quiz yang tersedia di web sanbercode.com. Waktu pengerjaan bebas kapan saja di hari sabtu dan minggu tetapi durasi waktu pengerjaan dibatasi. Quiz 1 dan 2 berbentuk pilihan ganda sedangkan Quiz 3 berupa coding. Info lebih lanjut akan disampaikan kemudian di channel materi.<\/p>\r\n<h2 id=\"3-sop-tambahan\"><br \/>3. SOP Tambahan<\/h2>\r\n<ul>\r\n<li>Pengumpulan tugas harian pada jam 13.00 WIB sampai jam 13.00 WIB esoknya. Keterlambatan pengumpulan tugas tidak akan mendapat toleransi.<\/li>\r\n<li>Bagi yang sesudah terlanjur mengumpulkan tugas dan merasa ingin memperbaiki tugasnya silahkan klik tombol &lsquo;Update&rsquo;.<\/li>\r\n<li>Pengerjaan tugas dapat dilakukan di jupyter notebook ataupun dikerjakan di google colaboratory.<\/li>\r\n<\/ul>\r\n<\/div>","waktu_publish":"2021-10-24 20:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:03:09","waktu_publish_formatted":" Minggu, 24 Oktober 2021. 20:00:00 WIB."}]},{"id":202,"uuid":"dc66b21a-1ada-4a92-8bc3-a4309cf7e360","materi_id":24,"nama":"Materi Pekan 1","permalink":"materi-pekan-1","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-06-07 16:38:35","posting":[{"id":716,"uuid":"2332786d-2617-4023-b81b-68eae578c87e","author_user_id":4430,"materi_section_id":202,"judul":"Hari 1 - Hello Python","permalink":"hari-1-hello-python","konten":"<p>Assalamu&rsquo;alaikum warahmatullahi wabarakatuh..<\/p>\r\n<p>Python adalah salah satu bahasa pemrograman yang sedang naik daun. Kepopulerannya terus meroket sejak tahun 2010. Python menjadi bahasa pemrograman yang mudah untuk dipelajari, termasuk bagi orang-orang yang baru belajar bahasa pemrograman.<\/p>\r\n<p>Kemudian apa yang membuat Python begitu populer? Beberapa diantaranya adalah:<\/p>\r\n<ol>\r\n<li>Python adalah general multipurpose programming. Artinya, dengan bahasa pemrograman Python, kita hampir bisa membuat berbagai macam aplikasi, contohnya web, desktop, game, dan lain sebagainya.<\/li>\r\n<li>Python mudah untuk dipelajari. Python didesain dengan penekanan agar mudah untuk dibaca. Kita bisa menuangkan konsep aplikasi kita kedalam bahasa python dengan baris yang relatif sedikit, sehingga kita bisa lebih cepat dan efektif dalam membangun suatu aplikasi.<\/li>\r\n<li>Python open source. Artinya, python gratis dan setiap orang bisa berkontribusi untuk perkembangan python dan membagikannya ke orang lain.<\/li>\r\n<\/ol>\r\n<h4>TIPE DATA<\/h4>\r\n<p>Tipe Data merupakan klasifikasi data yang memberi tahu interpreter bagaimana programmer akan menggunakan datanya. Tipe data dalam Python seperti berikut:<\/p>\r\n<figure class=\"wp-block-image size-large is-resized\"><img class=\"wp-image-12526\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/tipe-data.png\" sizes=\"(max-width: 640px) 100vw, 640px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/tipe-data.png 640w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/tipe-data-300x261.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/tipe-data-168x147.png 168w\" alt=\"\" width=\"640\" height=\"556\" \/>\r\n<figcaption>source : belajarpython.com<\/figcaption>\r\n<\/figure>\r\n<p>&nbsp;<\/p>\r\n<p><strong># integer<\/strong>, hastag is a comment. tidak akan dieksekusi oleh Python. Integer merupakan bilangan bulat.<\/p>\r\n<p>Jika kita menuliskan perintah seperti berikut:<\/p>\r\n<p><code>x = 2<\/code><\/p>\r\n<p><code>print(x)<\/code><\/p>\r\n<p><code>type(x)<\/code><\/p>\r\n<p>maka output dari input ini adalah:<\/p>\r\n<p><code>2<\/code><\/p>\r\n<p><code>int<\/code><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong># float,&nbsp;<\/strong> merupakan bilangan decimal. jika dalam bahasa pemrograman lain dikenal dengan tipe data double.<\/p>\r\n<p>Jika kita menuliskan perintah seperti berikut:<\/p>\r\n<p><code>x = 2.5<\/code><\/p>\r\n<p><code>print(x)<\/code><\/p>\r\n<p><code>type(x)<\/code><\/p>\r\n<p>maka output dari input ini adalah:<\/p>\r\n<p><code>2.5<\/code><\/p>\r\n<p><code>float<\/code><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>#string,<\/strong> pembuatan tipe data string ini dengan meletakkan karakter di dalam tanda petik. single petik (' ') maupun double petik (\" \") bermakna sama di Python.&nbsp;<\/p>\r\n<p><code>a = 'hello'<\/code><\/p>\r\n<p><code>b = \"hello 2\"<\/code><\/p>\r\n<p><code>print(a)<\/code><\/p>\r\n<p><code>print(b)<\/code><\/p>\r\n<p><code>type(a)<\/code><\/p>\r\n<p><code>type(b)<\/code><\/p>\r\n<p>maka ketika dieksekusi akan menghasilkan output seperti berikut:<\/p>\r\n<p><code>'hello'<\/code><\/p>\r\n<p><code>'hello 2'<\/code><\/p>\r\n<p><code>str<\/code><\/p>\r\n<p><code>str<\/code><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>#boolean\/logical,<\/strong> boolean merupakan tipe data yang bernilai True atau False.&nbsp;<\/p>\r\n<p><code>c = True<\/code><\/p>\r\n<p><code>d = False<\/code><\/p>\r\n<p><code>print(c)<\/code><\/p>\r\n<p><code>type(c)<\/code><\/p>\r\n<p>ketika dieksekusi, maka akan menghasilkan output seperti berikut:<\/p>\r\n<p><code>True<\/code><\/p>\r\n<p><code>bool<\/code><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>#Printing<\/strong><\/p>\r\n<p>Dalam Python, ada beberapa cara yang bisa digunakan untuk mencetak sebuah string, sebagai contoh :<\/p>\r\n<p><code>greeting = 'Hello'<\/code><br \/><code>name = 'Afrida'<\/code><\/p>\r\n<p><code>message = greeting + \" \" + name<\/code><\/p>\r\n<p><code>print(message)<\/code><\/p>\r\n<p>ketika dieksekusi, maka akan menghasilkan output:<\/p>\r\n<pre><code>Hello Afrida<\/code><br \/><br \/><\/pre>\r\n<p class=\"wp-block-code\">contoh selanjutnya:<br \/><br \/><code>name = 'Ayu'\r\n<\/code><\/p>\r\n<p class=\"wp-block-code\"><code>age = 17 \r\nprint('Hello i am ' + name + ' i am ' + str(age) + ' years old')\r\nprint('Hello i am ', name, ' i am ' ,age, ' years old')<\/code><br \/><br \/><\/p>\r\n<p>Selain cara diatas, kita bisa menggunakan string formatting seperti berikut:<\/p>\r\n<pre class=\"wp-block-code\"><code><strong># Old Style<\/strong>\r\n\r\nprint('Hello i am %s i am %d years old' % (name, age))\r\n\r\n<strong># 'New Style' string formatting\r\n<\/strong>\r\nprint('Hello i am {0} i am {1} years old'.format(name, age))\r\n\r\n<strong># String interpolation<\/strong>\r\n\r\nprint(f'Hello i am {name} i am {age} years old')<br \/><\/code><\/pre>\r\n<p>&nbsp;<\/p>\r\n<p><strong># Aritmatika<\/strong><\/p>\r\n<p><code>A = 12<\/code><\/p>\r\n<p><code>B = 2<\/code><\/p>\r\n<p><code>C = A + B<\/code><\/p>\r\n<p><code>D = A \/ B<\/code><\/p>\r\n<p><code>print(C)<\/code><\/p>\r\n<p><code>print(D)<\/code><code><\/code><\/p>\r\n<p>ketika dieksekusi maka akan menghasilkan output seperti berikut:<\/p>\r\n<p><code>14<\/code><\/p>\r\n<p><code>6.0<\/code><\/p>\r\n<p>Jika kita cek tipe data untuk variabel D:<\/p>\r\n<p><code>type(D)<\/code><\/p>\r\n<p>maka akan menghasilkan output:<\/p>\r\n<pre><code>float<\/code><\/pre>\r\n<p>Jika diperhatikan, mengapa output tipe data hasil pembagian adalah float sedangkan variabel numerik yang kita input bernilai integer. Pembagian di dalam Python secara default akan menghasilkan tipe data float, lalu bagaimana cara kita untuk mengubah tipe data tersebut menjadi integer? cukup tambahkan tipe data int di awal variabel.<\/p>\r\n<p><code>D = int(A \/ B)<\/code><\/p>\r\n<p><code>print(D)<\/code><\/p>\r\n<p><code>type(D)<\/code><\/p>\r\n<p>Ketika dieksekusi, maka:<\/p>\r\n<pre><code>6<\/code><\/pre>\r\n<pre><code>int<\/code><\/pre>\r\n<p>kita juga bisa mengubah tipe data variabel numerik menjadi string, sebagai contoh:<\/p>\r\n<p><code>number = 100000<\/code><br \/><code>number = str(number)<\/code><br \/><code>print(number)<\/code><br \/><code>type(number)<\/code><\/p>\r\n<p>ketika dieksekusi, maka akan menghasilkan output:<\/p>\r\n<div class=\"output_area\">\r\n<div class=\"output_subarea output_text output_stream output_stdout\">\r\n<pre><code>100000<\/code><\/pre>\r\n<\/div>\r\n<\/div>\r\n<div class=\"output_area\">\r\n<div class=\"output_subarea output_text output_result\">\r\n<pre><code>str<\/code><\/pre>\r\n<\/div>\r\n<\/div>\r\n<p>&nbsp;<\/p>\r\n<p>Untuk memahami lebih lanjut, silahkan kunjungi external resource yang telah kami sediakan di link di bawah ini:<\/p>\r\n<p>Referensi Video:<\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=SsUF-7X3ehM\">Pengenalan Python<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=rqt-T1kl4PU\">Number dan Operasi Matematika<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=xlWN2fTyQFU\">Python String<\/a><\/li>\r\n<\/ul>\r\n<h4>Referensi Artikel:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/www.petanikode.com\/python-pip\/\">https:\/\/www.petanikode.com\/python-pip\/<\/a><\/li>\r\n<li><a href=\"https:\/\/www.petanikode.com\/python-sintaks\/\">https:\/\/www.petanikode.com\/python-sintaks\/<\/a><\/li>\r\n<li><a href=\"https:\/\/belajarpython.com\/tutorial\/variabel-python\">https:\/\/belajarpython.com\/tutorial\/variabel-python<\/a><\/li>\r\n<li><a href=\"https:\/\/belajarpython.com\/tutorial\/tipe-data-python\">https:\/\/belajarpython.com\/tutorial\/tipe-data-python<\/a><\/li>\r\n<li><a href=\"https:\/\/belajarpython.com\/tutorial\/operator-python\">https:\/\/belajarpython.com\/tutorial\/operator-python<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-10-25 09:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:11:35","waktu_publish_formatted":" Senin, 25 Oktober 2021. 09:00:00 WIB."},{"id":717,"uuid":"bfb1e432-2428-4f8b-8d79-8eeb06f40168","author_user_id":4430,"materi_section_id":202,"judul":"Hari 2 \u2013 Functions, Method and Getting Help","permalink":"hari-2-functions-method-and-getting-help","konten":"<div class=\"entry-content\">\r\n<p>Sebelumnya kita telah melihat dan menggunakan fungsi-fungsi seperti print, int, float dan sebagainya. Python memiliki lebih banyak fungsi, dan membuat fungsi kita sendiri adalah bagian besar dari perjalanan kita belajar pemrograman python.<\/p>\r\n<p>Dalam bagian ini kita akan belajar lebih banyak tentang menggunakan dan mendefinisikan fungsi.<\/p>\r\n<h1 id=\"getting-help\">Getting Help<\/h1>\r\n<p>Jika kita ingin menghitung jumlah item suatu objek, kita bisa menggunakan fungsi &lsquo;len&rsquo;. Tetapi bagaimana jika kita lupa kegunaan fungsi tersebut? Maka kita bisa gunakan fungsi help.<\/p>\r\n<p>Fungsi help () merupakan salah satu fungsi yang sangat penting untuk kita pelajari. Jika kita dapat mengingat cara menggunakan help(), kita memegang kunci untuk memahami sebagian besar fungsi lainnya. Karena fungsi help() adalah suatu fungsi untuk memahami fungsi semua fungsi.<\/p>\r\n<p>Berikut ini sebuah contoh:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>print(help(len))\r\nHelp on built-in function len in module builtins:\r\n\r\nlen(obj, \/)\r\n    Return the number of items in a container.\r\n\r\n<\/code><\/span><\/pre>\r\n<p>help () menampilkan dua hal:<\/p>\r\n<p>1. header : header adalah bagian pertama dari output help, dari contoh diatas yaitu bagian len(obj, \/). Baris ini memberitahu kita bahwa fungsi len ini menerima argument sebuah object.<br \/>2. Deskripsi singkat tentang apa fungsinya.<\/p>\r\n<h1 id=\"mendefinisikan-fungsi\">Mendefinisikan fungsi&nbsp;<\/h1>\r\n<p>Python memiliki banyak sekali fungsi bawaan yang sangat membantu kita. Namun kita juga bisa membuat fungsi kita sendiri untuk melangkah lebih jauh dalam membuat suatu aplikasi. Berikut adalah contoh membuat fungsi di Python :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>def least_difference(a, b, c):\r\n    diff1 = abs(a - b)\r\n    diff2 = abs(b - c)\r\n    diff3 = abs(a - c)\r\n    return min(diff1, diff2, diff3)<\/code><\/span><\/pre>\r\n<p>Dari contoh di atas, kita membuat fungsi yang bernama least_difference, dimana fungsi ini memiliki tiga argument, yaitu a, b, c<\/p>\r\n<p>Fungsi dimulai dengan kata kunci &lsquo;def&rsquo;. Blok kode yang menjorok setelah tanda &lsquo;:&rsquo; dijalankan ketika fungsi dipanggil.<\/p>\r\n<p>&lsquo;return&rsquo; adalah kata kunci lain juga yang berkaitan dengan fungsi. Kata kunci &lsquo;return&rsquo; adalah untuk menentukan apa yang akan di hasilkan dari fungsi tersebut.<\/p>\r\n<h1 id=\"default-arguments\">Default Arguments<\/h1>\r\n<p>Perhatikan fungsi berikut :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>def greet():\r\n    print('Hello, Colion')\r\n\r\ndef greet(who=\"Colin\"):\r\n    print(\"Hello,\", who)<\/code><\/span><\/pre>\r\n<p>Dari contoh di atas, kita mendefinisikan fungsi yang memiliki arguments &lsquo;who&rsquo;. Di dalam fungsi tersebut kita mengassign nilai &ldquo;Colin&rdquo; terhadap argumen &lsquo;who&rsquo;. Ini menunjukan, jika kita tidak memberikan nilai &lsquo;who&rsquo; ketika kita memanggil fungsi tersebut.,maka fungsi tersebut akan memiliki nilai argument &lsquo;who&rsquo; sebagai &ldquo;Colion&rdquo;. Berikut contohnya :<\/p>\r\n<pre class=\"wp-block-code\"><code># memanggil fungsi tanpa memberikan nilai untuk argumentt who\r\n<span style=\"color: #e03e2d;\">print(greet()) \"Hello Colion\" # memanggil fungsi dengan memiliki argument who <\/span><\/code><br \/><span style=\"color: #e03e2d;\"><code>print(greet()) \"Hello Colin\" # memanggil fungsi dengan memberikan argument untuk nilai who <\/code><\/span><br \/><span style=\"color: #e03e2d;\"><code>print(greet(\"Fauzan\")) \"Hello Fauzan\"<\/code><\/span><\/pre>\r\n<h1>Fungsi Lambda<\/h1>\r\n<p>Fungsi Lambda dikenal sebagai fungsi anonim, dimana fungsi ini tidak terdefinisi artinya kita bisa melakukan operasi menggunakan fungsi lambda tanpa mendefinisikan terlebih dahulu fungsinya. Dalam fungsi lambda, ia bisa memiliki beberapa argumen tetapi hanya memiliki 1 ekspresi.<\/p>\r\n<figure class=\"wp-block-image size-large is-resized\"><img class=\"wp-image-12841\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/lambda-function.png\" sizes=\"(max-width: 643px) 100vw, 643px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/lambda-function.png 710w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/lambda-function-300x147.png 300w\" alt=\"\" width=\"643\" height=\"315\" \/>\r\n<figcaption>Cara penulisan fungsi lambda<br \/>source fig : faceprep.in<\/figcaption>\r\n<\/figure>\r\n<p>Sebagai contoh, kita memiliki sebuah fungsi lambda dan ingin melakukan operasi pemangkatan, bisa kita tuliskan dalam syntaks seperti berikut:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>f = lambda x : x**x\r\nf(3)\r\n\r\n#result\r\n27<\/code><\/span><\/pre>\r\n<p>Fungsi lambda bisa memiliki argumen lebih dari 1, sebagai contoh:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>f = lambda a,b : a+b\r\nf(2,4)\r\n\r\n#result\r\n6<\/code><\/span><\/pre>\r\n<h1 id=\"method\">Method<\/h1>\r\n<p>Method adalah salah satu hal yang sangat penting dalam python. memahami method akan membuat kita semakin pro dalam menggunakan bahasa python.<\/p>\r\n<p>Sederhananya, method adalah suatu fungsi yang dimiliki oleh suatu object.<\/p>\r\n<p>Apa itu object? Segala yang ada di python adalah object. Contohnya kita membuat variabel bertipe string, bertipe list, bertipe numeric dan lain sebagainya, itu semua adalah object, dan setiap object memiki fungsi yang hanya bisa digunakan oleh object tersebut. Sebagai contoh, object string memiliki method uppercase, dimana method upper ini tidak bisa digunakan oleh object lain seperti list. Tapi list juga memiliki fungsi seperti index, yang dimana fungsi index ini tidak bisa digunakan oleh data dengan tipe objek lain seperti string contohnya. Jadi intinya, fungsi yang dimiliki oleh suatu object dinamakan method. Berikut adalah contohnya :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># membuat object string\r\nhuruf_kecil = 'huruf_kecil'\r\n# memanggil salah satu method string\r\nprint(huruf_kecil.upper())\r\n'HURUF_KECIL'\r\n\r\n# mendifinisikan object list\r\nkeluarga_ucup = ['mamah', 'papah', 'ucup', 'adek ucup', 'kaka ucup']\r\n# memanggil method yang dimiliki oleh list\r\nprint(keluarga_ucup.index('ucup'))\r\n2\r\n\r\n## jika kita menggunakan method upper ketika object list, maka akan error\r\n## karena method tersebut bukan dimiliki object list\r\nprint(keluarga_ucup.upper())\r\nAttributeError                            Traceback (most recent call last)\r\n&lt;ipython-input-12-13e588d6418a&gt; in &lt;module&gt;\r\n----&gt; 1 keluarga_ucup.upper()\r\n\r\nAttributeError: 'list' object has no attribute 'upper'<\/code><\/span><\/pre>\r\n<h1 id=\"menggunakan-external-library\">Menggunakan External Library<\/h1>\r\n<p>&nbsp;<\/p>\r\n<p>So far, kita telah mengenal fungsi bawaan dari python. Fungsi bawaan adalah fungsi yang sudah ada di python tanpa kita harus menginstall apapun. Namun di python juga ada berbagai fungsi, method, object yang bukan merupakan bawaan dari python, tapi hasil kerja dari orang lain yang telah membagikannya kepada kita, sesuatu ini kita namakan external library. Kita bisa menggunakan external library tersebut dengan cara menginstallnya dan kemudian menggunakannya di kode kita.<\/p>\r\n<p>Ada banyak sekali external library di python. Beberapa external library yang sangat penting untuk data science adalah numpy, pandas, skit-learn, dan lain sebagainya.<\/p>\r\n<p>Cara untuk menginstall external library ini, yang paling mudah adalah dengan menggunakan package manager. Di python package manager ini bernama &lsquo;pip&rsquo;, contohnya bila kita ingin menginstsall library numpy, maka kita cukup membuka command prompt lalu ketikan &lsquo;pip install numpy&rsquo;, seperti contoh berikut :<\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1125\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-4.png\" alt=\"\" \/><\/figure>\r\n<p>Untuk menggunakan external library di kode python kita, kita terlebih dahulu memanggil library tersebut menggunakan suatu keyword yaitu &lsquo;import&rsquo;. Berikut adalah contoh memanggil dan menggunakan external library di python :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># Definition of radius\r\nr = 0.43\r\n\r\n# Import the math package\r\nimport math\r\npi=math.pi \r\n\r\n# Calculate C\r\nC = 2*pi*r \r\n\r\n# Calculate A\r\nA = pi*r*r \r\n\r\n# Build printout\r\nprint(\"Circumference: \" + str(C))\r\nCircumference: 2.701769682087222\r\nprint(\"Area: \" + str(A))\r\nArea: 0.5808804816487527<\/code><\/span><\/pre>\r\n<p>Dari kode block di atas kita memanggil library math, kemudian kita menggunakan attribute pi yang ada di dalam library math.<\/p>\r\n<h4>Materi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/-vHGryfTWco\" target=\"_blank\" rel=\"noopener\">Fungsi Lambda<\/a><\/li>\r\n<\/ul>\r\n<h4>Referensi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=WjM68icSw3s\">Pengenalan Fungsi<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=vWuSLG_6rxA\">Argumen Fungsi<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=23dDEp6WPH4\">Return Value Function<\/a><\/li>\r\n<\/ul>\r\n<h4>Referensi Artikel:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/belajarpython.com\/tutorial\/fungsi-python\">https:\/\/belajarpython.com\/tutorial\/fungsi-python<\/a><\/li>\r\n<li><a href=\"https:\/\/www.petanikode.com\/python-fungsi\/\">https:\/\/www.petanikode.com\/python-fungsi\/<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-10-26 09:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-25 18:46:18","waktu_publish_formatted":" Selasa, 26 Oktober 2021. 09:00:00 WIB."},{"id":718,"uuid":"b80fb0da-1e00-48df-b1c3-e843e5f3433f","author_user_id":4430,"materi_section_id":202,"judul":"Hari 3 \u2013 Logic Control Flow and Loop","permalink":"hari-3-logic-control-flow-and-loop","konten":"<p>Python memiliki sebuah tipe data bernama boolean, yang hanya memiliki 2 nilai, yaitu&nbsp;<strong>True&nbsp;<\/strong>atau&nbsp;<strong>False<\/strong>.<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ffffff;\"><code><span style=\"color: #e03e2d;\">x = True\r\nprint(x)\r\nprint(type(x))\r\nTrue &nbsp;&lt;class 'bool'&gt;<\/span><\/code><\/span><\/pre>\r\n<p>Daripada memasukan nilai boolean (True or False) langsung kepada variable, lebih baik mendapatkan nilai dengan melakukan suatu operasi. Operasi itu dinamakan&nbsp;<strong>comparison operator<\/strong>. Comparison operator ini yang nantinya akan memberikan jawaban nilai berdasarkan logic yang kita bangun. Ada beberapa dasar comparison operator, yaitu sebagai berikut :<\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1129\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-5.png\" sizes=\"(max-width: 725px) 100vw, 725px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-5.png 725w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-5-300x102.png 300w\" alt=\"\" width=\"725\" height=\"247\" \/><\/figure>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">def can_run_for_president(age):\r\n    \"\"\"Can someone of the given age run for president in the US?\"\"\"\r\n    # The US Constitution says you must \"have attained to the Age of thirty-five Years\"\r\n    return age &gt;= 35\r\n\r\nprint(\"Can a 19-year-old run for president?\", can_run_for_president(19))\r\nprint(\"Can a 45-year-old run for president?\", can_run_for_president(45))\r\n\r\nresult :\r\nCan a 19-year-old run for president? False\r\nCan a 45-year-old run for president? True<\/span><\/code><\/pre>\r\n<p>Comparison cukup pintar juga, perhatikan :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>print(3.0 == 3)\r\nTrue<\/code><\/span><\/pre>\r\n<p>Tapi tidak terlalu pintar<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>print('3'==3)\r\nFalse<\/code><\/span><\/pre>\r\n<p>Python menyediakan operator untuk menggabungkan nilai boolean menggunakan konsep bahasa standar yang biasa kita pahami seperti &ldquo;and&rdquo;, &ldquo;or&rdquo;, dan &ldquo;not&rdquo;.<\/p>\r\n<p>Dengan ini, kita dapat membuat fungsi seperti ini :<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">def can_run_for_president(age, is_natural_born_citizen):\r\n    \"\"\"Can someone of the given age and citizenship status run for president in the US?\"\"\"\r\n    # The US Constitution says you must be a natural born citizen *and* at least 35 years old\r\n    return is_natural_born_citizen and (age &gt;= 35)<\/span>\r\n\r\n<span style=\"color: #e03e2d;\">print(can_run_for_president(19, True))\r\nprint(can_run_for_president(55, False))\r\nprint(can_run_for_president(55, True))\r\n\r\nresult : \r\nFalse\r\nFalse\r\nTrue<\/span><\/code><\/pre>\r\n<p>Boolean dan conditional operator sangat berguna dalam mengatur alur atau logic di dalam kode kita. Namun Boolean dan conditional akan lebih powerful ketika kita menggunakannya bersama&nbsp;<strong>conditional statement<\/strong>, dengan menggunakan keyword&nbsp;<strong>if, else,&nbsp;<\/strong>dan&nbsp;<strong>elif<\/strong>. Conditional statement biasa disebut dengan if-then.<\/p>\r\n<p>Conditional Statement, memungkinkan programmer untuk mengeksekusi suatu kode tertentu tergantung pada beberapa kondisi Boolean. Contoh dasar dari pernyataan conditional Python adalah ini:<\/p>\r\n<pre class=\"wp-block-preformatted\"><span style=\"color: #e03e2d;\">def inspect(x):\r\n    if x == 0:\r\n        print(x, \"is zero\")\r\n    elif x &gt; 0:\r\n        print(x, \"is positive\")\r\n    elif x &lt; 0:\r\n        print(x, \"is negative\")\r\n    else:\r\n        print(x, \"is unlike anything I've ever seen...\")\r\n\r\ninspect(0)\r\ninspect(-15)\r\n\r\nresult :\r\n 0 is zero \r\n-15 is negative <\/span><\/pre>\r\n<h2 id=\"loop\">Loop<\/h2>\r\n<p>Loop adalah cara untuk berulang kali mengeksekusi beberapa kode. Ini sebuah contoh:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>planets = ['Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune']\r\nfor planet in planets:\r\n    print(planet, end=' ') # print all on same line\r\n\r\nresult :\r\nMercury Venus Earth Mars Jupiter Saturn Uranus Neptune <\/code><\/span><\/pre>\r\n<p>Ketika kita menggunakan loop, ada beberapa hal yang perlu diperhatikan :<\/p>\r\n<ol>\r\n<li>Kita perlu memberikan nama variable yang akan digunakan (dalam contoh di atas adalah planet)<\/li>\r\n<li>Serentetan nilai yang ingin kita looping untuk melakukan operasi kepada setiap elemennya ( dalam contoh di atas adalah planets ).<\/li>\r\n<\/ol>\r\n<p><strong>range()<\/strong>, range() adalah suatu fungsi yang menghasilkan suatu baris nilai. Lebih jauhnya lagi ,kita bisa menggunakan fungsi help yang telah kita pelajari sebelumnya untuk lebih faham berbagai macam cara untuk menggunakannya. Berikut merupakan satu contoh sederhana :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>for i in range(5):\r\n    print(\"Doing important work. i =\", i)\r\n\r\nresult :\r\nDoing important work. i = 0\r\nDoing important work. i = 1\r\nDoing important work. i = 2\r\nDoing important work. i = 3\r\nDoing important work. i = 4<\/code><\/span><\/pre>\r\n<p>Di python ada sebuah fungsi bawaan yang bernama&nbsp;<strong>enumerate()<\/strong>. Enumerate() memungkinkan kita untuk melakukan loop terhadap suatu object semacam list disertai dengan pengambilan index dari setiap elemennya. Contohnya seperti berikut :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>areas = [11.25, 18.0, 20.0, 10.75, 9.50]\r\n\r\n# Change for loop to use enumerate() and update print()\r\nfor index,area in enumerate(areas) :\r\n    print(\"room\"+str(index)+\": \"+str(area))\r\n\r\nresult :\r\nroom0: 11.25\r\nroom1: 18.0\r\nroom2: 20.0\r\nroom3: 10.75\r\nroom4: 9.5<\/code><\/span><\/pre>\r\n<p>Jenis loop lain dalam python adalah&nbsp;<strong>while loop<\/strong>, yang terus menerus melakukan looping sampai memenuhi suatu kondisi yang membuat dia harus berhenti, berikut contohnya :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>i = 0\r\nwhile i &lt; 10:\r\n    print(i, end=' ')\r\n    i += 1\r\n\r\nresult :\r\n0 1 2 3 4 5 6 7 8 9 <\/code><\/span><\/pre>\r\n<p>Argumen dari while loop dievaluasi setiap looping, dan loop dijalankan sampai hasil evaluasi dari conditional operator bernilai False.<\/p>\r\n<p>Di dalam looping terdapat beberapa statement yang dapat digunakan ketika memenuhi suatu kondisi, seperti&nbsp;<strong>break<\/strong>,&nbsp;<strong>continue<\/strong>&nbsp;dan&nbsp;<strong>pass<\/strong>&nbsp;statement.<\/p>\r\n<p><strong>Break&nbsp;<\/strong>statement digunakan untuk mengakhiri suatu looping jika telah memenuhi kondisi tertentu. sebagai contoh:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>while True:\r\n    a = input('input string: ')\r\n    if a == 'quit':\r\n        break\r\n    print('length of a is {}'.format(len(a)))\r\n \r\nresult:\r\ninput string: hai\r\nlength of a is 3\r\ninput string: my name is Afrida\r\nlength of a is 17\r\ninput string: Quit\r\nlength of a is 4\r\ninput string: quit   <\/code><\/span><\/pre>\r\n<p>Dari program diatas, ketika input berupa &lsquo;quit&rsquo; program akan mengakhiri looping.<\/p>\r\n<p><strong>Continue<\/strong>&nbsp;statement digunakan untuk menskip atau mengakhiri iterasi yang sedang berjalan dan melanjutkan iterasi selanjutnya. sebagai contoh:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>fruits = ['apple', 'banana', 'orange', 'grape', 'pineapple']\r\nfor i in fruits:\r\n  if i == 'orange':\r\n    continue\r\n  print('my fruit is {}'.format(i))\r\n\r\nresult:\r\nmy fruit is apple\r\nmy fruit is banana\r\nmy fruit is grape\r\nmy fruit is pineapple<\/code><\/span><\/pre>\r\n<p>Pada program di atas, iterasi akan berhenti ketika memenuhi kondisi &lsquo;orange&rsquo; dan melanjutkan ke iterasi selanjutnya.<\/p>\r\n<p><strong>Pass<\/strong>&nbsp;statement merupakan null statement. Pass digunakan ketika kita membuat suatu stament tetapi tidak ingin menambahkan suatu kode. Saat statement Pass dieksekusi, maka tidak akan terjadi apa-apa tetapi kita bisa menghindari error.<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>if True:\r\n    pass<\/code><\/span><\/pre>\r\n<p>Jika kita tidak menambahkan pass dalam kode di atas, maka akan muncul error. Karena pada if statement, looping, ataupun define fungsi empty code tidak diperbolehkan.<\/p>\r\n<h4>Exception Handling<\/h4>\r\n<p>Ketika ada suatu error di sebuah kode, Python biasanya akan berhenti mengeksekusi kode selanjutnya dan menampilkan error. Exception handling merupakan statement yang mengatur error dalam sebuah kode.<\/p>\r\n<ul>\r\n<li><strong>Try<\/strong>&nbsp;: suatu statement yang mengetes kode error<\/li>\r\n<li><strong>Except<\/strong>&nbsp;: suatu statement yang menghandle apabila ada error<\/li>\r\n<li><strong>Finally<\/strong>&nbsp;: suatu statement yang mengeksekusi suatu kode<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>a = int(input())\r\nb = int(input())\r\n\r\ntry:\r\n    c = a\/b\r\nexcept Exception as e:\r\n    print('raising error in:', e)\r\nfinally:\r\n    print('Finish')\r\n\r\n#result 1:\r\ninput number:4\r\ninput number:2\r\nFinish\r\n\r\n#result2:\r\ninput number:4\r\ninput number:0\r\nraising error in: division by zero\r\nFinish<\/code><\/span><\/pre>\r\n<h4>Referensi Video:<\/h4>\r\n<p>&nbsp;<\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=Hqndpzj0ZFg\">Percabangan 1<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=f28RoIcHZhY\">Percabangan 2<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=KMmZo_dvmyk\">Loop 1<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=L5GGd1JHqnE\">Loop 2<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=sLxR7vvPemY\">Loop 3<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=S8PxQTcme9k\">Loop 4<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=ZnBZWAUusj8\">Teknik Looping<\/a><\/li>\r\n<\/ul>\r\n<h4>Referensi Artikel:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/www.petanikode.com\/python-percabangan\/\">https:\/\/www.petanikode.com\/python-percabangan\/<\/a><\/li>\r\n<li><a href=\"https:\/\/www.petanikode.com\/python-perulangan\/\">https:\/\/www.petanikode.com\/python-perulangan\/<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-10-27 09:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-27 21:25:00","waktu_publish_formatted":" Rabu, 27 Oktober 2021. 09:00:00 WIB."},{"id":719,"uuid":"e6138a8a-ab9f-45d8-aa5a-fb4bd01a31ca","author_user_id":4430,"materi_section_id":202,"judul":"Hari 4 \u2013 Python List dan Dictionary","permalink":"hari-4-python-list-dan-dictionary","konten":"<div class=\"entry-content\">\r\n<h1 id=\"list\">List<\/h1>\r\n<p>List adalah salah satu tipe data untuk mengoleksikan data di python. Contohnya, kita punya koleksi data suhu semua anggota keluarga kita, untuk menyimpan data ini, tentunya lebih mudah kalau kita menyimpannya dalam satu tempat, dan tempat itu salah satunya bisa bernama list. Mengapa salah satunya? Karena tempat menyimpan koleksi data di python tidak hanya list, ada tipe data lain seperti dictionary, tuple, set dan lain-lain. Namun dalam pembahasan ini kita akan fokus membahas tentang list.<\/p>\r\n<p>Sampai di sini setidaknya kita sudah dapat sedikit gambaran tentang apa itu list. Selanjutnya kita akan coba pelajari bagaimana cara membuat list di python.. Berikut caranya..<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"font-family: 'courier new', courier, monospace; color: #ba372a; background-color: #ecf0f1; font-size: 12pt;\"># inisialisasi suhu anggota keluarga\r\nsuhu1 = 21\r\nsuhu2 = 20\r\nsuhu3 = 22\r\n\r\n# simpan dalam list\r\nsuhu_keluarga = [suhu1, suhu2, suhu3]<\/span><\/code><\/pre>\r\n<h2>Sifat List<\/h2>\r\n<p>Sebelumnya, kita sudah mengenal sedikit tentang list, mari kita kenal lebih dalam lagi tentang list.<\/p>\r\n<ol>\r\n<li>List berisi koleksi nilai\/data.<\/li>\r\n<li>List bisa berisi tipe data apapun dan tidak harus semua data berisi tipe data yang sama.<\/li>\r\n<li>List bisa berubah<\/li>\r\n<\/ol>\r\n<p>Untuk sifat no 1. sudah dijelaskan dan tunjukan di atas. Sekarang kita langsung bahas sifat no.2. Sebelumnya, kita sudah mengenal tentang beberapa tipe data dalam list, ada numerik, string, boolean, dan sebagainya. Nah, nilai-nilai yang bertipe data apapun dapat dimasukan sebagai koleksi di dalam list, bahkan list itu sendiri bisa ada di dalam list. Untuk lebih jelasnya mari kita lihat contoh berikut..<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"font-family: 'courier new', courier, monospace; font-size: 12pt; color: #ba372a; background-color: #ecf0f1;\"><code># membuat list\r\nsuhu_keluarga_ucup = [\r\n                'ayah ucup', 19, 'ucup', 19, 'ibu ucup', 20\r\n                ]\r\nsuhu_keluarga_boy = [\r\n                'istri boy', 20, 'anak boy', 18, 'istri kedua boy', 21\r\n                ]\r\n\r\n# membuat list dalam list dan di campur dengan data boolean\r\nsuhu_keluarga = [\r\n                suhu_keluarga_ucup, suhu_keluarga_boy, True\r\n                ]<\/code><\/span><\/pre>\r\n<h2>Akses Data List<\/h2>\r\n<p>Setelah kita bisa membuat data sederhana dengan list. Sekarang kita akan belajar bagaimana caranya mengakses data dalam list. Untuk mengakses data dalam list, python menggunakan sesuatu yang bernama index. Index menunjukan posisi suatu data di dalam list, dan python memulai index dari 0. Perlu diketahui sebelumnya bahwa ada 2 teknik untuk mengakses data di dalam list. Pertama dengan subsetting list, kedua dengan slicing list. Mari kita lihat contohnya :<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"font-family: 'courier new', courier, monospace; font-size: 12pt; color: #ba372a; background-color: #ecf0f1;\"><code># Membuat data list\r\n&gt;&gt;&gt; tinggi_badan = [\r\n                162, # index 0 \r\n                177, # index 1\r\n                182, # index 2\r\n                150, # index 3\r\n                166 # index 4\r\n                ]\r\n\r\n# Subsetting list\r\n&gt;&gt;&gt; print(tinggi_badan[0]) # posisi pertama\r\n162\r\n&gt;&gt;&gt; print(tinggi_badan[-2]) # posis kedua dari belakang\r\n150\r\n\r\n# Slicinglist\r\n# Mengambil data dengan index 0, 1, 2, 3\r\n&gt;&gt;&gt; print(tinggi_badan[:4]) \r\n[162, 177, 182, 150]\r\n# Mengambil data dengan index 2, 3, 4\r\n&gt;&gt;&gt; print(tinggi_badan[2:5])\r\n[182, 150, 166]<\/code><\/span><br \/><br \/><\/pre>\r\n<h2 id=\"manipulasi-list\">Manipulasi List&nbsp;<\/h2>\r\n<p>List adalah &ldquo;mutable&rdquo;, artinya dapat diubah.<\/p>\r\n<p>Salah satu cara untuk mengubah daftar adalah dengan menetapkan indeks atau ekspresi irisan.<\/p>\r\n<p><br \/><span style=\"font-family: 'courier new', courier, monospace; font-size: 12pt; color: #ba372a; background-color: #ecf0f1;\"><code>#<\/code><\/span><br \/><span style=\"font-family: 'courier new', courier, monospace; font-size: 12pt; color: #ba372a; background-color: #ecf0f1;\"><code>Misalnya, katakanlah kita ingin mengubah suhu ucup:<\/code><\/span><\/p>\r\n<pre class=\"wp-block-code\"><span style=\"font-family: 'courier new', courier, monospace; font-size: 12pt; color: #ba372a; background-color: #ecf0f1;\"><code># mengubah suhu ucup\r\nsuhu_keluarga_ucup[3] = 22\r\n\r\nprint(suhu_keluarga_ucup)\r\n&gt;&gt;&gt; ['ayah ucup', 19, 'ucup', 22, 'ibu ucup', 20]<\/code><\/span><\/pre>\r\n<p><span style=\"font-family: 'courier new', courier, monospace; font-size: 12pt; color: #ba372a; background-color: #ecf0f1;\"><code>katakanlah kita ingin mengganti &lsquo;ibu ucup&rsquo; dengan &lsquo;mamah ucup&rsquo;, beserta suhunya :<\/code><\/span><\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"font-family: 'courier new', courier, monospace; font-size: 12pt; color: #ba372a; background-color: #ecf0f1;\">suhu_keluarga_ucup[-2:] = ['mamah ucup', 22]\r\nprint(suhu_keluarga_ucup)\r\n&gt;&gt;&gt; ['ayah ucup', 19, 'ucup', 22, 'mamah ucup', 22]<\/span><br \/><br \/><\/code><\/pre>\r\n<p>kita juga bisa menambahkan elemen di list, yaitu dengan menggunakan &lsquo;+&rsquo; operator, katakanlah kita ingin menambahkan adik ucup beserta suhunya, berikut contohnya :<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">suhu_keluarga_ucup = suhu_keluarga_ucup + ['adik ucup', 20]\r\n\r\nprint(suhu_keluarga_ucup)\r\n&gt;&gt; ['ayah ucup', 19, 'ucup', 22, 'mamah ucup', 22, 'adik ucup', 20]<\/span><br \/><\/code><\/pre>\r\n<p>Dalam menambahkan elemen dalam list, kita bisa menggunakan metode .append() ataupun .insert() seperti contoh berikut:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">murid = ['Ayu', 'Bagus', 'Fajar', 'Cahyo', 'Ani']\r\nmurid.append('Rizky')\r\nmurid.insert(2, 'Ahmad')\r\n\r\n#result1:\r\n['Ayu', 'Bagus', 'Fajar', 'Cahyo', 'Ani', 'Rizky']\r\n\r\n#result2:\r\n['Ayu', 'Bagus', 'Ahmad', 'Fajar', 'Cahyo', 'Ani', 'Rizky']<\/span><br \/><\/code><\/pre>\r\n<p>Metode append akan menambahkan nilai ke dalam list di akhir list. Sedangkan metode insert akan menambahkan nilai ke dalam list berdasarkan indeks yang dimasukkan.<\/p>\r\n<p>selanjutnya, kita juga bisa menhilangkan element di dalam list, yaitu seperti ini :<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">del(suhu_keluarga_ucup[0])<\/span><br \/><\/code><\/pre>\r\n<p>Perhatian, setelah suatu elemen di dalam list dihapus, maka index dari seluruh elemennya pun akan berubah, contohnya di atas kita mendelete elemen dengan index 0 di list, artinya kita mendelete elemen &lsquo;ayah ucup&rsquo;, maka elemen yang lain akan berubah menyesuaikan dengan perubahan tersebut, maka ketika kita mengambil index 0 di list tersebut maka hasilnya akan seperti ini :<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">print(suhu_keluarga_ucup[0])\r\n&gt;&gt;&gt;19<\/span><br \/><\/code><\/pre>\r\n<p>selain fungsi del, kita bisa menghapus elemen dalam list menggunakan remove dan pop. remove akan menghapus suati nilai di dalam list, sedangkan pop akan menghapus nilai berdasarkan index, jika index tidak dimasukkan maka secara default pop akan menghapus elemen terakhir dalam suatu list. Berikut contohnya:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\"># murid = ['Ayu', 'Bagus', 'Fajar', 'Cahyo', 'Ani']\r\nmurid.pop(2)\r\nmurid.pop()\r\n\r\n# murid = ['Ayu', 'Bagus', 'Fajar', 'Cahyo', 'Ani']\r\nmurid.remove('Cahyo')\r\n\r\n#result1:\r\n['Ayu', 'Bagus', 'Cahyo', 'Ani']\r\n['Ayu', 'Bagus', 'Cahyo']\r\n\r\n#result2:\r\n['Ayu', 'Bagus', 'Fajar', 'Ani']<\/span><br \/><\/code><\/pre>\r\n<h2 id=\"some-function-in-list\">Some Function in List<\/h2>\r\n<p>Python memiliki beberapa fungsi bawaan yang berguna untuk bekerja dengan list. diantaranya adalah :<\/p>\r\n<p>&lsquo;len&rsquo; memberikan panjang daftar:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"background-color: #ffffff;\"><code><span style=\"color: #e03e2d;\">keluarga_ucup = ['mamah', 'papah', 'ucup', 'adek ucup', 'kaka ucup']\r\n\r\n# berapa banyak anggota keluarga ucup\r\nprint(len(keluarga_ucup))\r\n&gt;&gt;&gt;5<\/span><\/code><\/span><\/pre>\r\n<p>&lsquo;sorted&rsquo; mengurutkan elemen list:<\/p>\r\n<div class=\"wp-block-group\">\r\n<div class=\"wp-block-group__inner-container\">\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt;print(sorted(keluarga_ucup))\r\n&gt;&gt;&gt;['adek ucup', 'kaka ucup', 'mamah', 'papah', 'ucup']<\/code><\/span><\/pre>\r\n<\/div>\r\n<\/div>\r\n<p>&lsquo;sum&rsquo;, tentu fungsi ini untuk menjumlahkan:<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">primes = [2, 3, 5, 7]\r\nprint(sum(primes))\r\n&gt;&gt;&gt;17<\/span><br \/><\/code><\/pre>\r\n<p>&lsquo;.copy()&rsquo;, metode ini digunakan untuk men-copy suatu list ke dalam suatu list baru yang memiliki nilai yang sama. Dengan metode ini kita bisa melakukan manipulasi terhadap list baru tanpa mengubah nilai list aslinya, seperti contoh:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">a = [1,2,3,4,5]\r\nb = a.copy()\r\nprint(a)\r\nprint(b)\r\n\r\n#lakukan manipulasi terhadap list b\r\nb.append(6)\r\nprint(a)\r\nprint(b)\r\n\r\n#result1:\r\n[1, 2, 3, 4, 5]\r\n[1, 2, 3, 4, 5]\r\n\r\n#result2:\r\n[1, 2, 3, 4, 5]\r\n[1, 2, 3, 4, 5, 6]<\/span><br \/><\/code><\/pre>\r\n<h2>List Comperehension<\/h2>\r\n<p>List comperehension merupakan cara elegan untuk membuat list berdasarkan list yang ada. sebagai contoh:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">number = [1,5,10,6,7,8,12]\r\nresult = [i for i in number if i&gt;7]\r\n\r\nresult:\r\n[10, 8, 12]<\/span><br \/><\/code><\/pre>\r\n<h1 id=\"dictionary\">Dictionary<\/h1>\r\n<p>Dictionary adalah suatu topik yang sangat penting dalam python dan data science. Karena dictionary seperti penyusun untuk suatu objek yang lebih kompleks seperti pandas dataframe yang akan kita pelajari nanti.<\/p>\r\n<p>Jadi, dictionary ini adalah salah satu jenis tipe data di python yang memetakan antara key dan value dari suatu data. Berikut contohnya:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">numbers = {'one':1, 'two':2, 'three':3}<\/span><br \/><\/code><\/pre>\r\n<p>Kita dapat mengakses suatu nilai dalam dictionary dengan cara seperti ini:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"background-color: #ffffff; color: #e03e2d;\">&gt;&gt;&gt;print(numbers['one'])\r\n1<\/span><br \/><\/code><\/pre>\r\n<p>Kita juga dapat mengubah suatu nilai dalam dictionary dengan cara berikut:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">&gt;&gt;&gt;numbers['one'] = 'satu'\r\n&gt;&gt;&gt;print(numbers)\r\n {'one':satu, 'two':2, 'three':3}<\/span><br \/><\/code><\/pre>\r\n<p>Perhatikan value dari key &lsquo;one&rsquo; berubah dari awalnya 1 menjadi &lsquo;satu&rsquo;<\/p>\r\n<p>Jika kita melakukan loop pada suatu dictionary, maka kita akan me-loop terhadap key pada dictionary tersebut:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">for k in numbers:\r\n    print(\"{} = {}\".format(k, numbers[k]))\r\n\r\nresult :\r\none = satu\r\ntwo = 2\r\nthree = 3<\/span><br \/><\/code><\/pre>\r\n<p>Jika kita ingin melakukan iterasi terhadap valuenya saja, maka kita bisa gunakan:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">for k in numbers.values():\r\n    print(\"{}\".format(k))\r\n\r\nresult:\r\nsatu\r\n2\r\n3<\/span><br \/><\/code><\/pre>\r\n<p>Object dictionary mempunyai suatu method yang bernama items(), dimana dengan fungsi ini kita dapat melakukan loop terhadap suatu dictionary beserta dengan key dan value nya:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">for k, v in numbers.items():\r\n    print(\"{} = {}\".format(k, v))\r\n\r\nresult:\r\none = satu\r\ntwo = 2\r\nthree = 3<\/span><br \/><\/code><\/pre>\r\n<p>Dalam dictionary, untuk mengecek apakah suatu key tertentu ada dalam dictionary tersebut bisa gunakan &lsquo;in&rsquo; yang akan menghasilkan nilai Boolean True atau False, seperti berikut:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">'one' in numbers\r\n\r\nresult:\r\nTrue<\/span><br \/><\/code><\/pre>\r\n<p>Untuk menambahkan item dalam dictionary, bisa menggunakan syntaks seperti berikut:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\">numbers = {'one':1, 'two':2, 'three':3}\r\nnumbers['four'] = 10<\/span><br \/><br \/><span style=\"color: #e03e2d;\">result:<\/span><br \/><span style=\"color: #e03e2d;\">{'four': 10, 'one': 1, 'three': 3, 'two': 2}<\/span><br \/><span style=\"color: #e03e2d;\">\r\n\r\nnumbers1 = {'two':5}\r\nnumbers.update(numbers1)\r\n\r\nresult:\r\n{'four': 10, 'one': 1, 'three': 3, 'two': 5}<\/span><br \/><\/code><\/pre>\r\n<p>Dalam dictionary, kita bisa melakukan removing data dengan menggunakan method pop, clear dan del. pop akan menghapus suatu item dalam dictionary berdasarkan key-nya. clear akan menghapus keseluruhan item dalam dictionary. del akan menghapus berdasarkan key, tetapi jika tidak memasukkan key maka fungsi del akan menghapus keseluruhan dictionary. Seperti contoh berikut:<\/p>\r\n<p>&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>numbers = {'four': 10, 'one': 1, 'three': 3, 'two': 5}\r\nnumbers.pop('one')<br \/>print(numbers)<br \/><br \/>result:\r\n{'four': 10, 'three': 3, 'two': 5}<br \/><br \/>\r\nnumbers.clear()<br \/>print(numbers)<br \/><br \/>result:<br \/>{}<br \/><br \/><br \/>numbers = {'four': 10, 'three': 3, 'two': 5}\r\ndel numbers['four']<br \/>print(numbers)<br \/><br \/>result:<br \/>{'three': 3, 'two': 5}<br \/><br \/>\r\ndel numbers<br \/>print(numbers)<br \/><br \/>result:<br \/><br \/><\/code><\/span><\/pre>\r\n<pre><span style=\"color: #e03e2d;\">---------------------------------------------------------------------------\r\n<\/span><\/pre>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code><\/code><\/span><\/pre>\r\n<pre><span style=\"color: #e03e2d;\">NameError                                 Traceback (most recent call last)\r\n<\/span><\/pre>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code><\/code><\/span><\/pre>\r\n<pre><span style=\"color: #e03e2d;\"><a style=\"color: #e03e2d;\" href=\"https:\/\/localhost:8080\/\" data-href=\"&lt;ipython-input-66-b55e5d32b978&gt;\">&lt;ipython-input-66-b55e5d32b978&gt;<\/a> in &lt;module&gt;()\r\n      1 del numbers\r\n----&gt; 2 print(numbers)\r\n\r\n<\/span><\/pre>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code><\/code><\/span><\/pre>\r\n<pre><span style=\"color: #e03e2d;\">NameError: name 'numbers' is not defined<\/span><br \/><br \/><\/pre>\r\n<pre class=\"wp-block-code\"><code><\/code><\/pre>\r\n<p>Untuk memahami lebih jauh lagi tentang dictionary, kita bisa menggunakan fungsi help sebagai penolong.<\/p>\r\n<h4>Referensi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/tOJb2HvorZI\">List vs Tuple<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=kuLBqkpnKDk\">Python List<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=ARfcEqYpzkk\">Python Dictionary<\/a><\/li>\r\n<\/ul>\r\n<h4>Referensi Artikel:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/www.petanikode.com\/python-list\/\">https:\/\/www.petanikode.com\/python-list\/<\/a><\/li>\r\n<li><a href=\"https:\/\/belajarpython.com\/tutorial\/dictionary-python\">https:\/\/belajarpython.com\/tutorial\/dictionary-python<\/a><\/li>\r\n<li><a href=\"https:\/\/www.petanikode.com\/python-dictionary\/\">https:\/\/www.petanikode.com\/python-dictionary\/<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-10-28 09:00:00","status_publish":"publish","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-27 21:45:58","waktu_publish_formatted":" Kamis, 28 Oktober 2021. 09:00:00 WIB."},{"id":720,"uuid":"a3d9042c-9829-4b36-a3e5-8243d0f09917","author_user_id":4430,"materi_section_id":202,"judul":"Hari 5 \u2013 Statistika Deskriptif Untuk Data Science","permalink":"hari-5-statistika-deskriptif-untuk-data-science","konten":"<p style=\"text-align: justify;\">&nbsp;Halo Pythonista&hellip;. Dalam dunia Data Sains, pengolahan data tidak terlepas dari ilmu statistika. Statistika merupakan cabang ilmu matematika yang mempelajari bagaimana mengumpulkan, menganalisa dan mempresentasikan data. ,Secara umum, statistika dibagi menjadi 2:<\/p>\r\n<ol>\r\n<li>Descriptive Statistics. Digunakan untuk menggambarkan\/summary data. Seperti : nilai mean, median, modus, variance, standar deviasi, quartile, range dan sejenisnya. Descriptive statistics berlaku ketika pengumpulan seluruh sample data (populasi) dapat dilakukan.<\/li>\r\n<li>Inferential statistics. Digunakan untuk membuat kesimpulan yang mewakili keseluruhan data (populasi) dari kumpulan Sebagian sample. Metode yang digunakan pada inferential statistics yaitu hypothesis testing, confidence interval, correlation, regression, anova (Analysis of variance), dan sebagainya.<\/li>\r\n<\/ol>\r\n<p><strong>&nbsp;<\/strong><\/p>\r\n<h2><strong>Descriptive Statistics<\/strong><\/h2>\r\n<p>Statistika deskriptif berkaitan dengan bagaimana kita menjelaskan dan murumuskan suatu data. Umumnya digunakan dua metode pendekatan:<\/p>\r\n<ol>\r\n<li><strong>Pendekatan kuantitatif<\/strong>&nbsp;menjelaskan data secara<br \/>numerik.<\/li>\r\n<li><strong>Pendekatan visual<\/strong>&nbsp;mengilustrasikan data<br \/>menggunakan chart, plot, histogram, atau grafik lainnya.<\/li>\r\n<\/ol>\r\n<p>Kita dapat menerapkan statistika deskriptif ke dalam satu atau banyak data. Ketika kita menjelaskan dan merumuskan suatu data tunggal, maka kita sedang melakukan&nbsp;<strong>analisa univariate<\/strong>. Ketika kita mencari hubungan statistika antara sepasang data, maka kita sedang melakukan&nbsp;<strong>analisa bivariate<\/strong>. Begitu juga dengan&nbsp;<strong>analisa multivariate<\/strong>&nbsp;yang berarti kita menerapkannya pada banyak data sekaligus.<\/p>\r\n<p>Dalam statistika,&nbsp;<strong>populasi<\/strong>&nbsp;merupakan sekumpulan elemen atau sesuatu yang ingin di amati, namun cakupan populasi biasa sangat besar sehingga akan sangat sulit untuk megumpulkan dan menganalisa datanya. Itulah mengapa ahli statistik biasanya mencoba mengambil kesimpulan mengenai suatu populasi dengan menguji dan memilih perwakilan dari populasi tersebut. Perwakilan dari populasi ini yang biasa kita sebut&nbsp;<strong>sampel<\/strong>.<\/p>\r\n<ol>\r\n<li><strong>Central tendency <\/strong>(ukuran pemusatan data), biasanya kita lebih mengenal central tendency dengan Mean, Median, dan Modus.<\/li>\r\n<\/ol>\r\n<p>Mean atau rerata merupakan nilai rata-rata dari populasi. Mean dinyatakan dengan rumus berikut:<\/p>\r\n<p><img class=\"size-full wp-image-17202 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/mean1.png\" alt=\"\" width=\"119\" height=\"87\" \/><\/p>\r\n<p>Sebagai contoh, jika disediakan data set:<\/p>\r\n<p>X = {2,3,2,4,5,6,7,4,6,5}<\/p>\r\n<p>Maka mean dari X adalah:<\/p>\r\n<p><img class=\"size-full wp-image-17203 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/mean-2.png\" alt=\"\" width=\"343\" height=\"61\" \/><\/p>\r\n<p>Selain menggunakan cara mean sederhana seperti di atas, kita bisa menggunakan mean berbobot (weighted mean). Mean atau rerata berbobot adalah rata-rata yang dihitung dengan memperhitungkan timbangan \/ bobot untuk setiap datanya. Rumus dari perhitungan rerata berbobot seperti berikut:<\/p>\r\n<p><img class=\"alignnone size-full wp-image-17204\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/mean-3.png\" alt=\"\" width=\"375\" height=\"247\" \/><\/p>\r\n<p>Median merupakan datum yang terletak di tengah dari sebuah data. Syarat perhitungan median adalah diurutkan dari nilai terkecil hingga terbesar. Perhitungan median ini akan berbeda jika data berjumlah ganjil atau genap. Jika berjumlah ganjil, maka perhitungan median:<\/p>\r\n<p><img class=\"size-full wp-image-17205 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/median-1.png\" alt=\"\" width=\"147\" height=\"45\" \/><\/p>\r\n<p>Jika data berjumlah genap, maka perhitungan median menjadi seperti berikut:<\/p>\r\n<p><img class=\"size-full wp-image-17206 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/median-2.png\" alt=\"\" width=\"193\" height=\"74\" \/><\/p>\r\n<p>Modus merupakan nilai yang sering muncul.<\/p>\r\n<ol start=\"2\">\r\n<li><strong>Variability<\/strong><\/li>\r\n<\/ol>\r\n<p><strong>&nbsp;<\/strong><strong>Variability&nbsp;<\/strong>(ukuran sebaran data), cara yang paling umum untuk mengetahui ukuran sebaran data adalah dengan mengukur nilai range, interquartile range(IQR), variansi, kovariansi, dan standar deviasi dari data tersebut.<\/p>\r\n<ul>\r\n<li><strong>Range<\/strong><\/li>\r\n<\/ul>\r\n<p>Range atau rentang populasi menunjukkan nilai maksimum suatu populasi dikurangi dengan nilai minimum populasi tersebut.<\/p>\r\n<ul>\r\n<li><strong>Variance<\/strong><\/li>\r\n<\/ul>\r\n<p>Variance atau varian adalah ukuran seberapa jauh kumpulan datum tersebar. Ketika nilai variance suatu populasi adalah nol artinya semua titik sampel bernilai sama. Variance yang bernilai kecil\/rendah menandakan bahwa titik sampel cenderung dekat dengan mean. Sedangkan, jika nilai variance suatu populasi tinggi\/besar menandakan bahwa titik sampel tersebar jauh dari mean (antara data poin tersebar jauh).<\/p>\r\n<p>Variance dinyatakan dengan notasi <img class=\"alignnone size-full wp-image-17209\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/motasi-1.png\" alt=\"\" width=\"23\" height=\"22\" \/>&nbsp;atau <img class=\"alignnone size-full wp-image-17210\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/notasi-2-1.png\" alt=\"\" width=\"17\" height=\"23\" \/>atau Var (X). Formula dari variance suatu populasi adalah sebagai berikut:<\/p>\r\n<p><img class=\"size-full wp-image-17211 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/variansi.png\" alt=\"\" width=\"149\" height=\"59\" \/><\/p>\r\n<p>Interpretasi dari rumusan di atas adalah jika nilai x cenderung terkonsentrasi di dekat mean, maka variansi kecil, sedangkan jika jauh dari mean maka variansinya besar. Dapat dilihat pada gambar berikut:<\/p>\r\n<p><img class=\"size-full wp-image-17212 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/variansi-2.png\" alt=\"\" width=\"553\" height=\"348\" \/><\/p>\r\n<p>Pada kenyataannya, kita jarang sekali dapat mengukur seluruh populasi, yang bisa kita ukur hanya sampel, misalnya kita bisa saja mengukur tinggi badan peserta training data science, tapi kita tidak dapat mengukur tinggi badan seluruh manusia di bumi, hal ini akan mengakibatkan bias terhadap pengukuran yang dilakukan, oleh karena itu, agar tidak bias dalam mengukur nilai varian, maka N sebagai pembagi penjumlahan kuadrat (sum of squares) diganti dengan N-1 (degree of freedom). Rumusan varian sampel menjadi:<\/p>\r\n<p><img class=\"size-full wp-image-17213 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/variansi-3.png\" alt=\"\" width=\"182\" height=\"70\" \/><\/p>\r\n<ul>\r\n<li><strong> Standard Deviation<\/strong><\/li>\r\n<\/ul>\r\n<p>Standar deviasi atau simpangan baku adalah ukuran yang digunakan untuk mengukur jumlah variasi dari suatu data set. Standar deviasi diperoleh dari akar kuadrat dari variansi, dinyatakan sebagai berikut:<\/p>\r\n<p><img class=\"size-full wp-image-17214 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/std.png\" alt=\"\" width=\"153\" height=\"77\" \/><\/p>\r\n<p>Standar deviasi dapat menjelaskan seberapa jauh simpangan data sampel dari mean.<\/p>\r\n<ul>\r\n<li><strong>Covariance<\/strong><\/li>\r\n<\/ul>\r\n<p>Covariance atau kovarian adalah ukuran dari hubungan atau relasi linear antara dua buah variabel. Jenis hubungan yang dapat terjadi antara dua buah variabel (berdasarkan kovariannya) yaitu:<\/p>\r\n<ul>\r\n<li><strong>Positif, <\/strong>apabila nilai kovarian nya positif (&gt;0), artinya ada relasi positif antara dua variabel. Sebagai contoh, jika nilai X meningkat maka nilai Y juga meningkat.<\/li>\r\n<li><strong>Negatif, <\/strong>apabila nilai kovarian negatif (&lt;0), artinya ada relasi negatif antara dua buah variabel. Sebagai contoh, jika jika nilai x meningkat maka nilai y menurun.<\/li>\r\n<li><strong>Zero, <\/strong>apabila nilai kovarian nol, artinya tidak ada relasi antara dua variabel.<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<p>Formula kovarian antara X dan Y dirumuskan sebagai berikut:<\/p>\r\n<p><img class=\"size-full wp-image-17215 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cov-1.png\" alt=\"\" width=\"293\" height=\"69\" \/><\/p>\r\n<p>Atau<\/p>\r\n<p><img class=\"size-full wp-image-17216 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cov-2.png\" alt=\"\" width=\"275\" height=\"75\" \/><\/p>\r\n<p>Dimana:<\/p>\r\n<p>E(X), E(Y) = Nilai yang diharapkan atau probabilitas berbobot dari jumlah nilai<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Jadi antara variansi dan kovarian sebenarnya tidak saling berhubungan. Namun untuk kasus dimana Y sama dengan X maka formula di atas menjadi:<\/p>\r\n<p><img class=\"size-full wp-image-17217 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cov-3.png\" alt=\"\" width=\"265\" height=\"45\" \/><\/p>\r\n<p>Untuk kasus data 2 dimensi (x,y), apabila variabel yang sudah diketahui nilai kovariannya, lalu dicantumkan dlaam bentuk matriks, maka akan terbentuk matriks kovarian. Matriks kovarian dipresentasikan dalam bentuk seperti berikut:<\/p>\r\n<p><img class=\"size-full wp-image-17218 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cov-4.png\" alt=\"\" width=\"205\" height=\"63\" \/><\/p>\r\n<p>Atau<\/p>\r\n<p><img class=\"size-full wp-image-17219 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cov-5.png\" alt=\"\" width=\"404\" height=\"180\" \/><\/p>\r\n<ul>\r\n<li><strong>Correlation<\/strong><\/li>\r\n<\/ul>\r\n<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <\/strong>Correlation atau korelasi merupakan normalisasi dari kovarian. Nilai dari korelasi ini berada dalam rentang -1 s\/d +1. Sedangkan, nilai dalam kovarian berada pada rentang -&infin; s\/d +&infin;. Rumus dari korelasi yang umumnya disebut dengan koefisien korelasi:<\/p>\r\n<p><img class=\"size-full wp-image-17220 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cor-1.png\" alt=\"\" width=\"202\" height=\"62\" \/><\/p>\r\n<p>Atau<\/p>\r\n<p><img class=\"size-full wp-image-17221 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cor-2.png\" alt=\"\" width=\"194\" height=\"67\" \/><\/p>\r\n<p>Atau<\/p>\r\n<p><img class=\"alignnone size-full wp-image-17222\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cor-3.png\" alt=\"\" width=\"400\" height=\"180\" \/><\/p>\r\n<p>Persamaan korelasi yang dinotasikan dalam variable r di atas merupakan persamaan korelasi <strong>Pearson correlation<\/strong>.<\/p>\r\n<p>Selain persamaan tersebut, terdapat persamaan lain, seperti:<\/p>\r\n<p><strong>Kendall tau correlation<\/strong><\/p>\r\n<p><img class=\"size-full wp-image-17223 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cor-4.png\" alt=\"\" width=\"153\" height=\"76\" \/><\/p>\r\n<p><strong>Spearman correlation<\/strong><\/p>\r\n<p><img class=\"size-full wp-image-17224 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/cor-5.png\" alt=\"\" width=\"156\" height=\"63\" \/><\/p>\r\n<p>Nilai koefisien korelasi berkisar antara (-1) hingga (+1) bergantung pada nilai kovariansinya. Jika nilai koefisien korelasi mendekati -1 atau mendekati +1 maka X dan y memiliki korelasi linier yang tinggi, jika nilai koefisien korelasinya -1 atau +1 kedua variabel tersebut memiliki korelasi sempurna, sedangkan jika nilai koefisien korelasinya nol maka X dan y tidak memiliki hubungan.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>Menghitung statistika deskriptif menggunakan python<\/strong><\/p>\r\n<p>Kita hanya akan menggunakan library statistics, NumPy, dan SciPy untuk menghitung nilai-nilai yang dihasilkan dari statistika deskriptif, library Pandas akan dipelajari pekan depan. Kita mulai dengan meng-import librarynya:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; import math<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; import statistics<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; import numpy as np<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; import scipy.stats<\/code><\/span><\/p>\r\n<p>Kita buat suatu data berupa python list yang berisi data numerik secara random:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; x = [8.0, 1, 2.5, 4, 28.0]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; x_dgn_nan = [8.0, 1, 2.5, math.nan, 4, 28.0]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; x<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>[8.0, 1, 2.5, 4, 28.0]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; x_dgn_nan<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>[8.0, 1, 2.5, nan, 4, 28.0]<\/code><\/span><\/p>\r\n<p>Sekarang kita punya dua list, x dan x_dgn_nan, keduanya hampir sama, bedanya yaitu x_dgn_nan memiliki nilai nan (not a number). Sangat penting bagaimana python menghadapi nilai nan ini. Dalam data science, missing value sangat sering terjadi, dan biasanya nilai yang hilang ini diganti dengan nan. Sekarang kita coba buat np.ndarray objek dari variabel x dan x_dgn_nan:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y, y_dgn_nan = np.array(x), np.array(x_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>array([ 8. ,&nbsp; 1. ,&nbsp; 2.5, 4. , 28. ])<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y_dgn_nan<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>array([ 8. ,&nbsp; 1. ,&nbsp; 2.5,&nbsp; nan,&nbsp; 4. , 28. ])<\/code><\/span><\/p>\r\n<p><strong>Menghitung Ukuran Pemusatan Data<\/strong><\/p>\r\n<p>Kita akan nenpelajari bagaimana menghitung ukuran pemusatan data ini menggunakna python.<\/p>\r\n<p><strong>Mean<\/strong>&nbsp;(rataan) Kita dapat menghitung mean hanya dengan python tanpa meng-import library apapun menggunakan sum() dan len():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ = sum(x) \/ len(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>8.7<\/code><\/span><\/p>\r\n<p>Kita juga bisa menggunakan fungsi bawaan dari library statistics python:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ = statistics.mean(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>8.7<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ = statistics.fmean(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>8.7<\/code><\/span><\/p>\r\n<p>Fungsi fmean() mulai dikenalkan pada python 3.8 sebagai alternatif untuk perhitungan yang lebih cepat dan selalu menghasilkan nilai float. Namun, fungsi mean() dan fmean() akan menghasilkan nilai nan jika di dalam variabel yang dihitungnya berisi nilai nan:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ = statistics.mean(x_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>nan<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ = statistics.fmean(x_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ nan<\/code><\/span><\/p>\r\n<p>Jika kita ingin mengabaikan nilai nan yang ada pada variabel tersebut maka dapat menggunakan np.nanmean():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.nanmean(y_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>8.7<\/code><\/span><\/p>\r\n<p><strong>Weighted Mean<\/strong>&nbsp;atau rataan berbobot merupakan generalisasi dari rataan aritmatika sehingga kita dapat menentukan kontribusi relatif (bobot) dari setiap data point untuk penghitungan hasilnya. Kita dapat menghitung weighted mean menggunakan python dengan menggabungkan antara sum() dengan range() atau zip() seperti pada contoh berikut:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; x = [8.0, 1, 2.5, 4, 28.0]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; w = [0.1, 0.2, 0.3, 0.25, 0.15]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; wmean = sum(w[i] * x[i] for i in range(len(x))) \/ sum(w)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; wmean<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>6.95<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; wmean = sum(x_ * w_ for (x_, w_) in zip(x, w)) \/ sum(w)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; wmean<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>6.95<\/code><\/span><\/p>\r\n<p>Tetapi jika kita memiliki dataset yang cukup besar maka NumPy memberikan soolusi yang lebih baik untuk penghitungan weighted mean ini menggunakan np.average():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y, w = np.array(x), np.array(w)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; wmean = np.average(y, weights=w)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; wmean<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>6.95<\/code><\/span><\/p>\r\n<p>Hati-hati ketika melakukan perhitungan untuk data berisi nilai nan.<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; w = np.array([0.1, 0.2, 0.3, 0.0, 0.2, 0.1])<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.average(y_dgn_nan, weights=w)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>nan<\/code><\/span><\/p>\r\n<p><strong>Harmonic Mean<\/strong>&nbsp;atau rataan harmonis dapat dirumuskan dengan \ud835\udc5b\/&Sigma;\u1d62(1\/\ud835\udc65\u1d62) dimana i=1, 2, &hellip;, n dan n adalah jumlah data point pada dataset x. Kita bisa menghitungnya menggunakan python:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; hmean = len(x) \/ sum(1 \/ item for item in x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; hmean<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>2.7613412228796843<\/code><\/span><\/p>\r\n<p>Kita juga bisa menggunakan statistics.harmonic_mean():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; hmean = statistics.harmonic_mean(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; hmean<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>2.7613412228796843<\/code><\/span><\/p>\r\n<p>Jika terdapat nilai nan, maka statistics.harmonic_mean() akan menghasilkan nilai nan, dan jika terdapat nilai negatif, maka akan terjadi error dalam perhitungannya:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; statistics.harmonic_mean(x_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>nan<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; statistics.harmonic_mean([1, 0, 2])<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>0<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; statistics.harmonic_mean([1, 2, -2])&nbsp; #StatisticsError<\/code><\/span><\/p>\r\n<p>Cara ketiga adalah dengan menggunakan scipy.stats.hmean():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; scipy.stats.hmean(y)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>2.7613412228796843<\/code><\/span><\/p>\r\n<p><strong>Geometric Mean<\/strong>&nbsp;atau rataan geometris merupakan akar pangkat-n dari seluruh hasil perkalian elemen \ud835\udc65\u1d62 sejumlah n pada dataset x, dapat dirumuskan dengan \u207f&radic;(&Pi;\u1d62\ud835\udc65\u1d62), dimana dimana i=1, 2, &hellip;, n dan n adalah jumlah data point pada dataset x. Kita dapat menggunakan python untuk menghitung nilai rataan geometris ini sebagai berikut:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; gmean = 1<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; for item in x:<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&nbsp; &nbsp;gmean *= item<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; gmean **= 1 \/ len(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; gmean<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>4.677885674856041<\/code><\/span><\/p>\r\n<p>Pada python 3.8 kita dapat menggunakan statistics.geometric_mean(), yang akan mengubah semua nilai pada dataset menjadi float kemudian menghitung rataan geometrisnya:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; gmean = statistics.geometric_mean(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; gmean<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>4.67788567485604<\/code><\/span><\/p>\r\n<p>Dengan menggunakan scipy.stats.gmean():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; scipy.stats.gmean(y)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>4.67788567485604<\/code><\/span><\/p>\r\n<p>Jika terdapat nilai nan pada dataset maka gmean() akan menghasilkan nan. Jika terdapat satu saja nilai 0, maka akan menghasilkan rataan geometris 0 disertai peringatan.<\/p>\r\n<p><strong>Median<\/strong>&nbsp;suatu sampel merupakan nilai tengah dari dataset yang telah diurutkan. Dataset tersebut dapat diurutkan secara naik atau turun. Jika jumlah elemen n dari dataset adalah ganjil maka median adalah elemen pada posisi 0.5(n+1). Jika n genap, maka mediannya adalah rataan aritmatika dari dua nilai tengah, yaitu yang berada pada posisi 0.5n dan 0.5n+1. Perbedaan utama antara sifat mean dan median dari suatu dataset adalah hubungannya dengan outlier pada dataset tersebut. Nilai mean sangat dipengaruhi oleh outlier sedangkan nilai median hampir tidak dipengaruhi atau bahkan tidak dipengaruhi sama sekali. Perhatikan gambar berikut:<\/p>\r\n<p>Dataset bagian atas memiliki nilai 1, 2.5, 4, 8, dan 28. Nilai mean dari dataset tersebut adalah 8.7 dan nilai mediannya adalah 4. Dataset bagian bawah menunjukkan bagaimana perubahan nilai mean ketika nilai paling kanan pada dataset atas yang memiliki nilai 28 di pindahkan.<\/p>\r\n<p>Berikut adalah salah satu cara mencari nilai median menggunakan python:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; n = len(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; if n % 2:<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; median_ = sorted(x)[round(0.5*(n-1))]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&nbsp; &nbsp; &nbsp; &nbsp;else:<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; x_ord, index = sorted(x), round(0.5 * n)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; median_ = 0.5 * (x_ord[index-1] + x_ord[index])<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; median_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>4<\/code><\/span><\/p>\r\n<p>Langkah penting pada proses di atas adalah:<\/p>\r\n<ol>\r\n<li>Mengurutkan elemen-elemen pada dataset<\/li>\r\n<li>Mencari elemen tengah pada dataset yang telah diurutkan<\/li>\r\n<\/ol>\r\n<p>Kita juga bisa mendapatkan nilai median dengan statistics.median():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; median_ = statistics.median(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; median_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>4<\/code><\/span><\/p>\r\n<p>Cara yang lain untuk mendapatkan nilai median adalah menggunakan np.median():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; median_ = np.median(y)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; median_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>4.0<\/code><\/span><\/p>\r\n<p><strong>Mode&nbsp;<\/strong>atau modus dari suatu sampel dataset adalah nilai yang paling banyak muncul dalam dataset tersebut. Dengan python kita dapat menghasilkan nilai modus suatu dataset sebagai berikut:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; u = [2, 3, 2, 8, 12]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_ = max((u.count(item), item) for item in set(u))[1]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>2<\/code><\/span><\/p>\r\n<p>Kita dapat mencari modus dari suatu daset menggunakan statistics.mode(), dan juga menggunakan statistics.multimode() (mulai dikenalkan pada python 3.8) jika nilai modusnya tidak hanya satu:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_ = statistics.mode(u)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>2<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_ = statistics.multimode(u)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>[2]<\/code><\/span><\/p>\r\n<p>Dapat dilihat bahwa mode() menghasilkan nilai tunggal, sedangkan multimode() menghasilkan list yang berisi nilai modus. Bahkan mode() akan menghasilkan error jika dalam dataset tersebut terdapat dua modus:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; v = [12, 15, 12, 15, 21, 15, 12]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; statistics.mode(v)&nbsp; # StatisticsError<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; statistics.multimode(v)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>[12, 15]<\/code><\/span><\/p>\r\n<p>Bagaimana jika dalam dataset terdapat nilai nan? Bisa dicoba sendiri hehe..<\/p>\r\n<p>Untuk menghasilkan nilai modus jika menggunakan scipy.stats.mode():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; u, v = np.array(u), np.array(v)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_ = scipy.stats.mode(u)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>ModeResult(mode=array([2]), count=array([2]))<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_ = scipy.stats.mode(v)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mode_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>ModeResult(mode=array([12]), count=array([3]))<\/code><\/span><\/p>\r\n<p>Jika terdapat lebih dari satu nilai modus, scipy.stats.mode() akan menjadikan nilai terkecil sebagai modus.<\/p>\r\n<p><strong>Menghitung Ukuran Sebaran Data<\/strong><\/p>\r\n<p>Ukuran pemusatan saja tidak cukup untuk menjelaskan suatu data, kita juga perlu menghitung ukuran sebaran data. Beberapa ukuran sebaran data yang perlu diketahui yaitu:<\/p>\r\n<p><strong>Variance&nbsp;<\/strong>atau variansi. Menghitung variansi menggunakan python dapat dilakukan dengan cara berikut:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; n = len(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ = sum(x) \/ n<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_ = sum((item - mean_)**2 for item in x) \/ (n - 1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>123.19999999999999<\/code><\/span><\/p>\r\n<p>Cara yang lebih singkat dan elegan adalah menggunakan statistics.variance():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_ = statistics.variance(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>123.2<\/code><\/span><\/p>\r\n<p>Bagaimana jika terdapat nilai nan dalam dataset? Silahkan dicoba sendiri hehe..<\/p>\r\n<p>Cara yang lain yaitu menggunakan fungsi np.var() atau metode .var():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_ = np.var(y, ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>123.19999999999999<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_ = y.var(ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>123.19999999999999<\/code><\/span><\/p>\r\n<p>Penting untuk mendefinisikan nilai ddof=1. Parameter ini digunakan agar perhitungan nilai s<sup>2<\/sup>&nbsp;sesuai yaitu menggunakan n-1 sebagai pembagi bukan n saja. Untuk dataset yang memiliki nilai nan, kita dapat mengabaikan nilai nan tersebut dengan np.nanvar():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.nanvar(y_dgn_nan, ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>123.19999999999999<\/code><\/span><\/p>\r\n<p><strong>Standar Deviasi<\/strong>&nbsp;atau simpangan baku. Menghitung standar deviasi menggunakan python dapat dilakukan dengan cara:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; std_ = var_ ** 0.5<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; std_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>11.099549540409285<\/code><\/span><\/p>\r\n<p>Kita juga bisa menggunakan statistics.dev():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; std_ = statistics.stdev(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; std_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>11.099549540409287<\/code><\/span><\/p>\r\n<p>Jika kita menggunakan Numpy, perhatikan untuk menggunakan fungsi yang sesuai jika terdapat nilai nan:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.std(y, ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>11.099549540409285<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y.std(ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>11.099549540409285<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.std(y_dgn_nan, ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>nan<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y_dgn_nan.std(ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>nan<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.nanstd(y_dgn_nan, ddof=1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>11.099549540409285<\/code><\/span><\/p>\r\n<p><strong>Skewness<\/strong>, nilai dari skewness dapat dihasilkan menggunakan python dengan cara:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; x = [8.0, 1, 2.5, 4, 28.0]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; n = len(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_ = sum(x) \/ n<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_ = sum((item - mean_)**2 for item in x) \/ (n - 1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; std_ = var_ ** 0.5<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; skew_ = (sum((item - mean_)**3 for item in x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>* n \/ ((n - 1) * (n - 2) * std_**3))<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; skew_<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>1.9470432273905929<\/code><\/span><\/p>\r\n<p>Kita juga bisa menggunakan scipy.stats.skew():<\/p>\r\n<p><span style=\"background-color: #ffffff; color: #e03e2d;\"><code>&gt;&gt;&gt; y, y_dgn_nan = np.array(x), np.array(x_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"background-color: #ffffff; color: #e03e2d;\"><code>&gt;&gt;&gt; scipy.stats.skew(y, bias=False)<\/code><\/span><\/p>\r\n<p><span style=\"background-color: #ffffff; color: #e03e2d;\"><code>1.9470432273905927<\/code><\/span><\/p>\r\n<p><span style=\"background-color: #ffffff; color: #e03e2d;\"><code>&gt;&gt;&gt; scipy.stats.skew(y_dgn_nan, bias=False)<\/code><\/span><\/p>\r\n<p><span style=\"background-color: #ffffff; color: #e03e2d;\"><code>nan<\/code><\/span><\/p>\r\n<p>suatu dataset dapat dianggap simetris jika memiliki nilai skewness mendekati 0, yaitu antara -0.5 dan 0.5.<\/p>\r\n<p><strong>Percentiles<\/strong>&nbsp;ke-p dari sekumpulan data adalah nilai dimana p% dari data tersebut berada dibawahnya. Setiap data memiliki tiga nilai kuartil, yang membagi data menjadi 4 bagian sama besar.<\/p>\r\n<ol>\r\n<li>Kuartil pertama (Q1) adalah persentil ke-25 dari data<\/li>\r\n<li>Kuartil kedua (Q2) adalah persentil ke-50 dari data yang juga merupakan median dari data tersebut.<\/li>\r\n<li>Kuartil ketiga (Q3) adalah persentil ke-75 dari data<\/li>\r\n<\/ol>\r\n<p>Nilai persentil dapat dicari menggunakan np.percentile():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; x = [-5.0, -1.1, 0.1, 2.0, 8.0, 12.8, 21.0, 25.8, 41.0]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y = np.array(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.percentile(y, 5)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>-3.44<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.percentile(y, 95)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>34.919999999999995<\/code><\/span><\/p>\r\n<p>Jika kita ingin mengabaikan nilai nan pada data maka digunakan np.nanpercentile():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y_dgn_nan = np.insert(y, 2, np.nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y_dgn_nan<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>array([-5. , -1.1,&nbsp; nan,&nbsp; 0.1,&nbsp; 2. ,&nbsp; 8. , 12.8, 21. , 25.8, 41. ])<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.nanpercentile(y_dgn_nan, [25, 50, 75])<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>array([ 0.1,&nbsp; 8. , 21. ])<\/code><\/span><\/p>\r\n<p><strong>Ranges<\/strong>&nbsp;dari data adalah selisih antara elemen maksimum dan elemen minimum pada suatu dataset. Kita dapat menghitungnya dengan fungsi np.ptp():<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.ptp(y)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>46.0<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.ptp(y_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>nan<\/code><\/span><\/p>\r\n<p>Alternatifnya, kita bisa menggunakan fungsi bawaan python dan NumPy:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.amax(y) - np.amin(y)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>46.0<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; np.nanmax(y_dgn_nan) - np.nanmin(y_dgn_nan)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>46.0<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; y.max() - y.min()<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>46.0<\/code><\/span><\/p>\r\n<p><strong>Menghitung Korelasi Antara Sepasang Data<\/strong><\/p>\r\n<p>Korelasi atau hubungan antara sepasang data dapat dilihat dengan menghitung:<\/p>\r\n<p><strong>Covariance<\/strong>, dengan menggunakan fungsi dari python kovariansi dapat dihitung sebagai berikut:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; n = len(x)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; mean_x, mean_y = sum(x) \/ n, sum(y) \/ n<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; cov_xy = (sum((x[k] - mean_x) * (y[k] - mean_y) for k in range(n))&nbsp;\/ (n - 1))<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; cov_xy<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>19.95<\/code><\/span><\/p>\r\n<p>Dengan menggunakan np.cov() dari NumPy kita akan mendapatkan matriks kovariansi:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; cov_matrix = np.cov(x_, y_)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; cov_matrix<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>array([[38.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , 19.95&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ],<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>[19.95&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , 13.91428571]])<\/code><\/span><\/p>\r\n<p>Dimana nilai 38.5 atau posisi atas kiri merupakan nilai variansi dari x, dan nilai 13.91 merupakan nilai variansi dari y, dan dua nilai lainnya merupakan nilai kovariansi antara x dan y, yaitu 19.95.<\/p>\r\n<p><strong>Correlation coefficient<\/strong>, untuk menghitung koefisien korelasi hanya menggunakan fungsi bawaan python adalah sebagai berikut:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_x = sum((item - mean_x)**2 for item in x) \/ (n - 1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; var_y = sum((item - mean_y)**2 for item in y) \/ (n - 1)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; std_x, std_y = var_x ** 0.5, var_y ** 0.5<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r = cov_xy \/ (std_x * std_y)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>0.861950005631606<\/code><\/span><\/p>\r\n<p>Library scipy.stats memiliki fungsi pearsonr() yang menghitung nilai dari koefisien korelasi dan juga nilai p-value nya:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r, p = scipy.stats.pearsonr(x_, y_)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>0.861950005631606<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; p<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>5.122760847201171e-07<\/code><\/span><\/p>\r\n<p>Jika ingin menggunakan NumPy, dapat memakai fungsi np.corrcoef() dengan argumen x_ dan y_, maka didapatkan matriks koefisien korelasinya:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; corr_matrix = np.corrcoef(x_, y_)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; corr_matrix<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>array([[1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , 0.86195001],<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>[0.86195001, 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]])<\/code><\/span><\/p>\r\n<p>Nilai 1 pada matriks tersebut menunjukkan koefisien korelasi antara satu argumen dengan dirinya sendiri, sedangkan dua nilai yang lain menunjukkan koefisien korelasi antara kedua argumen yakni x_ dan y_.<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r = corr_matrix[0, 1]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>0.8619500056316061<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r = corr_matrix[1, 0]<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>0.861950005631606<\/code><\/span><\/p>\r\n<p>Kita juga bisa menggukanan fungsi scipy.stats.linregress() yang akan menghasilkan beberapa nilai, salah satunya adalah koefisien korelasinya:<\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; scipy.stats.linregress(x_, y_)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>LinregressResult(slope=0.5181818181818181, intercept=5.714285714285714, rvalue=0.861950005631606, pvalue=5.122760847201164e-07, stderr=0.06992387660074979)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; result = scipy.stats.linregress(x_, y_)<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r = result.rvalue<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>&gt;&gt;&gt; r<\/code><\/span><\/p>\r\n<p><span style=\"color: #e03e2d;\"><code>0.861950005631606<\/code><\/span><\/p>\r\n<p><strong>Referensi Video:<\/strong><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/d4VW7uT0P74\">Data Science Statistik: Apa itu Deskriptif Statistik<\/a><\/li>\r\n<li><a href=\"https:\/\/youtu.be\/vnUKA86AxuM\">Central Tendency, Dispersi, Visualisasi Displot dan Boxplot<\/a><\/li>\r\n<\/ul>\r\n<p>Sumber:<br \/>https:\/\/realpython.com\/python-statistics\/<br \/>https:\/\/www.academia.edu\/25566517\/Variansi_and_Kovariansi<\/p>\r\n<p>Rekomendasi Bacaan:<br \/>https:\/\/tau-data.id\/tipe-data-dm-ds\/<br \/>https:\/\/tau-data.id\/model-statistika-data-mining-data-science\/<\/p>\r\n<p>Purnama, Bedi. 2019. <em>Pengantar Machine Learning<\/em>. Bandung: Penerbit Informatika<\/p>\r\n<p style=\"text-align: justify;\">&nbsp;<\/p>\r\n<pre class=\"wp-block-code\"><code><\/code><\/pre>","waktu_publish":"2021-10-29 09:00:00","status_publish":"publish","urutan":5,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-28 23:27:51","waktu_publish_formatted":" Jumat, 29 Oktober 2021. 09:00:00 WIB."}]},{"id":203,"uuid":"910410b2-861d-48ce-aa19-3c4726463494","materi_id":24,"nama":"Tugas Pekan 1","permalink":"tugas-pekan-1","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-06-07 16:38:35","posting":[{"id":721,"uuid":"f3f239ba-220e-4c4d-a682-0701027621bb","author_user_id":4430,"materi_section_id":203,"judul":"Tugas Hari 1","permalink":"tugas-hari-1","konten":"<p>Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=18sI19PvTxpo_9AMcdcAqatl74QMP9Ocy\">Tugas Hari 1<\/a><\/p>","waktu_publish":"2021-10-25 13:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:13:12","waktu_publish_formatted":" Senin, 25 Oktober 2021. 13:00:00 WIB."},{"id":722,"uuid":"445aa7d8-07e7-4426-a9aa-b146e7d31fd6","author_user_id":4430,"materi_section_id":203,"judul":"Tugas Hari 2","permalink":"tugas-hari-2","konten":"<div class=\"entry-content\">\r\n<p class=\"has-text-align-center\">Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1B8QrUBOypSyXcilVdnvDsUfq1HX0SEsk\">Tugas Hari 2<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-10-26 13:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:13:30","waktu_publish_formatted":" Selasa, 26 Oktober 2021. 13:00:00 WIB."},{"id":723,"uuid":"46a0c0bd-3ae5-4554-9336-9e5ebf342645","author_user_id":4430,"materi_section_id":203,"judul":"Tugas Hari 3","permalink":"tugas-hari-3","konten":"<p>Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1Xj5i0CSl8XA8tG7aRrKMU_jsSpvF2lP7\">Tugas Hari 3<\/a><\/p>","waktu_publish":"2021-10-27 13:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:13:46","waktu_publish_formatted":" Rabu, 27 Oktober 2021. 13:00:00 WIB."},{"id":724,"uuid":"7dfaf882-15b9-4104-a890-36bf4c35ee02","author_user_id":4430,"materi_section_id":203,"judul":"Tugas Hari 4","permalink":"tugas-hari-4","konten":"<div class=\"entry-content\">\r\n<p class=\"has-text-align-center\">Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1u6IzsLgNezVH6PL3PZDnhi8SNZhCIrpY\">Tugas Hari 4<\/a><\/p>\r\n<h2>&nbsp;<\/h2>\r\n<h2 id=\"tambahan-tugas-hari-4-it&rsquo;s-only-an-optional-task-it-won&rsquo;t-be-col\">Tambahan Tugas Hari 4 (It&rsquo;s only an optional task, it won&rsquo;t be collected and corrected ^_^)<\/h2>\r\n<h3 id=\"1-remove-duplicate-list\">1. Remove Duplicate List<\/h3>\r\n<p>Buatlah sebuah fungsi, yang menerima suatu argument objek list, dan return sebuah objek list baru, dimana objek list baru ini berisi list sebelumnya dikurangi dengan data yang duplikat, sehingga setiap element di dalam list adalah unik.<\/p>\r\n<p>Berikan 2 solusi, solusi pertama menggunakan loop dan list, solusi yang kedua menggunakan objek set!<\/p>\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=Fn6073uEifE\">Video tentang set<\/a><\/p>\r\n<p>Hint:<\/p>\r\n<pre class=\"wp-block-code\"><code># solusi tanpa menggunakan set\r\ndef remove_duplicate(obj_list):\r\n    ''''\r\n    code Here\r\n    ''''\r\n    return new_list\r\n\r\n# solusi dengan menggunakan set\r\ndef remove_duplicate_with_set(obj_list):\r\n    ''''\r\n    code Here\r\n    ''''\r\n    return new_list\r\n\r\nobj_list = [1, 2, 4, 6, 2, 1, 4, 5, 7, 8, 6]\r\nprint(remove_duplicate(obj_list))\r\nprint(remove_duplicate_with_set(obj_list))\r\n\r\noutput :\r\n[1, 2, 4, 6, 5, 7, 8]\r\n[1, 2, 4, 5, 6, 7, 8]<br \/><\/code><\/pre>\r\n<h3 id=\"2-membuat-chatbot-sederhana\">2. Membuat ChatBot Sederhana<\/h3>\r\n<p>Buatlah sebuah fungsi chatbot yang memberikan suatu&nbsp;<strong>respon<\/strong>&nbsp;dimana chatbot ini menerima&nbsp;<strong>satu argument string<\/strong>.<\/p>\r\n<p>Buah sebuah fungsi chatbot yang memberikan suatu&nbsp;<strong>respon<\/strong>&nbsp;dimana chatbot ini menerima&nbsp;<strong>satu argument string<\/strong>.<\/p>\r\n<p>Jika argument adalah&nbsp;<strong>pertanyaan&nbsp;<\/strong>kemudian chatbot mengecek lagi apakah pertanyaan tersebut adalah pertanyaan<strong>&nbsp;yang bisa di jawab atau tidak<\/strong>.&nbsp;<strong>Jika&nbsp;<\/strong>pertanyaannya bisa di jawab maka fungsi akan memberikan jawaban yang bersifat&nbsp;<strong>random&nbsp;<\/strong>berdasarkan&nbsp;<strong>opsi&nbsp;<\/strong>list jawaban yang disediakan berdasarkan jenis pertanyaan tersebut.&nbsp;<strong>Jika tidak<\/strong>&nbsp;maka chatbot akan memberikan&nbsp;<strong>jawaban default<\/strong>&nbsp;bahwa chatbot tidak mengerti pertanyaannya.<\/p>\r\n<p>Jika argument adalah bukan pertanyaan maka chatbot akan memberikan sebuah statement random yang disediakan.<\/p>\r\n<p>Hint:<\/p>\r\n<pre class=\"wp-block-code\"><code># import library\r\nfrom datetime import datetime\r\nimport random\r\n\r\n# ganti dengan sebuah nama\r\nnama  = \"Nama Anda\"\r\n# variabel tanggal\r\ntanggal = datetime.now().day\r\n# default variabel untuk pertanyaan tidak diketahui\r\ndefault = \"maaf, aku tidak tahu jawaban dari pertanyaanmu\"\r\n\r\n# Membuat objek dictionary berisi berbagai opsi jawaban\r\n\r\n# list jawaban untuk pertanyaan tentang nama\r\njawaban_nama = [\r\n      \"nama saya  {0}\".format(nama),\r\n      \"orang-orang memanggil saya {0}\".format(nama),\r\n      \"panggil saja saya {0}\".format(nama)\r\n   ]\r\n\r\n# list jawaban untuk pertanyaan tentang tanggal\r\njawaban_tanggal = [\r\n      \"hari ini tanggal {0}\".format(tanggal),\r\n      \"ya ampun masa tidak tahu, hari ini tanggal\".format(tanggal)\r\n    ]\r\n\r\n# opsi pertanyaan yang bisa dijawab\r\npertanyaan = {\r\n  \"nama kamu siapa?\": jawaban_nama,\r\n  \"kamu siapa?\" : jawaban_nama,\r\n  \"tanggal berapa hari ini?\": jawaban_tanggal,\r\n  \"hari ini tanggal berapa?\" : jawaban_tanggal,\r\n  \"default\": default\r\n}\r\n\r\n# list jawaban untuk sebuah argument selain pertanyaan\r\nstatement =  [\r\n                  'ceritakan lebih banyak!',\r\n                  'kenapa kamu berpikir begitu?',\r\n                  'sudah berapa lama kamu merasa seperti ini?',\r\n                  'Itu sangat menarik!',\r\n                  'oh wow!',\r\n                  ':)'\r\n              ]\r\n\r\n# respon keseluruhan\r\nresponses = {\r\n    'pertanyaan' : pertanyaan,\r\n    'statement' : statement\r\n}\r\n#------\r\n             \r\n# ayo buat chatbotmu\r\ndef chatbot(message):\r\n    ## code disini\r\n\r\nprint(chatbot('Selamat Pagi'))\r\nprint(chatbot('Mau bermain bersamaku?'))\r\nprint(chatbot('nama kamu siapa?'))\r\nprint(chatbot('hari ini tanggal berapa?'))\r\n\r\noutput :\r\n:)\r\nmaaf, aku tidak tahu jawaban dari pertanyaanmu\r\norang-orang memanggil saya Nama Anda\r\nya ampun masa tidak tahu, hari ini tanggal<\/code><\/pre>\r\n<h4>Penjelasan<\/h4>\r\n<ul>\r\n<li>Pada code yang ini print(chatbot(&lsquo;Selamat Pagi&rsquo;)), chatbot melihat list opsi jawaban yang ada pada variabel statement, kemudian memilih secara random jawaban yang akan diberikan.<\/li>\r\n<li>Pada code yang ini print(chatbot(&lsquo;Mau bermain bersamaku?&rsquo;)), chatbot melihat bahwa pesan ini adalah sebuah pertanyaan karena di akhiri dengan tanda tanya, kemudian value dari key &lsquo;default&rsquo; karena pertanyaan tersebut tidak bisa dijawab oleh chatbot.<\/li>\r\n<li>Pada code yang ini print(chatbot(&lsquo;nama kamu siapa?&rsquo;)), chatbot melihat bahwa pesan ini adalah sebuah pertanyaan karena di akhiri dengan tanda tanya, kemudian melihat pada variabel &lsquo;jawaban_nama&rsquo; dan memilih secara random jawaban yang akan di berikan.<\/li>\r\n<li>Pada code yang ini print(chatbot(&lsquo;hari ini tanggal berapa?&rsquo;)), chatbot melihat bahwa pesan ini adalah sebuah pertanyaan karena di akhiri dengan tanda tanya, melihat pada variabel &lsquo;jawaban_tanggal&rsquo; dan memilih secara random jawaban yang akan diberikan.<\/li>\r\n<\/ul>\r\n<h4>Lingkup Materi :<\/h4>\r\n<ul>\r\n<li>String<\/li>\r\n<li>Dictionary<\/li>\r\n<li>If-elif-else<\/li>\r\n<li>Fungsi<\/li>\r\n<li>List<\/li>\r\n<li>Library\/Module Random<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-10-28 13:00:00","status_publish":"publish","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:14:06","waktu_publish_formatted":" Kamis, 28 Oktober 2021. 13:00:00 WIB."},{"id":725,"uuid":"c4b8abb0-2c0f-4b7b-b8e9-c67cf96ac4e2","author_user_id":4430,"materi_section_id":203,"judul":"Tugas Hari 5","permalink":"tugas-hari-5","konten":"<p>Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1t4KB6KgyTFhgXl79HGbXtkeOLixW9Pai\">Tugas Hari 5<\/a><\/p>","waktu_publish":"2021-10-29 13:00:00","status_publish":"publish","urutan":5,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:14:41","waktu_publish_formatted":" Jumat, 29 Oktober 2021. 13:00:00 WIB."}]},{"id":204,"uuid":"043cfe3f-ecdb-4c62-99dc-992c1ffb3d12","materi_id":24,"nama":"Materi Pekan 2","permalink":"materi-pekan-2","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null,"posting":[{"id":726,"uuid":"00de2558-b93f-4565-8c5e-b15b1251f1bb","author_user_id":4430,"materi_section_id":204,"judul":"Hari 1 \u2013 Pandas Introduction","permalink":"hari-1-pandas-introduction","konten":"<div class=\"entry-content\">\r\n<h1 id=\"instalasi-pandas\">Instalasi Pandas<\/h1>\r\n<p>Kali ini, kita akan mempelajari semua tentang pandas, pandas adalah suatu library di Python yang paling populer untuk analisis data.<\/p>\r\n<p><strong>Pandas&nbsp;<\/strong>adalah suatu library yang open source, menyediakan performance yang sangat baik, struktur data yang mudah digunakan dan alat analisis data untuk Python. Pandas akan menjadi langkah besar kamu dalam perjalanan mempelajari data science.<\/p>\r\n<p>Untuk menggunakan pandas, kamu terlebih dahulu mesti menginstall nya di command prompt dengan mengetikan&nbsp;<strong>pip install pandas.<\/strong><\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1174\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-7.png\" sizes=\"(max-width: 975px) 100vw, 975px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-7.png 975w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-7-300x155.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-7-768x398.png 768w\" alt=\"\" width=\"975\" height=\"505\" \/>\r\n<figcaption><strong>Installasi Pandas<\/strong><\/figcaption>\r\n<\/figure>\r\n<p>Tunggu sampai installasi selesai, ketika kamu hendak menginstall pandas, tidak hanya pandas yang akan di install, tapi juga beserta dependency nya, di gambar, ketika menginstall pandas kamu juga menginstall pytz dan numpy.<\/p>\r\n<p>Pada artikel ini, akan dijelaskan beberapa materi fondasi untuk memahami pandas. diantaranya adalah :<\/p>\r\n<ol>\r\n<li>Objek Pandas : DataFrame vs Series<\/li>\r\n<li>Membaca data dari File<\/li>\r\n<li>Pemeriksaan sederhana tentang Karakteristik Data<\/li>\r\n<\/ol>\r\n<p>Sebelum berkenalan dengan objek utama pandas, kita akan berkenalan dengan Numpy. Kita bisa membuat objek pandas yang berasal dari numpy. Numpy merupakan tipe data yang digunakan untuk menyimpan data. Jika pada list, bisa berisi tipe data apa saja maka pada numpy array berupa tipe data yang homogen. Dalam penggunaan numpy, kita perlu melakukan importing terlebih dahulu.<\/p>\r\n<pre class=\"wp-block-code\"><code>import numpy as np<br \/><\/code><\/pre>\r\n<h1><strong>Numpy Attributes<\/strong><\/h1>\r\n<p>Berikut terdapat beberapa contoh penggunaan atribut dari Numpy:<\/p>\r\n<ul>\r\n<li>Dimension, digunakan untuk melihat dimensi yang dimiliki suatu numpy array<\/li>\r\n<li>Shape, digunakan untuk mengetahui berapa jumlah baris dan kolom dari suatu numpy array<\/li>\r\n<li>type, digunakan untuk mengetahui tipe data yang dimiliki suatu numpy array<\/li>\r\n<li>itemsize, untuk mwlihat ukuran memori yang dibutuhkan untuk menyimpan sebuah numpy array<\/li>\r\n<li>nbytes, digunakan untuk menghitung total bytes yang dimiliki suatu numpy array.<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>import numpy as np\r\n\r\nmy_numpy = np.array([\r\n                    [1,2,3,4,5],\r\n                    [6,7,8,9,0]\r\n                    ])\r\nprint(my_numpy)\r\nresult:\r\narray([[1, 2, 3, 4, 5],\r\n       [6, 7, 8, 9, 0]])\r\n\r\n# dimensi\r\nmy_numpy.ndim\r\nresult:\r\n2\r\n\r\n# shape\r\nmy_numpy.shape\r\nresult:\r\n(2, 5)\r\n\r\n# type\r\nmy_numpy.dtype\r\nresult:\r\ndtype('int32')\r\n\r\n# itemsize\r\nmy_numpy.itemsize\r\nresult:\r\n4\r\n\r\n# nbytes\r\nmy_numpy.nbytes\r\nresult:\r\n40<\/code><\/span><\/pre>\r\n<h2><strong>Indexing Arrays<\/strong>&nbsp;(sama seperti List)<\/h2>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>my_numpy[1][2:]\r\nresult:\r\narray([8, 9, 0])<\/code><\/span><\/pre>\r\n<h2>Slicing Array<\/h2>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># [start : stop :step]\r\nnmp = np.array(range(10))\r\nprint(nmp)\r\nnmp[0:6:2]\r\n\r\nresult:\r\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\r\narray([0, 2, 4])\r\n\r\n# multidimension \r\nmy_numpy[1:,2:]\r\nresult :\r\narray([[8, 9, 0]])<\/code><\/span><\/pre>\r\n<h2><strong>Reshaping Array<\/strong>&nbsp;( jumlah baris dan kolom harus sama)<\/h2>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>my_numpy.reshape(5,2)\r\nresult:\r\narray([[1, 2],\r\n       [3, 4],\r\n       [5, 6],\r\n       [7, 8],\r\n       [9, 0]])<\/code><\/span><\/pre>\r\n<h2>Joining Array<\/h2>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>my_numpy = np.array([\r\n                    [1,2,3,4,5],\r\n                    [6,7,8,9,0]\r\n                    ])\r\n\r\nnmpy = np.array([\r\n                [1,2,3,1,4], \r\n                [2,3,5,3,5]\r\n                ])\r\n\r\nnp.concatenate([my_numpy, nmpy])\r\nresult:\r\narray([[1, 2, 3, 4, 5],\r\n       [6, 7, 8, 9, 0],\r\n       [1, 2, 3, 1, 4],\r\n       [2, 3, 5, 3, 5]])<\/code><\/span><\/pre>\r\n<h2 id=\"objek-pandas-series-vs-dataframe\">Objek Pandas : Series vs DataFrame<\/h2>\r\n<p>Series dan Dataframe ini adalah suatu objek tempat kita menyimpan data secara terstruktur. Perbedaan dari Series dan DataFrame ini terletak pada strukturnya dan juga attribute dan method-method yang mereka miliki, untuk perbedaan strukturnya adalah sebagai berikut :<\/p>\r\n<ol>\r\n<li>Series adalah objek 1 dimensi<\/li>\r\n<li>DataFrame adalah suatu objek 2 dimensi, mirip seperti tabel<\/li>\r\n<\/ol>\r\n<h2 id=\"series\">Series<\/h2>\r\n<p>Series adalah suatu objek&nbsp;<strong>satu dimensi<\/strong> yang dapat menyimpan berbagai jenis tipe data seperti integer, string, dan lain sebagainya. tipe data dari objek series ini harus seragam. Jika kita pahami lebih lanjut, series itu seperti gabungan antara list dengan dictionary. Series memiliki persamaan dengan list yaitu dapat dilakukan metode slicing, yaitu mengakses\/indexing pada object series tersebut (yang akan dipelajari di hari ke-2). Juga series memiliki persamaan dengan dictionary yaitu index yang dimiliki series berguna seperti keys pada dictionary.<\/p>\r\n<p>Untuk membuat series berikut contohnya:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>import pandas as pd\r\n\r\nx = pd.Series([6,3,4,6])\r\nprint(x)\r\n=============\r\n0    6\r\n1    3\r\n2    4\r\n3    6\r\ndtype: int64<\/code><\/span><\/pre>\r\n<p>Series memiliki satu sumbu\/index saja, dari contoh di atas sumbu\/index tersebut berada satu baris, yaitu 0, 1, 2, 3. kita bisa mengubah sumbu\/index tersebut dengan sebagai berikut :<\/p>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\"># cara pertama\r\nx.index = ['a', 'b', 'c', 'd']\r\nprint(x)\r\n===========\r\na    6\r\nb    3\r\nc    4\r\nd    6\r\ndtype: int64\r\n<\/span>\r\n\r\n<span style=\"color: #e03e2d;\"># cara kedua\r\nx = pd.Series([6,3,4,6], index=['a', 'b', 'c', 'd'])\r\nprint(x)\r\n===========\r\na    6\r\nb    3\r\nc    4\r\nd    6\r\ndtype: int64\r\n\r\n# check tipe data\r\nprint(type(x))\r\n================\r\npandas.core.series.Series<\/span><\/code><\/pre>\r\n<p><strong>Perhatikan: jumlah index harus sama dengan jumlah data.<\/strong><\/p>\r\n<h2 id=\"dataframe\">DataFrame<\/h2>\r\n<p>DataFrame adalah suatu objek 2 dimensi tempat menyimpan data dengan lebih terstruktur. dataframe memiliki 2 index, yaitu index baris dan index columns. Dalam satu column dataframe harus memiliki tipe data yang sama. tapi antar columnnya dataframe bisa memiliki jenis data yang berbeda. untuk lebih jelasnya perhatikan contoh berikut :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>import pandas as pd\r\n\r\ndf = pd.DataFrame({'tipe_int': [50, 21], 'tipe_string': ['a', 'b']})\r\nprint(df)\r\n==========\r\ntipe_int    tipe_string\r\n0 \t50 \ta\r\n1 \t21 \tb\r\n\r\n# check tipe data\r\nprint(type(df))\r\n==========\r\n&lt;class 'pandas.core.frame.DataFrame'&gt;<\/code><\/span><\/pre>\r\n<h2 id=\"membaca-data-dari-file\">Membaca data dari File&nbsp;<\/h2>\r\n<p>Membaca data dari file adalah hal pertama yang dilakukan dalam suatu pekerjaan data science. maka hal ini sangat penting.<\/p>\r\n<p>Ada beberapa tipe file yang biasa di gunakan untuk menyimpan data, seperti database, excel, csv. disini akan di jelaskan beberapa saja tentang cara membaca file dari berbagai sumber tersebut. akan di jelaskan 2 yaitu csv dan excel karena csv dan excel adalah sumber yang biasa di gunakan untuk menyimpan data karena kemudahannya. ok kita langsung saja.<\/p>\r\n<p>Pandas menyediakan metode yang berbeda untuk membaca file dengan tipe berbeda. Untuk membaca file bertipe csv, pandas menggunakan suatu metode read_csv(), untuk membaca file bertipe excel pandas menggunakan suatu metode bernama read_excel. perhatikan contoh berikut :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># membaca dari dari csv\r\ndf_from_csv = pd.read_csv('jabar-corona-virus-case.csv')\r\n\r\n# membaca data dari excel\r\ndf_from_excel = pd.read_excel('jabar-corona-virus-case.xlsx')<\/code><\/span><\/pre>\r\n<p>Untuk menggunakan method tersebut kita hanya perlu memasukan argument wajib, yaitu path dari file yang akan kita baca. Kemudian yang perlu diperhatikan adalah, file yang kita baca (csv, excel, dkk) berada pada directory\/folder yang sama dengan .ipynb tersebut. Sedangkan pada google colab, silahkan tonton video di bawah ya. Lebih lanjutnya lagi pandas memiliki beberapa argumen optional, kalian bisa mecarinya dengan menggunakan metode <strong>help&nbsp;<\/strong>yang telah kalian pelajari sebelumnya<\/p>\r\n<h2 id=\"pemeriksaan-sederhana-tentang-karakteristik-data\">Pemeriksaan sederhana tentang Karakteristik Data&nbsp;<\/h2>\r\n<p>Pandas memiliki beberapa method untuk memahami gambaran besar karakteristik dari data kita. diantaranya adalah:<\/p>\r\n<ul>\r\n<li>head()<\/li>\r\n<li>tail()<\/li>\r\n<li>info()<\/li>\r\n<li>describe()<\/li>\r\n<\/ul>\r\n<p>Metode&nbsp;<strong>head()<\/strong>&nbsp;secara default adalah untuk melihat 5 pertama data kita, sedangkan metode&nbsp;<strong>tail()<\/strong>&nbsp;secara default untuk melihat 5 data kita dari terakhir. kita bisa mengganti jumlah data yang akan di tampilkan dengan memberikan data integer sebagai argument terhadap metode tersebut. contohnya sebagai beriktu:<\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1421\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-4-1024x437.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-4-1024x437.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-4-300x128.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-4-768x328.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-4.png 1166w\" alt=\"\" width=\"1024\" height=\"437\" \/>\r\n<figcaption><strong>menampilkan tujuh data pertama<\/strong><\/figcaption>\r\n<\/figure>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1422\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-8-1024x317.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-8-1024x317.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-8-300x93.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-8-768x238.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-8.png 1189w\" alt=\"\" width=\"1024\" height=\"317\" \/>\r\n<figcaption><strong>Menampilkan 5 data dari terakhir<\/strong><\/figcaption>\r\n<\/figure>\r\n<p><strong>info<\/strong>() adalah suatu method untuk melakukan summary terhadap data yang memberikan informasi tentang tipe dari index data, tipe dari column data, non-null values pada setiap column dan jumlah memory yang digunakan. berikut adalah contohnya:<\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1423\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-9.png\" sizes=\"(max-width: 971px) 100vw, 971px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-9.png 971w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-9-300x91.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-9-768x233.png 768w\" alt=\"\" width=\"971\" height=\"294\" \/><\/figure>\r\n<p><strong>describe()<\/strong>&nbsp;adalah sutau metode yang menghasilkan kesimpulan deskriptif statistik dari data. kesimpulan deskriptif statistik yang dihasilkan adalah seperti central tendency, dispersi dan bentuk distributsi dari data. untuk mengetahui lebih dalam tentang deskriptik statistik silahkan baca artikel&nbsp;<a href=\"https:\/\/www.yuksinau.id\/statistika-deskriptif\/\">ini<\/a>. berikut contoh penggunaan metode ini.<\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1424\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-10-1024x363.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-10-1024x363.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-10-300x106.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-10-768x272.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-10.png 1275w\" alt=\"\" width=\"1024\" height=\"363\" \/>\r\n<figcaption><strong>Hasil Deskripsi Statistik<\/strong><\/figcaption>\r\n<\/figure>\r\n<h4>Materi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/SAIAGU9E_lc\" target=\"_blank\" rel=\"noopener\">Pandas DataFrame<\/a><\/li>\r\n<\/ul>\r\n<h2 id=\"external-resources\">External Resources<\/h2>\r\n<p>List Video:<\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=06cjWxfk-Zc\">Menggunakan Numpy Array<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=3krwFrozpek\">Manipulasi Data Pandas<\/a><\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=qghFcRSdCSk\">Loading Data di Google Colab<\/a><\/li>\r\n<\/ul>\r\n<p>List Artikel:<\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.yuksinau.id\/statistika-deskriptif\/\">https:\/\/www.yuksinau.id\/statistika-deskriptif\/<\/a>&nbsp;(deskriptif statistik)<\/li>\r\n<li><a href=\"https:\/\/petruknisme.com\/2019\/04\/15\/pengenalan-pandas-dan-series\/\">https:\/\/petruknisme.com\/2019\/04\/15\/pengenalan-pandas-dan-series\/<\/a><\/li>\r\n<li><a href=\"https:\/\/code.tutsplus.com\/id\/tutorials\/introducing-pandas--cms-26514\">https:\/\/code.tutsplus.com\/id\/tutorials\/introducing-pandas&ndash;cms-26514<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-11-01 09:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-11-01 22:59:36","waktu_publish_formatted":" Senin, 01 November 2021. 09:00:00 WIB."},{"id":727,"uuid":"02d4548d-ce21-464b-8339-db80a294fc4e","author_user_id":4430,"materi_section_id":204,"judul":"Hari 2 \u2013 Akses\/Indexing dan Transformasi Data","permalink":"hari-2-akses-indexing-dan-transformasi-data","konten":"<h1 id=\"indexing-series\">Indexing Series<\/h1>\r\n<p>Untuk melakukan indexing pada objek series, kita perlu menempatkan objek series tersebut sebagai dictionary dan sebagai array.<\/p>\r\n<h2>series as dictionary<\/h2>\r\n<p>seperti hanyal dictionary, kita bisa melakukan akses key maupun value terhadap objek series, seperti contoh:<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>import pandas as pd\r\nobj_series = pd.Series([1,2,3,4], index=['a','b','c','d'])\r\nobj_series\r\na    1\r\nb    2\r\nc    3\r\nd    4\r\ndtype: int64\r\n\r\n#indexing key\r\nobj_series.keys()\r\nresult:\r\nIndex(['a', 'b', 'c', 'd'], dtype='object')\r\n\r\n#indexing value\r\nobj_series.values\r\nresult:\r\narray([1, 2, 3, 4])\r\n\r\n#checking existing keys\r\n'b' in obj_series\r\nresult:\r\nTrue<\/code><\/span><\/pre>\r\n<h2>series as array<\/h2>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># slicing dengan explicit index\r\nobj_series['a':'c']\r\nresult:\r\na    1\r\nb    2\r\nc    3\r\ndtype: int64\r\n\r\n#slicing dengan implicit index\r\nobj_series[:3]\r\nresult:\r\na    1\r\nb    2\r\nc    3\r\ndtype: int64<\/code><\/span><\/pre>\r\n<h2>indexing menggunakan .loc dan .iloc objek series<\/h2>\r\n<p>.loc indexing: indexing berdasarkan label objek series sedangkan .iloc indexing: indexing berdasarkan posisi objek series<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>#.loc indexing\r\nobj_series.loc['a':'c']\r\nresult:\r\na    1\r\nb    2\r\nc    3\r\ndtype: int64\r\n\r\n#.iloc indexing\r\nobj_series.iloc[:3]\r\nresult:\r\na    1\r\nb    2\r\nc    3\r\ndtype: int64<\/code><\/span><\/pre>\r\n<h2>Filtering objek series<\/h2>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>obj_series[obj_series&gt;2]\r\nresult:\r\nc    3\r\nd    4\r\ndtype: int64\r\n\r\nobj_series[['c','d']]\r\nresult:\r\nc    3\r\nd    4\r\ndtype: int64<\/code><\/span><\/pre>\r\n<h1 id=\"indexing-dataframe\">Indexing DataFrame<\/h1>\r\n<p>Akses DataFrame sering juga di kenal&nbsp;<strong>indexing&nbsp;<\/strong>atau&nbsp;<strong>Subset Selection<\/strong>. secara sederhana maknanya adalah kita memilih suatu data dari baris tertentu dan column tertentu. kita bisa saja memilih beberapa baris dan semua kolom dari data, semua baris dan beberapa column dari data, atau beberapa baris dan bebearpa column dari data.<\/p>\r\n<p>Ada banyak cara-cara kita indexing suatu dataframe. diantranya adalah dengan menggunakan :<\/p>\r\n<ul>\r\n<li>dataframe[] : cara seperti ini dikenal sebagai index operator.<\/li>\r\n<li>dataframe.kolom : cara seperti ini dikenal dengan indexing menggunakan atribut<\/li>\r\n<li>dataframe.loc[]: operator yang menggunakan label untuk mengakses data, jika misalkan kamu melakukan dataframe.loc[&lsquo;jumlah&rsquo;], berarti kamu hendak mengakses data yang mempunyai index jumlah<\/li>\r\n<li>dataframe.iloc[: operator yang menggunakan posisi index untuk mengakses data. jikalau kamu melakukan dataframe.iloc[2] berarti kamu hendak mengakses dataframe dengan index posisi 2<\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>df_ramen = pd.read_csv('ramen-ratings.csv')\r\ndf_ramen.head()<\/code><\/span><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13102\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/ramen.png\" sizes=\"(max-width: 734px) 100vw, 734px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/ramen.png 734w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/ramen-300x69.png 300w\" alt=\"\" width=\"734\" height=\"170\" \/><\/figure>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># indexing operator as series\r\ndf_ramen['Brand']\r\nresult:\r\n0            New Touch\r\n1             Just Way\r\n2               Nissin\r\n3              Wei Lih\r\n4       Ching's Secret\r\n             ...      \r\n2575             Vifon\r\n2576           Wai Wai\r\n2577           Wai Wai\r\n2578           Wai Wai\r\n2579          Westbrae\r\nName: Brand, Length: 2580, dtype: object\r\n\r\n#indexing operator as dataframe\r\ndf_ramen[['Brand']].head()\r\nresult:<\/code><\/span><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13103\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/ramen-brand.png\" alt=\"\" width=\"126\" height=\"174\" \/><\/figure>\r\n<pre class=\"wp-block-code\"><code><span style=\"color: #e03e2d;\"># indexing using attribute\r\ndf_ramen.Brand\r\nresult:\r\n\r\n0            New Touch\r\n1             Just Way\r\n2               Nissin\r\n3              Wei Lih\r\n4       Ching's Secret\r\n             ...      \r\n2575             Vifon\r\n2576           Wai Wai\r\n2577           Wai Wai\r\n2578           Wai Wai\r\n2579          Westbrae\r\nName: Brand, Length: 2580, dtype: object<\/span>\r\n\r\n<span style=\"color: #e03e2d;\"># indexing using .loc\r\ndf_ramen.loc[:, ['Country', 'Stars']].head()\r\nresult:<\/span><\/code><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13104\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/ramen-loc.png\" alt=\"\" width=\"133\" height=\"166\" \/><\/figure>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>#indexing using .iloc\r\ndf_ramen.iloc[:, [4,5]].head()\r\nresult:<\/code><\/span><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13105\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/ramen.iloc_.png\" alt=\"\" width=\"140\" height=\"180\" \/><\/figure>\r\n<h1 id=\"filtering-dataframe-with-boolean\">Filtering DataFrame with Boolean<\/h1>\r\n<p>Dapat dibilang kalau filtering dataframe dengan boolean is more human. karena kita mengakses suatu data berdasarkan logika dan dapat kita masukan ke dalam suatu statement, sebagai contoh, &lsquo;Ambilkan data yang memiliki nilai luas lebih dari 50&rsquo;. ketika mengubahnya kedalam suatu kode python ckup dengan menuliskan df&gt;50. maka akan menghasillkan sua tu data Boolean Series berisi Ya (True) dan Tidak (False).<\/p>\r\n<h3 id=\"filtering-dataframe-dimulai-dari-pertanyaan\">Filtering DataFrame dimulai dari pertanyaan<\/h3>\r\n<p>Pada tulisan ini saya akan memberikan beberapa contoh mengakses DataFrame dengan Filtering by Boolean. kita akan menggunakan suatu data tentang kejadian titanic. pertama kita import data kita.<\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1430\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-11-1024x317.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-11-1024x317.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-11-300x93.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-11-768x238.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-11.png 1293w\" alt=\"\" width=\"1024\" height=\"317\" \/>\r\n<figcaption>Importing and Inspecting Data<\/figcaption>\r\n<\/figure>\r\n<p>Dari gambar dapat kita lihat bahwa data kita memiliki beberapa column seperti tentang status survived, tentang umur, tentang jenis kelamain, dan lain-lain. misalkan boss kita menyuruh kita untuk melakukan beberapa hal sebagai berikut :<\/p>\r\n<p>1. Tunjukan kepada saya semua data orang-orang yang selamat!!<br \/>2. Tunjukan kepada saya semua data laki-laki yang selamat.<br \/>3. Tunjukan kepada saya semua data tentang perempuan yang tidak selamat di umur lebih dari 40 tahun atau kurang dari 20 tahun.<\/p>\r\n<p>Hal pertama yang mesti kita lakukan untuk melakukan operasi yang bisa menjawab permintaan di atas adalah&hellip; kita membuat terlebih dahulu suatu Boolean Series. kemudian boolean series tersebut kita masukan kedalam dataframe kita. langsung saja akan saya perlihatkan dengan contoh. dimulai dari pertanyaan pertama.<\/p>\r\n<h4>1. Data orang-orang yang selamat<\/h4>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># boolean series orang orang yang selamat\r\nsurvived = df.survived == 1\r\nprint(survived)\r\n=================\r\n0        True\r\n1        True\r\n2       False\r\n3       False\r\n4       False\r\n        ...  \r\n1304    False\r\n1305    False\r\n1306    False\r\n1307    False\r\n1308    False\r\nName: survived, Length: 1309, dtype: bool<\/code><\/span><\/pre>\r\n<p>Sekarang kita masukan boolean series kita ke dalam dataframe kita.<\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1431\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-12-1024x446.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-12-1024x446.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-12-300x131.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-12-768x335.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-12.png 1159w\" alt=\"\" width=\"1024\" height=\"446\" \/>\r\n<figcaption>Hasil filtering data orang yang selamat<\/figcaption>\r\n<\/figure>\r\n<h4>2. Data laki-laki yang selamat<\/h4>\r\n<p>Seperti biasa kita buat terlebih dahulu boolean series nya, kali ini kita membuat 2 boolean series. yaitu boolean series orang yang selamat dan bolean series orang yang berjenis kelamin laki-laki. berikut caranya<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># bolean series orang yang selamat\r\nsurvived = df.survived == 1\r\n# boolean series laki-laki\r\nlaki2 = df.sex == 'male'\r\n\r\n# tampilkan data boolean series laki2\r\nprint(laki2)\r\n=============\r\n0       False\r\n1        True\r\n2       False\r\n3        True\r\n4       False\r\n        ...  \r\n1304    False\r\n1305    False\r\n1306     True\r\n1307     True\r\n1308     True\r\nName: sex, Length: 1309, dtype: bool<\/code><\/span><\/pre>\r\n<p>Sekarang kita masukan 2 boolean series ini ke dalam dataframe kita, ada sedikit hal yang perlu kamu lakukan ketika ingin memfilter dataframe dengan lebih dari satu kondisi boolean series,&nbsp;<strong>pertama<\/strong>&nbsp;kamu harus memberikan kurung kepada setiap boolean series mu,&nbsp;<strong>kedua<\/strong>&nbsp;hubungkan kedua boolean series itu dengan logical operator seperti &amp; (and), | (or), dan lain sebagainya. berikut caranya.<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>print(df[(survived) &amp; (laki2)])<\/code><\/span><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1434\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-13-1024x406.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-13-1024x406.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-13-300x119.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-13-768x304.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-13.png 1126w\" alt=\"\" width=\"1024\" height=\"406\" \/><\/figure>\r\n<h4>3. Data Perempuan yang tidak selamat dengan umur lebih dari 40 tahun atau kurang dari 20 tahun.<\/h4>\r\n<p>Coba perhatikan ada berapa boolean series yang perlu kita buat. disini ada 4 boolean series yang perlu kita buat, yaitu orang yang tidak selamat, orang yang berjnis kelamin perempuan, orang yang berumur lebih dari 40 tahun, dan orang yang kurang dari 20 tahun. jadi mari kita buat boolean series nya.<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code># orang yang tidak selamat\r\nnot_survived = df.survived == 0\r\n\r\n# orang berjnis kelamin perempuan\r\nperempuan = df.sex == 'female'\r\n\r\n# orang yang berumur lebih dari 40 tahun\r\nlebih_40 = df.age &gt; 40\r\n\r\n# orang yang berumur kurang dari 20 tahun\r\nkurang_20 = df.age &lt; 20<\/code><\/span><\/pre>\r\n<p>kemudian kita gabungkan boolean series ini dengan seperti ini :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>df[(not_survived) &amp; (perempuan) &amp; (lebih_40 | kurang_20)]<\/code><\/span><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1435\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-14-1024x367.png\" sizes=\"(max-width: 1024px) 100vw, 1024px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-14-1024x367.png 1024w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-14-300x107.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-14-768x275.png 768w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-14.png 1209w\" alt=\"\" width=\"1024\" height=\"367\" \/><\/figure>\r\n<h1 id=\"data-transformation\">Data Transformation<\/h1>\r\n<p>Data transformasi adalah mengubah format data kepada suatu format yang kita inginkan. didalam matematika dikenal dengan istilah mapping. dalam melakukan transformasi kita memerlukan terlebih dahulu suatu fungsi yang dapat memetakan bentuk data awal kita menjadi bentuk data akhir yang kita inginkan.<\/p>\r\n<figure class=\"wp-block-image is-resized\"><img src=\"https:\/\/www.onlinemath4all.com\/images\/identifyingfunctionsfrommapping2.png\" alt=\"Identifying Functions from Mapping Diagrams\" width=\"580\" height=\"401\" \/>\r\n<figcaption>source :&nbsp;<a href=\"https:\/\/www.onlinemath4all.com\/identifying-functions-from-mapping-diagrams.html\">https:\/\/www.onlinemath4all.com\/identifying-functions-from-mapping-diagrams.html<\/a><\/figcaption>\r\n<\/figure>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.onlinemath4all.com\/images\/identifyingfunctionsfrommapping5.png\" alt=\"Identifying Functions from Mapping Diagrams\" \/>\r\n<figcaption>source : https:\/\/www.onlinemath4all.com\/identifying-functions-from-mapping-diagrams.html<\/figcaption>\r\n<\/figure>\r\n<p>Pandas menyediakan berbagai method bawaan untuk melakukan transformasi terhadap data kita, beberapa diantaranya telah diperkenalkan pada hari pertama di minggu ke dua ini. misalnya&nbsp;<strong>describe()<\/strong>, method describe ini tidak lain memetakan data mentah kita menjadi suatu data hasil tentang deskriptif statistik.<\/p>\r\n<p>Selain itu masih banyak lagi method2 bawaan yang di sediakan pandas untuk melakukan dat transformasi seperti method&nbsp;<strong>mean()<\/strong>, dan lain sebagaiinya.<\/p>\r\n<p>Kita juga bisa melakukan transformasi sesuai keinginan kita sendiri atau custom transformation. untuk melakukan custom transformation terlebih dahulu perlu membuat fungsi untuk melakukan mapping antara data awal hingga menjadi data yang di harapkan. berikut akan di periihatkan satu contoh transformasi data<\/p>\r\n<p>kita kembali akan menggunakan data tentang titanic. misalkan kita ingin mengubah data kita, dimana kita ingin mengubah column age, semua nilainya di kurangi dengan nilai minimum dari kolumn tersebut. maka pertama kita definiskan fungsi tersebut.<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>def minus_minimum(x):\r\n    return x - x.min()<\/code><\/span><\/pre>\r\n<p>setelah kita mendefinisikan fungsinya. sekarang kita akan menggunakan method apply() dari pandas. method apply ini akan menerima suatu fungsi kemudian &lsquo;meng-apply&rsquo; fungsi tersebut ke dalam setiap sumbu dari dataframe, secara default sumbu yang &lsquo;apply&rsquo; adalah sumbu column. langsung saja kita perlihatkan. sebelum nykita lihat dulu data awal kita seperti apa.<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>print(df.age)\r\n================\r\n0       29.00\r\n1        0.92\r\n2        2.00\r\n3       30.00\r\n4       25.00\r\n        ...  \r\n1304    14.50\r\n1305      NaN\r\n1306    26.50\r\n1307    27.00\r\n1308    29.00\r\nName: age, Length: 1309, dtype: float64<\/code><\/span><\/pre>\r\n<p>Dan nilai minumum dari column age adalah :<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>(df.age.min())\r\n==============-\r\n0.17<\/code><\/span><\/pre>\r\n<p>maka seharusnya apabila kita melakukan transformasi terhadap column age dengan fungsi &lsquo;minus_minimum&rsquo;, maka seharusnya semua nilai dari column age akan di kurangi dengan nilai minimumnya. kita buktikan<\/p>\r\n<pre class=\"wp-block-code\"><span style=\"color: #e03e2d;\"><code>print(df[['age']].apply(minus_minimum))<\/code><\/span><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1438\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-15.png\" sizes=\"(max-width: 468px) 100vw, 468px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-15.png 468w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-15-300x260.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-15-168x147.png 168w\" alt=\"\" width=\"468\" height=\"406\" \/><\/figure>\r\n<p>Kalian lihat, hasilnya seperti yang kita harapkan, yaitu semua data dari column age dikurangi nilai minmumnya.<\/p>\r\n<h4>Materi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/O-8MysUQMPQ\" target=\"_blank\" rel=\"noopener\">Indexing Pandas iloc &amp; loc<\/a><\/li>\r\n<li><a href=\"https:\/\/youtu.be\/S-0gSX2fzsY\" target=\"_blank\" rel=\"noopener\">Transformasi Data<\/a><\/li>\r\n<\/ul>\r\n<p>External Resources<\/p>\r\n<p>List artikel:<\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.it-swarm.dev\/id\/python\/memilih-beberapa-kolom-dalam-bingkai-data-panda\/1068562049\/\">https:\/\/www.it-swarm.dev\/id\/python\/memilih-beberapa-kolom-dalam-bingkai-data-panda\/1068562049\/<\/a><\/li>\r\n<li><a href=\"https:\/\/www.it-swarm.dev\/id\/python\/pilih-baris-dari-dataframe-berdasarkan-nilai-nilai-dalam-kolom-di-panda\/1073294319\/\">https:\/\/www.it-swarm.dev\/id\/python\/pilih-baris-dari-dataframe-berdasarkan-nilai-nilai-dalam-kolom-di-panda\/1073294319\/<\/a><\/li>\r\n<li><a href=\"https:\/\/www.it-swarm.dev\/id\/python\/jatuhkan-kolom-yang-namanya-berisi-string-spesifik-dari-panda-dataframe\/1041678799\/\">https:\/\/www.it-swarm.dev\/id\/python\/jatuhkan-kolom-yang-namanya-berisi-string-spesifik-dari-panda-dataframe\/1041678799\/<\/a>&nbsp;(Pandas Filtering)<\/li>\r\n<\/ul>","waktu_publish":"2021-11-02 09:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-11-01 23:17:23","waktu_publish_formatted":" Selasa, 02 November 2021. 09:00:00 WIB."},{"id":728,"uuid":"1d2827b7-48b2-4afe-b146-c5b4165959df","author_user_id":4430,"materi_section_id":204,"judul":"Hari 3 \u2013 Reshaping Data","permalink":"hari-3-reshaping-data","konten":"<div class=\"entry-content\">\r\n<p>Dalam beberapa kasus kita perlu melakukan reshaping terhadap data untuk mengubah data yang &lsquo;tidy&rsquo; menjadi data yang lebih relevan dan lebih optimal untuk di jadikan bahan analisis.<\/p>\r\n<p>Ada beberapa teknik reshaping data di pandas, beberapa diantaranya yang akan dijelaskan dalam artikel ini adalah Pivoting dan Melting.<\/p>\r\n<h2 id=\"pivoting-data\">Pivoting Data<\/h2>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1444\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-16.png\" sizes=\"(max-width: 897px) 100vw, 897px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-16.png 897w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-16-300x157.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-16-768x401.png 768w\" alt=\"\" width=\"897\" height=\"468\" \/>\r\n<figcaption>source : https:\/\/pandas.pydata.org\/docs\/user_guide\/reshaping.html#reshaping-by-pivoting-dataframe-objects<\/figcaption>\r\n<\/figure>\r\n<p>Pivoting adalah suatu pengubahan bentuk data dengan memutar data yang terletak di baris menjadi di column. coba perhatikan gambar di atas.<\/p>\r\n<p>Kita juga dapat mengatakan pivoting tabel adalah melakukan perubahan pada bentuk data dari yang tadinya panjang menjadi lebar.<\/p>\r\n<p>Ada beberapa metode untuk melakukan pivoting di pandas, yaitu pivot() dan pivot_table(), namun metode yang bagus adalah pivot_table(), oleh karena itu di artikel ini akan di tunjukan contoh melakukan perubahan bentuk data dengan metode pivot.<\/p>\r\n<p>Untuk simplicity, kita akan menggunakan data buatan. misalkan kita mempunyai data seperti yang ada pada gambar diatas<\/p>\r\n<pre class=\"wp-block-code\"><code>import pandas as pd\r\ndata = {\r\n    'foo' : ['one']*3 + ['two']*3,\r\n    'bar' : ['A', 'B', 'C', 'A', 'B', 'C'],\r\n    'baz' : [1, 2, 3, 4, 5, 6],\r\n    'zoo' : ['x', 'y', 'z', 'q', 'w', 't']\r\n}\r\ndf = pd.DataFrame(data)\r\nprint(df)\r\n==================\r\n \tfoo \tbar \tbaz \tzoo\r\n0 \tone \tA \t1 \tx\r\n1 \tone \tB \t2 \ty\r\n2 \tone \tC \t3 \tz\r\n3 \ttwo \tA \t4 \tq\r\n4 \ttwo \tB \t5 \tw\r\n5 \ttwo \tC \t6 \tt<\/code><\/pre>\r\n<p>kemudian kita akan melakukan pivoting tabel seperti yang ada di gambar, maka ada beberapa argument paling penting di dalam method pivot_tabel yang perlu kita perhatikan, diantaranya :<\/p>\r\n<ol>\r\n<li>values : Argumen ini mendefiniskan column mana dari dataframe yang asli yang akan di jadikan values yang ingin kita lihat di dalam hasil pivoting tabel kita.<\/li>\r\n<li>columns : Data dari column mana yang akan dijadikan column baru di dalam hasil pivoting dataframe kita.<\/li>\r\n<li>index : Data dari column mana yang akan dijadikan index di dalam hasil pivoting dataframe kita.<\/li>\r\n<\/ol>\r\n<p>Jika kalian bingung memahami bahasa-bahasa diatas, maka kita langsung praktekan saja dan coba kalian perhatikan baik baik hasilnya.<\/p>\r\n<pre class=\"wp-block-code\"><code># using pivot\r\npivot_df = pd.pivot(df, index='foo', columns='bar', values='baz')\r\n\r\nprint(pivot_df)\r\n======================\r\nbar \tA \tB \tC\r\nfoo \t\t\t\r\none \t1 \t2 \t3\r\ntwo \t4 \t5 \t6\r\n\r\n#using pivot_table\r\npivot_table_df= pd.pivot_table(df, index='foo', columns='bar', values='baz', aggfunc='sum')\r\n\r\nprint(pivot_table_df)\r\n=======================\r\nbar  A  B  C\r\nfoo         \r\none  1  2  3\r\ntwo  4  5  6<\/code><\/pre>\r\n<p>Perbedaan antara pivot dan pivot_table terletak pada penggunaan fungsi agregasi. Dalam pivot, kita tidak bisa melakukan agregasi sedangkan pada pivot_table kita bisa mengaplikasikan fungsi agregasi.<\/p>\r\n<h2 id=\"melting-data\">Melting Data<\/h2>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1446\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-17.png\" sizes=\"(max-width: 907px) 100vw, 907px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-17.png 907w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-17-300x147.png 300w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-17-768x376.png 768w\" alt=\"\" width=\"907\" height=\"444\" \/>\r\n<figcaption>source = https:\/\/pandas.pydata.org\/docs\/user_guide\/reshaping.html#reshaping-by-melt<\/figcaption>\r\n<\/figure>\r\n<p>&nbsp;<\/p>\r\n<p>Melting adalah &lsquo;unpivoting&rsquo;, melting mengubah suatu data dengan memutar dari yang tadinya berada di posisi column menjadi di posisi row.<\/p>\r\n<p>Melting mengubah data yang tadinya lebar menjadi panjang.<\/p>\r\n<p>Melting berguna ketika ada suatu kasus dimana terdapat satu atau lebih column yang merupakan identifier variable, dan columnn lain adalah measure variabel. Identifier variabel adalah suatu entitias yang melakukan identifikasi terhadap suatu variabel yang sedang di ukur.<\/p>\r\n<p>Apabila kita memiliki suatu besaran yang nilainya selalu berubah, kemudian kita ingin mengamati perubahan itu, berarti kita sedang memperlakukan besaran itu sebagai measure variabel. dan kita perlu sesuatu yang mereferensikan perubahan tersebut. hal itu di sebut identifier variable.<\/p>\r\n<p>contohnya nyatanya adalah apabila kita mengamati perubahan suhu setiap waktu. maka perubahan suhu adalah variabel yang di ukur, dan waktu adalah identifier variabel.<\/p>\r\n<p>Sekarang kita akan mencoba mempraktekan teknik melting terhadap suatu dataframe :<\/p>\r\n<pre class=\"wp-block-code\"><code># Membuat datafame sederhana\r\n  \r\n# importing pandas as pd \r\nimport pandas as pd \r\n  \r\n# membuat dataframe\r\ndf = pd.DataFrame({'Name': {0: 'John', 1: 'Bob', 2: 'Shiela'}, \r\n                   'Course': {0: 'Masters', 1: 'Graduate', 2: 'Graduate'}, \r\n                   'Age': {0: 27, 1: 23, 2: 21}}) \r\ndf \r\n=====================\r\n \tName \tCourse \t       Age\r\n0 \tJohn \tMasters \t27\r\n1 \tBob \tGraduate \t23\r\n2 \tShiela \tGraduate \t21<\/code><\/pre>\r\n<p>Dalam menggunakan method melt, ada beberapa argument yang penting untuk di perhatikan, diantaranya adalah :<\/p>\r\n<ol>\r\n<li>id_vars : columns mana yang akan dijadikan identifier variabel<\/li>\r\n<li>value_vars : columns yang akan menjadi value setelah kita melakukan &lsquo;unpivot&rsquo; terhadap variabel, jika tidak di definisikan maka semua column selain id_vars akan dijadikan value_vars.<\/li>\r\n<\/ol>\r\n<pre class=\"wp-block-code\"><code># Unpivot table \r\npd.melt(df, id_vars =['Name'], value_vars =['Course', 'Age']) \r\n======================\r\nName \tvariable \tvalue\r\n0 \tJohn \tCourse \tMasters\r\n1 \tBob \tCourse \tGraduate\r\n2 \tShiela \tCourse \tGraduate\r\n3 \tJohn \tAge \t27\r\n4 \tBob \tAge \t23\r\n5 \tShiela \tAge \t21<\/code><\/pre>\r\n<h4>Materi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/AixjxKLwbi0\" target=\"_blank\" rel=\"noopener\">Pivot Table<\/a><\/li>\r\n<li><a href=\"https:\/\/youtu.be\/SsXAXbBVsYE\" target=\"_blank\" rel=\"noopener\">Melt<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-11-03 09:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:16:19","waktu_publish_formatted":" Rabu, 03 November 2021. 09:00:00 WIB."},{"id":729,"uuid":"0c557eb0-d8da-42de-bd74-9fd8d8f2b48c","author_user_id":4430,"materi_section_id":204,"judul":"Hari 4 \u2013 Grouping Data","permalink":"hari-4-grouping-data","konten":"<div class=\"entry-content\">\r\n<p>Dalam kesempatan sekarang kita akan membahas teknik-teknik grouping pada data.<\/p>\r\n<p>Grouping adalah suatu teknik memisahkan data berdasarkan kriteria tertentu. untuk melakukan grouping di pandas kita menggunakan suatu method yang bernama&nbsp;<strong>groupby()<\/strong>. definisi abstraknya dari grouping adalah kita melakukan mapping suatu data terhadap suatu group.<\/p>\r\n<p>ketika melakukan grouping ada beberapa proses yang terjadi secara berurutan, yaitu :<\/p>\r\n<ol>\r\n<li><strong>Splitting&nbsp;<\/strong>: Memisahkan data kedalam suatu group berdasarkan kriteria tertentu.<\/li>\r\n<li><strong>Applying&nbsp;<\/strong>: Melakukan suatu operasi terhadap sekumpulan data di group-group tersebut.<\/li>\r\n<li><strong>Combining&nbsp;<\/strong>: Menggabungkan data menjadi suatu struktur baru<\/li>\r\n<\/ol>\r\n<p>Langsung saja kita akan melihat bagaimana process split-apply-combine. kita akan menggunakan data sederhana untuk tujuan pembelajaran.<\/p>\r\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nimport pandas as pd\r\ndf = pd.DataFrame([('bird', 'Falconiformes', 389.0),\r\n                           ('bird', 'Psittaciformes', 24.0),\r\n                           ('mammal', 'Carnivora', 80.2),\r\n                           ('mammal', 'Primates', np.nan),\r\n                           ('mammal', 'Carnivora', 58)],\r\n                          index=['falcon', 'parrot', 'lion', 'monkey', 'leopard'],\r\n                             columns=('class', 'order', 'max_speed'))\r\n\r\ndf<\/code><\/pre>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1450\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-18.png\" sizes=\"(max-width: 449px) 100vw, 449px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-18.png 449w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-18-300x167.png 300w\" alt=\"\" width=\"449\" height=\"250\" \/>\r\n<figcaption>dataframes<\/figcaption>\r\n<\/figure>\r\n<p>Mari kita praktikan method groupby terhadap data tersebut. misalkan kita group data tersebut berdasarkan class.<\/p>\r\n<pre class=\"wp-block-code\"><code>df.groupby('class')\r\n====================\r\n&lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x000002054AEB2808&gt;<\/code><\/pre>\r\n<p>Coba kalian perhatikan, pada tahap ini kita baru sampai pada process&nbsp;<strong>splitting&nbsp;<\/strong>berdasarkan kategori &lsquo;class&rsquo;. hasil dari groupby ini hanya sebuah objek GroupBy. objek groupby ini adalah representasi dari suatu hasil penggabungan data berdasarkan group class, namun tidak menghasilkan nilai apapun sebelum kita memberikan suatu operasi terhadap hasil dari setiap grouping tersebut. prosess melakukan operasi terhadap sekumpulan data yang telah di groupkan adalah process&nbsp;<strong>applying<\/strong>. kita bisa menggunakan berbagai jenis operasi aggregasi terhadap objek groupby tersebut. ada operasi yang telah di sediakan sebagai operasi bawaan dari pandas seperti mean(), min(), max(), dan lain sebagainya. dapat pula menggunakan custom operasi tergantung apa yang kita inginkan. mari kita coba praktekan salah satu jenis operasi kepada objek groupby tersebut.<\/p>\r\n<pre class=\"wp-block-code\"><code>df.groupby('class').mean()\r\n===========================<br \/>         max_speed<br \/>class<br \/>bird     206.5    <br \/>mammal   69.1     <\/code><\/pre>\r\n<p>Coba kalian perhatikan. kita telah berhasil menggunakan groupby dan memberikan hasil. jenis operasi yang di apply terhadap setiap group adalah rata-rata. dan hasilnya di&nbsp;<strong>combine<\/strong> menjadi struktur data baru. dengan begini kita menhasilkan suatu hasil analisis sederhana yaitu bahwa binatang dengan class bird memiliki kecepatan maksimal rata-rata sebesar 206.5 dan binatang class mamalia sebesar 69.1.<\/p>\r\n<p>Kita juga dapat mengambil lebih banyak data dengan cara:<\/p>\r\n<pre><code>df.groupby(['class', 'order'])[['max_speed']].agg(['mean', 'sum'])\r\n==================================================================<br \/>                          max_speed<br \/>                          mean     sum<br \/>class    order<br \/>bird &nbsp; &nbsp; Falconiformes &nbsp;  389.0 &nbsp; &nbsp;389.0<br \/> &nbsp; &nbsp; &nbsp; &nbsp; Psittaciformes &nbsp; 24.0 &nbsp; &nbsp; 24.0<br \/>mammal &nbsp; Carnivora        69.1 &nbsp; &nbsp; 138.2<br \/> &nbsp; &nbsp; &nbsp; &nbsp; Primates &nbsp; &nbsp; &nbsp; &nbsp; NaN &nbsp; &nbsp; &nbsp;0.0<\/code><\/pre>\r\n<h4>&nbsp;<\/h4>\r\n<h4>Beberapa Pengolahan Data yang Dapat Dilakukan:<\/h4>\r\n<p>Silahkan kalian tonton video berikut:<\/p>\r\n<h4>Materi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/mSsLhrqv-aA\" target=\"_blank\" rel=\"noopener\">Pandas Group by<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-11-04 09:00:00","status_publish":"publish","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:16:36","waktu_publish_formatted":" Kamis, 04 November 2021. 09:00:00 WIB."},{"id":730,"uuid":"8aed254a-4b1b-4c85-96ab-87b46b46c5da","author_user_id":4430,"materi_section_id":204,"judul":"Hari 5 \u2013 Merging DataFrame","permalink":"hari-5-merging-dataframe","konten":"<p>Menggabungkan data adalah salah satu hal yang penting dalam suatu pekerjaan data analyst atau data science. karena dalam banyak kasus data selalu berada dri berbagai file dan sumber. Maka menguasai penggabungan data beserta logika-logika penggabungan data menjadi hal yang esensi untuk di kuasai.<\/p>\r\n<p>Pandas menyediakan berbagai tool atau method yang memudahkan kita untuk melakukan penggabungan data dengan berbagai macam logik. method-method tersebut diantaranya seperti&nbsp;<strong>join()<\/strong>,&nbsp;<strong>merge()<\/strong>,&nbsp;<strong>concat().<\/strong>&nbsp;kali ini kita kan mempelejari beberapa teknik tersebut.<\/p>\r\n<p>Ada beberapa logika penggabungan data, diantaranya adalah :<\/p>\r\n<ol>\r\n<li>Inner Join<\/li>\r\n<li>Full Outer Join<\/li>\r\n<li>Left Outer Join<\/li>\r\n<li>Right Outer Join<\/li>\r\n<li>dll.<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/data-flair.training\/blogs\/wp-content\/uploads\/sites\/2\/2018\/03\/Types-of-Hive-joins.jpg\" alt=\"Hive Join | HiveQL Select Joins Query | Types of Join in Hive ...\" width=\"600\" height=\"400\" \/><\/p>\r\n<h2 id=\"penggabungan-baris-dan-column-dengan-metod-concat\">Penggabungan Baris dan Column dengan Metod concat()<\/h2>\r\n<p>Concat adalah salah satu metode untuk melakukan penggabungan data berdasarkan sumbu tertentu. langsung saja kita lihat.<\/p>\r\n<p>misalkan kita mempunyai data seperti ini :<\/p>\r\n<pre class=\"wp-block-code\"><code>import pandas as pd\r\n\r\ndf1 = pd.DataFrame({'A': ['A0', 'A1', 'A2', 'A3'],\r\n                            'B': ['B0', 'B1', 'B2', 'B3'],\r\n                            'C': ['C0', 'C1', 'C2', 'C3'],\r\n                            'D': ['D0', 'D1', 'D2', 'D3']},\r\n                           index=[0, 1, 2, 3])\r\n\r\ndf2 = pd.DataFrame({'A': ['A4', 'A5', 'A6', 'A7'],\r\n                            'B': ['B4', 'B5', 'B6', 'B7'],\r\n                            'C': ['C4', 'C5', 'C6', 'C7'],\r\n                            'D': ['D4', 'D5', 'D6', 'D7']},\r\n                           index=[4, 5, 6, 7])\r\n\r\ndf3 = pd.DataFrame({'A': ['A8', 'A9', 'A10', 'A11'],\r\n                            'B': ['B8', 'B9', 'B10', 'B11'],\r\n                            'C': ['C8', 'C9', 'C10', 'C11'],\r\n                            'D': ['D8', 'D9', 'D10', 'D11']},\r\n                           index=[8, 9, 10, 11])<\/code><\/pre>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1463\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-19.png\" sizes=\"(max-width: 175px) 100vw, 175px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-19.png 175w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-19-147x300.png 147w\" alt=\"\" width=\"175\" height=\"357\" \/><\/figure>\r\n<p>Perhatikan, data yang kita punya sangatlah simple, kita mempunyai 3 data yang mempunyai nama column yang sama. apabila kita ingin menggabungkan baris data ini, kita bisa menggunakan suatu method concat(). pertama kita buat terlebih dahulu list dari data yang akan kita gabung, kemudian masukan list tersebut sebagai argument kedalam method concat(). seperti ini.<\/p>\r\n<pre class=\"wp-block-code\"><code># list data yang akan di gabung\r\nlist_dataframe = [df1, df2, df3]\r\n# gabungkan data dengan metode concat dari pandas\r\npd.concat(list_dataframe)<\/code><\/pre>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>&nbsp;<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<th>0<\/th>\r\n<td>A0<\/td>\r\n<td>B0<\/td>\r\n<td>C0<\/td>\r\n<td>D0<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>1<\/th>\r\n<td>A1<\/td>\r\n<td>B1<\/td>\r\n<td>C1<\/td>\r\n<td>D1<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>2<\/th>\r\n<td>A2<\/td>\r\n<td>B2<\/td>\r\n<td>C2<\/td>\r\n<td>D2<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>3<\/th>\r\n<td>A3<\/td>\r\n<td>B3<\/td>\r\n<td>C3<\/td>\r\n<td>D3<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>4<\/th>\r\n<td>A4<\/td>\r\n<td>B4<\/td>\r\n<td>C4<\/td>\r\n<td>D4<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>5<\/th>\r\n<td>A5<\/td>\r\n<td>B5<\/td>\r\n<td>C5<\/td>\r\n<td>D5<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>6<\/th>\r\n<td>A6<\/td>\r\n<td>B6<\/td>\r\n<td>C6<\/td>\r\n<td>D6<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>7<\/th>\r\n<td>A7<\/td>\r\n<td>B7<\/td>\r\n<td>C7<\/td>\r\n<td>D7<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>8<\/th>\r\n<td>A8<\/td>\r\n<td>B8<\/td>\r\n<td>C8<\/td>\r\n<td>D8<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>9<\/th>\r\n<td>A9<\/td>\r\n<td>B9<\/td>\r\n<td>C9<\/td>\r\n<td>D9<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>10<\/th>\r\n<td>A10<\/td>\r\n<td>B10<\/td>\r\n<td>C10<\/td>\r\n<td>D10<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>11<\/th>\r\n<td>A11<\/td>\r\n<td>B11<\/td>\r\n<td>C11<\/td>\r\n<td>D11<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p>Berikut hasilnya, hasil tersebut merupakan gabungan yang seperti ini :<\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1464\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-20.png\" sizes=\"(max-width: 419px) 100vw, 419px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-20.png 419w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-20-300x278.png 300w\" alt=\"\" width=\"419\" height=\"388\" \/><\/figure>\r\n<p>Apabila kita ingin menggabungkan data tersebut berdasarkan column, kita mesti memberikan satu argument lagi kedalam method concat yaitu axis, dengan nilai 1. seperti ini<\/p>\r\n<pre class=\"wp-block-code\"><code>pd.concat(list_dataframe, axis=1)<\/code><\/pre>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>&nbsp;<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<th>0<\/th>\r\n<td>A0<\/td>\r\n<td>B0<\/td>\r\n<td>C0<\/td>\r\n<td>D0<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>1<\/th>\r\n<td>A1<\/td>\r\n<td>B1<\/td>\r\n<td>C1<\/td>\r\n<td>D1<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>2<\/th>\r\n<td>A2<\/td>\r\n<td>B2<\/td>\r\n<td>C2<\/td>\r\n<td>D2<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>3<\/th>\r\n<td>A3<\/td>\r\n<td>B3<\/td>\r\n<td>C3<\/td>\r\n<td>D3<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>4<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A4<\/td>\r\n<td>B4<\/td>\r\n<td>C4<\/td>\r\n<td>D4<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>5<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A5<\/td>\r\n<td>B5<\/td>\r\n<td>C5<\/td>\r\n<td>D5<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>6<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A6<\/td>\r\n<td>B6<\/td>\r\n<td>C6<\/td>\r\n<td>D6<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>7<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A7<\/td>\r\n<td>B7<\/td>\r\n<td>C7<\/td>\r\n<td>D7<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>8<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A8<\/td>\r\n<td>B8<\/td>\r\n<td>C8<\/td>\r\n<td>D8<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>9<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A9<\/td>\r\n<td>B9<\/td>\r\n<td>C9<\/td>\r\n<td>D9<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>10<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A10<\/td>\r\n<td>B10<\/td>\r\n<td>C10<\/td>\r\n<td>D10<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>11<\/th>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>A11<\/td>\r\n<td>B11<\/td>\r\n<td>C11<\/td>\r\n<td>D11<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p>Coba kalian perhatikan, penggabungan ini adalah penggabungan sumbu column pada setiap dataframe, dan pada sumbu baris di lakukan penggabungan juga berdasarkan indeks. secara default logika penggabunganya adalah outer join. kita akan melihat beberapa logika penggabungan setelah ini.<\/p>\r\n<h2 id=\"logika-logika-penggabungan-dengan-metode-merge\">Logika-Logika Penggabungan Dengan Metode merge<\/h2>\r\n<h2 id=\"full-outer-join\">Full Outer Join<\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/static.cdn-cdpl.com\/source\/998b78e349061b4971c0a2b0e8d6be41\/sql6.png\" alt=\"\" \/>\r\n<figcaption>source : https:\/\/static.cdn-cdpl.com\/source\/998b78e349061b4971c0a2b0e8d6be41\/sql6.png<\/figcaption>\r\n<\/figure>\r\n<ul>\r\n<li>Full Outer Join menghasilkan gabungan index bari dari setiap data yang di gabung.<\/li>\r\n<li>Full Outer Join menggabungan pula column yang berbeda<\/li>\r\n<li>Memberikan nilai null untuk nilai column yang tidak di miliki oleh suatu index tertentu.<\/li>\r\n<\/ul>\r\n<p>Misalkan kita mempunyai data seperti ini :<\/p>\r\n<pre class=\"wp-block-code\"><code>left = pd.DataFrame({'key': ['K0', 'K1', 'K2', 'K3'],\r\n                              'A': ['A0', 'A1', 'A2', 'A3'],\r\n                              'B': ['B0', 'B1', 'B2', 'B3']})\r\n\r\nright = pd.DataFrame({'key': ['K0', 'K1', 'K4', 'K5'],\r\n                                 'C': ['C0', 'C1', 'C2', 'C3'],\r\n                                 'D': ['D0', 'D1', 'D2', 'D3']})\r\n\r\nprint('data pertama')\r\nprint(=========)\r\nprint(left)\r\nprint('data kedua')\r\nprint(=========)\r\nprint(right)<\/code><\/pre>\r\n<pre class=\"wp-block-preformatted\">data pertama\r\n=========\r\n  key   A   B\r\n0  K0  A0  B0\r\n1  K1  A1  B1\r\n2  K2  A2  B2\r\n3  K3  A3  B3\r\ndata kedua\r\n=========\r\n  key   C   D\r\n0  K0  C0  D0\r\n1  K1  C1  D1\r\n2  K4  C2  D2\r\n3  K5  C3  D3<\/pre>\r\n<p>Kita akan menggabungkan data ini denga menggunakan method merge() dari pandas. dalam penggabungan kita kan gunakan column key dari data kita sebagai variabel identifier dari data kita, atau sebagai column key\/referensi.<\/p>\r\n<ul>\r\n<li>Untuk melakukan penggabungan dengan menggunakan column key sebagai referensi penggabungan, maka kita akan memberikan argument&nbsp;<strong>on<\/strong>&nbsp;dengan nilai&nbsp;<strong>&lsquo;key&rsquo;<\/strong><\/li>\r\n<li>untuk melakukan penggabungan outer join kita akan memberikan argument&nbsp;<strong>how<\/strong>&nbsp;dengan nilai&nbsp;<strong>&lsquo;outer&rsquo;<\/strong><\/li>\r\n<\/ul>\r\n<pre class=\"wp-block-code\"><code># gabungkan data dengan logika outer join\r\npd.merge(left, right, on='key', how='outer')<\/code><\/pre>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>&nbsp;<\/th>\r\n<th>key<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<th>0<\/th>\r\n<td>K0<\/td>\r\n<td>A0<\/td>\r\n<td>B0<\/td>\r\n<td>C0<\/td>\r\n<td>D0<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>1<\/th>\r\n<td>K1<\/td>\r\n<td>A1<\/td>\r\n<td>B1<\/td>\r\n<td>C1<\/td>\r\n<td>D1<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>2<\/th>\r\n<td>K2<\/td>\r\n<td>A2<\/td>\r\n<td>B2<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>3<\/th>\r\n<td>K3<\/td>\r\n<td>A3<\/td>\r\n<td>B3<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>4<\/th>\r\n<td>K4<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>C2<\/td>\r\n<td>D2<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>5<\/th>\r\n<td>K5<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>C3<\/td>\r\n<td>D3<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<h2 id=\"inner-join\">Inner Join<\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/static.cdn-cdpl.com\/source\/998b78e349061b4971c0a2b0e8d6be41\/sql1.png\" alt=\"\" \/>\r\n<figcaption>source : https:\/\/static.cdn-cdpl.com\/source\/998b78e349061b4971c0a2b0e8d6be41\/sql1.png<\/figcaption>\r\n<\/figure>\r\n<p>Inner join ini akan menggabungkan data antara nilai key\/referensi yang beririsan.<\/p>\r\n<p>Kita akan mencoba melakukan inner join dengan data yang sama pada outer join, Untuk melakukan inner join dengan metode merge(), kurang lebih sama seperti yang di lakukan pada outer join, kita hanya perlu mengubah argument argument&nbsp;<strong>how<\/strong>&nbsp;menjadi inner.<\/p>\r\n<pre class=\"wp-block-code\"><code>pd.merge(left, right, on='key', how='inner')<\/code><\/pre>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>&nbsp;<\/th>\r\n<th>key<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<th>0<\/th>\r\n<td>K0<\/td>\r\n<td>A<br \/>0<\/td>\r\n<td>B0<\/td>\r\n<td>C0<\/td>\r\n<td>D0<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>1<\/th>\r\n<td>K1<\/td>\r\n<td>A1<\/td>\r\n<td>B1<\/td>\r\n<td>C1<\/td>\r\n<td>D1<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p>Coba perhatikan, bahwa data yang di gabungkan adalah data yang mempunyai nilai key beririsan.<\/p>\r\n<h2 id=\"left-join\">Left Join<\/h2>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/static.cdn-cdpl.com\/source\/998b78e349061b4971c0a2b0e8d6be41\/sql2.png\" alt=\"\" \/>\r\n<figcaption>source : https:\/\/static.cdn-cdpl.com\/source\/998b78e349061b4971c0a2b0e8d6be41\/sql2.png<\/figcaption>\r\n<\/figure>\r\n<p>Left Outer Join menghasilkan seluruh data dari data yang kiri ditambah data kanan yang memiliki nilai key yang sama dengan data dari kiri.<\/p>\r\n<p>Kita akan mencoba melakukan left outer join dengan data yang sama pada outer join, untuk melakukan left outer join kita hanya perlu memberikan nilai&nbsp;<strong>&lsquo;left&rsquo;<\/strong>&nbsp;kepada argument how.<\/p>\r\n<pre class=\"wp-block-code\"><code>pd.merge(left, right, on='key', how='left')<\/code><\/pre>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>&nbsp;<\/th>\r\n<th>key<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<th>0<\/th>\r\n<td>K0<\/td>\r\n<td>A0<\/td>\r\n<td>B0<\/td>\r\n<td>C0<\/td>\r\n<td>D0<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>1<\/th>\r\n<td>K1<\/td>\r\n<td>A1<\/td>\r\n<td>B1<\/td>\r\n<td>C1<\/td>\r\n<td>D1<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>2<\/th>\r\n<td>K2<\/td>\r\n<td>A2<\/td>\r\n<td>B2<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>3<\/th>\r\n<td>K3<\/td>\r\n<td>A3<\/td>\r\n<td>B3<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<h2 id=\"right-join\">Right Join<\/h2>\r\n<p>Right outer join ini hanya kebalikan dari left outer join.<\/p>\r\n<p>Untuk melakukan operasi penggabungan right outer join dengan metode merge, kita hanya perlu memberikan nilai &lsquo;right&rsquo; pada argument how.<\/p>\r\n<pre class=\"wp-block-code\"><code>pd.merge(left, right, on='key', how='right')<\/code><\/pre>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>&nbsp;<\/th>\r\n<th>key<\/th>\r\n<th>A<\/th>\r\n<th>B<\/th>\r\n<th>C<\/th>\r\n<th>D<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<th>0<\/th>\r\n<td>K0<\/td>\r\n<td>A0<\/td>\r\n<td>B0<\/td>\r\n<td>C0<\/td>\r\n<td>D0<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>1<\/th>\r\n<td>K1<\/td>\r\n<td>A1<\/td>\r\n<td>B1<\/td>\r\n<td>C1<\/td>\r\n<td>D1<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>2<\/th>\r\n<td>K4<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>C2<\/td>\r\n<td>D2<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>3<\/th>\r\n<td>K5<\/td>\r\n<td>NaN<\/td>\r\n<td>NaN<\/td>\r\n<td>C3<\/td>\r\n<td>D3<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<h4>Materi Video:<\/h4>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/GHbaNrv6tfM\" target=\"_blank\" rel=\"noopener\">Merging DataFrame<\/a><\/li>\r\n<\/ul>\r\n<h2 id=\"external-resource\">External Resource<\/h2>\r\n<p>List Artikel:<\/p>\r\n<ul>\r\n<li>https:\/\/www.it-swarm.dev\/id\/python\/penggabungan-panda-101\/807882802\/<\/li>\r\n<\/ul>","waktu_publish":"2021-11-05 09:00:00","status_publish":"publish","urutan":5,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:16:53","waktu_publish_formatted":" Jumat, 05 November 2021. 09:00:00 WIB."}]},{"id":205,"uuid":"cdd883d3-6a30-41fd-ad22-b77cc82180d4","materi_id":24,"nama":"Tugas Pekan 2","permalink":"tugas-pekan-2","urutan":5,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null,"posting":[{"id":731,"uuid":"16d79199-4ecf-4740-8818-6f355db24d8a","author_user_id":4430,"materi_section_id":205,"judul":"Tugas Hari 1","permalink":"tugas-hari-1","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download link: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=12Q2RrQnEl8EKTOs4gpflo5NV2KSz0r-n\">Tugas Hari 1<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>File Asset :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:file {\"id\":1671,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/diamonds-1.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/diamonds-1.csv\">diamonds-1<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/diamonds-1.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:image {\"id\":1673,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\" style=\"text-align: center;\"><img class=\"wp-image-1673\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-55.png\" alt=\"\" \/>\r\n<figcaption>Expected Result Soal 2<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-01 13:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:17:15","waktu_publish_formatted":" Senin, 01 November 2021. 13:00:00 WIB."},{"id":732,"uuid":"08b27671-1308-42f0-884e-d7cb6ba7386b","author_user_id":4430,"materi_section_id":205,"judul":"Tugas Hari 2","permalink":"tugas-hari-2","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1zzNZq2hfULDDsf3xPahVQtDIi5Q6ccQT\">Tugas Hari 2<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>File Gambar:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":1675,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-1675\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-56.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"align\":\"center\",\"id\":1676,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"aligncenter size-large\" style=\"text-align: center;\"><img class=\"wp-image-1676\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-57-1024x447.png\" alt=\"\" width=\"800\" height=\"600\" \/>\r\n<figcaption>Formula Normalisasi , Tugas Harian No 3<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-02 13:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:17:37","waktu_publish_formatted":" Selasa, 02 November 2021. 13:00:00 WIB."},{"id":733,"uuid":"10902cd1-d7e5-4b27-8eaa-93c214747971","author_user_id":4430,"materi_section_id":205,"judul":"Tugas Hari 3","permalink":"tugas-hari-3","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=10Zr7-0VX99BCETKCzbcgjjW4sxn-CUur\">Tugas Hari 3<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-03 13:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:17:55","waktu_publish_formatted":" Rabu, 03 November 2021. 13:00:00 WIB."},{"id":734,"uuid":"a5b3ba22-dca4-48bb-b060-0babd26e1e4f","author_user_id":4430,"materi_section_id":205,"judul":"Tugas Hari 4","permalink":"tugas-hari-4","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1nGziS-CKZh8dDrA1Jd_ggTKobkK63F_C\">Tugas Hari 4<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Download File :<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1qQiM9utQUThTPq8jk8stPMh_y2zfqYOd\">diamonds.csv<\/a><\/p>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 2:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1687,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1687\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-59.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 3:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1688,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1688\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-60.png\" alt=\"\" \/>\r\n<figcaption><\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 4:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1690,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1690\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-62.png\" alt=\"\" \/>\r\n<figcaption><\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 5:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1691,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1691\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-63.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 6:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1692,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1692\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-64.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-04 13:00:00","status_publish":"publish","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:18:13","waktu_publish_formatted":" Kamis, 04 November 2021. 13:00:00 WIB."},{"id":735,"uuid":"276a89d6-d024-44f5-8588-d4a08246d7b6","author_user_id":4430,"materi_section_id":205,"judul":"Tugas Hari 5","permalink":"tugas-hari-5","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download link:&nbsp;<a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1QQ76QErEGNEM0y_rH7-zfB5P5wanTMol\">Tugas Hari 5<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>File :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:file {\"id\":1703,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/names1881.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/names1881.csv\">names1881 <\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/names1881.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":1704,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/names1981.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/names1981.csv\">names1981 <\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/names1981.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-11-05 13:00:00","status_publish":"publish","urutan":5,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:18:38","waktu_publish_formatted":" Jumat, 05 November 2021. 13:00:00 WIB."}]},{"id":206,"uuid":"77c79ba6-6f0b-4ad9-992e-44e18e9afd4b","materi_id":24,"nama":"Materi Pekan 3","permalink":"materi-pekan-3","urutan":6,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null,"posting":[{"id":736,"uuid":"17aa0bbd-7c36-4bdd-a0b5-6f9d0edd94d1","author_user_id":4430,"materi_section_id":206,"judul":"Hari 1 - Pengenalan Matplotlib","permalink":"hari-1-pengenalan-matplotlib","konten":"<p><!-- wp:heading --><\/p>\r\n<h1>Pengenalan<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Manusia adalah makhluk visual. kita dapat lebih mudah memahami sesuatu lebih baik dengan visualisasi. kita dapat lebih mudah menemukan pola-pola yang mungkin tersembunyi apa bila kita bisa melihatnya secara visual.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada artikel ini kita akan membahas suatu topik tentang Visualisasi menggunakan liblary matplotlib. kita akan belajar bagaimana caranya membuat objek visual yang informatif dan menarik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Matplotlib adalah suatu liblary yang low-level untuk membangun objek visual. maksudnya low-level bukan jelek ya. tapi low-level ini memberikan kita control sampai ke komponen-komponen kecilnya. kalau misalkan kita buat mobil, kita mengontrol sampai pembuatan ke baut bautnya. Oleh karena itu matplotlib penting di fahami sebagai dasar apabila ingin mendalami bidang visualisasi data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h1>Install Liblary Matplotlib<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk dapat menggunakan liblary matplotlib, install terlebih dahulu liblary tersebut dengan:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>pip install matplotlib<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>atau<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>conda install matplotlib<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h1>Komponen Besar: Figure dan Axes<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan membahas top-level component, yaitu komponen terbesar dalam suatu objek visualisasi, Figure dan Axes.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebelum dijelaskan lebih jauh lagi, mari lihat terlebih dahulu seperti apa contoh sederhana visualisasi data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import random\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\nx = np.linspace(0, 10, 100)\r\ny = [random.random()*100 for i in range(100)]\r\n\r\nplt.figure(figsize=(12, 8))\r\nplt.plot(x, y)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1554,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1554\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-35.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Ok, sampai sini setidaknya kalian mempunyai gambaran besar tentang objek visual data. Kita akan lanjut bahas tentang komponen terbesar dalam objek visual ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Figure<\/strong>, adalah window atau page atau halaman dalam objek visual. kalau kita ngegambar di kertas, maka kertas tersebutlah yang di namakan figure.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Axis<\/strong>, kedalam Figure kita menambahkan Axis, Axis adalah suatu area di dalam figure dimana data akan di plot. Dalam Axis juga terdapat berbagai macam komponen lagi seperti x-axis, y-axis, dan lain sebagainya. hal ini akan kalian lihat di artikel ke dua.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Selain Figure dan Axis, ada komponen lain dalam visualisasi, yaitu <strong>Artist<\/strong>. Artist adalah komponen yang digunakan untuk memperindah objek visualisasi kita, seperti legend, title, tick labels dan lainnya. Topik tentang Artist ini akan dibahas di pertemuan ke dua ya .. ^_^<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah memahami komponen terbesar dari matplotlib, berikut akan di tunjukan beberapa macam perintah kode untuk membuat komponen-komponen tersebut dan memberiakan data kepada komponen Axis.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Beikut adalah method untuk membuat figure:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\nfig = plt.figure()\r\nprint(fig)\r\n===========\r\n&lt;Figure size 432x288 with 0 Axes&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Perhatikan kita mempunyai objek Figure dengan 0 Axis. sekarang kita akan menambahkan axis kedalam objek figure kita dengan method add_subplot(). kemudian kita tunjukan objek figure kita dengan method show().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># membuat objek figure\r\nfig = plt.figure()\r\n\r\n# membuat objek axes\r\nax = fig.add_subplot()\r\n\r\n# menampilkan objek visual\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1556,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1556\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-36.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan tambahkan data kedalam objek tersebut dengan memanggil method plot() dan memberikan data sebagai argument method tersebut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># membuat objek figure\r\nfig = plt.figure()\r\n\r\n# membuat objek axes\r\nax = fig.add_subplot()\r\n\r\n# membuat data\r\ndata_x = [1, 2, 3, 4, 5]\r\ndata_y = [10, 20, 25, 30, 15]\r\n\r\n# menambahkan dalam ke objek axes\r\nax.plot(data_x, data_y)\r\n\r\n# menampilkan data\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1559,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1559\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-37.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Begitulah cara sederhana untuk membuat objek visualisasi, sekarang akan di tunjukan cara lain yang lebih clean.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># membuat objek visual\r\nplt.plot(data_x, data_y)\r\n\r\n# menampilkan objek visual\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1559,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1559\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-37.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Perhatikan, kedua cara tadi menghasilkan hasil yang sama. tapi cara kedua lebih clean karena tidak memerlukan banyak kode. sebenarnya ke dua cara tersebut sama-sama menghasilkan komponen Figure dan Axis. tetapi cara pertama Explicit sedangkan cara kedua Implicit.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Cara yang Explicit di rekomendasikan ketika kita ingin membuat visualisasi data yang lebih kompleks. karena kita dapat mengontrol berbagai macam komponen yang terdapat di dalam objek figure dan axes, saat ini kalian belum banyak melihat komponen tersebut, materi ini akan diberikan di materi ke 2.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Namun, kita juga dapat membuat cara visualisasi data lebih simple dengan menggabungkan pembuatan objek Figure dan Axes dengan sekali jalan, melalui pemanggilan method subplots(), seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># membuat objek figure dan axes\r\nfig, ax = plt.subplots()\r\n\r\n# membuat data\r\ndata_x = [1, 2, 3, 4, 5]\r\ndata_y = [10, 20, 25, 30, 15]\r\n\r\n# menambahkan dalam ke objek axes\r\nax.plot(data_x, data_y)\r\n\r\n# menampilkan data\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1559,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1559\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-37.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Memungkinkan untuk memplot lebih dari satu data kedalam suatu axis dengan cara seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots()\r\ndata_x1 = [1, 2, 3, 4]\r\ndata_y1 = [10, 20, 25, 30]\r\ndata_x2 = [1, 2, 3, 4, 5]\r\ndata_y2 = [5, 15, 20, 25, 30]\r\nax.plot(data_x1, data_y1)\r\nax.plot(data_x2, data_y2)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1570,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1570\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-38.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":5} --><\/p>\r\n<h1>Menyimpan dan menampilkan gambar hasil plotting<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah kita melakukan plotting data, kita bisa melakukan penyimpanan dan menampilkan data yang kita simpan menggunakan modul Image, seperti berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#membuat figure dan axis\r\nfig, ax = plt.subplots()\r\ndata_x1 = [1, 2, 3, 4, 5]\r\ndata_y1 = [10, 20, 25, 30, 35]\r\ndata_x2 = [1, 2, 3, 4, 5]\r\ndata_y2 = [5, 15, 20, 25, 30]\r\nax.plot(data_x1, data_y1)\r\nax.plot(data_x2, data_y2)\r\nplt.show()\r\n\r\n#menyimpan hasil figure\r\nfig.savefig('coba.png')\r\n\r\n#menampilkan figure yang disimpan\r\nfrom IPython.display import Image\r\nImage('coba.png')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13402,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13402\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/plot1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Materi Video:<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/ckXmVcbRvBc\" target=\"_blank\" rel=\"noopener\">Pengenalan Matplotlib<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><\/p>","waktu_publish":"2021-11-08 09:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:19:05","waktu_publish_formatted":" Senin, 08 November 2021. 09:00:00 WIB."},{"id":737,"uuid":"e03334f3-9f11-45f1-8259-70f165b9129e","author_user_id":4430,"materi_section_id":206,"judul":"Hari 2 - Custom Visualisasi","permalink":"hari-2-custom-visualisasi","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi sebelumnya telah di jelaskan cara membuat objek figure, axes, dan memplot data ke dalam axis tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada artikel ini akan di bahas tentang meng-custom visualisasi kita agar lebih informatif dan menarik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut adalah raw objek visualisasi data yang akan kita custom:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\n# membuat component figure dan axis\r\nfig, ax = plt.subplots()\r\n\r\ndata_x = [1, 2, 3, 4, 5, 6, 7]\r\ndata_y = [10, 20, 25, 30, 15, 18, 10]\r\n\r\n# memberikan data kedalam axis\r\nax.plot(data_x, data_y)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1573,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1573\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-39.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Custom LineStyle<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Garis penghubung antara data poin dapat di ubah dengan memberikan argument linestyle terhadap method plot, perhatikan contoh code berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\n# membuat component figure dan axis\r\nfig, ax = plt.subplots()\r\n\r\ndata_x = [1, 2, 3, 4, 5, 6, 7]\r\ndata_y = [10, 20, 25, 30, 15, 18, 10]\r\n\r\n# memberikan data kedalam axis\r\nax.plot(data_x, data_y, marker='x', linestyle='--')\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1581,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1581\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-44.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Di atas di berikan nilai '--' terhadap argument linestyle, terdapat berbagai opsi untuk memberikan berbagai jenis bentuk terhdap linestyle, yaitu sebagai berikut :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1580,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1580\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-43.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Memilih Warna<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Dapat di pilih warna plot dengan memberikan argument color terhadap method plot.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Memilih value untuk argument color bisa dengan berbagai bentuk format warna, seperti format RGB, hex code, atau label warna biasa seperti 'r' untuk red, 'b' untuk blue dan lain sebagainya. Dapat dilihat pada code berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\n# membuat component figure dan axis\r\nfig, ax = plt.subplots()\r\n\r\ndata_x = [1, 2, 3, 4, 5, 6, 7]\r\ndata_y = [10, 20, 25, 30, 15, 18, 10]\r\n\r\n# memberikan data kedalam axis\r\nax.plot(data_x, data_y, marker='D', linestyle='dotted', color='#9934FF')\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1583,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1583\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-45.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\nplt.figure(figsize=(12,8))\r\nx = np.linspace(0, 10, 100)\r\nplt.plot(x, np.sin(x), color='green') # menggunakan nama dari warnanya\r\nplt.plot(x, np.sin(x-1), color='m') # menggunakan format rgbcmyk\r\nplt.plot(x, np.sin(x-2), color='0.5') # menggunakan format grayscale (0 1)\r\nplt.plot(x, np.sin(x-3), color='#FF0037') # menggunakan format RRGGBB, value from 00 to FF\r\nplt.plot(x, np.sin(x-4), color=(0,1,0.5)) # format (R, G, B) 0-1\r\nplt.plot(x, np.sin(x-5), color='DarkGreen') # HTML color names support\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13450,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13450\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/color-line.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Custom Axis Label and Title<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Komponen lain yang penting untuk di custom adalah axis label karena axis label menunjukan variabel apa yang sedang di plot.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Axis terdapat 2, yaitu x-axis dan y-axis. untuk mengubah x-axis dapat menggungkan method set_xlabel(), untuk mengubah y-axis dapat menggungkan set_ylabel().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Title juga adalah komponen yang sangat penting untuk menunjukan data apa yang sedang di visualisasikan. Untuk mengubah title dapat menggunakan method set_title().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Perhatikan contoh code berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\n# membuat component figure dan axis\r\nfig, ax = plt.subplots()\r\n\r\ndata_x = [1, 2, 3, 4, 5, 6, 7]\r\ndata_y = [10, 20, 25, 30, 15, 18, 10]\r\n\r\n# memberikan data kedalam axis\r\nax.plot(data_x, data_y, marker='D', linestyle='dotted', color='#9934FF')\r\n\r\n# mengubah axis label dan title\r\nax.set_xlabel('X Label Axis')\r\nax.set_ylabel('Y Label Axis')\r\nax.set_title('Title of Graph')\r\n\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1585,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1585\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-46.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Axis Limit<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Kita bisa membatasi axis dari data kita dengan menggunakan atribut xlim, ylim maupun atribut .axis, seperti berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>plt.figure(figsize=(8,6))\r\nplt.plot(x, x+1, linestyle='solid')\r\nplt.plot(x, x+2, linestyle='dashed')\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13451,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13451\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/axiscustom1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#menggunakan method .xlim dan .ylim\r\nplt.figure(figsize=(8,6))\r\nplt.plot(x, x+1, linestyle='solid')\r\nplt.plot(x, x+2, linestyle='dashed')\r\nplt.xlim(2,8)\r\nplt.ylim(2,10)\r\nplt.show()\r\n\r\n#menggunakan .axis\r\nplt.figure(figsize=(8,6))\r\nplt.plot(x, x+1, linestyle='solid')\r\nplt.plot(x, x+2, linestyle='dashed')\r\nplt.axis([2,8,2,10]) # [xmin, xmax, ymin, ymax]\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13452,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13452\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/axiscustom2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Legend<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Legend adalah label data yang muncul dalam sebuah plot. dengan memberikan legend akan lebih mempermudah kita dalam membaca data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>plt.figure(figsize=(7,6))\r\nplt.plot(x, np.sin(x), label='Sin x')\r\nplt.plot(x, np.cos(x), label='Cos x')\r\nplt.legend(loc='upper center')\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13456,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13456\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/legend.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Marker Data Point<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Coba perhatikan bahwa bentuk plot dari data adalah berupa line plot, tidak dapat di ketahui dimana tepatnya data poin terletak. Terdapat sebuah argument dalam methode plot untuk memberikan marker\/tanda terhadap data poin, argument tersebut adalah marker, perhatikan kode berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\n# membuat component figure dan axis\r\nfig, ax = plt.subplots()\r\n\r\ndata_x = [1, 2, 3, 4, 5, 6, 7]\r\ndata_y = [10, 20, 25, 30, 15, 18, 10]\r\n\r\n# memberikan data kedalam axis\r\nax.plot(data_x, data_y, marker='o')\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1574,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1574\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-40.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Di atas telah di berikan nilai 'o' terhadap argument marker, 'o' artinya bulat, jadi di berikan marker bulat terhadap setiap data poin, sehingga dapat lebih jelas membedakan antara garis penghubung dengan data poin.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Nilai marker tidak hanya 'o' berikut opsi nilai untuk memberikan berbagai jenis bentuk marker terhadap data poin.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1575,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1575\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-41.png\" alt=\"\" \/>\r\n<figcaption>source : <a href=\"https:\/\/matplotlib.org\/1.4.1\/api\/markers_api.html\">https:\/\/matplotlib.org\/1.4.1\/api\/markers_api.html<\/a><\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>plt.figure(figsize=(8,7))\r\nx = np.random.RandomState(0)\r\nlist_marker = ['o', 'p', 'v', '+', 'x']\r\nfor marker in list_marker:\r\n    plt.plot(x.rand(5\r\n), x.rand(5), marker=marker, linestyle='None', label=marker)\r\n\r\nplt.legend()\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13457,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13457\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/marker.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Materi Video:<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/YpOXnYYrEg4\" target=\"_blank\" rel=\"noopener\">Custom Visualisasi<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><\/p>","waktu_publish":"2021-11-09 09:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:20:38","waktu_publish_formatted":" Selasa, 09 November 2021. 09:00:00 WIB."},{"id":738,"uuid":"d6d50c78-6038-4da3-adbd-c9bc475564ca","author_user_id":4430,"materi_section_id":206,"judul":"Hari 3 - Multiple Plots","permalink":"hari-3-multiple-plots","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada hari pertama di minggu ke 3 ini, telah di tunjukan bahwa memungkinkan untuk membuat multiple data plot dalam satu axis. seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots()\r\ndata_x1 = [1, 2, 3, 4]\r\ndata_y1 = [10, 20, 25, 30]\r\ndata_x2 = [1, 2, 3, 4, 5]\r\ndata_y2 = [5, 15, 20, 25, 30]\r\nax.plot(data_x1, data_y1)\r\nax.plot(data_x2, data_y2)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1570,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1570\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-38.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Namun, dalam beberapa kasus, ketika multiple plots di masukan ke dalam satu axes, dapat memungkinkan membuat objek visualisasi menjadi tidak rapi. contohnya seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots()\r\ndata_x1 = [1, 2, 3, 4]\r\ndata_y1 = [10, 20, 25, 30]\r\ndata_x2 = [1, 2, 3, 4, 5]\r\ndata_y2 = [800, 1005, 900, 195, 700]\r\nax.plot(data_x1, data_y1)\r\nax.plot(data_x2, data_y2)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1591,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1591\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-47.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>atau seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data_x1 = [1, 2, 3, 4]\r\ndata_y1 = [10, 20, 25, 30]\r\ndata_x2 = [1, 2, 3, 4, 5]\r\ndata_y2 = [20, 25, 20, 40, 50]\r\ndata_x3 = data_x2\r\ndata_y3 = [50, 10, 30, 15, 30]\r\ndata_x4 = data_x2\r\ndata_y4 = [10, 40, 24, 30, 29]\r\n\r\nfig, ax = plt.subplots()\r\nax.plot(data_x1, data_y1)\r\nax.plot(data_x2, data_y2)\r\nax.plot(data_x3, data_y3)\r\nax.plot(data_x4, data_y4)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1592,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1592\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-48.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat berbagai kasus yang apabila kita memplot data dalam satu axis, dapat membuat data visualisasi kita menjadi berantakan sehingga kita susah untuk menemukan pola.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kasus pertama, perbedaan yang besar nilai y antara data pertama dan kedua membuat data pertama menjadi tidak jelas visualisasinya, tidak jelas terlihat pola grafiknya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kasus kedua banyaknya plot data membuat visualisasi menjadi berantakan tak karuan. hal ini dapat meangganggu proses analisis dalam menemukan pola.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Oleh karena itu, solusinya adalah membuat multiple axis, dan meletakan data di axis-axis yang berbeda. Ada beberapa cara yang bisa digunakan untuk membuat multiple subplots.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h1>with plt.axes()<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>plt.axes akan menambahkan suatu ke axes ke dalam figure dan menjadikannya axes terbaru, sebagai contoh:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>plt.figure(figsize=(12,8))\r\nx = np.linspace(0, 10, 20)\r\nax = plt.axes()\r\nax2 = plt.axes((0.67, 0.67, 0.2, 0.2))\r\nax.plot(x, x+1)\r\nax2.plot(x, np.cos(x))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13467,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13467\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/axes-1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h1>with fig.add_axes<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nx = np.arange(10)\r\nfig = plt.figure(figsize=(12,8))\r\nax1 = fig.add_axes([0.1, 0.5, 0.8, 0.4])\r\nax2 = fig.add_axes([0.1, 0.1, 0.8, 0.4])\r\nax1.plot(x, np.cos(x))\r\nax2.plot(x, np.sin(x))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13469,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13469\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/addaxes.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h1>with plt.subplot<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>plt.subplot digunakan untuk membuat multiple plots yang memiliki weight dan height yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>plt.subplot(1,2,1)\r\n # baris 1, kolom 2, posisi ke 1\r\nplt.text(0.5, 0.5, str((1,2,1)), fontsize=18, ha='center')\r\nplt.subplot(1,2,2)\r\n # # baris 1, kolom 2, posisi ke 2\r\nplt.text(0.5, 0.5, str((1,2,2)), fontsize=18, ha='center')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13471,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13471\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/pltsubplot.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>plt.figure(figsize=(12,8))\r\nfor i in range(1,7):\r\n    plt.subplot(2, 3, i)\r\n    plt.text(0.5, 0.5, str((2,3,i)), fontsize=18, ha='center')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13494,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13494\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/subplot.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h1>with plt.subplots<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Metode subplots ini memiliki argument untuk mengatur jumlah axis yang di hasilkan, argument ini adalah nrows dan ncols. tidak memberikan nilai pada argument ini di contoh-contoh sebelumnya karena secara default, nrows dan ncols bernilai satu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menghasilkan multiple axis, bisa di lakukan dengan memberikan nilai nrows dan ncols lebih dari satu, seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots(nrows=3, ncols=2)\r\nprint('Figure ini memiliki {0} axis di baris dan {1} axis di column'.format(ax.shape[0], ax.shape[1]))\r\nprint(ax)\r\n===========================\r\nFigure ini memiliki 3 axis di baris dan 2 axis di column\r\n[[&lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000024384AD4248&gt;\r\n  &lt;matplotlib.axes._subplots.AxesSubplot object at 0x00000243849B3A88&gt;]\r\n [&lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000024384A2B708&gt;\r\n  &lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000024384A23908&gt;]\r\n [&lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000024384981D88&gt;\r\n  &lt;matplotlib.axes._subplots.AxesSubplot object at 0x000002438494E788&gt;]]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Coba perhatikan dengan attribute shape didapatkan bahwa dimensi dari objek axis adalah 3, 2, artinya axis memiliki 3 rows dan 2 columns. dan ketika variable ax di print. dihasilkan sebuah nested list berisi 3 elemen list didlam element list terluar, dan dalam setiap list di dalam list terdapat objek axis berjumlah 2. ini artinya adalah bahwa ax[0] akan menghasilkan objek list berisi objek axis di row pertama. dan setereusnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih jelasnya, mari lihat bentuk dari figure ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots(nrows=3, ncols=2)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1595,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1595\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-49.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Mari kita coba membuat multiple subplots dengan memberikan text seperti metode subplot, seperti berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots(nrows=2, ncols=3, figsize=(12,8))\r\nax = ax.flatten()\r\nfor i in range(6):\r\n    ax[i].text(0.5, 0.5, str((2,3,i)), fontsize=18, ha='center')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13493,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13493\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/subplots.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari coba membuat visualisasi data 4 plots dengan multiple axis menggunakan plt.subplots().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\ndata_x1 = [1, 2, 3, 4]\r\ndata_y1 = [10, 20, 25, 30]\r\ndata_x2 = [1, 2, 3, 4, 5]\r\ndata_y2 = [20, 25, 20, 40, 50]\r\ndata_x3 = data_x2\r\ndata_y3 = [50, 10, 30, 15, 30]\r\ndata_x4 = data_x2\r\ndata_y4 = [10, 40, 24, 30, 29]\r\n\r\nfig, ax = plt.subplots(nrows=2, ncols=2)\r\nax[0][0].plot(data_x1, data_y1)\r\nax[0][1].plot(data_x2, data_y2)\r\nax[1][0].plot(data_x3, data_y3)\r\nax[1][1].plot(data_x4, data_y4)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1597,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1597\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-50.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Coba perhatikan bahwa axis-y di setiap axis mempunyai interval yang berbeda-beda, begitu pula axis-x nya pada axis baris pertama column pertama hanya pada interval 1-4, sedangkan yang lainnya 1-5. Visualisasi ini bisa di improve agar mendapatkan interval axis yang sama dengan menambahkan argument sharex dan sharey terhadap method subplots. seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\n\r\ndata_x1 = [1, 2, 3, 4]\r\ndata_y1 = [10, 20, 25, 30]\r\ndata_x2 = [1, 2, 3, 4, 5]\r\ndata_y2 = [20, 25, 20, 40, 50]\r\ndata_x3 = data_x2\r\ndata_y3 = [50, 10, 30, 15, 30]\r\ndata_x4 = data_x2\r\ndata_y4 = [10, 40, 24, 30, 29]\r\n\r\nfig, ax = plt.subplots(nrows=2, ncols=2, sharex=True, sharey=True)\r\nax[0][0].plot(data_x1, data_y1)\r\nax[0][1].plot(data_x2, data_y2)\r\nax[1][0].plot(data_x3, data_y3)\r\nax[1][1].plot(data_x4, data_y4)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1600,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1600\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-51.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h1>with inset_axes<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>inset_axes adalah suatu metode dalam Matplotlib.pyplot yang digunakan untuk membuat axes di dalam sebuah axes. Seperti contoh berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots(figsize=(8,7))\r\nx = np.linspace(0, 10, 20)\r\nax.plot(x, np.sin(x))\r\n\r\nins1 = ax.inset_axes([0.9, 0.9, 0.3, 0.3])\r\nins1.plot(x, np.cos(x))\r\n\r\nins2 = ax.inset_axes([-0.1, 0.9, 0.3, 0.3])\r\nins2.plot(x, np.tan(x))\r\n\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13495,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13495\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/insetaxes.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h1>GridSpec<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>GridSpec digunakan untuk menspesifikasikan geometry Grid dari subplot. Seperti contoh:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>grid = plt.GridSpec(2, 3, wspace=0.3, hspace = 0.3)\r\n\r\nplt.figure(figsize=(12,8))\r\nplt.subplot(grid[0, 0])\r\nplt.subplot(grid[0, 1:])\r\nplt.subplot(grid[1, :2])\r\nplt.subplot(grid[1, 2]);\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13496,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13496\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/gridspec.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Materi Video:<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/L6vRGa7_Eec\" target=\"_blank\" rel=\"noopener\">Multiple Plots<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><\/p>","waktu_publish":"2021-11-10 09:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:21:00","waktu_publish_formatted":" Rabu, 10 November 2021. 09:00:00 WIB."},{"id":739,"uuid":"f558c65f-aa71-4de7-98d3-41669af4ff18","author_user_id":4430,"materi_section_id":206,"judul":"Hari 4 - Perbandingan Kuantitatif","permalink":"hari-4-perbandingan-kuantitatif","konten":"<p><!-- wp:heading --><\/p>\r\n<h2>Overview Materi<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada materi-materi sebelumnya telah di perkenalkan tentang pondasi-pondasi visualisasi. Dari sekarang dan ke depan materi akan lebih advance lagi, pertama akan di perkenalkan beberapa bentuk visualisasi lainnya (sebelumnya telah di pelajari lineplot), kemudian akan di tunjukan kegunaannya untuk perbandingan kuantitatif.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Langsung saja. beberapa bentuk visualisasi yang akan di perkenalkan adalah :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Bar Chart<\/li>\r\n<li>Scatter Plot<\/li>\r\n<li>Histogram<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Akan di gunakan data tentang penjualan video games dalam satuan juta dollar, yang mana filenya bisa di download disini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:file {\"id\":1622,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/vgsales.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/vgsales.csv\">vgsales <\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/vgsales.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>Datanya sebagai berikut :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import pandas as pd\r\n\r\ndf = pd.read_csv('vgsales.csv')\r\ndf.head()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>&nbsp;<\/th>\r\n<th>Rank<\/th>\r\n<th>Name<\/th>\r\n<th>Platform<\/th>\r\n<th>Year<\/th>\r\n<th>Genre<\/th>\r\n<th>Publisher<\/th>\r\n<th>NA_Sales<\/th>\r\n<th>EU_Sales<\/th>\r\n<th>JP_Sales<\/th>\r\n<th>Other_Sales<\/th>\r\n<th>Global_Sales<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<th>0<\/th>\r\n<td>1<\/td>\r\n<td>Wii Sports<\/td>\r\n<td>Wii<\/td>\r\n<td>2006.0<\/td>\r\n<td>Sports<\/td>\r\n<td>Nintendo<\/td>\r\n<td>41.49<\/td>\r\n<td>29.02<\/td>\r\n<td>3.77<\/td>\r\n<td>8.46<\/td>\r\n<td>82.74<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>1<\/th>\r\n<td>2<\/td>\r\n<td>Super Mario Bros.<\/td>\r\n<td>NES<\/td>\r\n<td>1985.0<\/td>\r\n<td>Platform<\/td>\r\n<td>Nintendo<\/td>\r\n<td>29.08<\/td>\r\n<td>3.58<\/td>\r\n<td>6.81<\/td>\r\n<td>0.77<\/td>\r\n<td>40.24<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>2<\/th>\r\n<td>3<\/td>\r\n<td>Mario Kart Wii<\/td>\r\n<td>Wii<\/td>\r\n<td>2008.0<\/td>\r\n<td>Racing<\/td>\r\n<td>Nintendo<\/td>\r\n<td>15.85<\/td>\r\n<td>12.88<\/td>\r\n<td>3.79<\/td>\r\n<td>3.31<\/td>\r\n<td>35.82<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>3<\/th>\r\n<td>4<\/td>\r\n<td>Wii Sports Resort<\/td>\r\n<td>Wii<\/td>\r\n<td>2009.0<\/td>\r\n<td>Sports<\/td>\r\n<td>Nintendo<\/td>\r\n<td>15.75<\/td>\r\n<td>11.01<\/td>\r\n<td>3.28<\/td>\r\n<td>2.96<\/td>\r\n<td>33.00<\/td>\r\n<\/tr>\r\n<tr>\r\n<th>4<\/th>\r\n<td>5<\/td>\r\n<td>Pokemon Red\/Pokemon Blue<\/td>\r\n<td>GB<\/td>\r\n<td>1996.0<\/td>\r\n<td>Role-Playing<\/td>\r\n<td>Nintendo<\/td>\r\n<td>11.27<\/td>\r\n<td>8.89<\/td>\r\n<td>10.22<\/td>\r\n<td>1.00<\/td>\r\n<td>31.37<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:heading --><\/p>\r\n<h2>Pengenalan Beberapa Bentuk Visualisasi<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Bar Chart<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Bar chart bisa di buat dengan method bar. Bar chart berguna untuk memvisualisasikan frekuensi kejadian suatu data berdasarkan suatu kategori. Jadi, bar chart ini di visualisasikan untuk membandingkan data yang bertipe kategori. Bar chart berguna bila jumlah kategori tidak lebih dari 30 pada umumnya. Apabila lebih dari itu, biasanya bar chart akan menjadi kacau sehingga data sulit untuk di interpretasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut contoh sederhana dari visualisasi bar chart:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code># import library\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\n\r\n# read data vgsales\r\ndf = pd.read_csv('vgsales.csv')\r\n\r\n# extract data tentang banyaknya setiap jenis genre dalam data\r\ndata = df['Genre'].value_counts()\r\ncategory = data.index\r\nfrequency = data.values\r\n\r\n# plot data\r\nfig, ax = plt.subplots()\r\nax.bar(category, frequency)\r\nax.set_xticklabels(category, rotation=90)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1625,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1625\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-52.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dari gambar di atas dapat di lihat bahwa data ini memiliki paling banyak data video games dengan genre Action, kemudian Sport, dan seterusnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Method set_xticklabels() adalah untuk mengontrol komponen label data di sumbu x. di berikan label nya dengan data category, dan di putar sebesar 90 derajat agar label tidak bertumpuk.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada bahasan selanjutnya akan di tunjukan improvisasi terhadap visualisasi ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Scatter Plot<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Scatter plot berguna untuk melakukan perbandingan data antara data bertipe numerik. untuk melakukan visualisasi scatter plot bisa dilakukan menggunakan method scatter().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh akan di visualisasikan dengan scatter plot data tentang penjualan semua video games di jepang dan Europa.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots()\r\n\r\n# pembuatan plot\r\nax.scatter(df['JP_Sales'], df['EU_Sales'], c='g')\r\n\r\n# axis labeling\r\nax.set_xlabel('Penjualan di Jepang')\r\nax.set_ylabel('Penjualan di Europa')\r\nax.set_title('Penjualan Semua Video Games')\r\n\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1631,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1631\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-53.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Histogram<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Histogram mempunyai kemiripan dengan bar chart, beberapa keliru memahami bahwa bar chart sama dengan histogram. Kunci dari perbedaannya adalah Histogram untuk memvisualisasikan distribusi data dari suatu data bertipe numerik dan continues. sedangan bar chart untuk memvisualisasikan data bertipe kategori.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan ingin mengetahui perbedaan distribusi penjualan video games di seluruh dunia untuk game bergenre Action dan Sport. Berikut adalah contoh visualisasi dari Histogram nya :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>action = df[df['Genre']=='Action']['Global_Sales']\r\nsport = df[df['Genre']=='Sports']['Global_Sales']\r\n\r\nfig, ax = plt.subplots(ncols=2, figsize=(16, 8))\r\nax[0].hist(action, bins=50)\r\nax[0].set_xlabel('Penjualan Global Game Action')\r\nax[0].set_ylabel('Frekuensi')\r\nax[0].set_title('Distribusi Game Action Global')\r\n\r\nax[1].hist(sport, bins=50, color='g')\r\nax[1].set_xlabel('Penjualan Global Game Sports')\r\nax[1].set_ylabel('Frekuensi')\r\nax[1].set_title('Distribusi Penjualan Game Sports Global')\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":1634,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1634\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/04\/image-54.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Stacked Bar Chart<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Stacked Bar Chart digunakan untuk membandingkan total value pada bebrapa kategori, seperti contoh kita akan menggunakan dataset Iris:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:file {\"id\":13557,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Iris.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Iris.csv\">Iris<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Iris.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\nimport pandas as pd\r\ndf = pd.read_csv('Iris.csv', index_col=0)\r\ndf_group = df.groupby('Species').mean()\r\ndf_group.head()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13555,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13555\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/irisgrup.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots(figsize=(12,8))\r\nax.bar(df_group.index, df_group['SepalLengthCm'], label='Sepal Length')\r\nax.bar(df_group.index, df_group['SepalWidthCm'], bottom=df_group['SepalLengthCm'], label='Sepal Width')\r\nax.bar(df_group.index, df_group['PetalLengthCm'], bottom=df_group['SepalLengthCm']+df_group['SepalWidthCm'], label='Petal Length')\r\nax.bar(df_group.index, df_group['PetalWidthCm'], bottom=df_group['SepalLengthCm']+df_group['SepalWidthCm']+df_group['PetalLengthCm'], label='Petal Width')\r\nplt.legend()\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13556,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13556\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/stackbariris.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Statistical Plot<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Statistical plot digunakan untuk melihat grafik statistik data. Kita akan coba melakukan statistical plot data Iris menggunakan bar chart dengan melakukan plot central tendency dan sebaran data dalam unit standar deviasi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>df_mean = df.mean()\r\ndf_mean\r\nSepalLengthCm    5.843333\r\nSepalWidthCm     3.054000\r\nPetalLengthCm    3.758667\r\nPetalWidthCm     1.198667\r\ndtype: float64<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fig, ax = plt.subplots(figsize=(12,8))\r\n\r\nfor i in range(len(df_mean)):\r\n    ax.bar(df_mean.index[i], df_mean.values[i], yerr=df.std()[i])\r\n\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":13560,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13560\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/statisiticplot.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Gambar diatas menunjukkan bahwa bar chart merepresentasikan central tendency berupa nilai mean dari data Iris sedangkan garis hitam menunjukkan standar deviasi dari data tersebut. Petal Length memiliki sebaran data yang paling lebar sedangkan Sepal Width memiliki sebaran data yang paling kecil, artinya distribusi Sepal Width terpusat d satu titik tidak begitu menyebar.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Materi Video:<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/youtu.be\/eU2eUohmjkI\" target=\"_blank\" rel=\"noopener\">Scatter Plot<\/a><\/li>\r\n<li><a href=\"https:\/\/youtu.be\/yQ5htezlrkU\" target=\"_blank\" rel=\"noopener\">Bar Charts<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><\/p>","waktu_publish":"2021-11-11 09:00:00","status_publish":"publish","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:21:18","waktu_publish_formatted":" Kamis, 11 November 2021. 09:00:00 WIB."},{"id":740,"uuid":"dbe8e0dd-407d-484a-ace2-0b968eca623e","author_user_id":4430,"materi_section_id":206,"judul":"Hari 5 - Seaborn Introduction","permalink":"hari-5-seaborn-introduction","konten":"<p><!-- wp:heading --><\/p>\r\n<h1>Seaborn<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Matplotlib telah terbukti sangat berguna dan merupakan tool visualisasi yang cukup terkenal, tapi beberapa pengguna mengeluhkan karena untuk menghasilkan fitur yang kecil saja membutuhkan codingan yang banyak, Matplotlib juga hadir satu dekade lebih awal daripada Pandas sehingga tidak cocok untuk disandingkan dengan DataFrames Pandas, untuk mem-visualisasikan data dari DataFrame Pandas, kita harus mengambil masing-masing Series-nya kemudian menggabungkannya ke dalam format yang sesuai. Alangkah baiknya jika ada library untuk plotting yang dapat menggunakan label dari DataFrame ketika menggambarkan plotnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jawaban untuk permasalahan di atas adalah Seaborn. Seaborn merupakan API yang berdasar dari Matplotlib, memiliki high-level function untuk tipe plot yang umum digunakan untuk statistik, Seaborn juga dapat diintegrasikan dengan DataFrames dari Pandas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Meskipun Matplotlib sudah menambahkan plt.style sehingga memudahkan untuk menangani Pandas, Seaborn tetap sangat direkomendasikan untuk digunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h1>Seaborn vs. Matplotlib<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Perhatikan contoh plot sederhana pada Matplotlib berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\r\nplt.style.use('classic')\r\n%matplotlib inline\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\n# Buat beberapa data\r\nsat = np.random.RandomState(0)\r\nx = np.linspace(0, 10, 500)\r\ny = np.cumsum(sat.randn(500, 6), 0)\r\n\r\n# Plot data menggunakan setting default Matplotlib\r\nplt.plot(x, y)\r\nplt.legend('HIJKLM', ncol=3, loc='lower left');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4881,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4881\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/1-2.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Meskipun hasilnya memiliki semua informasi yang kita inginkan, tampilannya kurang memiliki nilai estetika, dan bahkan terlihat jadul untuk visualisasi di abad 21 ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang perhatikan contoh penggunaan Seabon untuk data yang sama:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import seaborn as sns\r\nsns.set()\r\n\r\n# Menggunakan data yang sama dengan di atas\r\nplt.plot(x, y)\r\nplt.legend('HIJKLM', ncol=3, loc='lower left');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4882,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4882\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/2-1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Lebih keren dikit ya kan..<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h1>Exploring Seaborn Plots<\/h1>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tujuan utama Seaborn yaitu menyediakan perintah high-level untuk membuat berbagai jenis plot yang berguna pada eksplorasi data statistika, atau bahkan fitting model statistika.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Mari kita lihat beberapa jenis plot yang tersedia di Seaborn. Catatan: contoh berikut dapat dihasilkan menggunakan perintah Matplotlib, tapi menggukan API Seaborn akan lebih menyenangkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>Histogram, KDE, dan density<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seringkali pada visualisasi data statistika, yang kita perlukan hanyalah histogram dan joint distribution dari beberapa variabel. Contoh histogram sebagai berikut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = np.random.multivariate_normal([0, 0], [[5, 2], [2, 2]], size=2000)\r\ndata = pd.DataFrame(data, columns=['x', 'y'])\r\n\r\nfor col in 'xy':\r\n    plt.hist(data[col], bins=10, density=True, alpha=0.5)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4886,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4886\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/3-1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kita juga dapat menghasilkan estimasi yang tidak kasar dari distribusi tersebut menggunakan kernel density estimation (KDE) yang dapat dihasilkan menggunakan Seaborn dengan <code>sns.kdeplot<\/code>:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for col in 'xy':\r\n    sns.kdeplot(data[col], shade=True)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4889,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4889\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/4.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Histogram dan KDE dapat digabungkan menggunakan <code>distplot<\/code>:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sns.distplot(data['x'])\r\nsns.distplot(data['y']);<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4890,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4890\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/5.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita menggunakan kedua data dari dataset ke dalam kdeplot, maka akan menghasilkan visualisasi dua-dimensi dari data tersebut:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sns.kdeplot(data['x'], data['y']);<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4892,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4892\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/6-1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kita dapat melihat joint distribution dan marginal distribution secara bersamaan menggunakan<code> sns.jointplot<\/code>. Untuk plot ini, kita gunakan style white background:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>with sns.axes_style('white'):\r\n    sns.jointplot(data['x'], data['y'], kind='kde')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4907,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4907\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/7-1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Ada beberapa parameter lain yang dapat kita ganti pada <code>jointplot<\/code>, contohnya adalah kita dapat menggunkaan histogram dengan base hexagonal:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>with sns.axes_style('white'):\r\n    sns.jointplot(data['x'], data['y'], kind='hex');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4894,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4894\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/8.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>Pair plots<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Ketika kita membuat joint plot menggunakan dataset dengan dimensi yang lebih besar, maka akan menghasilkan pair plots, yang sangat berguna untuk mengeksplorasi hubungan antar data multidimensi, juga melihat pair plots secara berpasangan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan menggunakan dataset Iris yang cukup terkenal, berisi ukuran petal dan sepal iris dari tiga spesies:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>iris = sns.load_dataset(\"iris\")\r\niris.head()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4900,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4900\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-30-at-17.06.37.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Mem-visualisasikan dengan mudah hubungan multidimensi dari beberapa sampel menggunakan <code>sns.pairplot<\/code>:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sns.pairplot(iris, hue='species');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4897,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4897\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/9.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>Faceted histograms<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Terkadang, langkah terbaik ntuk menganalisa data adalah menggunakan histogram dari bagian-bagiannya. FacetGrid milik Seaborn menjadikan langkah ini sangat mudah. Kita akan menggunakan data 'tips' dari dataset Seaborn:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tips = sns.load_dataset('tips')\r\ntips.head()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4901,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4901\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-30-at-17.05.56.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tips['tip_prsn'] = 100 * tips['tip'] \/ tips['total_bill']\r\n\r\ngrid = sns.FacetGrid(tips, row=\"sex\", col=\"time\", margin_titles=True)\r\ngrid.map(plt.hist, \"tip_prsn\", bins=np.linspace(0, 40, 15));<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4902,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4902\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/10.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>Categorical plots<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Categorical plots dapat juga digunakan untuk menampilkan visualisasi semacam ini. Kita dapat melihat distribusi sebuah parameter dalam bins yang memiliki nilai dari parameter lain:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>with sns.axes_style(style='ticks'):\r\n    g = sns.catplot(\"day\", \"total_bill\", \"sex\", data=tips, kind=\"box\")\r\n    g.set_axis_labels(\"Day\", \"Total Bill\");<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4903,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4903\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/11.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>Joint distributions<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti pair plot yang sudah kita bahas, kita dapat menggunakan sns.jointplot untuk menampilkan joint distribution antara dataset yang berbeda, seiring dengan marginal distributions-nya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>with sns.axes_style('white'):\r\n    sns.jointplot(\"total_bill\", \"tip\", data=tips, kind='hex')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4904,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4904\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/12.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Joint plot juga dapat melakukan kernel density estimation dan regression secara otomatis:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sns.jointplot(\"total_bill\", \"tip\", data=tips, kind='reg', stat_func=stats.pearsonr, xlim=(0,55), ylim=(0,12));\r\n\r\n# stat_func --&gt; deprecated\r\n# xlim dan ylim --&gt; ukuran grid<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4905,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4905\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/13.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h2>Bar plots<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Time series data dapat ditampilkan menggunakan bar plot pada <code>sns.catplot<\/code>. Kali ini kita menggunakan dataset 'planets' yang ada pada Seaborn:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>planets = sns.load_dataset('planets')\r\nplanets.head()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4913,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4913\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screen-Shot-2020-06-30-at-20.35.43.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>with sns.axes_style('white'):\r\n    g = sns.catplot(\"year\", data=planets, aspect=2,\r\n                    kind=\"count\", color='steelblue')\r\n    g.set_xticklabels(step=5)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":4914,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4914\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/14.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading --><\/p>\r\n<h2>Tool Visualisasi Lainnya<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/altair-viz.github.io\/getting_started\/overview.html\" data-type=\"URL\" data-id=\"https:\/\/altair-viz.github.io\/getting_started\/overview.html\">Altair<\/a> Altair merupakan library visualisasi statistik untuk python, berdasar dari Vega dan Vega-Lite. Altair merupakan alat visualisasi yang sangat mantap dan cukup ringkas untuk menampilkan berbagai macam grafik statistika. Kita hanya perlu menentukan hubungan antara masing-masing data, warna, ukuran, dan lainnya, sedangkan detail plotnya akan ditangani secara otomatis. Dengan Altair, kita bisa menghabiskan waktu lebih banyak untuk memahami isi data dibandingkan berpusing-pusing memikirkan coding-nya.<\/li>\r\n<li><a href=\"http:\/\/docs.bokeh.org\">Bokeh<\/a> merupakan library visualisasi JavaScript dengan frontend Python yang dapat membuat visualisasi interaktif, juga dapat menangani streaming dataset atau dataset yang sangat besar. Python frontend menghasilkan output berupa struktur data JSON yang dapat di interpretasi menggunakan Bokeh JS engine.<\/li>\r\n<li><a href=\"https:\/\/plotly.com\/python\/\">Plotly<\/a>, merupakan produk open source dari perusahaan Plotly. Karena produk dari startup, Plotly diurus dan dikembangkan dengan serius. Penggunaannya gratis pooll (Sangat direkomendasikan untuk dicoba).<\/li>\r\n<li><a href=\"http:\/\/vispy.org\/\">VisPy<\/a>, merupakan projek yang sedang dikembangkan secara aktif, berfokus pada visualisasi dinamis dari dataset yang sangat besar. Karena ditargetkan untuk OpenGL dan penggunaan prosessor grafik secara efisien, VisPy dapat me-render visualisasi yang cukup besar dan menakjubkan. WoW.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4><br \/><br \/><br \/>Referensi dan Sumber<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.oreilly.com\/library\/view\/python-data-science\/9781491912126\/ch04.html\">Sumber 1<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><\/p>","waktu_publish":"2021-11-12 09:00:00","status_publish":"publish","urutan":5,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:21:39","waktu_publish_formatted":" Jumat, 12 November 2021. 09:00:00 WIB."}]},{"id":207,"uuid":"c77de3cc-a20a-41b9-a1dc-e06ed8c54642","materi_id":24,"nama":"Tugas Pekan 3","permalink":"tugas-pekan-3","urutan":7,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null,"posting":[{"id":741,"uuid":"a26236b7-b5ea-434d-a7f0-bf4b9f7bfc1c","author_user_id":4430,"materi_section_id":207,"judul":"Tugas Hari 1","permalink":"tugas-hari-1","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download link: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1BEnlq0lQ_yO8J4-rCsMSgMVucZFr5amy\">Tugas Hari 1<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Gambar Soal 2:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":1732,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-1732\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/image-3.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":1730,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1730\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/image-1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Gambar Soal 3:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1731,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1731\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/image-2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-08 13:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:22:55","waktu_publish_formatted":" Senin, 08 November 2021. 13:00:00 WIB."},{"id":742,"uuid":"0012db7c-3e5a-471f-a4a2-d72efe2b7589","author_user_id":4430,"materi_section_id":207,"judul":"Tugas Hari 2","permalink":"tugas-hari-2","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download Link: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=19rmaTlUttTwYCCLUjW4wNT-pU8joaUeM\">Tugas Hari 2<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1735,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1735\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/image-4.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-09 13:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:23:32","waktu_publish_formatted":" Selasa, 09 November 2021. 13:00:00 WIB."},{"id":743,"uuid":"eea62991-61c2-48de-adc1-88957e8ae7b7","author_user_id":4430,"materi_section_id":207,"judul":"Tugas Hari 3","permalink":"tugas-hari-3","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download Link: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1pAXHSfOYdLE1COrkR_X4TkNfDsNG_cR5\">Tugas Hari 3<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 1:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1738,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1738\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/image-5.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 2:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1739,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-1739\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/image-6.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-10 13:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:23:55","waktu_publish_formatted":" Rabu, 10 November 2021. 13:00:00 WIB."},{"id":744,"uuid":"6cb752dc-0881-40e2-b525-754ca11606c8","author_user_id":4430,"materi_section_id":207,"judul":"Tugas Hari 4","permalink":"tugas-hari-4","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download Link: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1ElUMQVOKS2fEg2JFa9MHA_QfKDVtGgYl\">Tugas Hari 4<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Download File:<\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/vgsales.csv\">vgsales <\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/05\/vgsales.csv\" download=\"\">Unduh<\/a><\/div>\r\n<div class=\"wp-block-file\">&nbsp;<\/div>\r\n<div class=\"wp-block-file\">Expected output soal 1:<\/div>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":4776,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4776\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/image-8-1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Expected output soal 2:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":4777,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-4777\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/image-9-1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Expected output soal 3:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":4778,\"width\":590,\"height\":284,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-4778\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/image-10-1.png\" alt=\"\" width=\"590\" height=\"284\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-11 13:00:00","status_publish":"publish","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:24:14","waktu_publish_formatted":" Kamis, 11 November 2021. 13:00:00 WIB."},{"id":745,"uuid":"0ba45ffd-3848-4720-a928-dec11389afec","author_user_id":4430,"materi_section_id":207,"judul":"Tugas Hari 5","permalink":"tugas-hari-5","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download File : <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=196EtbfjyPFuXxAe9hnbAl3FSuZFO9jei\">Tugas Hari 5<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output Soal 1:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13613,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13613\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/seabornplot.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><br \/>Expected Output Soal 2:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13614,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13614\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/catplotseaborn-1024x208.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><br \/>Expected Output Soal 3:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13615,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13615\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/pairplotseaborn.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><br \/>Expected Output Soal 4:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13616,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13616\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/jointplotkde.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"align\":\"center\",\"id\":13617,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13617\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/jointplotreg.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-12 13:00:00","status_publish":"publish","urutan":5,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:24:34","waktu_publish_formatted":" Jumat, 12 November 2021. 13:00:00 WIB."}]},{"id":208,"uuid":"a7106a8a-78e9-48e5-b5d4-410e0e9170b2","materi_id":24,"nama":"Materi Pekan 4","permalink":"materi-pekan-4","urutan":8,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null,"posting":[{"id":746,"uuid":"01938b57-2a82-4117-aed8-1f0d1502e0bf","author_user_id":4430,"materi_section_id":208,"judul":"Hari 1 - Tipe Data, Handling Missing Value, Handling Outlier","permalink":"hari-1-tipe-data-handling-missing-value-handling-outlier","konten":"<p><!-- wp:paragraph --><\/p>\r\n<h1><strong>1. Mengenal Tipe Data&nbsp;<\/strong><\/h1>\r\n<p style=\"text-align: justify;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Dalam dunia analisa data, mengenal tipe dari data yang tersedia sangat diperlukan. Mengapa diperlukan? Karena pengolahan data bertipe data tertentu adalah unik guna mengaplikasikan pengkalkulasian statistik pada data yang dihadapi.&nbsp;<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15425\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/tipe-data1.png\" alt=\"\" width=\"1037\" height=\"583\" \/><\/p>\r\n<p style=\"text-align: center;\">Gambar 1: Jenis-Jenis Tipe Data yang Lumrah dalam Dunia Sains Data<\/p>\r\n<p style=\"text-align: justify;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Sebelum kita melakukan operasi-operasi terhadap data, mengenali data secara dalam dan komprehensif merupakan keharusan. Bila kita ambil contoh proses rekrutmen dalam suatu perusahaan, seorang HRD tidak mungkin dengan mudah meloloskan seseorang tanpa mengetahui secara detail mengenai sifat-sifat, kemampuan, serta psikis seseorang. Jika HRD tersebut dengan seenaknya memasukkan pegawai tanpa mengenal lebih dalam calon pegawai tersebut, maka ada kemungkinan performa perusahaan turun akibat kehadiran pekerja tersebut. Sama halnya dengan data. Jika seseorang tidak mengenal data tersebut secara mendalam, ada kemungkinan model statistik (menggunakan teknik machine learning) yang dibangun tidak maksimal.<\/p>\r\n<p style=\"text-align: justify;\">Maka dari itu, sebelum mengenal lebih jauh mengenai data, kita terlebih dahulu berkenalan dengan jenis-jenis data.<\/p>\r\n<h2><strong>1.1. Data Kategorikal<\/strong><\/h2>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Data kategorikal merupakan data yang mencerminkan karakteristik seperti bahasa, jenis kelamin seseorang, warna rambut seseorang, atau nilai numerik bulat yang tidak memiliki makna matematis seperti 1 untuk laki-laki dan 0 untuk perempuan. Data kategorikal tersebut kemudian terbagi atas dua jenis: Nominal dan Ordinal<\/p>\r\n<h2><strong>1.1.1. Data Nominal<\/strong><\/h2>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Data Nominal merupakan data yang tidak memiliki order dan berbentuk label tanpa adanya tingkatan perangkingan. Contoh dari data nominal adalah terdapat pada Gambar 2 berikut.<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15426\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/tipe-data-2.png\" alt=\"\" width=\"1025\" height=\"195\" \/><\/p>\r\n<p style=\"text-align: center;\">Gambar 2. Contoh-Contoh Data Nominal<\/p>\r\n<h3><strong>1.1.2. Data Ordinal<\/strong><\/h3>\r\n<p style=\"text-align: justify;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Sementara itu, data ordinal merupakan data kategorikal yang disusun dalam sebuah order dan diatur menggunakan peringkat-peringkat tertentu. Contohnya adalah rangking klasemen liga sepakbola, status ekonomi, huruf mutu, level pendidikan, dan level kepuasan konsumen terhadap makanan tertentu.<\/p>\r\n<p><img class=\"size-full wp-image-15427 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/tipe-data-3.png\" alt=\"\" width=\"518\" height=\"353\" \/><\/p>\r\n<p style=\"text-align: center;\">Gambar 3. Contoh-Contoh Data Ordinal<\/p>\r\n<h2><strong>1.2. Data Numerik<\/strong><\/h2>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Data numerik terbagi menjadi 2, yaitu kontinyu dan diskrit.&nbsp;<\/p>\r\n<p><strong>1.2.1. Variabel Diskrit<\/strong><\/p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Variabel diskrit merupakan data yang memiliki nilai yang terbatas, seperti contoh : jumlah medali yang dimenangkan oleh para atlet.&nbsp;<\/p>\r\n<p><strong>1.2.2. Variabel kontinyu<\/strong><\/p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Data kontinu merupakan jenis data yang berbeda dengan data kategorikal. Data kontinu merupakan data kuantitatif yang dapat diukur, dapat memiliki nilai yang sangat tinggi (infinite). Salah satu contoh data-data kontinu adalah sebagai berikut:<\/p>\r\n<ul>\r\n<li aria-level=\"1\">Massa bayi yang baru dilahirkan<\/li>\r\n<li aria-level=\"1\">Kecepatan angin yang berhembus<\/li>\r\n<li aria-level=\"1\">Temperatur dari pendingin makanan<\/li>\r\n<li aria-level=\"1\">Usia<\/li>\r\n<\/ul>\r\n<p>Selain contoh diatas, terdapat 2 tipe data yang masuk ke dalam kategori data kontinyu yaitu data interval dan rasio.&nbsp;<\/p>\r\n<h4><strong>1.2.2.1. Data Interval<\/strong><\/h4>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Data interval merupakan skala dimana dua buah nilai memiliki makna tertentu. Beberapa karakteristik dari data interval adalah sebagai berikut: (src <a href=\"https:\/\/www.questionpro.com\/blog\/interval-data\/\">https:\/\/www.questionpro.com\/blog\/interval-data\/<\/a>)<\/p>\r\n<ul>\r\n<li aria-level=\"1\">Pengukuran: data tersebut diukur menggunakan skala interval. Contohnya adalah penggunaan penggaris dimana untuk setiap interval terkecil penanda pertama mengukur jarak temperatur yang sama persis dengan interval terkecil penanda yang lain.<\/li>\r\n<li aria-level=\"1\">Perbedaan interval: pengukuran untuk setiap nilai dari interval data sama persis. Contohnya adalah perbedaan interval antara 10 cm dan 20 cm adalah sama dengan 20 cm dan 30 cm<\/li>\r\n<li aria-level=\"1\">Kalkulasi: Dalam data interval, seseorang dapat menambah-kurangkan angka pada data tersebut, tetapi tidak bisa membagi atau mengalikan data tersebut dengan suatu nilai.&nbsp;<\/li>\r\n<li aria-level=\"1\">Titik nol: Titik nol dalam data interval dapat berubah-ubah. Contohnya adalah temperatur dapat bernilai negatif<\/li>\r\n<\/ul>\r\n<h4><strong>1.2.2.2. Data Rasio<\/strong><\/h4>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Data rasio merupakan data yang terdefinisi pada data kuantitatif yang memiliki sifat-sifat yang sama dengan data interval. Data rasio memiliki sifat-sifat yang sama dengan data interval. Namun, data rasio memiliki nilai 0 yang absolut.<\/p>\r\n<p>Contoh data rasio antara lain pengukuran tinggi badan. Tinggi badan seseorang tidak dapat bernilai negatif (misal -70 cm). Pun halnya dengan massa seseorang yang tidak dapat bernilai negatif (-29 kg).<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15428\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/kuantitatif-vs-kualitatif.png\" alt=\"\" width=\"685\" height=\"410\" \/><\/p>\r\n<p style=\"text-align: center;\">Gambar 4. Beberapa Contoh Data Kualitatif dan Kuantitatif<\/p>\r\n<h1><strong>2. Dealing Missing Value<\/strong><\/h1>\r\n<p style=\"text-align: justify;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Ketika dihadapkan terhadap suatu data, kita terkadang dihadapkan dengan data yang tidak utuh. Hal ini tentu akan berpengaruh terhadap analisa dan performansi model machine learning jika data-data tersebut dijadikan &ldquo;modal&rdquo; dalam membuat suatu model Machine Learning. Jenis-jenis data yang hilang bervariasi jenisnya. Salah satunya adalah data yang hilang dalam suatu sel tertentu maupun seluruh observasi dalam bentuk baris.&nbsp;<\/p>\r\n<p style=\"text-align: justify;\">Salah satu deteksi nilai yang hilang dalam menggunakan pandas dapat direpresentasikan sebagai nilai NaN.&nbsp;<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15429\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/ceknul-1.png\" alt=\"\" width=\"603\" height=\"371\" \/><\/p>\r\n<p style=\"text-align: center;\">Gambar 5: Salah Satu Contoh Data yang Mengandung Nilai NaN<\/p>\r\n<p>Ada beberapa cara untuk mengecek apakah dataset yang kita miliki memiliki nilai NaN atau missing.<\/p>\r\n<ul>\r\n<li>Menggunakan atribut .info()<\/li>\r\n<\/ul>\r\n<p><img class=\"size-full wp-image-15430 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/ceknul-2.png\" alt=\"\" width=\"374\" height=\"268\" \/><\/p>\r\n<p>Atribut .info() menampilkan tipe data dari setiap kolom, jumlah Non null dan penggunaan memori. Dataset memiliki 9 baris, dengan menggunakan .info() kita bisa mengetahui bahwa dari dataset diatas yang tidak memiliki nilai NaN hanya kolom ST_NAME.<\/p>\r\n<ul>\r\n<li>Menggunakan atribut .describe()<\/li>\r\n<\/ul>\r\n<p><img class=\"size-full wp-image-15431 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/ceknul-3.png\" alt=\"\" width=\"246\" height=\"287\" \/><\/p>\r\n<p>Atribut .describe() menampilkan statistika deskriptif dari kolom bertipe numerik, count adalah jumlah non nul value. Dari hasil describe() diatas terlihat bahwa kolom PID dan ST_NUM memiliki nilai NaN \/ missing dikarenakan baris dataset yang dimiliki adalah 9.<\/p>\r\n<ul>\r\n<li>Menggunakan atribut .isnull()<\/li>\r\n<\/ul>\r\n<p><img class=\"size-full wp-image-15432 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/ceknul-4.png\" alt=\"\" width=\"210\" height=\"172\" \/><\/p>\r\n<p>dengan menggunakan atribut .isnull() dan .sum(), kita bisa dapatkan jumlah nilai NaN dari setiap kolom.<\/p>\r\n<p>Namun, tidak semua data yang kita miliki\/dapatkan, konsisten memberikan nilai NaN untuk data kosong. Contohnya ada yang berisi n\/a, blank space, &hellip; (titik-titik), - (dash\/double dash), dan lain-lain. Maka kita perlu melakukan data cleaning terlebih dahulu.<\/p>\r\n<p>Sebagai contoh, kita dapat melakukan cek pada data, misalkan dilakukan pengecekan pada column ST_NUM, dengan cara berikut:<\/p>\r\n<p><img class=\"size-full wp-image-15435 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/ceknul-5.png\" alt=\"\" width=\"278\" height=\"366\" \/><\/p>\r\n<p>Terlihat, data yang berisikan NaN akan dibaca sebagai data yang kosong\/hilang. Tetapi ketika kita melakukan pengecekan pada column NUM_BEDROOMS yang menggunakan format berbeda untuk missing values, maka terlihat sebagai berikut:<\/p>\r\n<p><img class=\"size-full wp-image-15436 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/ceknul-6.png\" alt=\"\" width=\"331\" height=\"366\" \/><\/p>\r\n<p>Data yang berisikan na&nbsp; tidak dibaca sebagai data kosong. Cara yang dapat kita lakukan adalah dengan memasukkan format missing values yang tidak terbaca tersebut kedalam list, sehingga akan di anggap juga sebagai data kosong\/hilang, seperti berikut:<\/p>\r\n<p><img class=\"size-full wp-image-15437 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/ceknul-7.png\" alt=\"\" width=\"534\" height=\"436\" \/><\/p>\r\n<p>Sekarang, semuanya sudah dianggap sebagai data kosong\/hilang. Kita dapat menambahkan format lain yang belum terdeteksi nantinya ketika kita sudah mengolah data lebih lanjut.<\/p>\r\n<p>Setelah kita membersihkan data. Langkah selanjutnya adalah mengatasi missing values.<\/p>\r\n<p>Ada beberapa cara yang dapat dilakukan untuk menghilangkan nilai NaN. Beberapa cara tersebut antara lain:<\/p>\r\n<ul>\r\n<li aria-level=\"1\">Menghapus Baris Data yang Mengandung nilai NaN<\/li>\r\n<li aria-level=\"1\">Substitusi: Mengganti nilai data tersebut dengan (a) nilai mean, median atau modus kolom terkait, (b) nilai tetangga depan atau belakang dari baris yang missing tersebut.&nbsp;<\/li>\r\n<\/ul>\r\n<p>Untuk lebih jelasnya silahkan tonton materi video ya..&nbsp;<\/p>\r\n<h1><strong>3. Handling outliers<\/strong><\/h1>\r\n<p>Nilai outliers (atau yang biasa disebut dengan nilai pencilan) merupakan suatu nilai yang tidak normal. Dalam kata lain, nilai tersebut bernilai jauh sekali dari pusat data. Nilai pencilan ini dapat menyebabkan distorsi terhadap nilai yang asli.<\/p>\r\n<p>Dampaknya jika tidak serius menanggulangi nilai outliers akan berdampak pada ketidaksesuaian data analisa dan ketidakakuratan model machine learning yang dikerjakan. Indikasi outliers dapat dilihat pada grafik berikut ini&nbsp;<\/p>\r\n<p><img class=\"size-full wp-image-15458 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/outlier.png\" alt=\"\" width=\"517\" height=\"465\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Grafik diatas merupakan jenis grafik boxplot yang dapat mendeteksi nilai outliers. Boxplot merupakan metode yang memisahkan data berdasarkan kuartil data. Jangkauan data yang berbentuk box merupakan data yang berkisar antara kuartil pertama hingga kuartil ketiga. Sementara itu, pasangan cabang yang berbentuk huruf T merupakan jangkauan kuartil Q0 dan Q4. Nilai titik-titik yang dapat dilihat pada gambar yang dilingkati warna merah diatas merupakan nilai outliers yang sebaiknya dihindari.<\/p>\r\n<p>Ada beberapa cara untuk menghilangkan outliers.<\/p>\r\n<ul>\r\n<li aria-level=\"1\">Mengganti nilai outliers menggunakan nilai lower bound dan upper bound.<\/li>\r\n<li aria-level=\"1\">Capping menggunakan nilai median<\/li>\r\n<li aria-level=\"1\">Capping menggunakan nilai mean<\/li>\r\n<li aria-level=\"1\">Capping menggunakan nilai modus<\/li>\r\n<\/ul>\r\n<p>Nilai lower bound bisa didapatkan menggunakan rumus<\/p>\r\n<p>Lb=Q1 -(IQR 1.5)<\/p>\r\n<p>Sementara itu, nilai upper bound bisa didapatkan menggunakan rumus<\/p>\r\n<p>Ub=Q3+(IQR 1.5)<\/p>\r\n<p>Dengan IQR = Q3 - Q1.<\/p>\r\n<p>Nilai pencilan yang melebihi nilai upper bound akan diubah menjadi nilai upper bound. Sementara itu, nilai pencilan yang kurang dari nilai lower bound akan diubah nilainya menjadi nilai lower bound. Sehingga, tidak ada lagi nilai pencilan yang tentunya akan meningkatkan efektifitas model.<\/p>\r\n<p>Cara lain yang dapat digunakan adalah dengan mengganti nilai pencilan tersebut menjadi nilai median, mean, atau modus. Deteksi nilai outliers dapat dilakukan dengan cara serupa menggunakan nilai upper bound dan lower bound yang sudah dijelaskan sebelumnya.<\/p>\r\n<p>untuk lebih jelasnya silahkan tonton materi video ya...&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Materi Video:<\/p>\r\n<p><a title=\"HANDLING MISSING VALUE\" href=\"https:\/\/youtu.be\/K8oaoIidUJk\">HANDLING MISSING VALUE<\/a><\/p>\r\n<p><a title=\"HANDLING OUTLIERS\" href=\"https:\/\/youtu.be\/22CAL6_2kGk\">HANDLING OUTLIERS<\/a><\/p>\r\n<p>Referensi Artikel:<\/p>\r\n<p><!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/towardsdatascience.com\/dealing-with-missing-data-in-data-science-projects-e8ac7a4efdff\">https:\/\/towardsdatascience.com\/dealing-with-missing-data-in-data-science-projects-e8ac7a4efdff<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/towardsdatascience.com\/data-cleaning-with-python-and-pandas-detecting-missing-values-3e9c6ebcf78b\">https:\/\/towardsdatascience.com\/data-cleaning-with-python-and-pandas-detecting-missing-values-3e9c6ebcf78b<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-11-15 09:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:24:54","waktu_publish_formatted":" Senin, 15 November 2021. 09:00:00 WIB."},{"id":747,"uuid":"69b1f46f-3142-4502-9c6b-fad9f878ed02","author_user_id":4430,"materi_section_id":208,"judul":"Hari 2 - Univariate, Bivariate, Multivariate Analysis","permalink":"hari-2-univariate-bivariate-multivariate-analysis","konten":"<p>Dalam Exploratory Data Analysis, terdapat beberapa tipe analisa secara fundamental. Jika kita memiliki dataset seperti berikut:<\/p>\r\n<p><img class=\"size-full wp-image-15464 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/eda-1.png\" alt=\"\" width=\"313\" height=\"120\" \/><\/p>\r\n<p>Berikut intuisi dari Univariate, Bivariate dan Multivariate analysis.<\/p>\r\n<h1><strong>1. Univariate Analysis<\/strong><\/h1>\r\n<p style=\"text-align: justify;\"><em><span style=\"font-weight: 400;\">Univariate Analysis<\/span><\/em><span style=\"font-weight: 400;\"> merupakan sebuah teknik dalam memahami dan melakukan eksplorasi data. Imbuhan awal &lsquo;Uni&rsquo; artinya &lsquo;satu&rsquo;, maka analisa univariate merupakan analisa data feature tunggal.<\/span><\/p>\r\n<p><img class=\"size-full wp-image-15468 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/eda2.png\" alt=\"\" width=\"374\" height=\"298\" \/><\/p>\r\n<p style=\"text-align: justify;\">Ketika menganalisa menggunakan univariate analysis akan membentuk sebuah kategori. Tapi dalam univariate analysis bisa jadi ada overlapping saat plot data, oleh karena itu jika hanya dengan 1 feature kita tidak bisa mengklasifikasikan output dengan benar. Sehingga kita butuh bivariate dan multivariate analysis.<\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Saat melakukan analisa Univariate, jenis-jenis grafik yang bisa digunakan adalah: Histogram, Bar chart, Density plots, Distribution plots dan lainnya.&nbsp;<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Histogram digunakan untuk plotting data numerik yang mana akan menganalisa nilai frekuensi yang dimiliki oleh data.&nbsp;<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Bar chart digunakan sebagai komparasi dimana kita akan membandingkan tiap nilai dari sebuah variabel data kategorikal.<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Density plot digunakan untuk menganalisa sebaran data<\/span><\/p>\r\n<p><strong>Grafik untuk data kualitatif (kategorikal)<\/strong><\/p>\r\n<p><strong>1. Pie Chart<\/strong><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; Pie chart merupakan grafik statistika berbentuk lingkaran yang dibagi menjadi beberapa potongan untuk mengilustrasikan proporsi suatu nilai.&nbsp;<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Sebagai contoh, tabel dibawah ini merupakan frekuensi dari tipe golongan darah untuk 40 sampel individu.&nbsp;<\/span><\/p>\r\n<p><img class=\"size-full wp-image-15472 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/table-1.png\" alt=\"\" width=\"396\" height=\"271\" \/><\/p>\r\n<p><img class=\"size-full wp-image-15473 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/pie.png\" alt=\"\" width=\"447\" height=\"315\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>2. Bar Chart<\/strong><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Bar chart merupakan grafik yang merepresentasikan data kategorikal dengan bar persegi panjang yang memiliki tinggi dan panjang berbanding lurus dengan nilai yang akan dipresentasikan.&nbsp;<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Sebagai contoh,&nbsp;<\/span><\/p>\r\n<p style=\"text-align: justify;\"><img class=\"size-full wp-image-15474 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/table-2.png\" alt=\"\" width=\"543\" height=\"210\" \/><\/p>\r\n<p><img class=\"size-full wp-image-15475 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/barchart.png\" alt=\"\" width=\"438\" height=\"328\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>Grafik untuk data kuantitatif(numerik)<\/strong><\/p>\r\n<p><strong>3. Histogram dan poligon<\/strong><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Bentuk grafik histogram mirip dengan bar chart namun ada beberapa perbedaan.&nbsp;<\/span><\/p>\r\n<ul>\r\n<li style=\"font-weight: 400; text-align: justify;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Tidak ada gap antara antara bar\/bin<\/span><\/li>\r\n<li style=\"font-weight: 400; text-align: justify;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Lebar bin = Lebar interval class, batas class ditandai pada sumbu horizontal.&nbsp;<\/span><\/li>\r\n<li style=\"font-weight: 400; text-align: justify;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Tinggi bin = Umumnya nilai frekuensi<\/span><\/li>\r\n<li style=\"font-weight: 400; text-align: justify;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Area bins berbanding lurus dengan frekuensi<\/span><\/li>\r\n<\/ul>\r\n<p><img class=\"size-full wp-image-15476 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/table-3.png\" alt=\"\" width=\"460\" height=\"183\" \/><\/p>\r\n<p><img class=\"size-full wp-image-15477 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/hist-and-poly.png\" alt=\"\" width=\"452\" height=\"354\" \/><\/p>\r\n<h1><strong>2. Bivariate Analysis<\/strong><\/h1>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Bivariate analysis digunakan untuk untuk menganalisa 2 variables dan menemukan sebuah relasi. Analisis bivariate juga merupakan salah satu cara untuk menggunakan koefisien korelasi dalam rangka menemukan apakah dua variabel memiliki relasi atau tidak.&nbsp;<\/span><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><img class=\"size-full wp-image-15469 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/eda-3.png\" alt=\"\" width=\"481\" height=\"344\" \/><\/p>\r\n<p style=\"text-align: justify;\">&nbsp; &nbsp; &nbsp; &nbsp;Dari grafik hasil plot, terlihat bahwa output terklasifikasi. Tetapi saat plotting ada overlapping data antar klasifikasi. Dengan bivariate, kita bisa melihat misalkan jika terlalu banyak overlapping data kita bisa menentukan algoritma mana yang bisa digunakan.<\/p>\r\n<p><span style=\"font-weight: 400;\">Jenis-jenis grafik yang digunakan untuk bivariate analisis adalah:<\/span><\/p>\r\n<ul>\r\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Scatter plot<\/span><\/li>\r\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Mosaic plots<\/span><\/li>\r\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Histogram\/Barplot<\/span><\/li>\r\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Heatmaps<\/span><\/li>\r\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Linechart<\/span><\/li>\r\n<\/ul>\r\n<h3><strong>2.1. Hands-on Mengenai Bivariate Analysis<\/strong><\/h3>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp;<\/span><span style=\"font-weight: 400;\">Kita akan membahas mengenai beberapa plotting data yang sangat berguna dalam melakukan analisa bivariat yaitu: scatter, hex, stacked bar, dan bivariate line chart.<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp;Ketika kita dihadapkan pada suatu data mentah, kita belum dapat mengetahui informasi yang terdapat dalam data tersebut. Sehingga, perlu dilakukan pendalaman lebih lanjut dalam memenuhi atau menggambarkan secara lebih jelas apa saja hubungan antara data-data tersebut. Salah satu cara untuk memahami hubungan antara data adalah dengan menggunakan bivariate analysis. Apakah ada korelasi positif antara satu variabel dengan variabel yang lain? Ataukah justru ada korelasi negatif antara satu variabel dengan variabel yang lain? Hal inilah yang harus ditanamkan dalam benak kita sebagai calon data scientist.<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Load sebuah dataset yang memiliki data sebagai berikut<\/span><\/p>\r\n<p><strong>2.1.1. Scatter Plot<\/strong><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp;Plot paling simpel dalam analisa bivariat adalah dengan menggunakan scatter plot. Apa itu Scatter Plot? Scatter plot merupakan plot peletakkan titik koordinat sumbu x terhadap sumbu y. Jalankanlah kode berikut:<\/span><\/p>\r\n<p><img class=\"alignnone size-full wp-image-15479\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/scatter-1.png\" alt=\"\" width=\"630\" height=\"68\" \/><\/p>\r\n<p><img class=\"size-full wp-image-15480 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/scatter-2.png\" alt=\"\" width=\"403\" height=\"262\" \/><\/p>\r\n<p style=\"text-align: center;\"><span style=\"font-weight: 400;\">Gambar: Hubungan Points dan Price menggunakan Scatter Plot (Tanpa Downsampling)<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; Kita tidak bisa mengambil insight terhadap data yang berbentuk seperti ini. Terlalu banyak data yang menumpuk sehingga perlu dilakukan treating yang salah satunya adalah dengan menggunakan Downsampling Data. Apa itu Downsampling? Downsampling merupakan kegiatan untuk mengambil sampel dari seluruh data full set. Jalankanlah kode berikut:<\/span><\/p>\r\n<p><img class=\"alignnone size-full wp-image-15481\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/scatter-3.png\" alt=\"\" width=\"630\" height=\"68\" \/><\/p>\r\n<p><img class=\"size-full wp-image-15482 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/scatter-4.png\" alt=\"\" width=\"396\" height=\"266\" \/><\/p>\r\n<p style=\"text-align: center;\"><span style=\"font-weight: 400;\">Gambar: Hubungan Points dan Price menggunakan Scatter Plot<\/span><\/p>\r\n<p>&nbsp;<\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">Kode diatas merupakan kode yang digunakan untuk mengambil sampel sebanyak 100 secara acak.<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; Masalah over plotting tersebut menjadi kekurangan penggunaan scatter plot tersebut. Sehingga, penggunaan dataset yang memiliki data relatif kecil merupakan penggunaan yang paling sesuai jika menggunakan scatter plot. Bisa juga untuk nilai yang memiliki rentang besar dan unik.<\/span><\/p>\r\n<p><strong>2.1.2. Hexbin Plot&nbsp;<\/strong><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; Cara lain dalam menganalisa dua buah data adalah dengan menggunakan hexbin plot. Hexbin plot berguna untuk merepresentasikan hubungan dua buah variabel numerik ketika memiliki titik-titik data. Jika sebelumnya kita dihadapi terhadap masalah overlapping, solusinya adalah dengan mengcounting jumlah data yang overlap pada titik-titik hexagonal tersebut. Warna-warna tersebut merepresentasikan jumlah titik-titik yang overlap. Jalankanlah program berikut:&nbsp;<\/span><\/p>\r\n<p><img class=\"alignnone size-full wp-image-15483\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/hexbin-1.png\" alt=\"\" width=\"635\" height=\"71\" \/><\/p>\r\n<p><img class=\"size-full wp-image-15484 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/hexbin-2.png\" alt=\"\" width=\"401\" height=\"244\" \/><\/p>\r\n<p><span style=\"font-weight: 400;\">Kita dapat gali informasi bahwa wine yang paling sering di review oleh reviewer adalah pada kisaran 87.5 dan dalam kisaran harga 19 dolar.&nbsp;<\/span><\/p>\r\n<p>&nbsp;<\/p>\r\n<h1><strong>3. Multivariate Analysis<\/strong><\/h1>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Multivariate analysis digunakan untuk menganalisa lebih dari 2 variabel di waktu yang sama, trends yang dihasilkan bisa menjadi multidimensi secara alami, dengan analisa ini akan membantu kita memahami manakah data yang memiliki tren yang kompleks pada kombinasi atribut.&nbsp;<\/span><\/p>\r\n<p><img class=\"alignnone wp-image-15470\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/eda-4.png\" alt=\"\" width=\"757\" height=\"459\" \/><\/p>\r\n<p style=\"text-align: justify;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<\/p>\r\n<p style=\"text-align: justify;\">&nbsp; &nbsp;Grafik menunjukkan adanya korelasi di tiap feature. misalkan hubungan antara umur dan Tinggi Badan(cm). Jika bertambah umur bertambah pula tinggi bedan artinya korelasi ke dua variabel tersebut adalah positif, jika sebaliknya maka korelasi antar ke dua variabel tersebut negatif. Dari multivariate analisis ini kita bisa tentukan manakah algoritma yang tepat yang bisa digunakan untuk prediktif analisis.<\/p>\r\n<p>&nbsp;<\/p>\r\n<h3><strong>3.1. Hands-On Mengenai Multivariate Analysis<\/strong><\/h3>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;File wine.csv data memiliki data mengenai 13 bentuk kimia berbeda dari wine yang ditumbuhkan dalam lokasi yang sama di Italia serta diturunkan dari 3 varietas tumbuhan yang berbeda.<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Setiap sampel berada pada tiap baris yang berbeda. Racikan tumbuhan berada pada kolom 1 dan 13 kolom selanjutnya merupakan kolom yang memiliki 13 konsentrasi kimia yang berbeda dari sampel tersebut.<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp;<\/span><img class=\"alignnone size-full wp-image-15489\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/multi-1.png\" alt=\"\" width=\"636\" height=\"141\" \/><\/p>\r\n<p><img class=\"alignnone size-full wp-image-15490\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/multi-2.png\" alt=\"\" width=\"633\" height=\"106\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>3.1.1. Matriks Scatter Plot<\/strong><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Salah satu metoda yang umum digunakan dalam mengeksplor data dalam analisis multivariat adalah dengan menggunakan matriks scatterplot. Matriks scatter plot dapat membandingkan hubungan satu variabel dengan variabel yang lain. Fungsi yang digunakan antara lain adalah dengan menggunakan fungsi scatter_matrix() yang berasal dari package pandas.&nbsp;<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; Di dalam fungsi scatter_matrix() tersebut, ada beberapa parameter yang digunakan dalam memplot&nbsp; data. Parameter diagonal merupakan parameter yang dapat menspesifikasikan penggunaan histogram &ldquo;hist&rdquo; atau kernel density estimation &ldquo;kde&rdquo;.<\/span><\/p>\r\n<p><img class=\"alignnone size-full wp-image-15491\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/multi-3.png\" alt=\"\" width=\"631\" height=\"125\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><img class=\"size-full wp-image-15486 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/multi-4.png\" alt=\"\" width=\"634\" height=\"460\" \/><\/p>\r\n<p><span style=\"font-weight: 400;\">&nbsp;<\/span><\/p>\r\n<p style=\"text-align: center;\"><strong>Gambar:<\/strong><span style=\"font-weight: 400;\"> Scatter Matrix untuk analisa multivariat berdiagonal KDE<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Gambar diatas menunjukkan gambar sebaran data dan juga hubungan antara satu variabel dengan variabel yang lain. Sel diagonal menunjukkan persebaran data dari variabel tersebut menggunakan KDE.<\/span><\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Kita bisa secara lebih detail menambahkan hubungan dua buah variabel dengan jenis racikan tumbuhan (3 jenis tumbuhan). Misalnya, kita ingin melihat hubungan V4 dan V5 dengan 3 buah jenis tumbuhan tersebut. jenis tumbuhan tersebut. Untuk menyelesaikan persoalan tersebut, kita menggunakan salah satu fungsi dari package seaborn dengan menggunakan fungsi lmplot.<\/span><\/p>\r\n<p><img class=\"alignnone size-full wp-image-15492\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/multi-5.png\" alt=\"\" width=\"635\" height=\"65\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><span style=\"font-weight: 400;\"> <img class=\"size-full wp-image-15487 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/multi-6.png\" alt=\"\" width=\"417\" height=\"338\" \/><\/span><\/p>\r\n<p><span style=\"font-weight: 400;\">&nbsp;<\/span><\/p>\r\n<p style=\"text-align: center;\"><strong>Gambar <\/strong><span style=\"font-weight: 400;\">Hubungan konsentrasi V5 terhadap V4 untuk Jenis Tumbuhan 1, 2, dan 3<\/span><\/p>\r\n<p><span style=\"font-weight: 400;\">Referensi:<\/span><\/p>\r\n<p><a href=\"https:\/\/python-for-multivariate-analysis.readthedocs.io\/a_little_book_of_python_for_multivariate_analysis.html\"><span style=\"font-weight: 400;\">https:\/\/python-for-multivariate-analysis.readthedocs.io\/a_little_book_of_python_for_multivariate_analysis.html<\/span><\/a><\/p>\r\n<p><a href=\"https:\/\/www.kaggle.com\/residentmario\/bivariate-plotting-with-pandas\">https:\/\/www.kaggle.com\/residentmario\/bivariate-plotting-with-pandas<\/a><\/p>\r\n<p><a href=\"http:\/\/www.est.uc3m.es\/esp\/nueva_docencia\/comp_col_get\/lade\/estadistica_I\/doc_generica\/Tema2inglesImp.pdf\">http:\/\/www.est.uc3m.es\/esp\/nueva_docencia\/comp_col_get\/lade\/estadistica_I\/doc_generica\/Tema2inglesImp.pdf<\/a><\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-11-16 09:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:25:14","waktu_publish_formatted":" Selasa, 16 November 2021. 09:00:00 WIB."},{"id":748,"uuid":"0afb7e67-592f-4ad9-aaac-57c2d1c83cd8","author_user_id":4430,"materi_section_id":208,"judul":"Hari 3 - Machine Learning (Unsupervised, Clustering)","permalink":"hari-3-machine-learning-unsupervised-clustering-","konten":"<p>Machine Learning (ML) merupakan sebuah cabang dari Artificial Inteligence (kecerdasan buatan). Proses dalam ML ialah kita memerintahkan mesin untuk belajar dan melakukan improvisasi dari pengalaman (data), kemudian membuat sebuah keputusan atau prediksi di masa depan.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>Hal pertama yang perlu kita lakukan adalah melakukan instalasi library scikit-learn yang akan kita gunakan.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:heading {\"level\":4} --><\/p>\r\n<h1><strong>Install library scikit-learn:<\/strong><\/h1>\r\n<p><!-- \/wp:heading --><!-- wp:list --><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/scikit-learn.org\/stable\/install.html\">https:\/\/scikit-learn.org\/stable\/install.html<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp; <span style=\"font-weight: 400;\">Terdapat 2 tipe umum cara mesin dalam mempelajari data:<\/span><\/p>\r\n<ol>\r\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Supervised Learning<\/span><\/li>\r\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Unsupervised Learning<\/span><\/li>\r\n<\/ol>\r\n<p><span style=\"font-weight: 400;\">Supervised Learning adalah metode belajar mesin dimana Algoritma belajar menggunakan labeled data pada input maupun output. Sedangkan Unsupervised Learning adalah metode belajar mesin dimana Algoritma belajar menggunakan no labeled data pada input maupun output. sebagai contoh, sebuah data target memiliki labeled 'Kucing' dan 'Anjing' maka setelah mesin dilatih akan menghasilkan kolom hasil prediksi yang memiliki label 'Kucing' dan 'Anjing', ini merupakan Supervised Learning. Sedangkan Unsupervised Learning, hasil keluaran akan dikelompokkan berdasarkan jenis Kucing maupun Anjing tanpa adanya label data.<\/span> <span style=\"font-weight: 400;\">Pada pelatihan kita kali ini, hanya akan dijelaskan unsupervised yang akan dimanfaatkan untuk menyelesaikan masalah pengolahan data kita.<\/span> &nbsp;<\/p>\r\n<p><strong>Unsupervised Learning<\/strong><\/p>\r\n<p><strong>Clustering<\/strong><\/p>\r\n<p><span style=\"font-weight: 400;\">Clustering adalah proses pengelompokan nilai(data point) yang mirip\/serupa ke dalam kelompok yang sama. Perhatikan gambar di bawah ini, akan terbentuk 3 cluster:<\/span> &nbsp;<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15394\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/clustering-1.png\" alt=\"\" width=\"960\" height=\"600\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><span style=\"font-weight: 400;\">Ada banyak algoritma yang dapat digunakan untuk melakukan clustering. Salah satunya adalah dengan cara K-mean Clustering.<\/span> <span style=\"font-weight: 400;\">Perhatikan gambar di bawah ini, perbedaan antara data sebelum dan sesudah dilakukan kmean clustering.&nbsp;<\/span> &nbsp; <span style=\"font-weight: 400;\">Lalu bagaimana tahapan clustering data menggunakan algoritma K-means clustering?<\/span><\/p>\r\n<ol>\r\n<li><span style=\"font-weight: 400;\">Inisiasi jumlah kluster secara random, misalkan kita pilih k=2.&nbsp;<\/span><span style=\"font-weight: 400;\">K adalah sebuah parameter yang mewakilkan angka dari cluster yang data points nya akan dilakukan pengelompokan.<\/span><\/li>\r\n<li><span style=\"font-weight: 400;\">Tentukan posisi centroid secara random.<\/span><\/li>\r\n<\/ol>\r\n<p><img class=\"size-full wp-image-15396 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/clustering-2.png\" alt=\"\" width=\"290\" height=\"238\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; 3. Hitung jarak antara data point ke centroid. Assign setiap data ke centroid terdekat (hal ini akan membentuk&nbsp; k clusters).<\/span><span style=\"font-weight: 400;\">Perhitungan jarak antara titik data ke centroid menggunakan formula euclidean distance.&nbsp;<\/span><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><img class=\"size-full wp-image-15397 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/clustering-3.png\" alt=\"\" width=\"551\" height=\"249\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp; 4. Kemudian hitung ulang centroid berdasarkan label-label data sebelumnya. Disini kita buat kembali centroid baru dan menghitung kembali jarak antar data poin ke centroid.<\/span><\/p>\r\n<p><span style=\"font-weight: 400;\">&nbsp; &nbsp; &nbsp;5. Kemudian di assign kembali data poin ke centroid terdekat yang terbaru, dan kita cek apakah ada perubahan dalam cluster atau tidak, jika ada maka kita perlu kembali ke poin 4 mencari posisi centroid yang tidak mengubah cluster. Hal ini kita lakukan perulangan sampai posisi centroid tidak berubah lagi.&nbsp;<\/span><\/p>\r\n<h1><img class=\"size-full wp-image-15398 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/cluster-4.png\" alt=\"\" width=\"538\" height=\"258\" \/><\/h1>\r\n<h2>Memilih jumlah kluster yang tepat<\/h2>\r\n<p>Karena di algoritma kmeans menghiung jarak dr setiap data ke setiap centroid dan mengasign ke centroid dg jarak tertentu, karena algoritma memang ingin mengoptimasi (dlm hal ini minimum jarak ke setiap centroidnya) maka mudahnya menghitung jaraknya lalu kita rata2kan, d sklearn total jaraknya disebut inertia (inertia yg semakin kecil semakin baik kmeansnya). Inertia meminimumkan (jarak antara dlm 1 kluster), dengan formula seperti berikut: &nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><img class=\"size-full wp-image-15399 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/inertia-formula.png\" alt=\"\" width=\"283\" height=\"71\" \/><\/p>\r\n<p>Lalu bagaimana matriks inersia mengubah jumlah kluster? Jika dalam 1 kluster formula inertia seperti berikut,<\/p>\r\n<p>&nbsp;<\/p>\r\n<p><img class=\"size-full wp-image-15400 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/inertia-2.png\" alt=\"\" width=\"370\" height=\"308\" \/><\/p>\r\n<p>namun jika kita tambah lagi jumlah kluster maka nilai inertia akan berkurang. lalu dimanakah limit dari inertia? limitnya adlaah dimana nilai inersia = 0. Karena setiap data point memiliki clusternya masing-masing. Lebih kecil inersia maka lebih baik kluster yang sesuai. &nbsp; Lalu Bagaimana menemukan kluster fit yang sesuai? Untuk menemukan ini, kita bisa gunakan elbow method. Dimana metode ini membandingkan jumlah kluster dengan inersianya. &nbsp;<\/p>\r\n<p><img class=\"alignnone  wp-image-15401 aligncenter\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/03\/Elbow-method.png\" alt=\"\" width=\"528\" height=\"327\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp; Untuk lebih jelasnya.. silahkan tonton video materi berikut ya...<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>MATERI VIDEO:<\/p>\r\n<p><a href=\"https:\/\/youtu.be\/3AbDumJnQFE\">K-Means Clustering Intuition<\/a><\/p>\r\n<p><a href=\"https:\/\/youtu.be\/nc7FGBQPy_Y\">K-Means Clustering Hands-On<\/a><\/p>","waktu_publish":"2021-11-17 09:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:25:29","waktu_publish_formatted":" Rabu, 17 November 2021. 09:00:00 WIB."},{"id":749,"uuid":"ac595a48-eac1-4158-9c64-0ae2d40a4419","author_user_id":4430,"materi_section_id":208,"judul":"Hari 4 - Final Project","permalink":"hari-4-final-project","konten":"<p>Halo Pythonista.....&nbsp;Selamat kepada teman-teman yang telah menyelesaikan seluruh rangkaian training Data Science. Kini saatnya kita lanjutkan ke agenda terakhir kita yaitu pengerjaan Final Project.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Final Project bisa dikerjakan mulai hari Kamis ini (14 Oktober 2021) hingga selesai hari Senin (18 Oktober 2021) pkl 08.30 WIB ya (waktu maksimal pengerjaan)..<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Bentuk Final Project yaitu pembuatan sebuah report dalam format PDF (berupa slide presentation) untuk:&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<h2>Clustering the Countries by using K-Means for HELP International<\/h2>\r\n<p><a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1WrbvqsWUUlqFStXHyFmrzBmr-1E99lf9\">Download data disini<\/a><\/p>\r\n<p><strong>Objective<\/strong>:&nbsp;<\/p>\r\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Translation\"><span class=\"Y2IQFc\" lang=\"id\">Untuk mengkategorikan negara menggunakan faktor sosial ekonomi dan kesehatan yang menentukan pembangunan negara secara keseluruhan.<br \/><br \/><\/span><\/p>\r\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Translation\"><strong><span class=\"Y2IQFc\" lang=\"id\">Tentang Organisasi:<\/span><\/strong><\/p>\r\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Translation\"><span class=\"Y2IQFc\" lang=\"id\">HELP International adalah LSM kemanusiaan internasional yang berkomitmen untuk memerangi kemiskinan dan menyediakan fasilitas dan bantuan dasar bagi masyarakat di negara-negara terbelakang saat terjadi bencana dan bencana alam.<\/span><\/p>\r\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Translation\">&nbsp;<\/p>\r\n<p class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Translation\"><strong><span class=\"Y2IQFc\" lang=\"id\">Permasalahan:<\/span><\/strong><\/p>\r\n<p id=\"tw-target-text\" class=\"tw-data-text tw-text-large XcVN5d tw-ta\" dir=\"ltr\" data-placeholder=\"Translation\"><span class=\"Y2IQFc\" lang=\"id\">HELP International telah berhasil mengumpulkan sekitar $ 10 juta. Saat ini, CEO LSM perlu memutuskan bagaimana menggunakan uang ini secara strategis dan efektif. Jadi, CEO harus mengambil keputusan untuk memilih negara yang paling membutuhkan bantuan. Oleh karena itu, Tugas teman-teman&nbsp; adalah mengkategorikan negara menggunakan beberapa faktor sosial ekonomi dan kesehatan yang menentukan perkembangan negara secara keseluruhan. Kemudian kalian perlu menyarankan negara mana saja&nbsp; yang paling perlu menjadi fokus CEO.<\/span><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><strong>Penjelasan kolom fitur:<\/strong><\/p>\r\n<ul>\r\n<li><strong>Negara<\/strong> <strong>: <\/strong>Nama negara<\/li>\r\n<li><strong>Kematian_anak:&nbsp;<\/strong>Kematian anak di bawah usia 5 tahun per 1000 kelahiran<\/li>\r\n<li><strong>Ekspor :<\/strong> Ekspor barang dan jasa perkapita<\/li>\r\n<li><strong>Kesehatan:&nbsp;<\/strong>Total pengeluaran kesehatan perkapita<\/li>\r\n<li><strong>Impor: <\/strong>Impor barang dan jasa perkapita<\/li>\r\n<li><strong>Pendapatan:&nbsp;<\/strong>Penghasilan bersih perorang<\/li>\r\n<li><strong>Inflasi: <\/strong><span class=\"Y2IQFc\" lang=\"id\">Pengukuran tingkat pertumbuhan tahunan dari Total GDP<\/span><strong>&nbsp;<\/strong><\/li>\r\n<li><strong>Harapan_hidup:<\/strong> <span class=\"Y2IQFc\" lang=\"id\">Jumlah tahun rata-rata seorang anak yang baru lahir akan hidup jika pola kematian saat ini tetap sama<\/span><\/li>\r\n<li><strong>Jumlah_fertiliti: <\/strong><span class=\"Y2IQFc\" lang=\"id\">Jumlah anak yang akan lahir dari setiap wanita jika tingkat kesuburan usia saat ini tetap sama<\/span><\/li>\r\n<li><strong>GDPperkapita:&nbsp;<\/strong><span class=\"Y2IQFc\" lang=\"id\">GDP per kapita. Dihitung sebagai Total GDP dibagi dengan total populasi.<\/span>&nbsp;<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Silahkan teman-teman eksplor data sebanyak mungkin, handling data missing value dan outlier (jika ada), lakukan klustering, dan tuangkan dalam laporan tersebut. Gabungkan file report (pdf) dan&nbsp; file .ipynb dalam 1 folder kemudian share link folder tersebut dan input ke web.&nbsp;<\/p>\r\n<p>Selamat mengerjakan.. Semoga sukses.. Happy coding!!!<\/p>","waktu_publish":"2021-11-18 13:00:00","status_publish":"publish","urutan":4,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:25:44","waktu_publish_formatted":" Kamis, 18 November 2021. 13:00:00 WIB."}]},{"id":209,"uuid":"8c534ba9-adfc-44ce-8912-a30ff50a0318","materi_id":24,"nama":"Tugas Pekan 4","permalink":"tugas-pekan-4","urutan":9,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":null,"posting":[{"id":751,"uuid":"f0b54c94-a8d0-4f24-9cb7-14857dda0f03","author_user_id":4430,"materi_section_id":209,"judul":"Tugas Hari 1","permalink":"tugas-hari-1","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download File: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=14TM_lBqZsLdHhPyBNP1_8jZ4o84kPuhm\">Tugas Hari 1<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Expected Output:<\/p>\r\n<p>Gambar Soal 1.<\/p>\r\n<p>a. Tanpa handling missing value<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15961\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/missing-tanpa-handle.png\" alt=\"\" width=\"723\" height=\"496\" \/><\/p>\r\n<p>b. Dengan handling missing value<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15962\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/missing-dihandle.png\" alt=\"\" width=\"722\" height=\"496\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Gambar Soal 2:<\/p>\r\n<p><img class=\"alignnone size-full wp-image-15963\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/boxplot2.png\" alt=\"\" width=\"687\" height=\"481\" \/><\/p>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-15 13:00:00","status_publish":"publish","urutan":1,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:26:00","waktu_publish_formatted":" Senin, 15 November 2021. 13:00:00 WIB."},{"id":752,"uuid":"db324da1-9056-407b-976c-fe47ca6dbfd9","author_user_id":4430,"materi_section_id":209,"judul":"Tugas Hari 2","permalink":"tugas-hari-2","konten":"<p><!-- wp:paragraph {\"align\":\"center\"} --><\/p>\r\n<p class=\"has-text-align-center\">Download File: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1fG4lAOHAkD2b-m454Vt1-3Nb8JwqmIB1\">Tugas Hari 2<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Expected Output:<\/p>\r\n<p>Pie Chart<\/p>\r\n<p><img class=\"wp-image-16048 aligncenter\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/pie.png\" alt=\"\" width=\"280\" height=\"268\" \/><\/p>\r\n<p>Histogram plot<\/p>\r\n<p><img class=\"wp-image-16049 aligncenter\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/histogram.png\" alt=\"\" width=\"503\" height=\"399\" \/><\/p>\r\n<p>Catplot<\/p>\r\n<p><img class=\"size-full wp-image-16050 aligncenter\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/catplot.png\" alt=\"\" width=\"367\" height=\"366\" \/><\/p>\r\n<p>Scatterplot<\/p>\r\n<p><img class=\"wp-image-16051 aligncenter\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/sxcatter.png\" alt=\"\" width=\"567\" height=\"377\" \/><\/p>\r\n<p>Pairplot<\/p>\r\n<p><img class=\"wp-image-16052 aligncenter\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/pairplot.png\" alt=\"\" width=\"506\" height=\"505\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":1990,\"sizeSlug\":\"large\"} --><\/p>\r\n<p><!-- \/wp:image --><\/p>\r\n<p><!-- \/wp:image --><\/p>","waktu_publish":"2021-11-16 13:00:00","status_publish":"publish","urutan":2,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:26:17","waktu_publish_formatted":" Selasa, 16 November 2021. 13:00:00 WIB."},{"id":753,"uuid":"0904110a-462e-4e30-baf7-f6af369f05ed","author_user_id":4430,"materi_section_id":209,"judul":"Tugas Hari 3","permalink":"tugas-hari-3","konten":"<p>Download File: <a href=\"https:\/\/drive.google.com\/uc?export=download&amp;id=1lULjBEuzyXY2noSEjDD2FLOKblyf-6zK\" target=\"_blank\" rel=\"noopener\">Tugas Hari 3<\/a><\/p>\r\n<p>Expected Output:<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>n_cluster = 2<\/p>\r\n<p><img class=\"alignnone size-full wp-image-16055\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/2cluster.png\" alt=\"\" width=\"729\" height=\"480\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Elbow graph:<\/p>\r\n<p><img class=\"alignnone size-full wp-image-16057\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/elbow.png\" alt=\"\" width=\"612\" height=\"387\" \/><\/p>\r\n<p>n_clusters = 3<\/p>\r\n<p><img class=\"alignnone size-full wp-image-16058\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/04\/cluster3.png\" alt=\"\" width=\"729\" height=\"480\" \/><\/p>","waktu_publish":"2021-11-17 13:00:00","status_publish":"publish","urutan":3,"created_by":4430,"updated_by":4430,"created_at":"2021-03-18 14:00:59","updated_at":"2021-10-24 20:26:34","waktu_publish_formatted":" Rabu, 17 November 2021. 13:00:00 WIB."}]}],"list_kelas":null,"is_done":0}