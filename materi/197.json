{"response_code":"00","response_msg":"Berhasil mendapatkan materi kelas","materi_kelas":{"id":36,"uuid":"6e5223e1-662a-42b3-a56a-798110615173","kategori_kelas_id":23,"versi":"1.0.0","created_by":4336,"updated_by":4336,"created_at":"2021-09-02 18:26:01","updated_at":null},"section":[{"id":358,"uuid":"9e671fb5-25ba-4ed3-82f5-2e752527a083","materi_id":36,"nama":"Pendahuluan","permalink":"pendahuluan","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-09-19 15:56:50","updated_at":null,"posting":[{"id":1294,"uuid":"9bf94836-6b6e-47de-ac0b-c81cc9e95eae","author_user_id":4336,"materi_section_id":358,"judul":"Persiapan Perangkat","permalink":"persiapan-perangkat","konten":"<div class=\"entry-content\">\r\n<p>Selamat datang peserta Bootcamp Digital Skill kelas Golang Backend Development. Sebelum membahas proses membuat aplikasi menggunakan golang, terlebih dahulu kita akan membahas berbagai perangkat yang perlu dipersiapkan.<\/p>\r\n<h2 id=\"perangkat-yang-diperlukan\"><strong>Perangkat yang Diperlukan<\/strong><\/h2>\r\n<p>Untuk mengikuti bootcamp Golang ini, diperlukan perangkat utama yaitu <strong>PC\/Laptop<\/strong>&nbsp;yang terhubung dengan&nbsp;<strong>internet<\/strong>. Spesifikasi PC\/Laptop minimal memiliki&nbsp;<strong>RAM 2GB<\/strong>.<\/p>\r\n<h2 id=\"perangkat-lunak-dan-teknologi-yang-digunakan\"><strong>Perangkat Lunak dan Teknologi yang Digunakan<\/strong><\/h2>\r\n<h3 id=\"1-terminal-atau-console\">1. Terminal atau Console<\/h3>\r\n<p>Pada Bootcamp kali ini, diperlukan sebuah terminal untuk mengeksekusi berbagai perintah dasar yang berkaitan dengan Git, Node. Kita bisa menggunakan terminal bawaan dari Sistem Operasi yang digunakan seperti Command Prompt\/Windows PowerShell pada OS Windows dan Terminal pada OS Linux maupun OSX. Dan ketika melakukan proses instalasi Git juga terdapat Git Bash yang memiliki fungsi yang serupa. Selain itu, peserta juga bisa menggunakan&nbsp;<a href=\"https:\/\/cmder.net\/\">cmder<\/a>&nbsp;(terutama yang menggunakan OS Windows) karena cmder memiliki banyak fitur yang tidak dimiliki command prompt atau terminal bawaan. Proses instalasi bisa dilakukan menggunakan konfigurasi default\/recommended<\/p>\r\n<h3 id=\"2-git\">2. Git<\/h3>\r\n<p><a href=\"https:\/\/git-scm.com\/\">Git&nbsp;<\/a>merupakan version control yang banyak digunakan oleh para programmer atau software developer. Untuk dapat menggunakannya, download dan install&nbsp;<a href=\"https:\/\/git-scm.com\/\">Git&nbsp;<\/a>sesuai dengan platform OS yang bersangkutan. Dan jalankan perintah instalasi dengan konfigurasi default\/recommended.<\/p>\r\n<h3 id=\"3-visual-studio-code\">3. Visual Studio Code<\/h3>\r\n<p><a href=\"https:\/\/code.visualstudio.com\/\">Visual Studio Code<\/a>&nbsp;adalah salah satu IDE (Integrated Development Environment) yang direkomendasikan untuk digunakan selama bootcamp ini. Salah satu kelebihannya adalah kemudahan pengoperasian dan user inteface yang lebih mudah dipahami oleh orang yang awam dalam pemrograman. Selain itu juga terdapat banyak extension atau plugin yang sangat membantu dalam menuliskan kode selama membangun suatu program\/aplikasi.<\/p>\r\n<p>IDE lainnya yang juga dapat digunakan adalah&nbsp;<a href=\"https:\/\/www.sublimetext.com\/\">Sublime Text<\/a>&nbsp;atau&nbsp;<a href=\"https:\/\/atom.io\/\">Atom<\/a>. Untuk kemudahan proses pembelajaran kami tidak merekomendasikan Notepad atau Notepad++<\/p>\r\n<h3 id=\"4-node-js\">4. Go<\/h3>\r\n<p>selain itu yang paling utama ialah installasi golang itu sendiri dapat di download melalui <a href=\"https:\/\/golang.org\/dl\/\">https:\/\/golang.org\/dl\/<\/a><\/p>\r\n<\/div>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-10-24 16:30:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-09-19 15:57:19","updated_at":"2021-10-18 20:29:24","waktu_publish_formatted":" Minggu, 24 Oktober 2021. 16:30:00 WIB."},{"id":1295,"uuid":"67c68895-2072-4bb7-bd88-e177c9e97831","author_user_id":4336,"materi_section_id":358,"judul":"Teknis Pengumpulan Tugas","permalink":"teknis-pengumpulan-tugas","konten":"<p>setiap harinya Anda diminta untuk menyelesaikan tugas dan\/atau quiz yang diberikan. Disarankan Anda untuk membuat satu folder khusus dalam local PC\/Laptop untuk menyimpan file-file tugas yang terhubung dengan repository project pada tugas Git. Berikut tahapan atau tata cara mengumpulkan tugas<\/p>\r\n<p>Dalam hal ini tahapan yang bisa digunakan adalah sebagai berikut:<\/p>\r\n<ul>\r\n<li>Buat folder tugas atau bisa mengikuti instruksi dari masing-masing tugas(misal &ldquo;tugas-5&rdquo;)<\/li>\r\n<li>Setelah masuk ke dalam folder, buat file tugas atau&nbsp; bisa mengikuti instruksi dari masing-masing tugas(misal &ldquo;tugas5.go&rdquo;)<\/li>\r\n<li>Jika di dalam tugas terdapat beberapa soal, Anda bisa gunakan fitur toggle comment pada visual studio code untuk pemisah antar soal (dengan menekan shortcut Ctrl + \/ pada Windows atau \u2318\/ pada Mac). contoh:\r\n<pre class=\"wp-block-preformatted\">\/\/ Soal 1 <br \/>{ jawaban soal 1 } <br \/>\/\/ Soal 2 <br \/>{ jawaban soal 2 } <br \/>\/\/ dst.<\/pre>\r\n<\/li>\r\n<li>Jika tugas telah selesai, upload file tugas ke Gitlab (Anda bisa menggunakan command di bawah ini).\r\n<pre class=\"wp-block-preformatted\">$ git add .   <br \/>$ git commit -m \"update tugas 5\"    <br \/>$ git push <\/pre>\r\n<\/li>\r\n<li>Jika proses git push telah berhasil, periksa halaman Gitlab Anda dan masuk ke menu &ldquo;<strong>Repository<\/strong>&rdquo; =&gt; &ldquo;<strong>Commits<\/strong>&rdquo; (yang terdapat di sidebar) kemudian copy link commit tugas Anda.<br \/><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/teknis-tugas-go-1a.png\" \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/teknis-tugas-go-2a.png\" width=\"855\" \/><\/li>\r\n<\/ul>\r\n<p>Setelah itu,&nbsp;<em>login&nbsp;<\/em>ke member.jabarcodingcamp.com kemudian akses kelas yang diikuti, pilih tab &lsquo;Kelola Tugas&rsquo;.<\/p>\r\n<p><span style=\"font-weight: 400;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/tugas-1.png\" width=\"855\" height=\"327\" \/><\/span><\/p>\r\n<p>Setelah memilih tugas yang akan di input pada menu&nbsp;<em>drop-down<\/em>, klik tombol &lsquo;Input Tugas&rsquo;. Kemudian masukkan link commit tadi.<\/p>\r\n<p><span style=\"font-weight: 400;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/teknis-tugas-go-2.png\" width=\"855\" \/><\/span><\/p>\r\n<p>Tunggu hingga upload berhasil dan muncul&nbsp;<em>pop up <\/em>pemberitahuan bahwa tugas berhasil diinput.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/06\/Screenshot-from-2020-06-14-20-52-10.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah Screenshot-from-2020-06-14-20-52-10.png\" \/><\/p>\r\n<h3 id=\"tambahan\"><strong>Tambahan<\/strong><\/h3>\r\n<p>Tugas bisa di kumpulkan menggunakan <strong>gitlab <\/strong>ataupun <strong>github<\/strong><\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-10-24 16:30:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-09-19 15:57:41","updated_at":"2021-10-18 20:29:41","waktu_publish_formatted":" Minggu, 24 Oktober 2021. 16:30:00 WIB."}]},{"id":379,"uuid":"b235fb3e-9d5f-4475-972c-7f6391587336","materi_id":36,"nama":"Pekan 1 - Materi","permalink":"pekan-1-materi","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-09-20 06:46:12","updated_at":"2021-09-20 06:46:41","posting":[{"id":1392,"uuid":"d4dcc1ba-6e9a-40c2-9760-0f687db4afe1","author_user_id":4336,"materi_section_id":379,"judul":"Hari 1 - Command Line Interface dan Git","permalink":"hari-1-command-line-interface-dan-git","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Command Line Interface&nbsp;<\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\"><em>Command Line<\/em>&nbsp;<em>Interface<\/em>&nbsp;(CLI) atau yang biasa kita kenal cmd atau&nbsp;<em>command prompt<\/em>&nbsp;atau&nbsp;<em>terminal&nbsp;<\/em>adalah&nbsp;<em>software&nbsp;<\/em>atau antar muka untuk memberikan perintah-perintah dasar pada komputer kita. Biasanya kita mengoperasikan komputer seperti&nbsp;<em>browsing media<\/em>, mencari&nbsp;<em>file<\/em>, membuat&nbsp;<em>file&nbsp;<\/em>atau&nbsp;<em>folder<\/em>, dan lain-lain dengan GUI (<em>Graphical User Interface<\/em>) yang sudah disediakan pengembang Sistem Operasi seperti&nbsp;<em>Windows<\/em>,&nbsp;<em>Linux<\/em>, atau OSX. Akan tetapi, pada dasarnya kita juga bisa melakukan operasi-operasi tersebut dalam suatu perintah yang kita kirimkan melalui cmd\/<em>terminal<\/em>.<\/p>\r\n<p style=\"text-align: justify;\">Berikut ini beberapa contoh perintah yang dapat kita jalankan pada cmd\/terminal :<\/p>\r\n<p style=\"text-align: justify;\"><strong>1. Menuju <em>folder<\/em>\/direktori tertentu<\/strong><\/p>\r\n<p style=\"text-align: justify; padding-left: 40px;\">Untuk menuju posisi&nbsp;<em>folder&nbsp;<\/em>atau direktori tertentu bisa gunakan perintah&nbsp;cd&nbsp;atau kepanjangan dari&nbsp;<em>change directory<\/em><\/p>\r\n<pre style=\"padding-left: 40px;\">\/\/ Menuju Desktop<br \/>$ cd Desktop<br \/>\/\/ Menuju ke direktori <em>parent <\/em>(sebelumnya)<br \/>$ cd ..<\/pre>\r\n<p style=\"text-align: justify;\"><strong>2. Mengetahui alamat dari direktori yang sedang dibuka<\/strong><\/p>\r\n<p style=\"text-align: justify; padding-left: 40px;\">Terkadang kita butuh tahu sedang dimana posisi terminal kita berjalan. Perintah untuk fungsi ini yaitu&nbsp;pwd&nbsp;atau kependekan dari path of working directory<\/p>\r\n<pre style=\"padding-left: 40px;\">$ pwd<br \/>\/home\/users<br \/>\/\/ sedang berada di folder home\/users<\/pre>\r\n<p style=\"text-align: justify;\"><strong>3. Mengetahui daftar isi dari sebuah direktori\/<em>folder<\/em><\/strong><\/p>\r\n<p style=\"text-align: justify; padding-left: 40px;\">Kamu bisa gunakan perintah&nbsp;ls&nbsp;atau&nbsp;dir&nbsp;. contohnya sebagai berikut<\/p>\r\n<pre style=\"padding-left: 40px;\">$ ls<\/pre>\r\n<p style=\"text-align: justify; padding-left: 40px;\">Document Desktop Image index.html<\/p>\r\n<pre style=\"padding-left: 40px;\">$ dir<\/pre>\r\n<p style=\"text-align: justify; padding-left: 40px;\">Document Desktop Image index.html<\/p>\r\n<p style=\"text-align: justify;\"><strong>4. Membuat <em>folder<\/em>&nbsp;baru<\/strong><\/p>\r\n<p style=\"text-align: justify; padding-left: 40px;\">Perintahnya adalah&nbsp;mkdir&nbsp;atau singkatan dari&nbsp;<em>make directory<\/em>. contohnya sebagai berikut<\/p>\r\n<pre style=\"padding-left: 40px;\">\/\/ membuat folder baru bernama new-folder<br \/>$ mkdir new-folder<br \/><br \/>\/\/ mengecek apakah sudah berhasil buat folder baru<br \/>$ ls<br \/>new-folder ... ... <\/pre>\r\n<p style=\"text-align: justify;\"><strong>5. Membuat <em>file&nbsp;<\/em>baru<\/strong><\/p>\r\n<p style=\"text-align: justify; padding-left: 40px;\">Gunakan perintah&nbsp;touch&nbsp;untuk membuat file baru<\/p>\r\n<pre style=\"padding-left: 40px;\">\/\/ membuat <em>file <\/em>index.html<br \/>$ touch index.html<br \/><br \/>\/\/ mengecek apakah sudah berhasil buat <em>file <\/em>baru<br \/>$ ls<br \/>index.html ... ...<br \/><br \/><\/pre>\r\n<p style=\"text-align: left;\"><span style=\"font-size: 24pt;\"><span style=\"font-size: 18pt;\"><strong><em>Software terminal&nbsp;<\/em><\/strong><\/span><strong><span style=\"font-size: 18pt;\">\/&nbsp;<em>command line<\/em>&nbsp;yang direkomendasikan<\/span>&nbsp;<\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Untuk OS Windows,&nbsp;<em>terminal&nbsp;<\/em>bawaannya adalah&nbsp;<em>command prompt<\/em>&nbsp;atau cmd yang relatif kurang nyaman untuk dipakai dalam tahap&nbsp;<em>development<\/em>. Oleh karena itu direkomendasikan untuk&nbsp;<em>install terminal<\/em>&nbsp;di bawah ini agar lebih optimal dalam mengerjakan&nbsp;<em>project<\/em>.<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li>Cmder,&nbsp;<em>link download<\/em>:&nbsp;<a href=\"https:\/\/cmder.net\/\">cmder<\/a><\/li>\r\n<li>Git bash, Git bash biasanya ter-<em>install<\/em>&nbsp;jika kita meng-<em>install<\/em>&nbsp;<strong>git<\/strong> di pc\/laptop kita.<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\">&nbsp;<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Frequent cases ( Kasus yang sering terjadi ):<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/1.png\" width=\"598\" height=\"204\" \/><\/p>\r\n<p style=\"text-align: justify;\">Jika Anda mengetikkan sebuah perintah yang <strong>tidak dikenali<\/strong> oleh komputer Anda, maka anda akan mendapatkan pesan yang mengatakan [Command] tidak dikenali ( <em>is recognized as an internal ...<\/em> ) seperti gambar diatas dan perintah tidak akan menghasilkan apa pun.<\/p>\r\n<p style=\"text-align: justify;\">Perintah yang tidak dilakukan seperti itu sebenarnya bukanlah sebuah masalah, karena yang lebih berisiko adalah mengetik <strong>perintah yang salah <\/strong>secara tidak sengaja, atau menggunakan perintah dengan cara yang tidak Anda inginkan. Misalnya, saat mencoba menghapus satu file, Namun, anda mungkin secara tidak sengaja memintanya untuk menghapus seluruh folder. Solusinya tetap menyesuaikan perintah dan terminal apa yang akan anda gunakan sesuai kebutuhan.<\/p>\r\n<hr \/>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; margin-top: 50px; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Git<\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Git adalah sebuah&nbsp;<em>Version Control System<\/em>&nbsp;yaitu sistem yang mengelola perubahan dari sebuah dokumen, program komputer, website dan kumpulan informasi lain. Selain itu, Git memungkinkan para pengembang perangkat lunak dari berbagai belahan dunia mengerjakan banyak projek bersama-sama tanpa mengharuskan bertatap muka.<\/p>\r\n<p style=\"text-align: justify;\">Git akan disimpan dalam sebuah folder atau directory project yang biasa di sebut <strong>Repository<\/strong><\/p>\r\n<h2 id=\"installasi-git\" style=\"text-align: justify;\"><strong>Installasi Git<\/strong><\/h2>\r\n<h3 id=\"installasi-di-windows-dan-mac\" style=\"text-align: justify;\"><code>Installasi di Windows dan Mac<\/code><\/h3>\r\n<p style=\"text-align: justify;\">Berikut ini cara untuk menginstall git ke dalam windows dan mac<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li style=\"text-align: justify;\">Download terlebih dahulu file instalasi nya dari halaman <a href=\"https:\/\/git-scm.com\/download\">download git<\/a>.&nbsp;<\/li>\r\n<\/ul>\r\n<p style=\"padding-left: 40px; text-align: justify;\">Berikut ini ilustrasi gambar halaman download git :<\/p>\r\n<p style=\"padding-left: 40px; text-align: justify;\">&nbsp;<img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/2.png\" alt=\"\" width=\"517\" height=\"386\" \/>&nbsp;<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li style=\"text-align: justify;\">Pilihlah sesuai requirement OS pada PC\/Laptop anda misalnya Windows \/ macOS \/ Linux<\/li>\r\n<li style=\"text-align: justify;\">Jika sudah terdownload, Jalankan file instalasi lalu ikuti instruksi instalasi,<\/li>\r\n<\/ul>\r\n<p style=\"padding-left: 40px; text-align: justify;\">Berikut ini contohnya&nbsp; : ( <strong>Klik next saja sampai selesai )<\/strong><\/p>\r\n<p style=\"padding-left: 40px; text-align: justify;\">&nbsp;<img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/3-1.png\" alt=\"\" width=\"452\" height=\"353\" \/>&nbsp;<\/p>\r\n<ul>\r\n<li>setelah instalasi selesai, kita dapat mengecek apakah Git sudah terinstall dengan cara membuka cmd atau command prompt lalu ketikkan perintah <code>git --version<\/code>.<\/li>\r\n<\/ul>\r\n<h3 id=\"installasi-di-ubuntu\" style=\"text-align: justify;\"><code>Installasi di Ubuntu<\/code><\/h3>\r\n<p style=\"text-align: justify;\">Berikut ini cara untuk menginstall git ke dalam ubuntu :<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li style=\"text-align: justify;\">Ubuntu versi 18.04 cukup masuk terminal lalu jalankan perintah <code>$ sudo apt update<\/code><\/li>\r\n<li style=\"text-align: justify;\">lalu jalankan perintah <code>$ sudo apt install git<\/code><\/li>\r\n<li style=\"text-align: justify;\"><code><\/code>Lalu anda bisa melihat apakah git kita sudah terinstall dengan mengetikkan perintah <code>git --version<\/code>&nbsp;di terminal<\/li>\r\n<\/ul>\r\n<h2 style=\"padding-left: 40px; text-align: justify;\"><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/5.png\" alt=\"\" width=\"666\" height=\"161\" \/><\/strong><\/h2>\r\n<h2 id=\"setup-git\" style=\"text-align: justify;\"><strong>Setup Git<\/strong><\/h2>\r\n<p style=\"text-align: justify;\">Setelah menginstall git dalam PC\/Laptop kita, hal yang di lakukan pertama atau selanjutnya adalah setup Konfigurasi dari git config email dan username seperti di bawah ini :<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li><code>git config --global user.name \"username anda\"<\/code><\/li>\r\n<li><code>git config --global user.email \"email anda\"<\/code><\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\">Git config ini bertujuan sebagai username yang akan digunakan untuk indetitas dari sebuah commit, Jika sudah melakukan setup, anda dapat melihat hasil config ini dengan perintah :<\/p>\r\n<p style=\"padding-left: 40px; text-align: justify;\"><code>git config -l<\/code><\/p>\r\n<h2 id=\"perintah-dasar-git\" style=\"text-align: justify;\"><strong>Perintah Dasar Git<\/strong><\/h2>\r\n<h3 id=\"git-init\" style=\"text-align: justify;\"><code>git init<\/code><\/h3>\r\n<p style=\"text-align: justify;\"><code>git init<\/code>&nbsp;adalah perintah untuk <strong>inisialisasi <\/strong>atau memasangkan git pada sebuah repository yang sedang terbuka di command prompt atau terminal<\/p>\r\n<p style=\"text-align: justify;\"><img class=\"wp-image-6306\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-26.png\" sizes=\"(max-width: 662px) 100vw, 662px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-26.png 662w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-26-300x53.png 300w\" alt=\"\" width=\"662\" height=\"116\" \/><\/p>\r\n<p style=\"text-align: justify;\">setelah menjalankan perintah git init biasanya terdapat folder .git (biasanya di hide secara default oleh sistem operasi ini bisa di setting agar terlihat)<\/p>\r\n<p style=\"text-align: justify;\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/Screenshot_48.png\" width=\"180\" height=\"76\" \/>&nbsp;<\/p>\r\n<p style=\"text-align: justify;\">git init hanya di lakukan untuk project yang pertama kali di buat sehingga command ini biasanya hanya sekali digunakan<br \/>(jika melanjutkan project orang lain hanya cukup clone saja dan tidak perlu untuk git init kembali)<\/p>\r\n<h3 id=\"git-add\" style=\"text-align: justify;\"><code>git add&nbsp;<\/code><\/h3>\r\n<p style=\"text-align: justify;\"><code>git add<\/code> yaitu perintah git untuk <strong>menambahkan<\/strong> perubahan-perubahan didalam direktori project kita yang sebelumnya telah kita lakukan sebuah perubahan<strong>.<\/strong> Misalkan di repository project kita terdapat file index.html yang ingin kita simpan perubahannya maka perintah yang kita jalankan contohnya seperti ini :<\/p>\r\n<pre class=\"wp-block-code\"><code>$ git add index.html<\/code><\/pre>\r\n<h3 id=\"git-commit\" style=\"text-align: justify;\"><code>git commit<\/code>&nbsp;<\/h3>\r\n<p style=\"text-align: justify;\"><code>git commit<\/code> yaitu perintah dari git untuk <strong>menyimpan<\/strong> perubahan file yang ada di repository kita, namun file yang tersimpan itu belum terkirim ke <strong>remote repository<\/strong>. Perintah commit ini biasanya disertakan dengan&nbsp;-m \"Nama Commitan anda\".Berikut contoh perintah yang dapat kita jalankan :<\/p>\r\n<pre class=\"wp-block-code\"><code>git commit -m \"menambahkan index.html\"<\/code><\/pre>\r\n<h3 id=\"git-status\" style=\"text-align: justify;\"><code>git status<\/code><\/h3>\r\n<p style=\"text-align: justify;\"><code>git status<\/code>&nbsp;adalah perintah dalam git untuk <strong>memeriksa status<\/strong> repository, apakah ada file baru, perubahan pada file sudah di &ldquo;<code>git add<\/code> &rdquo; atau apakah perubahan sudah di commit atau belum.&nbsp;<\/p>\r\n<p style=\"text-align: justify;\">NOTE :&nbsp; Keterangan merah pada terminal artinya ada file yang belum dilakukan &ldquo;git add &rdquo; artinya ada file yang belum disimpan perubahannya, Dan Jika keterangan warna hijau pada terminal artinya file sudah siap untuk dilakukan &ldquo;git commit&rdquo;<\/p>\r\n<p><img class=\"wp-image-6612\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-29.png\" sizes=\"(max-width: 760px) 100vw, 760px\" srcset=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-29.png 760w, https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/image-29-300x102.png 300w\" alt=\"\" width=\"760\" height=\"259\" \/><\/p>\r\n<h3 id=\"git-push\" style=\"text-align: justify;\"><code>git push<\/code><\/h3>\r\n<p style=\"text-align: justify;\"><code>git push<\/code> adalah perintah dalam git untuk mengirimkan perubahan perubahan file yang berhubungan pada repository local di PC\/Laptop kita kepada <strong>remote repository. <\/strong>Berikut contoh perintah yang dapat kita jalankan :<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li><code>git push<\/code><\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\">Atau<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li><code>git push origin main<\/code>( &ldquo;main&rdquo; merupakan nama branch yang ada di remote repository yang kita gunakan )<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><strong>Catatan : <\/strong>Penggunaan origin hanya menentukan repositori mana yang harus digunakan untuk push. Contohnya yang kita ingin push repository kita ke remote repository yang menggunakan nama branch main<\/p>\r\n<h3 id=\"git-pull\" style=\"text-align: justify;\"><code>git pull<\/code><\/h3>\r\n<p style=\"text-align: justify;\"><code>git pull <\/code>adalah perintah dalam git untuk mengabil perubahan terakhir dari repository di git<\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong>Remote Repository<\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Pada penjelasan diatas kita sudah melihat bahwa perubahan yang dilakukan pada Git akan selalu berhubungan dengan Remote repository, jadi apa itu remote repository ? Remote Repository adalah tempat dimana kita menyimpan <em>source-code <\/em>project kita ditempat lain. Biasanya remote repository yang sering digunakan adalah layanan seperti Github, Gitlab, dan yang lainnya.<\/p>\r\n<p style=\"text-align: justify;\"><strong><span style=\"font-size: 24pt;\">Clone Remote Repository<\/span><em> <\/em><\/strong><\/p>\r\n<p style=\"text-align: justify;\">Dalam Melakukan Clone Remote Repository, terdapat 2 cara yang berbeda untuk bisa kita terapkan jika ingin melakuka clone remote repository, yiaitu ada yang menggunakan Link Https dan Link SSH :<\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 14pt;\"><strong>Cara clone <em>Remote Repository <\/em>menjadi Repository local ( Menggunakan Https ) :<\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Biasanya untuk melakukan sebuah clone repository hanya menggunakan perintah :<\/p>\r\n<pre>git clone https:\/\/gitlab.com\/your-username\/your-repo.git<\/pre>\r\n<p style=\"text-align: justify;\">Berikut ini contoh beberapa cara-cara untuk clone sebuah remote repository kedalam PC\/Laptop kita :<\/p>\r\n<p style=\"text-align: justify;\"><strong>Clone repository baru :<\/strong><\/p>\r\n<pre style=\"padding-left: 40px;\">git clone https:\/\/gitlab.com\/your-username\/your-repo.git<br \/>cd demo-git<br \/>touch README.md<br \/>git add README.md<br \/>git commit -m \"add README\"<br \/>git push origin main<\/pre>\r\n<p style=\"text-align: justify;\"><strong>Mendorong folder yang sudah ada untuk menjadikannya remote repository<\/strong><\/p>\r\n<pre style=\"padding-left: 40px;\">cd demo-git<br \/>git init&nbsp;<br \/>git remote add origin https:\/\/gitlab.com\/your-username\/your-repo.git<br \/>git add .<br \/>git commit -m \"Initial commit\"<br \/>git push origin main<\/pre>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 14pt;\"><strong>Cara clone <em>Remote Repository <\/em>menjadi Repository local ( Menggunakan SSH ) :<\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Untuk Clone Remote Repository menggunakan SSH, kalian dapat membaca cara penggunaannya melalui referensi berikut ini :<\/p>\r\n<ul style=\"text-align: justify;\">\r\n<li style=\"list-style-type: none;\">\r\n<ul>\r\n<li><a href=\"https:\/\/www.petanikode.com\/github-ssh\/\">https:\/\/www.petanikode.com\/github-ssh\/<\/a><\/li>\r\n<li><a href=\"https:\/\/rakitaplikasi.com\/blog\/cara-menggunakan-ssh-di-github\">https:\/\/rakitaplikasi.com\/blog\/cara-menggunakan-ssh-di-github<\/a><\/li>\r\n<li><a href=\"https:\/\/docs.github.com\/en\/github\/authenticating-to-github\/connecting-to-github-with-ssh\">https:\/\/docs.github.com\/en\/github\/authenticating-to-github\/connecting-to-github-with-ssh<\/a><\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><strong>DISARANKAN : <\/strong>kepada teman-teman yang baru mengenal GIT kalian cukup clone menggunakan Https saja untuk membiasakan menggunakan Git dan Remote Repository<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi CLI &amp; Git: <a href=\"https:\/\/youtu.be\/bl_UTEuYR9o\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Referensi Video&nbsp;<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Materi Git lainnya dapat dicoba melalui video kelas dari referensi berikut :&nbsp;<\/p>\r\n<p style=\"text-align: justify;\">Web Programming UNPAS &ndash; GIT &amp; GITHUB - <a href=\"https:\/\/www.youtube.com\/watch?v=lTMZxWMjXQU&amp;list=PLFIM0718LjIVknj6sgsSceMqlq242-jNf\" target=\"_blank\" rel=\"noopener\">Link Video<\/a>&nbsp;<\/p>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><em><span style=\"font-size: 18pt;\">Referensi<\/span>:<\/em><\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.hostinger.co.id\/tutorial\/apa-itu-cli\">https:\/\/www.hostinger.co.id\/tutorial\/apa-itu-cli<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.techfor.id\/mengenal-command-line-interface-cli-dan-kelebihannya\/\">https:\/\/www.techfor.id\/mengenal-command-line-interface-cli-dan-kelebihannya\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.w3schools.com\/whatis\/whatis_cli.asp\">https:\/\/www.w3schools.com\/whatis\/whatis_cli.asp<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.makeuseof.com\/tag\/a-beginners-guide-to-the-windows-command-line\/\">https:\/\/www.makeuseof.com\/tag\/a-beginners-guide-to-the-windows-command-line\/<\/a><\/li>\r\n<li><a href=\"https:\/\/docs.github.com\/en\/github\/creating-cloning-and-archiving-repositories\/cloning-a-repository-from-github\/cloning-a-repository\">https:\/\/docs.github.com\/en\/github\/creating-cloning-and-archiving-repositories\/cloning-a-repository-from-github\/cloning-a-repository<\/a><\/li>\r\n<li><a href=\"https:\/\/training.github.com\/downloads\/id\/github-git-cheat-sheet\/\">https:\/\/training.github.com\/downloads\/id\/github-git-cheat-sheet\/<\/a><\/li>\r\n<li><a href=\"https:\/\/www.niagahoster.co.id\/blog\/git-tutorial-dasar\/\">https:\/\/www.niagahoster.co.id\/blog\/git-tutorial-dasar\/<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-10-25 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-09-20 06:47:27","updated_at":"2021-10-25 09:11:33","waktu_publish_formatted":" Senin, 25 Oktober 2021. 09:00:00 WIB."},{"id":1394,"uuid":"98c72c15-2d93-43e5-ba2b-4c77939ecb20","author_user_id":4336,"materi_section_id":379,"judul":"Hari 2 - Introduction Golang, Variable, Constant & Data Type","permalink":"hari-2-introduction-golang-variable-constant-data-type","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Introduction Golang<\/strong><\/span><\/p>\r\n<p><strong>Golang <\/strong>(atau biasa disebut dengan Go) adalah bahasa pemrograman baru yang dikembangkan di Google oleh Robert Griesemer, Rob Pike, dan Ken Thompson pada tahun 2007 dan mulai diperkenalkan ke publik tahun 2009.<\/p>\r\n<p>Penciptaan bahasa Go didasari bahasa&nbsp;<strong>C<\/strong>&nbsp;dan&nbsp;<strong>C++<\/strong>, oleh karena itu gaya sintaksnya mirip.<\/p>\r\n<h4 id=\"kelebihan-go\">Kelebihan Go<\/h4>\r\n<p>Go memiliki kelebihan dibanding bahasa lainnya, beberapa di antaranya:<\/p>\r\n<ul>\r\n<li>Mendukung konkurensi di level bahasa dengan pengaplikasian cukup mudah<\/li>\r\n<li>Mendukung pemrosesan data dengan banyak prosesor dalam waktu yang bersamaan&nbsp;<em>(pararel processing)<\/em><\/li>\r\n<li>Memiliki&nbsp;<em>garbage collector<\/em><\/li>\r\n<li>Proses kompilasi sangat cepat<\/li>\r\n<li>Bukan bahasa pemrograman yang hirarkial, menjadikan developer tidak perlu&nbsp;<em>ribet<\/em>&nbsp;memikirkan segmen OOP-nya<\/li>\r\n<li>Package\/modul yang disediakan terbilang lengkap. Karena bahasa ini open source, banyak sekali developer yang juga mengembangkan modul-modul lain yang bisa dimanfaatkan<\/li>\r\n<\/ul>\r\n<hr \/>\r\n<h2 id=\"installasi-git\" style=\"text-align: justify;\"><strong>Instalasi Go<\/strong><\/h2>\r\n<p><strong>a. Instalasi di Windows dan Mac<\/strong><\/p>\r\n<p style=\"text-align: justify;\">Berikut ini cara untuk instalasi go ke dalam windows dan mac<\/p>\r\n<ol style=\"text-align: justify;\">\r\n<li style=\"text-align: left;\">Download terlebih dahulu file instalasi nya dari halaman <a href=\"https:\/\/golang.org\/dl\/\" target=\"_blank\" rel=\"noopener\">https:\/\/golang.org\/dl\/ <\/a><br \/>Berikut ini ilustrasi gambar halaman download go:<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-1.png\" width=\"833\" height=\"402\" \/><br \/><br \/><\/li>\r\n<li>Pilihlah sesuai requirement OS pada PC\/Laptop anda misalnya Windows \/ macOS<\/li>\r\n<li>Jika sudah terdownload, Jalankan file instalasi lalu ikuti instruksi instalasi,<br \/>Berikut ini contohnya&nbsp; : ( <strong>Klik next saja sampai selesai )<br \/><\/strong>&nbsp;<img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-2.jpg\" \/><\/li>\r\n<li>setelah instalasi selesai, kita dapat mengecek apakah Go sudah terinstall dengan cara membuka cmd atau command prompt lalu ketikkan perintah <code>go version<\/code>.<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-3.jpg\" \/><\/li>\r\n<\/ol>\r\n<h3 id=\"installasi-di-ubuntu\" style=\"text-align: justify;\"><strong>b. Instalasi di Linux<\/strong><\/h3>\r\n<p style=\"text-align: justify;\">Berikut ini cara untuk instalasi Go ke dalam linux:<\/p>\r\n<ol>\r\n<li>\r\n<p>Unduh arsip&nbsp;<em>installer<\/em>&nbsp;dari&nbsp;<a href=\"https:\/\/golang.org\/dl\/\" target=\"_blank\" rel=\"noopener\">https:\/\/golang.org\/dl\/<\/a>, pilih installer untuk Linux yang sesuai dengan jenis bit komputer anda. Proses download bisa dilakukan lewat CLI, menggunakan&nbsp;<code>wget<\/code>&nbsp;atau&nbsp;<code>curl<\/code>.<\/p>\r\n<pre><code class=\"lang-bash\">$ wget https:\/\/golang.org\/dl\/go1.17.linux-amd64.tar.gz\r\n<\/code><\/pre>\r\n<\/li>\r\n<li>\r\n<p>Buka terminal,&nbsp;<em>extract<\/em>&nbsp;arsip tersebut ke&nbsp;<code>\/usr\/local<\/code>.<\/p>\r\n<pre><code class=\"lang-bash\">$ rm -rf \/usr\/local\/go &amp;&amp; tar -C \/usr\/local -xzf go1.17.linux-amd64.tar.gz\r\n<\/code><\/pre>\r\n<\/li>\r\n<li>\r\n<p>Tambahkan path binary Go ke&nbsp;<code>PATH<\/code>&nbsp;<em>environment variable<\/em>.<\/p>\r\n<pre><code class=\"lang-bash\">$ <span class=\"hljs-built_in\">echo<\/span> <span class=\"hljs-string\">\"export PATH=<span class=\"hljs-variable\">$PATH<\/span>:\/usr\/local\/go\/bin\"<\/span> &gt;&gt; ~\/.bashrc\r\n$ <span class=\"hljs-built_in\">source<\/span> ~\/.bashrc\r\n<\/code><\/pre>\r\n<\/li>\r\n<li>\r\n<p>Selanjutnya, eksekusi perintah berikut untuk mengetes apakah Go sudah terinstal dengan benar.<\/p>\r\n<pre><code class=\"lang-bash\">go version\r\n<\/code><\/pre>\r\n<\/li>\r\n<li>\r\n<p>Jika output adalah sama dengan versi Go yang ter-<em>install<\/em>, menandakan proses instalasi berhasil.<\/p>\r\n<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; margin-top: 50px; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Membuat Program Go Pertama<\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Hal yang di lakukan pertama kali dalam membuat program go ialah membuat file berekstensi go, misal HelloWorld.go, anda bisa langsung membuka teks editor yang anda punya dan buat file berekstensi go tersebut:<\/p>\r\n<p style=\"text-align: left;\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-4.png\" \/><\/p>\r\n<p>lalu buatlah kode seperti di bawah ini di dalam file HelloWorld.go tersebut:<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\">package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"Hello World\")\r\n}\r\n<\/pre>\r\n<p style=\"text-align: justify;\">setelah itu buka terminal dimana lokasi file tersebut berada lalu jalankan perintah <code>go run HelloWorld.go<\/code> untuk menjalankan program go<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-5.png\" \/><\/p>\r\n<hr \/>\r\n<h1 id=\"a3-go-modules\">Go Modules<\/h1>\r\n<p>walaupun sebelumnya kita sudah bisa menjalankan program go pertama kita, itu contoh kurang ideal dalam sebuah project go, dalam project go setidaknya terdapat file go.mod yang diinisialisasi menggunakan go modules sintaks.<\/p>\r\n<p>Go modules merupakan manajemen dependensi resmi untuk Go. Modules ini diperkenalkan pertama kali di&nbsp;<code>go1.11<\/code>, sebelum itu pengembangan project Go dilakukan dalam <code>GOPATH<\/code>. Modules digunakan untuk menginisialisasi sebuah project, sekaligus melakukan manajemen terhadap <em>3rd party<\/em>&nbsp;atau&nbsp;<em>library<\/em> lain yang dipergunakan. Modules penggunaannya adalah lewat CLI. Dan jika temen-temen sudah sukses meng-<em>install<\/em> Go, maka otomatis bisa mempergunakan Go Modules. Modules atau Module disini merupakan istilah untuk project ya. Jadi jangan bingung.<\/p>\r\n<h2 id=\"a32-inisialisasi-projek-menggunakan-go-modules\">Inisialisasi Project Menggunakan Go Modules<\/h2>\r\n<p>Command&nbsp;<code>go mod init<\/code> digunakan untuk menginisalisasi project baru.<\/p>\r\n<p>Skema penulisan command&nbsp;<code>go mod<\/code>:<\/p>\r\n<pre><code>go mod init &lt;nama-project&gt;<\/code><\/pre>\r\n<p>Mari kita praktekan disini saya akan menggunakan folder baru dengan nama firstProject di CLI dan menjalankan perintah <code>go mod init<\/code>.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-6.jpg\" \/><\/p>\r\n<p>setelah menjalankan perintah diatas maka akan dibuatkan sebuah file baru dengan nama go.mod<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-7.jpg\" \/><\/p>\r\n<p>setelah itu kita coba buat file go lagi dan sintaksnya sama seperti sebelumnya yang menampilkan Hello World<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-8.jpg\" \/><\/p>\r\n<p>untuk menjalankan programnya masih menggunakan sintaks <code>go run &lt;nama-file&gt;<\/code> seperti tadi, tetapi ada cara lainnya jika sudah menginisialisasi project dengan<code> go modules<\/code>, yaitu dengan menjalankan perintah <code>go build<\/code>.<\/p>\r\n<p><code>go build<\/code> adalah <em>Command<\/em> yang digunakan untuk mengkompilasi file program.Sebenarnya ketika eksekusi program menggunakan&nbsp;<code>go run<\/code>, terjadi proses kompilasi juga. File hasil kompilasi akan disimpan pada folder temporary untuk selanjutnya langsung dieksekusi.<\/p>\r\n<p>Berbeda dengan&nbsp;<code>go build<\/code>,&nbsp;<em>command<\/em>&nbsp;ini menghasilkan file&nbsp;<em>executable<\/em>&nbsp;atau&nbsp;<em>binary<\/em> pada folder yang sedang aktif. Contohnya bisa dilihat di bawah ini:<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-9.jpg\" \/><\/p>\r\n<p>pada contoh tersebut setelah menjalankan perintah go build, otomatis di buatkan file firstProject.exe (namanya mengikuti nama module di go.mod), dan ketika firstProject itu di akses langsung menjalankan programnya<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\">&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Variable dan Constant<\/strong><\/span><\/p>\r\n<h4 id=\"kelebihan-go\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Variable<\/span><\/strong><\/span><\/h4>\r\n<p><strong>Variable\/variabel <\/strong>adalah lokasi penyimpanan dan terkait nama simbolis yang berisi beberapa kuantitas yang diketahui atau tidak diketahui atau informasi, nilai. singkatnya variabel kita gunakan untuk menyimpan data. Di dalam go ada beberapa cara untuk mendeklarasikan sebuah variabel.<\/p>\r\n<p><strong>1. Deklarasi dengan var<\/strong><\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\">package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\tvar text = \"Hello World\"<br \/>        fmt.Println(text)<br \/>        <br \/>        text = \"Hello World diubah\"<br \/>        fmt.Println(text)<br \/>}<\/pre>\r\n<p><strong>2. Deklarasi dengan var dan juga tipe data<\/strong><\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\">package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\t\/\/ contoh 1\r\n\tvar text1 string\r\n\ttext1 = \"ini teks 1\"\r\n\tfmt.Println(text1)\r\n\r\n\t\/\/ contoh 1\r\n\tvar text2 string = \"ini teks 2\"<br \/>        text2 = \"ini teks 1 diubah\"  <br \/>        fmt.Println(text2)\r\n}<\/pre>\r\n<p><strong>3. Deklarasi dengan menggunakan perantara \":=\"<\/strong><\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\">package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\t\/\/ contoh 1\r\n\ttext1 := \"ini teks 1\"<br \/>        text1 = \"ini teks 1 diubah\"\r\n\tfmt.Println(text1)\r\n\r\n\t\/\/ contoh 1\r\n\ttext2 := \"ini teks 2\"\r\n\tfmt.Println(text2)\r\n}<\/pre>\r\n<h4 id=\"kelebihan-go\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Constant<\/span><\/strong><\/span><\/h4>\r\n<p><strong>Constant\/konstanta <\/strong>adalah jenis variabel yang nilainya tidak bisa diubah. Inisialisasi nilai hanya dilakukan sekali di awal, setelah itu variabel tidak bisa diubah nilainya.<\/p>\r\n<p>berikut ini contoh penggunaan constant:<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\">package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\tconst judul = \"Ini Judul\"<br \/>        fmt.Println(judul)<br \/>        \/\/ jika kode di bawah ini di uncomment maka akan error<br \/>        \/\/ judul = \"judul di ubah\"<br \/>}<\/pre>\r\n<hr \/>\r\n<p style=\"text-align: justify;\">&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Tipe Data<\/strong><\/span><\/p>\r\n<h1 id=\"a10-tipe-data\">Tipe Data<\/h1>\r\n<p>Go mengenal beberapa jenis tipe data, diantaranya adalah tipe data numerik (desimal &amp; non-desimal), string, dan boolean.<\/p>\r\n<h2 id=\"a101-tipe-data-numerik-non-desimal\">Tipe Data Numerik Non-Desimal<\/h2>\r\n<p>Tipe data numerik non-desimal atau&nbsp;<strong>non floating point<\/strong>&nbsp;di Go ada beberapa jenis. Secara umum ada 2 tipe data kategori ini yang perlu diketahui.<\/p>\r\n<ul>\r\n<li><code>uint<\/code>, tipe data untuk bilangan cacah (bilangan positif).<\/li>\r\n<li><code>int<\/code>, tipe data untuk bilangan bulat (bilangan negatif dan positif).<\/li>\r\n<\/ul>\r\n<p>Kedua tipe data di atas kemudian dibagi lagi menjadi beberapa jenis, dengan pembagian berdasarkan lebar cakupan nilainya, detailnya bisa dilihat di tabel berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 29.6344%; height: 308px; border-color: #aaaaaa; border-style: solid;\" border=\"1px\">\r\n<thead>\r\n<tr style=\"height: 44px;\">\r\n<th style=\"width: 15.209%; height: 44px;\">Tipe data<\/th>\r\n<th style=\"width: 78.639%; height: 44px;\">Cakupan bilangan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>uint8<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">0 &harr; 255<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>uint16<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">0 &harr; 65535<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>uint32<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">0 &harr; 4294967295<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>uint64<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">0 &harr; 18446744073709551615<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>uint<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">sama dengan&nbsp;<code>uint32<\/code>&nbsp;atau&nbsp;<code>uint64<\/code>&nbsp;(tergantung nilai)<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>byte<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">sama dengan&nbsp;<code>uint8<\/code><\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>int8<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">-128 &harr; 127<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>int16<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">-32768 &harr; 32767<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>int32<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">-2147483648 &harr; 2147483647<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>int64<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">-9223372036854775808 &harr; 9223372036854775807<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>int<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">sama dengan&nbsp;<code>int32<\/code>&nbsp;atau&nbsp;<code>int64<\/code>&nbsp;(tergantung nilai)<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 15.209%; height: 22px;\"><code>rune<\/code><\/td>\r\n<td style=\"width: 78.639%; height: 22px;\">sama dengan&nbsp;<code>int32<\/code><\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Dianjurkan untuk tidak sembarangan dalam menentukan tipe data variabel, sebisa mungkin tipe yang dipilih harus disesuaikan dengan nilainya, karena efeknya adalah ke alokasi memori variabel. Pemilihan tipe data yang tepat akan membuat pemakaian memori lebih optimal, tidak berlebihan.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> positiveNumber <span class=\"hljs-keyword\">uint8<\/span> = <span class=\"hljs-number\">89<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> negativeNumber = <span class=\"hljs-number\">-1243423644<\/span>\r\n\r\nfmt.Printf(<span class=\"hljs-string\">\"bilangan positif: %d\\n\"<\/span>, positiveNumber)\r\nfmt.Printf(<span class=\"hljs-string\">\"bilangan negatif: %d\\n\"<\/span>, negativeNumber)<\/code><\/pre>\r\n<p>Variabel&nbsp;<code>positiveNumber<\/code>&nbsp;bertipe&nbsp;<code>uint8<\/code>&nbsp;dengan nilai awal&nbsp;<code>89<\/code>. Sedangkan variabel&nbsp;<code>negativeNumber<\/code>&nbsp;dideklarasikan dengan nilai awal&nbsp;<code>-1243423644<\/code>. Compiler secara cerdas akan menentukan tipe data variabel tersebut sebagai&nbsp;<code>int32<\/code>&nbsp;(karena angka tersebut masuk ke cakupan tipe data&nbsp;<code>int32<\/code>).<\/p>\r\n<p>Template&nbsp;<code>%d<\/code>&nbsp;pada&nbsp;<code>fmt.Printf()<\/code>&nbsp;digunakan untuk memformat data numerik non-desimal.<\/p>\r\n<h2 id=\"a102-tipe-data-numerik-desimal\">Tipe Data Numerik Desimal<\/h2>\r\n<p>Tipe data numerik desimal yang perlu diketahui ada 2,&nbsp;<code>float32<\/code>&nbsp;dan&nbsp;<code>float64<\/code>. Perbedaan kedua tipe data tersebut berada di lebar cakupan nilai desimal yang bisa ditampung.&nbsp;<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> decimalNumber = <span class=\"hljs-number\">2.62<\/span>\r\n\r\nfmt.Printf(<span class=\"hljs-string\">\"bilangan desimal: %f\\n\"<\/span>, decimalNumber)\r\nfmt.Printf(<span class=\"hljs-string\">\"bilangan desimal: %.3f\\n\"<\/span>, decimalNumber)\r\n<\/code><\/pre>\r\n<p>Pada kode di atas, variabel&nbsp;<code>decimalNumber<\/code>&nbsp;akan memiliki tipe data&nbsp;<code>float32<\/code>, karena nilainya berada di cakupan tipe data tersebut.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-10.jpg\" \/><\/p>\r\n<p>Template&nbsp;<code>%f<\/code>&nbsp;digunakan untuk memformat data numerik desimal menjadi string. Digit desimal yang akan dihasilkan adalah&nbsp;<strong>6 digit<\/strong>. Pada contoh di atas, hasil format variabel&nbsp;<code>decimalNumber<\/code>&nbsp;adalah&nbsp;<code>2.620000<\/code>. Jumlah digit yang muncul bisa dikontrol menggunakan&nbsp;<code>%.nf<\/code>, tinggal ganti&nbsp;<code>n<\/code>&nbsp;dengan angka yang diinginkan. Contoh:&nbsp;<code>%.3f<\/code>&nbsp;maka akan menghasilkan 3 digit desimal,&nbsp;<code>%.10f<\/code>&nbsp;maka akan menghasilkan 10 digit desimal.<\/p>\r\n<h2 id=\"a103-tipe-data-bool-boolean\">Tipe Data <code>bool<\/code>&nbsp;(Boolean)<\/h2>\r\n<p>Tipe data&nbsp;<code>bool<\/code>&nbsp;berisikan hanya 2 variansi nilai,&nbsp;<code>true<\/code>&nbsp;dan&nbsp;<code>false<\/code>. Tipe data ini biasa dimanfaatkan dalam seleksi kondisi dan perulangan.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\">var exist bool = true<br \/>fmt.Printf(\"exist? %t \\n\", exist)<\/pre>\r\n<p>Gunakan&nbsp;<code>%t<\/code>&nbsp;untuk memformat data&nbsp;<code>bool<\/code>&nbsp;menggunakan fungsi&nbsp;<code>fmt.Printf()<\/code>.<\/p>\r\n<h2 id=\"a104-tipe-data-string\">Tipe Data <code>string<\/code><\/h2>\r\n<p>Ciri khas dari tipe data string adalah nilainya di apit oleh tanda&nbsp;<em>quote<\/em>&nbsp;atau petik dua (<code>\"<\/code>). Contoh penerapannya:<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> message <span class=\"hljs-keyword\">string<\/span> = <span class=\"hljs-string\">\"Halo\"<\/span>\r\nfmt.Printf(<span class=\"hljs-string\">\"message: %s \\n\"<\/span>, message)\r\n<\/code><\/pre>\r\n<p>Selain menggunakan tanda quote, deklarasi string juga bisa dengan tanda&nbsp;<em>grave accent\/backticks<\/em>&nbsp;(<code>`<\/code>), tanda ini terletak di sebelah kiri tombol 1. Keistimewaan string yang dideklarasikan menggunakan backtics adalah membuat semua karakter didalamnya&nbsp;<strong>tidak di escape<\/strong>, termasuk&nbsp;<code>\\n<\/code>, tanda petik dua dan tanda petik satu, baris baru, dan lainnya. Semua akan terdeteksi sebagai string.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> message = <span class=\"hljs-string\">`Nama saya \"John Wick\".\r\nSalam kenal.\r\nMari belajar \"Golang\".`<\/span>\r\n\r\nfmt.Println(message)\r\n<\/code><\/pre>\r\n<p>Ketika dijalankan, output akan muncul sama persisi sesuai nilai variabel&nbsp;<code>message<\/code>&nbsp;di atas. Tanda petik dua akan muncul, baris baru juga muncul, sama persis.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/materi-go-hari2-11.jpg\" \/><\/p>\r\n<h2 id=\"a105-nilai-nil--zero-value\">Nilai&nbsp;<code>nil<\/code>&nbsp;&amp; Zero Value<\/h2>\r\n<p><code>nil<\/code>&nbsp;bukan merupakan tipe data, melainkan sebuah nilai. Variabel yang isi nilainya&nbsp;<code>nil<\/code>&nbsp;berarti memiliki nilai kosong.<\/p>\r\n<p>Semua tipe data yang sudah dibahas di atas memiliki zero value (nilai default tipe data). Artinya meskipun variabel dideklarasikan dengan tanpa nilai awal, tetap akan ada nilai default-nya.<\/p>\r\n<ul>\r\n<li>Zero value dari&nbsp;<code>string<\/code>&nbsp;adalah&nbsp;<code>\"\"<\/code>&nbsp;(string kosong).<\/li>\r\n<li>Zero value dari&nbsp;<code>bool<\/code>&nbsp;adalah&nbsp;<code>false<\/code>.<\/li>\r\n<li>Zero value dari tipe numerik non-desimal adalah&nbsp;<code>0<\/code>.<\/li>\r\n<li>Zero value dari tipe numerik desimal adalah&nbsp;<code>0.0<\/code>.<\/li>\r\n<\/ul>\r\n<p>Zero value berbeda dengan&nbsp;<code>nil<\/code>.&nbsp;<code>Nil<\/code>&nbsp;adalah nilai kosong, benar-benar kosong.&nbsp;<code>nil<\/code>&nbsp;tidak bisa digunakan pada tipe data yang sudah dibahas di atas. Ada beberapa tipe data yang bisa di-set nilainya dengan&nbsp;<code>nil<\/code>, diantaranya:<\/p>\r\n<ul>\r\n<li>pointer<\/li>\r\n<li>tipe data fungsi<\/li>\r\n<li>slice<\/li>\r\n<li><code>map<\/code><\/li>\r\n<li><code>channel<\/code><\/li>\r\n<li>interface kosong atau&nbsp;<code>interface{}<\/code><\/li>\r\n<\/ul>\r\n<p>Nantinya kita akan sering bertemu dengan&nbsp;<code>nil<\/code> setelah masuk pada materi selanjutnya.<\/p>\r\n<h2 id=\"a432-konversi-data-menggunakan-teknik-casting\">Konversi Data Menggunakan Teknik Casting<\/h2>\r\n<p>Keyword tipe data bisa digunakan untuk casting, atau konversi antar tipe data. Cara penggunaannya adalah dengan menuliskan tipe data tujuan casting sebagai fungsi, lalu menyisipkan data yang akan dikonversi sebagai parameter fungsi tersebut.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> a <span class=\"hljs-keyword\">float64<\/span> = <span class=\"hljs-keyword\">float64<\/span>(<span class=\"hljs-number\">24<\/span>)\r\nfmt.Println(a) <span class=\"hljs-comment\">\/\/ 24<\/span>\r\n\r\n<span class=\"hljs-keyword\">var<\/span> b <span class=\"hljs-keyword\">int32<\/span> = <span class=\"hljs-keyword\">int32<\/span>(<span class=\"hljs-number\">24.00<\/span>)\r\nfmt.Println(b) <span class=\"hljs-comment\">\/\/ 24<\/span><\/code><br \/><br \/><code class=\"lang-go\"><span class=\"hljs-keyword\">var str = \"Halo\"<br \/>var<\/span> c string = <span class=\"hljs-keyword\">string<\/span>(<span class=\"hljs-number\">str[0]<\/span>)\r\nfmt.Println(c) <span class=\"hljs-comment\">\/\/ H<\/span><\/code><\/pre>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Packages strings dan strconv<\/strong><\/span><\/p>\r\n<h1 id=\"a10-tipe-data\">Package strings<\/h1>\r\n<p>Go menyediakan package&nbsp;<code>strings<\/code>, isinya banyak fungsi untuk keperluan pengolahan data string.<\/p>\r\n<h2 id=\"a445-fungsi-stringsindex\">1. <code>strings.Index()<\/code><\/h2>\r\n<p>Digunakan untuk mencari posisi indeks sebuah string (parameter kedua) dalam string (parameter pertama).<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> index1 = strings.Index(<span class=\"hljs-string\">\"ethan hunt\"<\/span>, <span class=\"hljs-string\">\"ha\"<\/span>)\r\nfmt.Println(index1) <span class=\"hljs-comment\">\/\/ 2<\/span>\r\n<\/code><\/pre>\r\n<p>String&nbsp;<code>\"ha\"<\/code>&nbsp;berada pada posisi ke&nbsp;<code>2<\/code>&nbsp;dalam string&nbsp;<code>\"ethan hunt\"<\/code>&nbsp;(indeks dimulai dari 0). Jika diketemukan dua substring, maka yang diambil adalah yang pertama, contoh:<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> index2 = strings.Index(<span class=\"hljs-string\">\"ethan hunt\"<\/span>, <span class=\"hljs-string\">\"n\"<\/span>)\r\nfmt.Println(index2) <span class=\"hljs-comment\">\/\/ 4<\/span>\r\n<\/code><\/pre>\r\n<p>String&nbsp;<code>\"n\"<\/code>&nbsp;berada pada indeks&nbsp;<code>4<\/code>&nbsp;dan&nbsp;<code>8<\/code>. Yang dikembalikan adalah yang paling kiri (paling kecil), yaitu&nbsp;<code>4<\/code>.<\/p>\r\n<h2 id=\"a446-fungsi-stringsreplace\">2. <code>strings.Replace()<\/code><\/h2>\r\n<p>Fungsi ini digunakan untuk replace atau mengganti bagian dari string dengan string tertentu. Jumlah substring yang di-replace bisa ditentukan, apakah hanya 1 string pertama, 2 string, atau kesemuanya.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> text = <span class=\"hljs-string\">\"banana\"<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> find = <span class=\"hljs-string\">\"a\"<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> replaceWith = <span class=\"hljs-string\">\"o\"<\/span>\r\n\r\n<span class=\"hljs-keyword\">var<\/span> newText1 = strings.Replace(text, find, replaceWith, <span class=\"hljs-number\">1<\/span>)\r\nfmt.Println(newText1) <span class=\"hljs-comment\">\/\/ \"bonana\"<\/span>\r\n\r\n<span class=\"hljs-keyword\">var<\/span> newText2 = strings.Replace(text, find, replaceWith, <span class=\"hljs-number\">2<\/span>)\r\nfmt.Println(newText2) <span class=\"hljs-comment\">\/\/ \"bonona\"<\/span>\r\n\r\n<span class=\"hljs-keyword\">var<\/span> newText3 = strings.Replace(text, find, replaceWith, <span class=\"hljs-number\">-1<\/span>)\r\nfmt.Println(newText3) <span class=\"hljs-comment\">\/\/ \"bonono\"<\/span>\r\n<\/code><\/pre>\r\n<p>Penjelasan:<\/p>\r\n<ol>\r\n<li>Pada contoh di atas, substring&nbsp;<code>\"a\"<\/code>&nbsp;pada string&nbsp;<code>\"banana\"<\/code>&nbsp;akan di-replace dengan string&nbsp;<code>\"o\"<\/code>.<\/li>\r\n<li>Pada&nbsp;<code>newText1<\/code>, hanya 1 huruf&nbsp;<code>o<\/code>&nbsp;saja yang tereplace karena maksimal substring yang ingin di-replace ditentukan 1.<\/li>\r\n<li>Angka&nbsp;<code>-1<\/code>&nbsp;akan menjadikan proses replace berlaku pada semua substring. Contoh bisa dilihat pada&nbsp;<code>newText3<\/code>.<\/li>\r\n<\/ol>\r\n<h2 id=\"a447-fungsi-stringsrepeat\">3.<code>strings.Repeat()<\/code><\/h2>\r\n<p>Digunakan untuk mengulang string (parameter pertama) sebanyak data yang ditentukan (parameter kedua).<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> str = strings.Repeat(<span class=\"hljs-string\">\"na\"<\/span>, <span class=\"hljs-number\">4<\/span>)\r\nfmt.Println(str) <span class=\"hljs-comment\">\/\/ \"nananana\"<\/span>\r\n<\/code><\/pre>\r\n<p>Pada contoh di atas, string&nbsp;<code>\"na\"<\/code>&nbsp;diulang sebanyak 4 kali. Hasilnya adalah:&nbsp;<code>\"nananana\"<\/code><\/p>\r\n<h2 id=\"a4410-fungsi-stringstolower\">4. <code>strings.ToLower()<\/code><\/h2>\r\n<p>Mengubah huruf-huruf string menjadi huruf kecil.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> str = strings.ToLower(<span class=\"hljs-string\">\"aLAy\"<\/span>)\r\nfmt.Println(str) <span class=\"hljs-comment\">\/\/ \"alay\"<\/span>\r\n<\/code><\/pre>\r\n<h2 id=\"a4411-fungsi-stringstoupper\">5. <code>strings.ToUpper()<\/code><\/h2>\r\n<p>Mengubah huruf-huruf string menjadi huruf besar.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> str = strings.ToUpper(<span class=\"hljs-string\">\"eat!\"<\/span>)\r\nfmt.Println(str) <span class=\"hljs-comment\">\/\/ \"EAT!\"<\/span><\/code><code><\/code><\/pre>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari packages strings silahkan akses <a href=\"https:\/\/pkg.go.dev\/strings\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/strings<\/a><\/p>\r\n<h1 id=\"a10-tipe-data\">Package strconv<\/h1>\r\n<p>Package&nbsp;<code>strconv<\/code>&nbsp;berisi banyak fungsi yang sangat membantu kita untuk melakukan konversi. Berikut merupakan beberapa fungsi yang dalam package tersebut.<\/p>\r\n<h4 id=\"fungsi-strconvatoi\">&bull; Fungsi&nbsp;<code>strconv.Atoi()<\/code><\/h4>\r\n<p>Fungsi ini digunakan untuk konversi data dari tipe&nbsp;<code>string<\/code>&nbsp;ke&nbsp;<code>int<\/code>.&nbsp;<code>strconv.Atoi()<\/code>&nbsp;menghasilkan 2 buah nilai kembalian, yaitu hasil konversi dan&nbsp;<code>error<\/code>&nbsp;(jika konversi sukses, maka&nbsp;<code>error<\/code>&nbsp;berisi&nbsp;<code>nil<\/code>).<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">package<\/span> main\r\n\r\n<span class=\"hljs-keyword\">import<\/span> <span class=\"hljs-string\">\"fmt\"<\/span>\r\n<span class=\"hljs-keyword\">import<\/span> <span class=\"hljs-string\">\"strconv\"<\/span>\r\n\r\n<span class=\"hljs-keyword\">func<\/span> main() {\r\n    <span class=\"hljs-keyword\">var<\/span> str = <span class=\"hljs-string\">\"124\"<\/span>\r\n    <span class=\"hljs-keyword\">var<\/span> num, err = strconv.Atoi(str)\r\n\r\n    <span class=\"hljs-keyword\">if<\/span> err == <span class=\"hljs-literal\">nil<\/span> {\r\n        fmt.Println(num) <span class=\"hljs-comment\">\/\/ 124<\/span>\r\n    }\r\n}\r\n<\/code><\/pre>\r\n<h4 id=\"fungsi-strconvitoa\">&bull; Fungsi&nbsp;<code>strconv.Itoa()<\/code><\/h4>\r\n<p>Merupakan kebalikan dari&nbsp;<code>strconv.Atoi<\/code>, berguna untuk konversi&nbsp;<code>int<\/code>&nbsp;ke&nbsp;<code>string<\/code>.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> num = <span class=\"hljs-number\">124<\/span>\r\nstr, _ := strconv.Itoa(num)\r\n\r\nfmt.Println(str) <span class=\"hljs-comment\">\/\/ \"124\"<\/span>\r\n<\/code><\/pre>\r\n<h4>&bull; Fungsi&nbsp;<code>strconv.ParseInt()<\/code><\/h4>\r\n<p>Digunakan untuk konversi <code>string<\/code>&nbsp;berbentuk numerik dengan basis tertentu ke tipe numerik non-desimal dengan lebar data bisa ditentukan.<\/p>\r\n<p>Pada contoh berikut, string&nbsp;<code>\"124\"<\/code>&nbsp;dikonversi ke tipe numerik dengan ketentuan basis yang digunakan&nbsp;<code>10<\/code>&nbsp;dan lebar datanya mengikuti tipe&nbsp;<code>int64<\/code>&nbsp;(lihat parameter ketiga).<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> str = <span class=\"hljs-string\">\"124\"<\/span>\r\nnum, _ := strconv.ParseInt(str, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">64<\/span>)\r\n\r\nfmt.Println(num) <span class=\"hljs-comment\">\/\/ 124<\/span>\r\n<\/code><\/pre>\r\n<p>Contoh lainnya, string&nbsp;<code>\"1010\"<\/code>&nbsp;dikonversi ke basis 2 (biner) dengan tipe data hasil adalah&nbsp;<code>int8<\/code>.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> str = <span class=\"hljs-string\">\"1010\"<\/span>\r\nnum, _ := strconv.ParseInt(str, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">8<\/span>)\r\n\r\nfmt.Println(num) <span class=\"hljs-comment\">\/\/ 10<\/span>\r\n<\/code><\/pre>\r\n<h4 id=\"fungsi-strconvformatint\">&bull; Fungsi&nbsp;<code>strconv.FormatInt()<\/code><\/h4>\r\n<p>Berguna untuk konversi data numerik&nbsp;<code>int64<\/code>&nbsp;ke&nbsp;<code>string<\/code>&nbsp;dengan basis numerik bisa ditentukan sendiri.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> num = <span class=\"hljs-keyword\">int64<\/span>(<span class=\"hljs-number\">24<\/span>)\r\nstr := strconv.FormatInt(num, <span class=\"hljs-number\">8<\/span>)\r\n\r\nfmt.Println(str) <span class=\"hljs-comment\">\/\/ 30<\/span>\r\n<\/code><\/pre>\r\n<h4 id=\"fungsi-strconvparsefloat\">&bull; Fungsi&nbsp;<code>strconv.ParseFloat()<\/code><\/h4>\r\n<p>Digunakan untuk konversi&nbsp;<code>string<\/code>&nbsp;ke numerik desimal dengan lebar data bisa ditentukan.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> str = <span class=\"hljs-string\">\"24.12\"<\/span>\r\nnum, _ := strconv.ParseFloat(str, <span class=\"hljs-number\">32<\/span>)\r\n\r\nfmt.Println(num) <span class=\"hljs-comment\">\/\/ 24.1200008392334<\/span>\r\n<\/code><\/pre>\r\n<p>Pada contoh di atas, string&nbsp;<code>\"24.12\"<\/code>&nbsp;dikonversi ke float dengan lebar tipe data&nbsp;<code>float32<\/code>. Hasil konversi&nbsp;<code>strconv.ParseFloat<\/code>&nbsp;adalah sesuai dengan standar&nbsp;<a href=\"https:\/\/en.wikipedia.org\/wiki\/IEEE_floating_point\" target=\"_blank\" rel=\"noopener\">IEEE Standard for Floating-Point Arithmetic<\/a>.<\/p>\r\n<h4 id=\"fungsi-strconvformatfloat\">&bull; Fungsi&nbsp;<code>strconv.FormatFloat()<\/code><\/h4>\r\n<p>Berguna untuk konversi data bertipe&nbsp;<code>float64<\/code>&nbsp;ke&nbsp;<code>string<\/code>&nbsp;dengan format eksponen, lebar digit desimal, dan lebar tipe data bisa ditentukan.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> num = <span class=\"hljs-keyword\">float64<\/span>(<span class=\"hljs-number\">24.12<\/span>)\r\nstr := strconv.FormatFloat(num, <span class=\"hljs-string\">'f'<\/span>, <span class=\"hljs-number\">6<\/span>, <span class=\"hljs-number\">64<\/span>)\r\n\r\nfmt.Println(str) <span class=\"hljs-comment\">\/\/ 24.120000<\/span>\r\n<\/code><\/pre>\r\n<p>Pada kode di atas, Data&nbsp;<code>24.12<\/code>&nbsp;yang bertipe&nbsp;<code>float64<\/code>&nbsp;dikonversi ke string dengan format eksponen&nbsp;<code>f<\/code>&nbsp;atau tanpa eksponen, lebar digit desimal 6 digit, dan lebar tipe data&nbsp;<code>float64<\/code>.<\/p>\r\n<p>Ada beberapa format eksponen yang bisa digunakan. Detailnya bisa dilihat di tabel berikut.<\/p>\r\n<table style=\"border-collapse: collapse; border-color: #aaa; border-style: solid;\" border=\"1px\">\r\n<thead>\r\n<tr>\r\n<th>Format&nbsp;Eksponen<\/th>\r\n<th>Penjelasan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td><code>b<\/code><\/td>\r\n<td>-ddddp&plusmn;ddd, a, eksponen biner (basis 2)<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>e<\/code><\/td>\r\n<td>-d.dddde&plusmn;dd, a, eksponen desimal (basis 10)<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>E<\/code><\/td>\r\n<td>-d.ddddE&plusmn;dd, a, eksponen desimal (basis 10)<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>f<\/code><\/td>\r\n<td>-ddd.dddd, tanpa eksponen<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>g<\/code><\/td>\r\n<td>Akan menggunakan format eksponen&nbsp;<code>e<\/code>&nbsp;untuk eksponen besar dan&nbsp;<code>f<\/code>&nbsp;untuk selainnya<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>G<\/code><\/td>\r\n<td>Akan menggunakan format eksponen&nbsp;<code>E<\/code>&nbsp;untuk eksponen besar dan&nbsp;<code>f<\/code>&nbsp;untuk selainnya<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h4 id=\"fungsi-strconvparsebool\">&bull; Fungsi&nbsp;<code>strconv.ParseBool()<\/code><\/h4>\r\n<p>Digunakan untuk konversi&nbsp;<code>string<\/code>&nbsp;ke&nbsp;<code>bool<\/code>.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> str = <span class=\"hljs-string\">\"true\"<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> bul, _ = strconv.ParseBool(str)\r\n\r\nfmt.Println(bul) <span class=\"hljs-comment\">\/\/ true<\/span>\r\n<\/code><\/pre>\r\n<h4 id=\"fungsi-strconvformatbool\">&bull; Fungsi&nbsp;<code>strconv.FormatBool()<\/code><\/h4>\r\n<p>Digunakan untuk konversi&nbsp;<code>bool<\/code>&nbsp;ke&nbsp;<code>string<\/code>.<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> bul = <span class=\"hljs-literal\">true<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> str = strconv.FormatBool(bul)\r\n\r\nfmt.Println(str) <span class=\"hljs-comment\">\/\/ true<\/span><\/code><\/pre>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari packages strings silahkan akses <a href=\"https:\/\/pkg.go.dev\/strconv\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/strconv<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Introduction Golang, Variable, Constant &amp; Data Type: <a href=\"https:\/\/youtu.be\/R4v78MfxIRM\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<br \/><\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=nyGu8Xn5b3g\" target=\"_blank\" rel=\"noopener\">Pengenalan Golang<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=sDHZbPfrNoM\" target=\"_blank\" rel=\"noopener\">Program Hello World<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=eZO2DMQepns\" target=\"_blank\" rel=\"noopener\">Tipe Data Number<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=RgufJoZ4idA\" target=\"_blank\" rel=\"noopener\">Tipe Data Boolean<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=xz-CBXIjfd8\" target=\"_blank\" rel=\"noopener\">Tipe Data String<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=vbTDLECgpZU\" target=\"_blank\" rel=\"noopener\">Variable<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=AKrz7Gh3hw4\" target=\"_blank\" rel=\"noopener\">Constant<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=03f3rCDxhH0\" target=\"_blank\" rel=\"noopener\">Konversi Tipe Data<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=a3ShRKaGcvw\" target=\"_blank\" rel=\"noopener\">Package strings<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=pwliUJLOmpI\" target=\"_blank\" rel=\"noopener\">Package strconv<\/a> (Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<br \/><\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/1-berkenalan-dengan-golang.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/1-berkenalan-dengan-golang.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/2-instalasi-golang.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/2-instalasi-golang.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-setup-go-project-dengan-go-modules.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-setup-go-project-dengan-go-modules.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-go-command.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-go-command.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-hello-world.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-hello-world.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-variabel.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-variabel.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-tipe-data.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-tipe-data.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-konstanta.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-konstanta.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-data-type-conversion.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-data-type-conversion.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-strings.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-strings.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/strings\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/strings<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/strconv\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/strconv<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-10-26 09:00:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-09-21 07:28:46","updated_at":"2021-10-25 10:57:13","waktu_publish_formatted":" Selasa, 26 Oktober 2021. 09:00:00 WIB."},{"id":1398,"uuid":"75219806-50d7-4000-8219-94380d182ec1","author_user_id":4336,"materi_section_id":379,"judul":"Hari 3 - Operator dan Conditional","permalink":"hari-3-operator-dan-conditional","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Operator dalam Go<\/strong><\/span><\/p>\r\n<p>Operator adalah karakter khusus yang merepresentasikan sebuah tindakan. Operator terbagi ke dalam beberapa jenis:<\/p>\r\n<h2 id=\"installasi-git\" style=\"text-align: justify;\"><strong>1. Operator Aritmatika<\/strong><\/h2>\r\n<p>Operator aritmatika adalah operator yang digunakan untuk operasi yang sifatnya perhitungan. Go mendukung beberapa operator aritmatika standar, list-nya bisa dilihat di tabel berikut.<\/p>\r\n<table style=\"margin: 0px auto; width: 59.4673%; border-collapse: collapse; border-color: #aaaaaa; border-style: solid;\" border=\"1px\">\r\n<thead>\r\n<tr>\r\n<th style=\"width: 19.8165%;\">Operator<\/th>\r\n<th style=\"width: 80%;\">Keterangan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>+<\/code><\/td>\r\n<td style=\"width: 80%;\">penjumlahan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>-<\/code><\/td>\r\n<td style=\"width: 80%;\">pengurangan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>*<\/code><\/td>\r\n<td style=\"text-align: left; width: 80%;\">perkalian<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>\/<\/code><\/td>\r\n<td style=\"width: 80%;\">pembagian<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>%<\/code><\/td>\r\n<td style=\"width: 80%;\">modulus \/ sisa hasil pembagian<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>contoh penggunaan:&nbsp;<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">\/\/ operator penjumlahan\r\njumlah := 8 + 3 \r\nfmt.Println(jumlah) \/\/ hasilnya 13\r\n\r\n\/\/ operator pengurangan \r\nkurang := 8 - 3 &nbsp;<br \/>fmt.Println(kurang) \/\/ hasilnya 5\r\n\r\n\/\/ operator perkalian \r\nkali := 8 * 3 &nbsp;<br \/>fmt.Println(kali) \/\/ hasilnya 24\r\n\r\n\/\/ operator pembagian \r\nbagi := 8 \/ 4 &nbsp;<br \/>fmt.Println(bagi) \/\/ hasilnya 2 \r\n\r\n\/\/ operator modulus\r\nmodulus := 8 % 3 &nbsp;<br \/>fmt.Println(modulus) \/\/ hasilnya 2\r\n<\/pre>\r\n<p>selain itu terdapat juga augmented assigment berikut listnya:<\/p>\r\n<table style=\"margin: 0px auto; width: 59.4673%; border-collapse: collapse; border-color: #aaaaaa; border-style: solid;\" border=\"1px\">\r\n<thead>\r\n<tr>\r\n<th style=\"width: 19.8165%;\">Operasi Matematika&nbsp;<\/th>\r\n<th style=\"width: 80%;\">Augmented Assignments&nbsp;<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>a = a + 10&nbsp;<\/code><\/td>\r\n<td style=\"width: 80%;\"><code>a += 10&nbsp;<\/code><\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>a = a - 10&nbsp;<\/code><\/td>\r\n<td style=\"width: 80%;\"><code>a -= 10&nbsp;<\/code><\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>a = a * 10&nbsp;<\/code><\/td>\r\n<td style=\"text-align: left; width: 80%;\"><code>a *= 10&nbsp;<\/code><\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>a = a \/ 10&nbsp;<\/code><\/td>\r\n<td style=\"width: 80%;\"><code>a \/= 10&nbsp;<\/code><\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>a = a % 10&nbsp;<\/code><\/td>\r\n<td style=\"width: 80%;\"><code>a %= 10&nbsp;<\/code><\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>contoh penggunaan:&nbsp;<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var angka = 8<br \/>fmt.Println(angka) \/\/ 8\r\nangka+=10<br \/>fmt.Println(angka) \/\/ 18<br \/><br \/>var angka2 = 5<br \/>fmt.Println(angka2) \/\/ 5<br \/>angka2+=5<br \/>fmt.Println(angka2) \/\/ 10<\/pre>\r\n<p>selain itu terdapat juga unary operator berikut listnya:<\/p>\r\n<table style=\"margin: 0px auto; width: 59.4673%; border-collapse: collapse; border-color: #aaaaaa; border-style: solid;\" border=\"1px\">\r\n<thead>\r\n<tr>\r\n<th style=\"width: 19.8165%;\">Operator<\/th>\r\n<th style=\"width: 80%;\">Keterangan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>++<\/code><\/td>\r\n<td style=\"width: 80%;\">a = a + 1&nbsp;<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>--<\/code><\/td>\r\n<td style=\"width: 80%;\">a = a - 1&nbsp;<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>-<\/code><\/td>\r\n<td style=\"text-align: left; width: 80%;\">negative<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>+<\/code><\/td>\r\n<td style=\"width: 80%;\">positive<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>!<\/code><\/td>\r\n<td style=\"width: 80%;\">negasi\/ kebalikan dari tipe data boolean<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>contoh penggunaan:&nbsp;<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">angka := 8<br \/>fmt.Println(angka) \/\/ 8\r\nangka++<br \/>fmt.Println(angka) \/\/ 9<br \/><br \/>angka2 := 5<br \/>fmt.Println(angka2) \/\/ 5<br \/>angka2--<br \/>fmt.Println(angka2) \/\/ 4<\/pre>\r\n<h2 id=\"installasi-git\" style=\"text-align: justify;\"><strong>2. Operator Perbandingan<\/strong><\/h2>\r\n<p>Operator perbandingan digunakan untuk menentukan kebenaran suatu kondisi. Hasilnya berupa nilai boolean,&nbsp;<code>true<\/code>&nbsp;atau&nbsp;<code>false<\/code>.<\/p>\r\n<p>Tabel di bawah ini berisikan operator perbandingan yang bisa digunakan di Go.<\/p>\r\n<table style=\"margin: 0px auto; width: 59.4673%; border-collapse: collapse; border-color: #aaaaaa; border-style: solid;\" border=\"1px\">\r\n<thead>\r\n<tr>\r\n<th style=\"width: 19.8165%;\">Operator<\/th>\r\n<th style=\"width: 80%;\">Keterangan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code><span style=\"font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;\">&gt;<\/span><\/code><\/td>\r\n<td style=\"width: 80%;\">lebih dari<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code><span style=\"font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;\">&lt;<\/span><\/code><\/td>\r\n<td style=\"width: 80%;\">kurang dari<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code><span style=\"font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;\">&gt;=<\/span><\/code><\/td>\r\n<td style=\"text-align: left; width: 80%;\">lebih dari sama dengan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code><span style=\"font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;\">&lt;=<\/span><\/code><\/td>\r\n<td style=\"width: 80%;\">kurang dari sama dengan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;\"><code>==<\/code><\/span><\/td>\r\n<td style=\"width: 80%;\">sama dengan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code><span style=\"font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;\">!=<\/span><\/code><\/td>\r\n<td style=\"width: 80%;\">tidak sama dengan<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>contoh penggunaan:&nbsp;<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var angka = 8<br \/><br \/>fmt.Println(angka &gt; 5) \/\/ true<br \/><br \/>fmt.Println(angka &lt; 5) \/\/ false<br \/><br \/>fmt.Println(angka &gt;= 5) \/\/ true<br \/><br \/>fmt.Println(angka &lt;= 5) \/\/ false<br \/><br \/>fmt.Println(angka == 5) \/\/ false<br \/><br \/>fmt.Println(angka != 5) \/\/ true<\/pre>\r\n<h2 id=\"installasi-git\" style=\"text-align: justify;\"><strong>3. Operator Logika<\/strong><\/h2>\r\n<p>Operator ini digunakan untuk mencari benar tidaknya kombinasi data bertipe&nbsp;<code>bool<\/code>&nbsp;(bisa berupa variabel bertipe&nbsp;<code>bool<\/code>, atau hasil dari operator perbandingan).<\/p>\r\n<p>Beberapa operator logika standar yang bisa digunakan:<\/p>\r\n<table style=\"margin: 0px auto; width: 59.4673%; border-collapse: collapse; border-color: #aaaaaa; border-style: solid; height: 154px;\" border=\"1px\">\r\n<thead>\r\n<tr style=\"height: 22px;\">\r\n<th style=\"width: 19.8165%; height: 22px;\">Operator<\/th>\r\n<th style=\"width: 80%; height: 22px;\">Keterangan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>&amp;&amp;<\/code><\/td>\r\n<td style=\"width: 80%;\">dan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>||<\/code><\/td>\r\n<td style=\"width: 80%;\">atau<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 19.8165%;\"><code>!<\/code><\/td>\r\n<td style=\"width: 80%;\">negasi \/ nilai kebalikan<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>contoh penggunaan:&nbsp;<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var a= true<br \/>var b= false<br \/>var c = true<br \/>var d = false<br \/><br \/>fmt.Println(a &amp;&amp; c) \/\/ true<br \/><br \/>fmt.Println(a &amp;&amp; b) \/\/ false<br \/><br \/>fmt.Println(a || b) \/\/ true<br \/><br \/>fmt.Println(b || d) \/\/ false<br \/><br \/>fmt.Println(!b &amp;&amp; !d) \/\/ true<br \/><br \/>fmt.Println(!a || b) \/\/ false<\/pre>\r\n<p>&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Conditional<\/strong><\/span><\/p>\r\n<div class=\"entry-content\">\r\n<p>Conditional merupakan cara yang digunakan dalam program komputer untuk mengambil keputusan dari kemungkinan benar(true) atau salah(false) terhadap beberapa kondisi.<\/p>\r\n<h2 id=\"a131-seleksi-kondisi-menggunakan-keyword-if-else-if--else\">1. Conditional Menggunakan Keyword <code>if<\/code>,&nbsp;<code>else if<\/code>, &amp;&nbsp;<code>else<\/code><\/h2>\r\n<p>Cara penerapan if-else di Go sama seperti pada bahasa pemrograman lain. Yang membedakan hanya tanda kurungnya&nbsp;<em>(parentheses)<\/em>, di Go tidak perlu ditulis<\/p>\r\n<ul>\r\n<li>Contoh menjalankan kode jika premis bernilai <code>true<\/code>\r\n<pre class=\"wp-block-preformatted\"><code>if true {<\/code><br \/><code>    fmt.Println(\"jalankan code\")<\/code><br \/><code>}<\/code><\/pre>\r\n<\/li>\r\n<li>Contoh kode tidak dijalankan jika premis bernilai <code>false<\/code>\r\n<pre class=\"wp-block-preformatted\"><code>if false {<\/code><br \/><code>    fmt.Println(\"code tidak dijalankan\")<\/code><br \/><code>}<\/code><\/pre>\r\n<\/li>\r\n<li>Contoh Premis dengan perbandingan suatu nilai\r\n<pre class=\"wp-block-preformatted\"><code>var mood = \"happy\"<\/code><br \/><code>if mood == \"happy\"{<\/code><br \/><code>    fmt.Println(\"hari ini aku bahagia!\")<\/code><br \/><code>}<\/code><\/pre>\r\n<\/li>\r\n<\/ul>\r\n<p>Di dalam conditional dikenal juga dengan istilah branching atau percabangan. Dengan percabangan kita bisa mengecek nilai kebenaran dari berbagai premis yang kita sediakan. cara menambahkan kondisi atau premis lain dari premis pertamanya adalah dengan sintaks&nbsp;<code>else<\/code>&nbsp;. Contohnya ketika kita diminta untuk membeli telur dan buah ke minimarket oleh ibu kita maka akan banyak sekali kondisi atau kemungkinan yang terjadi dalam perjalanan kita membeli barang-barang tersebut di supermarket.<\/p>\r\n<ul>\r\n<li>Contoh Branching sederhana\r\n<pre class=\"wp-block-preformatted\"><code>var minimarketStatus = \"open\"<\/code><br \/><code>if minimarketStatus == \"open\" {<\/code><br \/><code>    fmt.Println(\"saya akan membeli telur dan buah\")<\/code><br \/><code>} else {<\/code><br \/><code>    fmt.Println(\"minimarketnya tutup\")<br \/>}<\/code><\/pre>\r\n<p>Kondisi else di atas adalah kondisi selain&nbsp;<code>minimarketStatus == \"open\"<\/code>&nbsp;.<\/p>\r\n<\/li>\r\n<li>Contoh Branching dengan kondisi\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var minimarketStatus = \"close\"<br \/>var minuteRemainingToOpen = 5<br \/>if minimarketStatus == \"open\"{<br \/>    fmt.Println(\"saya akan membeli telur dan buah\")<br \/>} else if minuteRemainingToOpen &lt;= 5 {<br \/>    fmt.Println(\"minimarket buka sebentar lagi, saya tungguin\")<br \/>} else {<br \/>    fmt.Println(\"minimarket tutup, saya pulang lagi\")<br \/>}<\/pre>\r\ncontoh di atas kita memberikan kondisi tambahan yaitu jika minimarket akan buka kurang atau sama dengan 5 menit lagi maka saya akan menunggu.<\/li>\r\n<\/ul>\r\n<p>Selain Branching atau percabangan, conditional juga dapat memiliki sarang atau tumpukan yaitu terdapat conditional di dalam sebuah kondisional.<\/p>\r\n<ul>\r\n<li>Contoh conditional bersarang\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var minimarketStatus = \"open\"<br \/>var telur = \"soldout\"<br \/>var buah = \"soldout\" <br \/>if minimarketStatus == \"open\" {<br \/>    fmt.Println(\"saya akan membeli telur dan buah\")<br \/>    if telur == \"soldout\" || buah == \"soldout\" {<br \/>        fmt.Println(\"belanjaan saya tidak lengkap\")    <br \/>    } else if telur == \"soldout\" {<br \/>        fmt.Println(\"telur habis\")<br \/>    } else if buah == \"soldout\" {<br \/>        fmt.Println(\"buah habis\")<br \/>    }<br \/>} else {<br \/>    fmt.Println(\"minimarket tutup, saya pulang lagi\")<br \/>}<\/pre>\r\n<p>pada kondisi di atas minimarketnya sudah buka lalu cek kondisi selanjutnya cek apakah telur atau buah habis. Karena kondisinya adalah jika telur ATAU buah salah satunya ada yang soldout maka belanjaan saya lengkap. Demikian seterusnya akan mengecek kondisi-kondisi yang disediakan dalam logika program yang dibuat.<\/p>\r\n<\/li>\r\n<\/ul>\r\n<h2>2. Variabel Temporary Pada&nbsp;<code>if<\/code>&nbsp;-&nbsp;<code>else<\/code><\/h2>\r\n<h2 id=\"a131-seleksi-kondisi-menggunakan-keyword-if-else-if--else\"><\/h2>\r\n<p>Variabel temporary adalah variabel yang hanya bisa digunakan pada blok conditional dimana ia ditempatkan saja. Penggunaan variabel ini membawa beberapa manfaat, antara lain:<\/p>\r\n<ul>\r\n<li>Scope atau cakupan variabel jelas, hanya bisa digunakan pada blok conditional itu saja<\/li>\r\n<li>Kode menjadi lebih rapi<\/li>\r\n<li>Ketika nilai variabel tersebut didapat dari sebuah komputasi, perhitungan tidak perlu dilakukan di dalam blok masing-masing kondisi.<\/li>\r\n<\/ul>\r\n<p>Berikut contoh penggunaannya:&nbsp;<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\"><br \/>if minimarketStatus, minuteRemainingToOpen := \"close\", 5; minimarketStatus == \"open\"{<br \/>    fmt.Println(\"saya akan membeli telur dan buah\")<br \/>} else if minuteRemainingToOpen &lt;= 5 {<br \/>    fmt.Println(\"minimarket buka sebentar lagi, saya tungguin\")<br \/>} else {<br \/>    fmt.Println(\"minimarket tutup, saya pulang lagi\")<br \/>}<\/pre>\r\n<h2>3. Conditional Menggunakan Keyword <code>switch<\/code> - <code>case<\/code><\/h2>\r\n<p>Cara lain untuk melakukan pengondisian atau conditional adalah dengan&nbsp;<code>switch case<\/code>. Penggunaan switch case mirip seperti kita menyalakan tombol switch pada remote. Jika kondisi tombol yang dipijit adalah tombol dengan nomer tertentu maka akan menjalankan prorgram tertentu. &nbsp;<code>switch case<\/code> pada Go agak unik dan berbeda selain terdapat switch case seperti pada umumnya di bahasa pemrograman lain, terdapat juga case dengan banyak kondisi maupun bisa diisi dengan logika seperti if else. berikut ini contoh penggunaanya:&nbsp;<\/p>\r\n<ul>\r\n<li>Contoh Conditional dengan <code>switch case<\/code><br \/>&nbsp;\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var buttonPushed = 1<br \/>switch buttonPushed {<br \/>case 1:<br \/>&nbsp; &nbsp; fmt.Println(\"matikan TV!\")<br \/>case 2:<br \/>&nbsp; &nbsp; fmt.Println(\"turunkan volume TV!\")<br \/>case 3:<br \/>&nbsp; &nbsp; fmt.Println(\"tingkatkan volume TV!\")<br \/>case 4:<br \/>&nbsp; &nbsp; fmt.Println(\"matikan suara TV!\")<br \/>default:<br \/>&nbsp; &nbsp; fmt.Println(\"Tidak terjadi apa-apa\")<br \/>}<\/pre>\r\n<p>Pada kode di atas, switch akan mengevaluasi nilai&nbsp;<code>buttonPushed<\/code>&nbsp;jika&nbsp;<code>case<\/code>&nbsp;yang ditemui cocok dengan nilai yang diberikan maka kode pada&nbsp;<code>case<\/code> tersebut dijalankan sehingga akan dimunculkan &ldquo;<code>matikan TV!<\/code>&ldquo;. Terdapat <code>default<\/code>&nbsp;yaitu kondisi dimana tidak ditemukan&nbsp;<code>case<\/code> yang sesuai<\/p>\r\n<\/li>\r\n<li>Contoh Conditional dengan <code>switch case<\/code> dengan banyak kondisi<br \/>&nbsp;\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var buttonPushed = 1<br \/>switch buttonPushed {<br \/>case 1:<br \/>&nbsp; &nbsp; fmt.Println(\"matikan TV!\")<br \/>case 2, 3, 4:<br \/>  &nbsp; fmt.Println(\"turunkan volume TV!\")<br \/>default:<br \/>&nbsp; &nbsp; fmt.Println(\"Tidak terjadi apa-apa\")<br \/>}<\/pre>\r\n<\/li>\r\n<li>Contoh Conditional dengan <code>switch case<\/code> dengan kondisi berisi operator logika sehingga seperti if else<br \/>&nbsp;\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\">var buttonPushed = 1<br \/>switch{<br \/>case buttonPushed == 1:<br \/>&nbsp; &nbsp; fmt.Println(\"matikan TV!\")<br \/>case buttonPushed == 2 &amp;&amp; buttonPushed == 3:<br \/>  &nbsp; fmt.Println(\"turunkan volume TV!\")<br \/>case buttonPushed == 4:<br \/>&nbsp; &nbsp; fmt.Println(\"matikan suara TV!\")<br \/>default:<br \/>&nbsp; &nbsp; fmt.Println(\"Tidak terjadi apa-apa\")<br \/>}<\/pre>\r\n<\/li>\r\n<\/ul>\r\n<p><span style=\"font-size: 14pt;\"><strong>Penggunaan Keyword <code>fallthrough<\/code>Dalam switch<\/strong><\/span><\/p>\r\n<p>Seperti yang sudah dijelaskan sebelumnya, bahwa switch pada Go memiliki perbedaan dengan bahasa lain. Ketika sebuah&nbsp;<code>case<\/code>&nbsp;terpenuhi, pengecekkan kondisi tidak akan diteruskan ke case-case setelahnya.<\/p>\r\n<p>Keyword&nbsp;<code>fallthrough<\/code>&nbsp;digunakan untuk memaksa proses pengecekkan diteruskan ke&nbsp;<code>case<\/code>&nbsp;selanjutnya dengan&nbsp;<strong>tanpa menghiraukan nilai kondisinya<\/strong>, jadi case di pengecekan selanjutnya tersebut selalu dianggap benar (meskipun aslinya adalah salah).<\/p>\r\n<pre style=\"border: 1px solid #aaa; padding: 10px; width: 70%; margin: 0 auto;\"><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> point = <span class=\"hljs-number\">6<\/span>\r\n\r\n<span class=\"hljs-keyword\">switch<\/span> {\r\n<span class=\"hljs-keyword\">case<\/span> point == <span class=\"hljs-number\">8<\/span>:\r\n    fmt.Println(<span class=\"hljs-string\">\"perfect\"<\/span>)\r\n<span class=\"hljs-keyword\">case<\/span> (point &lt; <span class=\"hljs-number\">8<\/span>) &amp;&amp; (point &gt; <span class=\"hljs-number\">3<\/span>):\r\n    fmt.Println(<span class=\"hljs-string\">\"awesome\"<\/span>)\r\n    <span class=\"hljs-keyword\">fallthrough<\/span>\r\n<span class=\"hljs-keyword\">case<\/span> point &lt; <span class=\"hljs-number\">5<\/span>:\r\n    fmt.Println(<span class=\"hljs-string\">\"you need to learn more\"<\/span>)\r\n<span class=\"hljs-keyword\">default<\/span>:\r\n    {\r\n        fmt.Println(<span class=\"hljs-string\">\"not bad\"<\/span>)\r\n        fmt.Println(<span class=\"hljs-string\">\"you need to learn more\"<\/span>)\r\n    }\r\n}<\/code><\/pre>\r\n<p>Setelah pengecekkan&nbsp;<code>case (point &lt; 8) &amp;&amp; (point &gt; 3)<\/code>&nbsp;selesai, akan dilanjut ke pengecekkan&nbsp;<code>case point &lt; 5<\/code>, karena ada&nbsp;<code>fallthrough<\/code>&nbsp;di situ.<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Operator dan Conditional: <a href=\"https:\/\/youtu.be\/YbfkGHSgLxU\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=8AWTej25f3E\" target=\"_blank\" rel=\"noopener\">Operasi Matematika<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=svwrChhTkA8\">Operasi Perbandingan<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=Jc5m_HRc9tA\">Operasi Boolean<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=Y0ZjeA7iYic\">IF Expression<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=S8EQdhJJwnE\">Switch Expression<\/a> (Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-operator.html\" target=\"_blank\" rel=\"noopener\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-operator.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-seleksi-kondisi.html\" target=\"_blank\" rel=\"noopener\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-seleksi-kondisi.html<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<\/div>","waktu_publish":"2021-10-27 09:00:00","status_publish":"publish","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-09-22 06:47:50","updated_at":"2021-10-28 08:07:57","waktu_publish_formatted":" Rabu, 27 Oktober 2021. 09:00:00 WIB."},{"id":1402,"uuid":"b49a5b30-d1ac-4585-b0bd-57ea67c3012d","author_user_id":4336,"materi_section_id":379,"judul":"Hari 4 - Array, Slice, Map & Looping","permalink":"hari-4-array-slice-map-looping","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Array<\/strong><\/span><\/p>\r\n<p style=\"text-align: left;\"><strong>Array <\/strong>di dalam go adalah kumpulan data bertipe sama, yang disimpan dalam sebuah variabel. Array memiliki kapasitas yang nilainya ditentukan pada saat pembuatan, menjadikan elemen\/data yang disimpan di array tersebut jumlahnya tidak boleh melebihi yang sudah dialokasikan<br \/><br \/>Berikut ini contoh penerapannya:&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var names [4]string<br \/>names[0] = \"John\"<br \/>names[1] = \"Doe\"<br \/>names[2] = \"Frank\"<br \/>names[3] = \"Jack\"<br \/><br \/>fmt.Println(names[0], names[1], names[2], names[3])<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Variabel&nbsp;<code>names<\/code>&nbsp;dideklarasikan sebagai&nbsp;<code>array string<\/code>&nbsp;dengan alokasi elemen&nbsp;<code>4<\/code>&nbsp;slot. Cara mengisi slot elemen array bisa dilihat di kode di atas, yaitu dengan langsung mengakses elemen menggunakan indeks, lalu mengisinya.<\/p>\r\n<h3 id=\"a152-inisialisasi-nilai-awal-array\">1. Inisialisasi Nilai Awal Array<\/h3>\r\n<p>seperti yang kita lihat pada contoh diatas array nya di deklarasikan terlebih dahulu lalu baru di isi datanya sesuai indeksnya, namun selain itu kita juga dapat mendeklarasikan array sekaligus mengisi nilainya, berikut ini contoh penerapannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var names = [4]string{\"John\", \"Doe\", \"Frank\", \"Jack\"}<br \/><br \/>fmt.Println(names[0], names[1], names[2], names[3])<br \/><br \/>fruits &nbsp;= [4]string{<br \/>&nbsp; &nbsp; \"apple\",<br \/>&nbsp; &nbsp; \"grape\",<br \/>&nbsp; &nbsp; \"banana\",<br \/>&nbsp; &nbsp; \"melon\",<br \/>}<br \/><br \/>fmt.Println(fruits)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h3 id=\"a152-inisialisasi-nilai-awal-array\">2. Inisialisasi Nilai Awal Array Tanpa Jumlah Elemen<\/h3>\r\n<p>Deklarasi array yang nilainya diset di awal, boleh tidak dituliskan jumlah lebar array-nya, cukup ganti dengan tanda 3 titik (...). Jumlah elemen akan dikalkulasi secara otomatis menyesuaikan data elemen yang diisikan.<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var numbers = [...]int{2, 3, 2, 4, 3}<br \/><br \/>fmt.Println(\"data array \\t:\", numbers)<br \/>fmt.Println(\"jumlah elemen \\t:\", len(numbers))<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Variabel&nbsp;<code>numbers<\/code>&nbsp;akan secara otomatis memiliki jumlah elemen&nbsp;<code>5<\/code>, karena pada saat deklarasi disiapkan 5 buah elemen.<\/p>\r\n<h3 id=\"a152-inisialisasi-nilai-awal-array\">3. Array Multidimensi<\/h3>\r\n<p>rray multidimensi adalah array yang tiap elemennya juga berupa array (dan bisa seterusnya, tergantung kedalaman dimensinya).<\/p>\r\n<p>Cara deklarasi array multidimensi secara umum sama dengan cara deklarasi array biasa, dengan cara menuliskan data array dimensi selanjutnya sebagai elemen array dimensi sebelumnya.<\/p>\r\n<p>Khusus untuk array yang merupakan sub dimensi atau elemen, boleh tidak dituliskan jumlah datanya. Contohnya bisa dilihat pada deklarasi variabel&nbsp;<code>numbers2<\/code> di kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var numbers1 = [2][3]int{[3]int{3, 2, 3}, [3]int{3, 4, 5}}<br \/>var numbers2 = [2][3]int{{3, 2, 3}, {3, 4, 5}}<br \/><br \/>fmt.Println(\"numbers1\", numbers1)<br \/>fmt.Println(\"numbers2\", numbers2)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Kedua array di atas memiliki elemen yang sama.<\/p>\r\n<p>berikut ini hasil dari contoh kode diatas:<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari4-1-e1630529665653.png\" width=\"445\" height=\"70\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Slice<\/strong><\/span><\/p>\r\n<p><strong>Slice<\/strong>&nbsp;adalah&nbsp;<em>reference<\/em>&nbsp;elemen array. Slice bisa dibuat, atau bisa juga dihasilkan dari manipulasi sebuah array ataupun slice lainnya. Karena merupakan data&nbsp;<em>reference<\/em>, menjadikan perubahan data di tiap elemen slice akan berdampak pada slice lain yang memiliki alamat memori yang sama.<\/p>\r\n<h3 id=\"a161-inisialisasi-slice\">1. Inisialisasi Slice<\/h3>\r\n<p>Cara pembuatan slice mirip seperti pembuatan array, bedanya tidak perlu mendefinisikan jumlah elemen ketika awal deklarasi. Pengaksesan nilai elemen-nya juga sama. Contoh pembuatan slice:<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var fruits = []string{\"apple\", \"grape\", \"banana\", \"melon\"}<br \/>fmt.Println(fruits[0]) \/\/ \"apple\"<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Salah satu perbedaan slice dan array bisa diketahui pada saat deklarasi variabel-nya, jika jumlah elemen tidak dituliskan, maka variabel tersebut adalah slice.<\/span><\/pre>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var fruitsA = []string{\"apple\", \"grape\"} &nbsp; &nbsp; &nbsp;\/\/ slice<br \/>var fruitsB = [2]string{\"banana\", \"melon\"} &nbsp; &nbsp;\/\/ array<br \/>var fruitsC = [...]string{\"papaya\", \"grape\"} &nbsp;\/\/ array<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h3 id=\"a162-hubungan-slice-dengan-array--operasi-slice\">2. Hub<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">ungan Slice Dengan Array &amp; Operasi Slice<\/span><\/h3>\r\n<p>Kalau perbedannya hanya di penentuan alokasi pada saat inisialisasi, kenapa tidak menggunakan satu istilah saja? atau adakah perbedaan lainnya?<\/p>\r\n<p>Sebenarnya slice dan array tidak bisa dibedakan karena merupakan sebuah kesatuan. Array adalah kumpulan nilai atau elemen, sedang slice adalah referensi tiap elemen tersebut.<\/p>\r\n<p>Slice bisa dibentuk dari array yang sudah didefinisikan, caranya dengan memanfaatkan teknik&nbsp;<strong>2 index<\/strong>&nbsp;untuk mengambil elemen-nya. Contoh bisa dilihat pada kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var fruits = []string{\"apple\", \"grape\", \"banana\", \"melon\"}<br \/>var newFruits = fruits[0:2]<br \/><br \/>fmt.Println(newFruits) \/\/ [\"apple\", \"grape\"]<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Kode <\/span><code>fruits[0:2]<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;maksudnya adalah pengaksesan elemen dalam slice&nbsp;<\/span><code>fruits<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;yang&nbsp;<\/span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">dimulai dari indeks ke-0, hingga elemen sebelum indeks ke-2<\/strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Elemen yang memenuhi kriteria tersebut akan didapat, <br \/>untuk kemudian disimpan pada variabel lain sebagai slice baru. Pada contoh di atas,&nbsp;<\/span><code>newFruits<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;adalah slice baru yang tercetak dari slice&nbsp;<\/span><code>fruits<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, dengan isi 2 elemen, yaitu&nbsp;<\/span><code>\"apple\"<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>\"grape\"<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/pre>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari4-2.png\" width=\"613\" height=\"125\" \/><\/p>\r\n<p>Ketika mengakses elemen array menggunakan satu buah indeks (seperti&nbsp;<code>data[2]<\/code>), nilai yang didapat merupakan hasil&nbsp;<strong>copy<\/strong>&nbsp;dari referensi aslinya. Berbeda dengan pengaksesan elemen menggunakan 2 indeks (seperti&nbsp;<code>data[0:2]<\/code>), nilai yang didapat adalah&nbsp;<em>reference<\/em>&nbsp;elemen atau slice.<\/p>\r\n<p><span style=\"text-align: center;\">Tabel berikut adalah list operasi operasi menggunakan teknik 2 indeks yang bisa dilakukan.<\/span><\/p>\r\n<table style=\"border-collapse: collapse; width: 54.4826%; margin-left: auto; margin-right: auto; height: 56px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var fruits = []string{\"apple\", \"grape\", \"banana\", \"melon\"}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; border-color: #aaaaaa; border-style: solid; margin-left: auto; margin-right: auto;\" border=\"1\">\r\n<thead>\r\n<tr>\r\n<th>Kode<\/th>\r\n<th>Output<\/th>\r\n<th>Penjelasan<\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td><code>fruits[0:2]<\/code><\/td>\r\n<td><code>[apple, grape]<\/code><\/td>\r\n<td>semua elemen mulai indeks ke-0, hingga sebelum indeks ke-2<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>fruits[0:4]<\/code><\/td>\r\n<td><code>[apple,&nbsp;grape,&nbsp;banana,&nbsp;melon]<\/code><\/td>\r\n<td>semua elemen mulai indeks ke-0, hingga sebelum indeks ke-4<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>fruits[0:0]<\/code><\/td>\r\n<td><code>[]<\/code><\/td>\r\n<td>menghasilkan slice kosong, karena tidak ada elemen sebelum indeks ke-0<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>fruits[4:4]<\/code><\/td>\r\n<td><code>[]<\/code><\/td>\r\n<td>menghasilkan slice kosong, karena tidak ada elemen yang dimulai dari indeks ke-4<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>fruits[4:0]<\/code><\/td>\r\n<td><code>[]<\/code><\/td>\r\n<td>error, pada penulisan&nbsp;<code>fruits[a,b]<\/code>&nbsp;nilai&nbsp;<code>a<\/code>&nbsp;harus lebih besar atau sama dengan&nbsp;<code>b<\/code><\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>fruits[:]<\/code><\/td>\r\n<td><code>[apple, grape, banana, melon]<\/code><\/td>\r\n<td>semua elemen<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>fruits[2:]<\/code><\/td>\r\n<td><code>[banana, melon]<\/code><\/td>\r\n<td>semua elemen mulai indeks ke-2<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><code>fruits[:2]<\/code><\/td>\r\n<td><code>[apple, grape]<\/code><\/td>\r\n<td>semua elemen hingga sebelum indeks ke-2<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h3 id=\"a163-slice-merupakan-tipe-data-reference\">3. Slice Merupakan Tipe Data Reference<\/h3>\r\n<p>Slice merupakan tipe data&nbsp;<em>reference<\/em>&nbsp;atau referensi. Artinya jika ada slice baru yang terbentuk dari slice lama, maka data elemen slice yang baru akan memiliki alamat memori yang sama dengan elemen slice lama. Setiap perubahan yang terjadi di elemen slice baru, akan berdampak juga pada elemen slice lama yang memiliki referensi yang sama.<\/p>\r\n<p>Program berikut merupakan pembuktian tentang teori yang baru kita bahas. Kita akan mencoba mengubah data elemen slice baru, yang terbentuk dari slice lama.<\/p>\r\n<table style=\"border-collapse: collapse; width: 47.5408%; margin-left: auto; margin-right: auto; height: 477px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var fruits = []string{\"apple\", \"grape\", \"banana\", \"melon\"}<\/pre>\r\n<pre>var aFruits = fruits[0:3]<br \/>var bFruits = fruits[1:4]<br \/><br \/>var aaFruits = aFruits[1:2]<br \/>var baFruits = bFruits[0:1]<br \/><br \/>fmt.Println(fruits) &nbsp; \/\/ [apple grape banana melon]<br \/>fmt.Println(aFruits) &nbsp;\/\/ [apple grape banana]<br \/>fmt.Println(bFruits) &nbsp;\/\/ [grape banana melon]<br \/>fmt.Println(aaFruits) \/\/ [grape]<br \/>fmt.Println(baFruits) \/\/ [grape]<br \/><br \/>fmt.Println()<br \/>fmt.Println(`Buah \"grape\" diubah menjadi \"pineapple\"`)<br \/>fmt.Println()<br \/>baFruits[0] = \"pineapple\"<br \/><br \/>fmt.Println(fruits) &nbsp; \/\/ [apple pineapple banana melon]<br \/>fmt.Println(aFruits) &nbsp;\/\/ [apple pineapple banana]<br \/>fmt.Println(bFruits) &nbsp;\/\/ [pineapple banana melon]<br \/>fmt.Println(aaFruits) \/\/ [pineapple]<br \/>fmt.Println(baFruits) \/\/ [pineapple]<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Sekilas bisa kita lihat bahwa setelah slice yang isi datanya adalah&nbsp;<code>grape<\/code>&nbsp;di-ubah menjadi&nbsp;<code>pineapple<\/code>, semua slice pada 4 variabel lainnya juga ikut berubah.<\/p>\r\n<p>Variabel&nbsp;<code>aFruits<\/code>,&nbsp;<code>bFruits<\/code>&nbsp;merupakan slice baru yang terbentuk dari variabel&nbsp;<code>fruits<\/code>. Dengan menggunakan dua slice baru tersebut, diciptakan lagi slice lainnya, yaitu&nbsp;<code>aaFruits<\/code>, dan&nbsp;<code>baFruits<\/code>. Kelima slice tersebut ditampilkan nilainya.<\/p>\r\n<p>Selanjutnya, nilai dari&nbsp;<code>baFruits[0]<\/code>&nbsp;diubah, dan 5 slice tadi ditampilkan lagi. Hasilnya akan ada banyak slice yang elemennya ikut berubah. Yaitu elemen-elemen yang referensi-nya sama dengan referensi elemen&nbsp;<code>baFruits[0]<\/code>.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari4-4.png\" width=\"704\" height=\"457\" \/><\/p>\r\n<p>Bisa dilihat pada output di atas, elemen yang sebelumnya bernilai&nbsp;<code>\"grape\"<\/code>&nbsp;pada variabel&nbsp;<code>fruits<\/code>,&nbsp;<code>aFruits<\/code>,&nbsp;<code>bFruits<\/code>,&nbsp;<code>aaFruits<\/code>, dan&nbsp;<code>baFruits<\/code>; kesemuanya berubah menjadi&nbsp;<code>\"pineapple\"<\/code>, karena memiliki referensi yang sama.<\/p>\r\n<h2 id=\"a164-fungsi-len\">4. Fungsi&nbsp;<code>len()<\/code><\/h2>\r\n<p>Fungsi&nbsp;<code>len()<\/code>&nbsp;digunakan untuk menghitung jumlah elemen slice yang ada. Sebagai contoh jika sebuah variabel adalah slice dengan data 4 buah, maka fungsi ini pada variabel tersebut akan mengembalikan angka&nbsp;<strong>4<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var fruits = []string{\"apple\", \"grape\", \"banana\", \"melon\"}<br \/>fmt.Println(len(fruits)) \/\/ 4<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 id=\"a165-fungsi-cap\">5<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Fungsi <\/span><code>cap()<\/code><\/h2>\r\n<p>Fungsi&nbsp;<code>cap()<\/code>&nbsp;digunakan untuk menghitung lebar atau kapasitas maksimum slice. Nilai kembalian fungsi ini untuk slice yang baru dibuat pasti sama dengan&nbsp;<code>len<\/code>, tapi bisa berubah seiring operasi slice yang dilakukan. Agar lebih jelas, silakan disimak kode berikut.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> fruits = []<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"grape\"<\/span>, <span class=\"hljs-string\">\"banana\"<\/span>, <span class=\"hljs-string\">\"melon\"<\/span>}\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(fruits))  <span class=\"hljs-comment\">\/\/ len: 4<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">cap<\/span>(fruits))  <span class=\"hljs-comment\">\/\/ cap: 4<\/span>\r\n\r\n<span class=\"hljs-keyword\">var<\/span> aFruits = fruits[<span class=\"hljs-number\">0<\/span>:<span class=\"hljs-number\">3<\/span>]\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(aFruits)) <span class=\"hljs-comment\">\/\/ len: 3<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">cap<\/span>(aFruits)) <span class=\"hljs-comment\">\/\/ cap: 4<\/span>\r\n\r\n<span class=\"hljs-keyword\">var<\/span> bFruits = fruits[<span class=\"hljs-number\">1<\/span>:<span class=\"hljs-number\">4<\/span>]\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(bFruits)) <span class=\"hljs-comment\">\/\/ len: 3<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">cap<\/span>(bFruits)) <span class=\"hljs-comment\">\/\/ cap: 3<\/span>\r\n<\/code><\/pre>\r\n<p>Variabel&nbsp;<code>fruits<\/code>&nbsp;disiapkan di awal dengan jumlah elemen 4, fungsi&nbsp;<code>len(fruits)<\/code>&nbsp;dan&nbsp;<code>cap(fruits)<\/code>&nbsp;pasti hasinya 4.<\/p>\r\n<p>Variabel&nbsp;<code>aFruits<\/code>&nbsp;dan&nbsp;<code>bFruits<\/code>&nbsp;merupakan slice baru berisikan 3 buah elemen milik slice&nbsp;<code>fruits<\/code>. Variabel&nbsp;<code>aFruits<\/code>&nbsp;mengambil elemen index 0, 1, 2; sedangkan&nbsp;<code>bFruits<\/code>&nbsp;1, 2, 3.<\/p>\r\n<p>Fungsi&nbsp;<code>len()<\/code>&nbsp;menghasilkan angka 3, karena jumlah elemen kedua slice ini adalah 3. Tetapi&nbsp;<code>cap(aFruits)<\/code>&nbsp;menghasilkan angka yang berbeda, yaitu 4 untuk&nbsp;<code>aFruits<\/code>&nbsp;dan 3 untuk&nbsp;<code>bFruits<\/code>. kenapa? jawabannya bisa dilihat pada tabel berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 25.3368%;\" border=\"1\">\r\n<thead>\r\n<tr>\r\n<th style=\"width: 23.3307%;\">Kode<\/th>\r\n<th style=\"width: 41.2144%;\">Output<\/th>\r\n<th style=\"width: 10.6646%;\"><code>len()<\/code><\/th>\r\n<th style=\"width: 10.6646%;\"><code>cap()<\/code><\/th>\r\n<\/tr>\r\n<\/thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 23.3307%;\"><code>fruits[0:4]<\/code><\/td>\r\n<td style=\"width: 41.2144%;\">[<strong><code>buah<\/code>&nbsp;<code>buah<\/code>&nbsp;<code>buah<\/code>&nbsp;<code>buah<\/code><\/strong>]<\/td>\r\n<td style=\"width: 10.6646%;\">4<\/td>\r\n<td style=\"width: 10.6646%;\">4<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 23.3307%;\"><code>aFruits[0:3]<\/code><\/td>\r\n<td style=\"width: 41.2144%;\">[<strong><code>buah<\/code>&nbsp;<code>buah<\/code>&nbsp;<code>buah<\/code><\/strong>&nbsp;<code>----<\/code>]<\/td>\r\n<td style=\"width: 10.6646%;\">3<\/td>\r\n<td style=\"width: 10.6646%;\">4<\/td>\r\n<\/tr>\r\n<tr>\r\n<td style=\"width: 23.3307%;\"><code>bFruits[1:3]<\/code><\/td>\r\n<td style=\"width: 41.2144%;\"><code>----<\/code>&nbsp;[<strong><code>buah<\/code>&nbsp;<code>buah<\/code>&nbsp;<code>buah<\/code><\/strong>]<\/td>\r\n<td style=\"width: 10.6646%;\">3<\/td>\r\n<td style=\"width: 10.6646%;\">3<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Kita analogikan slicing 2 index menggunakan&nbsp;<strong>x<\/strong>&nbsp;dan&nbsp;<strong>y<\/strong>.<\/p>\r\n<pre><code class=\"lang-go\">fruits[x:y]\r\n<\/code><\/pre>\r\n<p><strong>Slicing<\/strong>&nbsp;yang dimulai dari indeks&nbsp;<strong>0<\/strong>&nbsp;hingga&nbsp;<strong>y<\/strong>&nbsp;akan mengembalikan elemen-elemen mulai indeks&nbsp;<strong>0<\/strong>&nbsp;hingga sebelum indeks&nbsp;<strong>y<\/strong>, dengan lebar kapasitas adalah sama dengan slice aslinya.<\/p>\r\n<p>Sedangkan slicing yang dimulai dari indeks&nbsp;<strong>x<\/strong>, yang dimana nilai&nbsp;<strong>x<\/strong>&nbsp;adalah lebih dari&nbsp;<strong>0<\/strong>, membuat elemen ke-<strong>x<\/strong>&nbsp;slice yang diambil menjadi elemen ke-0 slice baru. Hal inilah yang membuat kapasitas slice berubah.<\/p>\r\n<h2 id=\"a166-fungsi-append\">6. Fungsi <code>append()<\/code><\/h2>\r\n<p>Fungsi&nbsp;<code>append()<\/code>&nbsp;digunakan untuk menambahkan elemen pada slice. Elemen baru tersebut diposisikan setelah indeks paling akhir. Nilai balik fungsi ini adalah slice yang sudah ditambahkan nilai barunya. Contoh penggunaannya bisa dilihat di kode berikut.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> fruits = []<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"grape\"<\/span>, <span class=\"hljs-string\">\"banana\"<\/span>}\r\n<span class=\"hljs-keyword\">var<\/span> cFruits = <span class=\"hljs-built_in\">append<\/span>(fruits, <span class=\"hljs-string\">\"papaya\"<\/span>)\r\n\r\nfmt.Println(fruits)  <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\", \"banana\"]<\/span>\r\nfmt.Println(cFruits) <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\", \"banana\", \"papaya\"]<\/span>\r\n<\/code><\/pre>\r\n<p>Ada 3 hal yang perlu diketahui dalam penggunaan fungsi ini.<\/p>\r\n<ul>\r\n<li>Ketika jumlah elemen dan lebar kapasitas adalah sama (<code>len(fruits) == cap(fruits)<\/code>), maka elemen baru hasil&nbsp;<code>append()<\/code>&nbsp;merupakan referensi baru.<\/li>\r\n<li>Ketika jumlah elemen lebih kecil dibanding kapasitas (<code>len(fruits) &lt; cap(fruits)<\/code>), elemen baru tersebut ditempatkan kedalam cakupan kapasitas, menjadikan semua elemen slice lain yang referensi-nya sama akan berubah nilainya.<\/li>\r\n<\/ul>\r\n<p>Agar lebih jelas silakan perhatikan contoh berikut.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> fruits = []<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"grape\"<\/span>, <span class=\"hljs-string\">\"banana\"<\/span>}\r\n<span class=\"hljs-keyword\">var<\/span> bFruits = fruits[<span class=\"hljs-number\">0<\/span>:<span class=\"hljs-number\">2<\/span>]\r\n\r\nfmt.Println(<span class=\"hljs-built_in\">cap<\/span>(bFruits)) <span class=\"hljs-comment\">\/\/ 3<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(bFruits)) <span class=\"hljs-comment\">\/\/ 2<\/span>\r\n\r\nfmt.Println(fruits)  <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\", \"banana\"]<\/span>\r\nfmt.Println(bFruits) <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\"]<\/span>\r\n\r\n<span class=\"hljs-keyword\">var<\/span> cFruits = <span class=\"hljs-built_in\">append<\/span>(bFruits, <span class=\"hljs-string\">\"papaya\"<\/span>)\r\n\r\nfmt.Println(fruits)  <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\", \"papaya\"]<\/span>\r\nfmt.Println(bFruits) <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\"]<\/span>\r\nfmt.Println(cFruits) <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\", \"papaya\"]<\/span>\r\n<\/code><\/pre>\r\n<p>Pada contoh di atas bisa dilihat, elemen indeks ke-2 slice&nbsp;<code>fruits<\/code>&nbsp;nilainya berubah setelah ada penggunaan keyword&nbsp;<code>append()<\/code>&nbsp;pada&nbsp;<code>bFruits<\/code>. Slice&nbsp;<code>bFruits<\/code>&nbsp;kapasitasnya adalah&nbsp;<strong>3<\/strong>&nbsp;sedang jumlah datanya hanya&nbsp;<strong>2<\/strong>. Karena&nbsp;<code>len(bFruits) &lt; cap(bFruits)<\/code>, maka elemen baru yang dihasilkan, terdeteksi sebagai perubahan nilai pada referensi yang lama (referensi elemen indeks ke-2 slice&nbsp;<code>fruits<\/code>), membuat elemen yang referensinya sama, nilainya berubah.<\/p>\r\n<h2 id=\"a167-fungsi-copy\">7. Fungsi <code>copy()<\/code><\/h2>\r\n<p>Fungsi&nbsp;<code>copy()<\/code>&nbsp;digunakan untuk men-copy elements slice pada&nbsp;<code>src<\/code>&nbsp;(parameter ke-2), ke&nbsp;<code>dst<\/code>&nbsp;(parameter pertama).<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-built_in\">copy<\/span>(dst, src)\r\n<\/code><\/pre>\r\n<p>Jumlah element yang di-copy dari&nbsp;<code>src<\/code>&nbsp;adalah sejumlah lebar slice&nbsp;<code>dst<\/code>&nbsp;(atau&nbsp;<code>len(dst)<\/code>). Jika jumlah slice pada&nbsp;<code>src<\/code>&nbsp;lebih kecil dari&nbsp;<code>dst<\/code>, maka akan ter-copy semua. Lebih jelasnya silakan perhatikan contoh berikut.<\/p>\r\n<pre><code class=\"lang-go\">dst := <span class=\"hljs-built_in\">make<\/span>([]<span class=\"hljs-keyword\">string<\/span>, <span class=\"hljs-number\">3<\/span>)\r\nsrc := []<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"watermelon\"<\/span>, <span class=\"hljs-string\">\"pinnaple\"<\/span>, <span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"orange\"<\/span>}\r\nn := <span class=\"hljs-built_in\">copy<\/span>(dst, src)\r\n\r\nfmt.Println(dst) <span class=\"hljs-comment\">\/\/ watermelon pinnaple apple<\/span>\r\nfmt.Println(src) <span class=\"hljs-comment\">\/\/ watermelon pinnaple apple orange<\/span>\r\nfmt.Println(n)   <span class=\"hljs-comment\">\/\/ 3<\/span>\r\n<\/code><\/pre>\r\n<p>Pada kode di atas variabel slice&nbsp;<code>dst<\/code>&nbsp;dipersiapkan dengan lebar adalah 3 elements. Slice&nbsp;<code>src<\/code>&nbsp;yang isinya 4 elements, di-copy ke&nbsp;<code>dst<\/code>. Menjadikan isi slice&nbsp;<code>dst<\/code>&nbsp;sekarang adalah 3 buah elements yang sama dengan 3 buah elements&nbsp;<code>src<\/code>, hasil dari operasi&nbsp;<code>copy()<\/code>.<\/p>\r\n<p>Yang ter-copy hanya 3 buah (meski&nbsp;<code>src<\/code>&nbsp;memiliki 4 elements) hal ini karena&nbsp;<code>copy()<\/code>&nbsp;hanya meng-copy elements sebanyak&nbsp;<code>len(dst)<\/code>.<\/p>\r\n<blockquote>\r\n<p>Fungsi&nbsp;<code>copy()<\/code>&nbsp;mengembalikan informasi angka, representasi dari jumlah element yang berhasil di-copy.<\/p>\r\n<\/blockquote>\r\n<p>Pada contoh kedua berikut,&nbsp;<code>dst<\/code>&nbsp;merupakan slice yang sudah ada isinya, 3 buah elements. Variabel&nbsp;<code>src<\/code>&nbsp;yang juga merupakan slice dengan isi dua elements, di-copy ke&nbsp;<code>dst<\/code>. Karena operasi&nbsp;<code>copy()<\/code>&nbsp;akan meng-copy sejumlah&nbsp;<code>len(dst)<\/code>, maka semua elements&nbsp;<code>src<\/code>&nbsp;akan ter-copy&nbsp;<strong>karena jumlahnya dibawah atau sama dengan lebar<\/strong>&nbsp;<code>dst<\/code>.<\/p>\r\n<pre><code class=\"lang-go\">dst := []<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"potato\"<\/span>, <span class=\"hljs-string\">\"potato\"<\/span>, <span class=\"hljs-string\">\"potato\"<\/span>}\r\nsrc := []<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"watermelon\"<\/span>, <span class=\"hljs-string\">\"pinnaple\"<\/span>}\r\nn := <span class=\"hljs-built_in\">copy<\/span>(dst, src)\r\n\r\nfmt.Println(dst) <span class=\"hljs-comment\">\/\/ watermelon pinnaple potato<\/span>\r\nfmt.Println(src) <span class=\"hljs-comment\">\/\/ watermelon pinnaple<\/span>\r\nfmt.Println(n)   <span class=\"hljs-comment\">\/\/ 2<\/span>\r\n<\/code><\/pre>\r\n<p>Jika dilihat pada kode di atas, isi&nbsp;<code>dst<\/code>&nbsp;masih tetap 3 elements, tapi dua elements pertama adalah sama dengan&nbsp;<code>src<\/code>. Element terakhir&nbsp;<code>dst<\/code>&nbsp;isinya tidak berubah, tetap&nbsp;<code>potato<\/code>, hal ini karena proses copy hanya memutasi element ke-1 dan ke-2 milik&nbsp;<code>dst<\/code>, karena memang pada&nbsp;<code>src<\/code>&nbsp;hanya dua itu elements-nya.<\/p>\r\n<h2 id=\"a168-pengaksesan-elemen-slice-dengan-3-indeks\">8. Pengaksesan Elemen Slice Dengan 3 Indeks<\/h2>\r\n<p><strong>3 index<\/strong>&nbsp;adalah teknik slicing elemen yang sekaligus menentukan kapasitasnya. Cara menggunakannnya yaitu dengan menyisipkan angka kapasitas di belakang, seperti&nbsp;<code>fruits[0:1:1]<\/code>. Angka kapasitas yang diisikan tidak boleh melebihi kapasitas slice yang akan di slicing.<\/p>\r\n<p>Berikut merupakan contoh penerapannya.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> fruits = []<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"grape\"<\/span>, <span class=\"hljs-string\">\"banana\"<\/span>}\r\n<span class=\"hljs-keyword\">var<\/span> aFruits = fruits[<span class=\"hljs-number\">0<\/span>:<span class=\"hljs-number\">2<\/span>]\r\n<span class=\"hljs-keyword\">var<\/span> bFruits = fruits[<span class=\"hljs-number\">0<\/span>:<span class=\"hljs-number\">2<\/span>:<span class=\"hljs-number\">2<\/span>]\r\n\r\nfmt.Println(fruits)      <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\", \"banana\"]<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(fruits)) <span class=\"hljs-comment\">\/\/ len: 3<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">cap<\/span>(fruits)) <span class=\"hljs-comment\">\/\/ cap: 3<\/span>\r\n\r\nfmt.Println(aFruits)      <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\"]<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(aFruits)) <span class=\"hljs-comment\">\/\/ len: 2<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">cap<\/span>(aFruits)) <span class=\"hljs-comment\">\/\/ cap: 3<\/span>\r\n\r\nfmt.Println(bFruits)      <span class=\"hljs-comment\">\/\/ [\"apple\", \"grape\"]<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(bFruits)) <span class=\"hljs-comment\">\/\/ len: 2<\/span>\r\nfmt.Println(<span class=\"hljs-built_in\">cap<\/span>(bFruits)) <span class=\"hljs-comment\">\/\/ cap: 2<\/span><\/code><\/pre>\r\n<h3 id=\"a152-inisialisasi-nilai-awal-array\">9. Alokasi Elemen Slice Menggunakan Keyword <code>make<\/code><\/h3>\r\n<p>Deklarasi sekaligus alokasi data array juga bisa dilakukan lewat keyword&nbsp;<code>make<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.6163%; margin-left: auto; margin-right: auto;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var fruits = make([]string, 2)<br \/>fruits[0] = \"apple\"<br \/>fruits[1] = \"manggo\"<br \/><br \/>fmt.Println(fruits) &nbsp;\/\/ [apple manggo]<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Parameter pertama keyword <code>make<\/code>&nbsp;diisi dengan tipe data elemen array yang diinginkan, parameter kedua adalah jumlah elemennya. Pada kode di atas, variabel&nbsp;<code>fruits<\/code>&nbsp;tercetak sebagai array string dengan alokasi 2 slot.<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Map<\/strong><\/span><\/p>\r\n<p><strong>Map<\/strong>&nbsp;adalah tipe data asosiatif yang ada di Go, berbentuk&nbsp;<em>key-value pair<\/em>. Untuk setiap data (atau value) yang disimpan, disiapkan juga key-nya. Key harus unik, karena digunakan sebagai penanda (atau identifier) untuk pengaksesan value yang bersangkutan.<\/p>\r\n<p>Kalau dilihat,&nbsp;<code>map<\/code>&nbsp;mirip seperti slice, hanya saja indeks yang digunakan untuk pengaksesan bisa ditentukan sendiri tipe-nya (indeks tersebut adalah key).<\/p>\r\n<h2 id=\"a171-penggunaan-map\">1. Penggunaan Map<\/h2>\r\n<p>Cara menggunakan map cukup dengan menuliskan keyword&nbsp;<code>map<\/code>&nbsp;diikuti tipe data key dan value-nya. Agar lebih mudah dipahami, silakan perhatikan contoh di bawah ini.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> chicken <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>\r\nchicken = <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>{}\r\n\r\nchicken[<span class=\"hljs-string\">\"januari\"<\/span>] = <span class=\"hljs-number\">50<\/span>\r\nchicken[<span class=\"hljs-string\">\"februari\"<\/span>] = <span class=\"hljs-number\">40<\/span>\r\n\r\nfmt.Println(<span class=\"hljs-string\">\"januari\"<\/span>, chicken[<span class=\"hljs-string\">\"januari\"<\/span>]) <span class=\"hljs-comment\">\/\/ januari 50<\/span>\r\nfmt.Println(<span class=\"hljs-string\">\"mei\"<\/span>,     chicken[<span class=\"hljs-string\">\"mei\"<\/span>])     <span class=\"hljs-comment\">\/\/ mei 0<\/span>\r\n<\/code><\/pre>\r\n<p>Variabel&nbsp;<code>chicken<\/code>&nbsp;dideklarasikan sebagai map, dengan tipe data key adalah&nbsp;<code>string<\/code>&nbsp;dan value-nya&nbsp;<code>int<\/code>. Dari kode tersebut bisa dilihat bagaimana cara penggunaan keyword&nbsp;<code>map<\/code>.<\/p>\r\n<p>Kode&nbsp;<code>map[string]int<\/code>&nbsp;maknanya adalah, tipe data&nbsp;<code>map<\/code>&nbsp;dengan key bertipe&nbsp;<code>string<\/code>&nbsp;dan value bertipe&nbsp;<code>int<\/code>.<\/p>\r\n<p>Default nilai variabel&nbsp;<code>map<\/code>&nbsp;adalah&nbsp;<code>nil<\/code>. Oleh karena itu perlu dilakukan inisialisasi nilai default di awal, caranya cukup dengan tambahkan kurung kurawal pada akhir tipe, contoh seperti pada kode di atas:&nbsp;<code>map[string]int{}<\/code>.<\/p>\r\n<p>Cara menge-set nilai pada sebuah map adalah dengan menuliskan variabel-nya, kemudian disisipkan&nbsp;<code>key<\/code>&nbsp;pada kurung siku variabel (mirip seperti cara pengaksesan elemen slice), lalu isi nilainya. Contohnya seperti&nbsp;<code>chicken[\"februari\"] = 40<\/code>. Sedangkan cara pengambilan value adalah cukup dengan menyisipkan&nbsp;<code>key<\/code>&nbsp;pada kurung siku variabel.<\/p>\r\n<p>Pengisian data pada map bersifat&nbsp;<strong>overwrite<\/strong>, ketika variabel sudah memiliki item dengan key yang sama, maka value lama akan ditimpa dengan value baru.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Pada pengaksesan item menggunakan key yang belum tersimpan di map, akan dikembalikan nilai default tipe data value-nya. Contohnya seperti pada kode di atas,&nbsp;<code>chicken[\"mei\"]<\/code>&nbsp;menghasilkan nilai 0 (nilai default tipe&nbsp;<code>int<\/code>), karena belum ada item yang tersimpan menggunakan key&nbsp;<code>\"mei\"<\/code>.<\/p>\r\n<h2 id=\"a172-inisialisasi-nilai-map\">2. Inisialisasi Nilai Map<\/h2>\r\n<p>Zero value dari map adalah&nbsp;<code>nil<\/code>, maka tiap variabel bertipe map harus di-inisialisasi secara explisit nilai awalnya (agar tidak&nbsp;<code>nil<\/code>).<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> data <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>\r\ndata[<span class=\"hljs-string\">\"one\"<\/span>] = <span class=\"hljs-number\">1<\/span>\r\n<span class=\"hljs-comment\">\/\/ akan muncul error!<\/span>\r\n\r\ndata = <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>{}\r\ndata[<span class=\"hljs-string\">\"one\"<\/span>] = <span class=\"hljs-number\">1<\/span>\r\n<span class=\"hljs-comment\">\/\/ tidak ada error<\/span>\r\n<\/code><\/pre>\r\n<p>Nilai variabel bertipe map bisa didefinisikan di awal, caranya dengan menambahkan kurung kurawal setelah tipe data, lalu menuliskan key dan value didalamnya. Cara ini sekilas mirip dengan definisi nilai array\/slice namun dalam bentuk key-value.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-comment\">\/\/ cara horizontal<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> chicken1 = <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>{<span class=\"hljs-string\">\"januari\"<\/span>: <span class=\"hljs-number\">50<\/span>, <span class=\"hljs-string\">\"februari\"<\/span>: <span class=\"hljs-number\">40<\/span>}\r\n\r\n<span class=\"hljs-comment\">\/\/ cara vertical<\/span>\r\n<span class=\"hljs-keyword\">var<\/span> chicken2 = <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>{\r\n    <span class=\"hljs-string\">\"januari\"<\/span>:  <span class=\"hljs-number\">50<\/span>,\r\n    <span class=\"hljs-string\">\"februari\"<\/span>: <span class=\"hljs-number\">40<\/span>,\r\n}\r\n<\/code><\/pre>\r\n<p>Key dan value dituliskan dengan pembatas tanda titik dua (<code>:<\/code>). Sedangkan tiap itemnya dituliskan dengan pembatas tanda koma (<code>,<\/code>). Khusus deklarasi dengan gaya vertikal, tanda koma perlu dituliskan setelah item terakhir.<\/p>\r\n<p>Variabel&nbsp;<code>map<\/code>&nbsp;bisa di-inisialisasi dengan tanpa nilai awal, caranya menggunakan tanda kurung kurawal, contoh:&nbsp;<code>map[string]int{}<\/code>. Atau bisa juga dengan menggunakan keyword&nbsp;<code>make<\/code>&nbsp;dan&nbsp;<code>new<\/code>. Contohnya bisa dilihat pada kode berikut. Ketiga cara di bawah ini intinya adalah sama.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> chicken3 = <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>{}\r\n<span class=\"hljs-keyword\">var<\/span> chicken4 = <span class=\"hljs-built_in\">make<\/span>(<span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>)\r\n<span class=\"hljs-keyword\">var<\/span> chicken5 = *<span class=\"hljs-built_in\">new<\/span>(<span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>)\r\n<\/code><\/pre>\r\n<p>Khusus inisialisasi data menggunakan keyword&nbsp;<code>new<\/code>, yang dihasilkan adalah data pointer. Untuk mengambil nilai aslinya bisa dengan menggunakan tanda asterisk (<code>*<\/code>). Topik pointer akan dibahas lebih detail di materi selanjutnya<\/p>\r\n<h2 id=\"a174-menghapus-item-map\">4. Menghapus Item Map<\/h2>\r\n<p>Fungsi&nbsp;<code>delete()<\/code>&nbsp;digunakan untuk menghapus item dengan key tertentu pada variabel map. Cara penggunaannya, dengan memasukan objek map dan key item yang ingin dihapus sebagai parameter.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> chicken = <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>{<span class=\"hljs-string\">\"januari\"<\/span>: <span class=\"hljs-number\">50<\/span>, <span class=\"hljs-string\">\"februari\"<\/span>: <span class=\"hljs-number\">40<\/span>}\r\n\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(chicken)) <span class=\"hljs-comment\">\/\/ 2<\/span>\r\nfmt.Println(chicken)\r\n\r\n<span class=\"hljs-built_in\">delete<\/span>(chicken, <span class=\"hljs-string\">\"januari\"<\/span>)\r\n\r\nfmt.Println(<span class=\"hljs-built_in\">len<\/span>(chicken)) <span class=\"hljs-comment\">\/\/ 1<\/span>\r\nfmt.Println(chicken)\r\n<\/code><\/pre>\r\n<p>Item yang memiliki key&nbsp;<code>\"januari\"<\/code>&nbsp;dalam variabel&nbsp;<code>chicken<\/code>&nbsp;akan dihapus.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Fungsi&nbsp;<code>len()<\/code>&nbsp;jika digunakan pada map akan mengembalikan jumlah item.<\/p>\r\n<h2 id=\"a175-deteksi-keberadaan-item-dengan-key-tertentu\">5. Deteksi Keberadaan Item Dengan Key Tertentu<\/h2>\r\n<p>Ada cara untuk mengetahui apakah dalam sebuah variabel map terdapat item dengan key tertentu atau tidak, yaitu dengan memanfaatkan 2 variabel sebagai penampung nilai kembalian pengaksesan item. Return value ke-2 ini adalah opsional, isinya nilai&nbsp;<code>bool<\/code>&nbsp;yang menunjukkan ada atau tidaknya item yang dicari.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> chicken = <span class=\"hljs-keyword\">map<\/span>[<span class=\"hljs-keyword\">string<\/span>]<span class=\"hljs-keyword\">int<\/span>{<span class=\"hljs-string\">\"januari\"<\/span>: <span class=\"hljs-number\">50<\/span>, <span class=\"hljs-string\">\"februari\"<\/span>: <span class=\"hljs-number\">40<\/span>}\r\n<span class=\"hljs-keyword\">var<\/span> value, isExist = chicken[<span class=\"hljs-string\">\"mei\"<\/span>]\r\n\r\n<span class=\"hljs-keyword\">if<\/span> isExist {\r\n    fmt.Println(value)\r\n} <span class=\"hljs-keyword\">else<\/span> {\r\n    fmt.Println(<span class=\"hljs-string\">\"item is not exists\"<\/span>)\r\n}<\/code><code class=\"lang-go\"><\/code><\/pre>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Looping<\/strong><\/span><\/p>\r\n<p>Looping adalah proses mengulang-ulang eksekusi blok kode tanpa henti, selama kondisi yang dijadikan acuan terpenuhi. Biasanya disiapkan variabel untuk iterasi atau variabel penanda kapan perulangan akan diberhentikan.<\/p>\r\n<p>Di Go keyword perulangan hanya&nbsp;<strong>for<\/strong>&nbsp;saja, tetapi meski demikian, kemampuannya merupakan gabungan&nbsp;<code>for<\/code>,&nbsp;<code>foreach<\/code>, dan&nbsp;<code>while<\/code>&nbsp;ibarat bahasa pemrograman lain.<\/p>\r\n<h2 id=\"a141-perulangan-menggunakan-keyword-for\">1. Perulangan Menggunakan Keyword <code>for<\/code><\/h2>\r\n<p>Ada beberapa cara standar menggunakan&nbsp;<code>for<\/code>. Cara pertama dengan memasukkan variabel counter perulangan beserta kondisinya setelah keyword. Perhatikan dan praktekan kode berikut.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">for<\/span> i := <span class=\"hljs-number\">0<\/span>; i &lt; <span class=\"hljs-number\">5<\/span>; i++ {\r\n    fmt.Println(<span class=\"hljs-string\">\"Angka\"<\/span>, i)\r\n}\r\n<\/code><\/pre>\r\n<p>Perulangan di atas hanya akan berjalan ketika variabel&nbsp;<code>i<\/code>&nbsp;bernilai dibawah&nbsp;<code>5<\/code>, dengan ketentuan setiap kali perulangan, nilai variabel&nbsp;<code>i<\/code>&nbsp;akan di-iterasi atau ditambahkan 1 (<code>i++<\/code>&nbsp;artinya ditambah satu, sama seperti&nbsp;<code>i = i + 1<\/code>). Karena&nbsp;<code>i<\/code>&nbsp;pada awalnya bernilai 0, maka perulangan akan berlangsung 5 kali, yaitu ketika&nbsp;<code>i<\/code>&nbsp;bernilai 0, 1, 2, 3, dan 4.<\/p>\r\n<p>&nbsp;<\/p>\r\n<h2 id=\"a142-penggunaan-keyword-for-dengan-argumen-hanya-kondisi\">2. Penggunaan Keyword <code>for<\/code>&nbsp;Dengan Argumen Hanya Kondisi<\/h2>\r\n<p>Cara ke-2 adalah dengan menuliskan kondisi setelah keyword&nbsp;<code>for<\/code>&nbsp;(hanya kondisi). Deklarasi dan iterasi variabel counter tidak dituliskan setelah keyword, hanya kondisi perulangan saja. Konsepnya mirip seperti&nbsp;<code>while<\/code>&nbsp;milik bahasa pemrograman lain.<\/p>\r\n<p>Kode berikut adalah contoh&nbsp;<code>for<\/code>&nbsp;dengan argumen hanya kondisi (seperti&nbsp;<code>if<\/code>), output yang dihasilkan sama seperti penerapan for cara pertama.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> i = <span class=\"hljs-number\">0<\/span>\r\n\r\n<span class=\"hljs-keyword\">for<\/span> i &lt; <span class=\"hljs-number\">5<\/span> {\r\n    fmt.Println(<span class=\"hljs-string\">\"Angka\"<\/span>, i)\r\n    i++\r\n}\r\n<\/code><\/pre>\r\n<h2 id=\"a143-penggunaan-keyword-for-tanpa-argumen\">3. Penggunaan Keyword <code>for<\/code>&nbsp;Tanpa Argumen<\/h2>\r\n<p>Cara ke-3 adalah&nbsp;<code>for<\/code>&nbsp;ditulis tanpa kondisi. Dengan ini akan dihasilkan perulangan tanpa henti (sama dengan&nbsp;<code>for true<\/code>). Pemberhentian perulangan dilakukan dengan menggunakan keyword&nbsp;<code>break<\/code>.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> i = <span class=\"hljs-number\">0<\/span>\r\n\r\n<span class=\"hljs-keyword\">for<\/span> {\r\n    fmt.Println(<span class=\"hljs-string\">\"Angka\"<\/span>, i)\r\n\r\n    i++\r\n    <span class=\"hljs-keyword\">if<\/span> i == <span class=\"hljs-number\">5<\/span> {\r\n        <span class=\"hljs-keyword\">break<\/span>\r\n    }\r\n}\r\n<\/code><\/pre>\r\n<p>Dalam perulangan tanpa henti di atas, variabel&nbsp;<code>i<\/code>&nbsp;yang nilai awalnya&nbsp;<code>0<\/code>&nbsp;di-inkrementasi. Ketika nilai&nbsp;<code>i<\/code>&nbsp;sudah mencapai&nbsp;<code>5<\/code>, keyword&nbsp;<code>break<\/code>&nbsp;digunakan, dan perulangan akan berhenti.<\/p>\r\n<h2 id=\"a157-perulangan-elemen-array-menggunakan-keyword-for---range\">4. Perulangan Elemen Array Menggunakan Keyword <code>for<\/code>&nbsp;-&nbsp;<code>range<\/code><\/h2>\r\n<p>Ada cara yang lebih sederhana me-looping data array, dengan menggunakan keyword&nbsp;<code>for<\/code>&nbsp;-&nbsp;<code>range<\/code>. Contoh pengaplikasiannya bisa dilihat di kode berikut.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> fruits = [<span class=\"hljs-number\">4<\/span>]<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"grape\"<\/span>, <span class=\"hljs-string\">\"banana\"<\/span>, <span class=\"hljs-string\">\"melon\"<\/span>}\r\n\r\n<span class=\"hljs-keyword\">for<\/span> i, fruit := <span class=\"hljs-keyword\">range<\/span> fruits {\r\n    fmt.Printf(<span class=\"hljs-string\">\"elemen %d : %s\\n\"<\/span>, i, fruit)\r\n}\r\n<\/code><\/pre>\r\n<p>Array&nbsp;<code>fruits<\/code>&nbsp;diambil elemen-nya secara berurutan. Nilai tiap elemen ditampung variabel oleh&nbsp;<code>fruit<\/code>&nbsp;(tanpa huruf s), sedangkan indeks nya ditampung variabel&nbsp;<code>i<\/code>.<\/p>\r\n<p>Output program di atas, sama dengan output program sebelumnya, hanya cara yang digunakan berbeda.<\/p>\r\n<h2 id=\"a158-penggunaan-variabel-underscore--dalam-for---range\">5. Penggunaan Variabel Underscore <code>_<\/code>&nbsp;Dalam&nbsp;<code>for<\/code>&nbsp;-&nbsp;<code>range<\/code><\/h2>\r\n<p>Kadang kala ketika&nbsp;<em>looping<\/em>&nbsp;menggunakan&nbsp;<code>for<\/code>&nbsp;-&nbsp;<code>range<\/code>, ada kemungkinan dimana data yang dibutuhkan adalah elemen-nya saja, indeks-nya tidak. Sedangkan kode di atas,&nbsp;<code>range<\/code>&nbsp;mengembalikan 2 data, yaitu indeks dan elemen.<\/p>\r\n<p>Seperti yang sudah diketahui, bahwa di Go tidak memperbolehkan adanya variabel yang menganggur atau tidak dipakai. Jika dipaksakan, error akan muncul, contohnya seperti kode berikut.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> fruits = [<span class=\"hljs-number\">4<\/span>]<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"grape\"<\/span>, <span class=\"hljs-string\">\"banana\"<\/span>, <span class=\"hljs-string\">\"melon\"<\/span>}\r\n\r\n<span class=\"hljs-keyword\">for<\/span> i, fruit := <span class=\"hljs-keyword\">range<\/span> fruits {\r\n    fmt.Printf(<span class=\"hljs-string\">\"nama buah : %s\\n\"<\/span>, fruit)\r\n}\r\n<\/code><\/pre>\r\n<p>Hasil dari kode program di atas:<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Disinilah salah satu kegunaan variabel pengangguran, atau underscore (<code>_<\/code>). Tampung saja nilai yang tidak ingin digunakan ke underscore.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">var<\/span> fruits = [<span class=\"hljs-number\">4<\/span>]<span class=\"hljs-keyword\">string<\/span>{<span class=\"hljs-string\">\"apple\"<\/span>, <span class=\"hljs-string\">\"grape\"<\/span>, <span class=\"hljs-string\">\"banana\"<\/span>, <span class=\"hljs-string\">\"melon\"<\/span>}\r\n\r\n<span class=\"hljs-keyword\">for<\/span> _, fruit := <span class=\"hljs-keyword\">range<\/span> fruits {\r\n    fmt.Printf(<span class=\"hljs-string\">\"nama buah : %s\\n\"<\/span>, fruit)\r\n}\r\n<\/code><\/pre>\r\n<p>Pada kode di atas, yang sebelumnya adalah variabel&nbsp;<code>i<\/code>&nbsp;diganti dengan&nbsp;<code>_<\/code>, karena kebetulan variabel&nbsp;<code>i<\/code>&nbsp;tidak digunakan.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Jika yang dibutuhkan hanya indeks elemen-nya saja, bisa gunakan 1 buah variabel setelah keyword&nbsp;<code>for<\/code>.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">for<\/span> i, _ := <span class=\"hljs-keyword\">range<\/span> fruits { }\r\n<span class=\"hljs-comment\">\/\/ atau<\/span>\r\n<span class=\"hljs-keyword\">for<\/span> i := <span class=\"hljs-keyword\">range<\/span> fruits { }<\/code><\/pre>\r\n<h2 id=\"a145-penggunaan-keyword-break--continue\">6. Penggunaan Keyword <code>break<\/code>&nbsp;&amp;&nbsp;<code>continue<\/code><\/h2>\r\n<p>Keyword&nbsp;<code>break<\/code>&nbsp;digunakan untuk menghentikan secara paksa sebuah perulangan, sedangkan&nbsp;<code>continue<\/code>&nbsp;dipakai untuk memaksa maju ke perulangan berikutnya.<\/p>\r\n<p>Berikut merupakan contoh penerapan&nbsp;<code>continue<\/code>&nbsp;dan&nbsp;<code>break<\/code>. Kedua keyword tersebut dimanfaatkan untuk menampilkan angka genap berurutan yang lebih besar dari 0 dan dibawah 8.<\/p>\r\n<pre><code class=\"lang-go\"><span class=\"hljs-keyword\">for<\/span> i := <span class=\"hljs-number\">1<\/span>; i &lt;= <span class=\"hljs-number\">10<\/span>; i++ {\r\n    <span class=\"hljs-keyword\">if<\/span> i % <span class=\"hljs-number\">2<\/span> == <span class=\"hljs-number\">1<\/span> {\r\n        <span class=\"hljs-keyword\">continue<\/span>\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">if<\/span> i &gt; <span class=\"hljs-number\">8<\/span> {\r\n        <span class=\"hljs-keyword\">break<\/span>\r\n    }\r\n\r\n    fmt.Println(<span class=\"hljs-string\">\"Angka\"<\/span>, i)\r\n}\r\n<\/code><\/pre>\r\n<p>Kode di atas akan lebih mudah dicerna jika dijelaskan secara berurutan. Berikut adalah penjelasannya.<\/p>\r\n<ol>\r\n<li>Dilakukan perulangan mulai angka 1 hingga 10 dengan&nbsp;<code>i<\/code>&nbsp;sebagai variabel iterasi.<\/li>\r\n<li>Ketika&nbsp;<code>i<\/code>&nbsp;adalah ganjil (dapat diketahui dari&nbsp;<code>i % 2<\/code>, jika hasilnya&nbsp;<code>1<\/code>, berarti ganjil), maka akan dipaksa lanjut ke perulangan berikutnya.<\/li>\r\n<li>Ketika&nbsp;<code>i<\/code>&nbsp;lebih besar dari 8, maka perulangan akan berhenti.<\/li>\r\n<li>Nilai&nbsp;<code>i<\/code>&nbsp;ditampilkan.<\/li>\r\n<\/ol>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Array, Slice, Map &amp; Looping: <a href=\"https:\/\/youtu.be\/6K-5-pR9DgI\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=HK_lBa6iOiU\" target=\"_blank\" rel=\"noopener\">Array<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=ktrz4BCq-jM\">Slice<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=_4w2QxintH4\">Map<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=6LYLd5UiQdo\">Loop<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=xFFM8V37uQg\">Break &amp; Continue<\/a> (Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-array.html\" target=\"_blank\" rel=\"noopener\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-array.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-slice.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-slice.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-map.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-map.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-perulangan.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-perulangan.html<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-10-28 09:00:00","status_publish":"publish","urutan":4,"created_by":4336,"updated_by":4336,"created_at":"2021-09-23 08:20:34","updated_at":"2021-10-28 11:23:20","waktu_publish_formatted":" Kamis, 28 Oktober 2021. 09:00:00 WIB."},{"id":1405,"uuid":"77dfe081-e40a-4ad2-9b53-c844358a80a4","author_user_id":4336,"materi_section_id":379,"judul":"Hari 5 - Function","permalink":"hari-5-function","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Function<\/strong><\/span><\/p>\r\n<p style=\"text-align: left;\">Sebelumnya kita sudah mengenal sebuah function yang wajib dibuat agar program kita bisa berjalan, yaitu function main. lalu apa itu function, function adalah sebuah blok kode yang sengaja dibuat dalam program agar bisa digunakan berulang-ulang. Cara membuat function sangat sederhana, hanya dengan menggunakan kata kunci <code>func<\/code>lalu diikuti dengan nama function nya dan blok kode isi function nya Setelah membuat function, kita bisa mengeksekusi function tersebut dengan memanggilnya menggunakan kata kunci nama function nya diikuti tanda kurung buka, kurung tutup<\/p>\r\n<p style=\"text-align: left;\">berikut ini contoh penggunaan function:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<\/pre>\r\n<pre>import \"fmt\"<br \/><br \/>func printHello() {<br \/>  fmt.Println(\"Hello\")<br \/>}<br \/><br \/>func main() {<br \/>  printHello()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 style=\"text-align: left;\">1. Function&nbsp;Parameter<\/h2>\r\n<p>di dalam function terkadang kita memerlukan data dari luar function yang disebut parameter. Kita bisa menambahkan parameter di function, bisa lebih dari satu Parameter tidaklah wajib, jadi kita bisa membuat function tanpa parameter seperti sebelumnya yang sudah kita buat Namun jika kita menambahkan parameter di function, maka ketika memanggil function tersebut, kita wajib memasukkan data ke parameternya<\/p>\r\n<p>berikut ini contoh penggunaan parameter pada function:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func printAngka(angka1 int, angka2 int) {<br \/>  fmt.Println(\"angka pertama\", angka1)<br \/>  fmt.Println(\"angka kedua\", angka2)<br \/>}<br \/><br \/>func main() {<br \/>  printAngka(1, 2)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 style=\"text-align: left;\">2. Function Return Value<\/h2>\r\n<p>Function bisa mengembalikan data. Untuk memberitahu bahwa function mengembalikan data, kita harus menuliskan tipe data kembali dari function tersebut Jika function tersebut kita deklarasikan dengan tipe data pengembalian, maka wajib di dalam function nya kita harus mengembalikan data. Untuk mengembalikan data dari function, kita bisa menggunakan kata kunci return, diikuti dengan datanya&nbsp;<\/p>\r\n<p>berikut ini contoh penggunaan return value pada function:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func introduction(name string) string {<br \/>  return \"Hello My Name Is \" + name<br \/>}<br \/><br \/>func main() {<br \/>  \/\/langsung panggil didalam print<br \/>  fmt.Println(introduction(\"John\"))<br \/><br \/><br \/>  \/\/ menggunakan variabel<br \/>  result := introduction(\"Doe\")<br \/>  fmt.Println(result)<br \/><br \/>  \/\/ function as value<br \/>  secondResult := introduction<br \/>  fmt.Println(secondResult(\"Jack\"))<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 style=\"text-align: left;\">3. Function Return Multiple Value<\/h2>\r\n<p>Function tidak hanya dapat mengembalikan satu value, tapi juga bisa multiple value Untuk memberitahu jika function mengembalikan multiple value, kita harus menulis semua tipe data return value nya di function.<\/p>\r\n<p>Multiple return value wajib ditangkap semua value nya Jika kita ingin menghiraukan return value tersebut, kita bisa menggunakan tanda _ (garis bawah)&nbsp;<\/p>\r\n<p>berikut ini contoh penggunaan return multiple value pada function:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func introduction(firstName string, lastName string) (string, string) {<br \/>  introFirstName := \"Hello My First Name Is \" + firstName<br \/>  introLastName := \"Hello My Last Name Is \" + lastName<br \/>  return introFirstName, introLastName<br \/>}<br \/><br \/>func main() {<br \/>  firstName, lastName := introduction(\"John\", \"Doe\")<br \/>  fmt.Println(firstName, lastName)<br \/><br \/>  firstName2, _ := introduction(\"John\", \"Doe\")<br \/>  fmt.Println(firstName2)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 style=\"text-align: left;\">4. Function Predefined return value<\/h2>\r\n<p>Biasanya saat kita memberi tahu bahwa sebuah function mengembalikan value, maka kita hanya mendeklarasikan tipe data return value di function. Namun kita juga bisa membuat variable secara langsung di tipe data return function nya &nbsp;<\/p>\r\n<p>berikut ini contoh penggunaan return multiple value pada function:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>\/\/ contoh 1<br \/>func tambahAngka(firstNumber int, lastNumber int) (jumlah int) {<br \/>  jumlah = firstNumber+lastNumber<br \/>  return<br \/>}<br \/><br \/>\/\/ contoh 2<br \/>func tampilkanKataDanAngka() (firstWord, secondWord string, number int) {<br \/>  firstWord = \"Halo\"<br \/>  secondWord = \"Dunia\"<br \/>  number = 10<br \/>  return<br \/>}<br \/><br \/>func main() {<br \/>  hasil := tambahAngka(4,5)<br \/>  fmt.Println(hasil)<br \/><br \/>  kataPertama, kataKedua, angka := tampilkanKataDanAngka()<br \/>  fmt.Println(kataPertama, kataKedua, angka)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika di perhatikan pada function tambahAngka di dalamnya terdapat kode <code>jumlah = firstNumber+lastNumber<\/code>, variabel jumlah tidak menggunakan <code>var<\/code>sebelumnya maupun <code>:=<\/code> di karenakan nama jumlah sudah didefinisikan terlebih dahulu pada bersama tipe data yang akan di kembalikan<\/p>\r\n<h2 style=\"text-align: left;\">4. Variadic Function<\/h2>\r\n<p>Go mengadopsi konsep&nbsp;<strong>variadic function<\/strong>&nbsp;atau pembuatan fungsi dengan parameter sejenis yang tak terbatas. Maksud&nbsp;<strong>tak terbatas<\/strong>&nbsp;disini adalah jumlah parameter yang disisipkan ketika pemanggilan fungsi bisa berapa saja.<\/p>\r\n<p>Parameter variadic memiliki sifat yang mirip dengan slice. Nilai dari parameter-parameter yang disisipkan bertipe data sama, dan ditampung oleh sebuah variabel saja. Cara pengaksesan tiap datanya juga sama, dengan menggunakan index.<\/p>\r\n<p>Deklarasi parameter variadic sama dengan cara deklarasi variabel biasa, pembedanya adalah pada parameter jenis ini ditambahkan tanda titik tiga kali (<code>...<\/code>) tepat setelah penulisan variabel (sebelum tipe data). Nantinya semua nilai yang disisipkan sebagai parameter akan ditampung oleh variabel tersebut.<\/p>\r\n<p>Berikut merupakan contoh penggunaanya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func sum(numbers ...int) int {<br \/>  var total int = 0<br \/>  for _, number := range numbers {<br \/>    total += number<br \/>  }<br \/>  return total<br \/>}<br \/><br \/>func main() {<br \/>  var total = sum(2, 4, 3, 5, 4, 3, 3, 5, 5, 3)<br \/>  fmt.Println(total)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h3><strong>Pengisian Parameter Fungsi Variadic Menggunakan Data Slice<\/strong><\/h3>\r\n<p>Kadang ada kasus dimana kita menggunakan Variadic Function, namun memiliki variable berupa slice Kita bisa menjadikan <strong>slice <\/strong>sebagai <strong>parameter<\/strong>. cara menggunakannya cukup gunakan variabel slice sebagai parameter dan tambahkan tanda titik tiga kali (<code>...<\/code>) setelah nama variabel tersebut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func sum(numbers ...int) int {<br \/>  var total int = 0<br \/>  for _, number := range numbers {<br \/>    total += number<br \/>  }<br \/>  return total<br \/>}<br \/><br \/>func main() {<br \/>  var numbers = []int{2,6,7,8,9,10}<br \/>  var total = sum(numbers...)<br \/>  fmt.Println(total)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>&nbsp;<\/p>\r\n<h3><strong>Function Dengan Parameter Biasa &amp; Variadic<\/strong><\/h3>\r\n<p>Parameter variadic bisa dikombinasikan dengan parameter biasa, dengan syarat parameter variadic-nya harus diposisikan di akhir. Contohnya bisa dilihat pada kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func yourHobbies(name string, hobbies ...string) {<br \/>  fmt.Println(\"Hello, my name is\", name)<br \/>  fmt.Println(\"My hobbies are: \")<br \/>  for _, hobby := range hobbies {<br \/>    fmt.Println(hobby)<br \/>  }<br \/>}<br \/><br \/>func main() {<br \/>  yourHobbies(\"John\", \"Gaming\", \"Hiking\", \"Reading\")<br \/>  fmt.Println()<br \/><br \/>  var hobbies = []string{\"Sleeping\", \"Eating\"}<br \/>  yourHobbies(\"Doe\", hobbies...)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 style=\"text-align: left;\">5. Closure Function<\/h2>\r\n<p>Definisi&nbsp;<strong>Closure<\/strong>&nbsp;adalah sebuah fungsi yang bisa disimpan dalam variabel. Dengan menerapkan konsep tersebut, kita bisa membuat fungsi didalam fungsi, atau bahkan membuat fungsi yang mengembalikan fungsi.<\/p>\r\n<p>Closure merupakan&nbsp;<em>anonymous function<\/em>&nbsp;atau fungsi tanpa nama. Biasa dimanfaatkan untuk membungkus suatu proses yang hanya dipakai sekali atau dipakai pada blok tertentu saja.<\/p>\r\n<h3>Closure Disimpan Sebagai Variabel<\/h3>\r\n<p>Sebuah fungsi tanpa nama bisa disimpan dalam variabel. Variabel yang menyimpan closure memiliki sifat seperti fungsi yang disimpannya. Di bawah ini adalah contoh program sederhana untuk mencari nilai terendah dan tertinggi dari suatu array. Logika pencarian dibungkus dalam closure yang ditampung oleh variabel <code>getMinMax<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func main() {<br \/>  var getMinMax = func(n []int) (int, int) {<br \/>    var min, max int<br \/>    for i, e := range n {<br \/>      switch {<br \/>        case i == 0:<br \/>          max, min = e, e<br \/>        case e &gt; max:<br \/>          max = e<br \/>        case e &lt; min:<br \/>          min = e<br \/>      }<br \/>    }<br \/>    return min, max<br \/>  }<br \/>  var numbers = []int{2, 3, 4, 3, 4, 2, 3}<br \/>  var min, max = getMinMax(numbers)<br \/>  fmt.Println(\"data :\", numbers)<br \/>  fmt.Println(\"min :\", min)<br \/>  fmt.Println(\"min :\", max)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Bisa dilihat pada kode di atas bagiamana sebuah closure dibuat dan dipanggil. Sedikit berbeda memang dibanding pembuatan fungsi biasa. Fungsi ditulis tanpa nama, lalu ditampung dalam variabel.<\/p>\r\n<table style=\"border-collapse: collapse; width: 22.449%; margin-left: auto; margin-right: auto; height: 73px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 73px;\">\r\n<td style=\"width: 100%; text-align: left; height: 73px;\">\r\n<pre>var getMinMax = func(n []int) (int, int) {<br \/>&nbsp; &nbsp; \/\/ ...<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Cara pemanggilannya, dengan menuliskan nama variabel tersebut sebagai fungsi, seperti pemanggilan fungsi biasa.<\/span><\/pre>\r\n<table style=\"border-collapse: collapse; width: 22.449%; margin-left: auto; margin-right: auto; height: 32px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 73px;\">\r\n<td style=\"width: 100%; text-align: left; height: 32px;\">\r\n<pre>var min, max = getMinMax(numbers)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre>&nbsp;<\/pre>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output program:<\/span><\/pre>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari5-1.png\" \/><\/p>\r\n<h3>Closure Sebagai Nilai Kembali<\/h3>\r\n<p>Salah satu keunikan closure lainnya adalah bisa dijadikan sebagai nilai balik fungsi, cukup aneh memang, tapi pada suatu kondisi teknik ini sangat membantu. Di bawah ini disediakan sebuah fungsi bernama&nbsp;<code>findMax()<\/code>, fungsi ini salah satu nilai kembalinya berupa closure.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func findMax(numbers []int, max int) (int, func() []int) {<br \/>  var res []int<br \/>  for _, e := range numbers {<br \/>    if e &lt;= max {<br \/>      res = append(res, e)<br \/>    }<br \/>  }<br \/>  return len(res), func() []int {<br \/>    return res<br \/>  }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Nilai kembali ke-2 pada fungsi di atas adalah closure dengan skema <\/span><code>func() []int<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Bisa dilihat di bagian akhir, ada fungsi tanpa nama yang dikembalikan.<br \/><\/span><\/p>\r\n<table style=\"border-collapse: collapse; width: 22.449%; margin-left: auto; margin-right: auto; height: 32px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 73px;\">\r\n<td style=\"width: 100%; text-align: left; height: 32px;\">\r\n<pre>return len(res), func() []int {<br \/>&nbsp; &nbsp; return res<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre>&nbsp;<\/pre>\r\n<p>Sedikit tentang fungsi&nbsp;<code>findMax()<\/code>, fungsi ini digunakan untuk mencari banyaknya angka-angka yang nilainya di bawah atau sama dengan angka tertentu. Nilai kembalian pertama adalah jumlah angkanya. Nilai kembalian kedua berupa closure yang mengembalikan angka-angka yang dicari. Berikut merupakan contoh implementasi fungsi tersebut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>func main() {<br \/>  var max = 3<br \/>  var numbers = []int{2, 3, 0, 4, 3, 2, 0, 4, 2, 0, 3}<br \/>  var howMany, getNumbers = findMax(numbers, max)<br \/>  var theNumbers = getNumbers()<br \/>  fmt.Println(\"numbers\\t:\", numbers)<br \/>  fmt.Printf(\"find \\t: %d\\n\\n\", max)<br \/>  <br \/>  fmt.Println(\"found \\t:\", howMany) \/\/ 9<br \/>  fmt.Println(\"value \\t:\", theNumbers) \/\/ [2 3 0 3 2 0 2 0 3]<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output program:<\/span><\/pre>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari5-2.png\" \/><\/p>\r\n<h2 style=\"text-align: left;\">6. Function as Parameter<\/h2>\r\n<p>Function tidak hanya bisa kita simpan di dalam variable sebagai value Namun juga bisa kita gunakan sebagai parameter untuk function lain. Berikut ini contoh penggunaannya:<\/p>\r\n<p>&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>\/\/ function yang menggunakan function sebagai parameternya<br \/>func sayHelloWithFilter(name string, filter func(string) string) {<br \/>&nbsp; &nbsp; nameFiltered := filter(name)<br \/>&nbsp; &nbsp; fmt.Println(\"Hello\", nameFiltered)<br \/>}<br \/><br \/>\/\/ function yang digunakan sebagai parameter<br \/>func spamFilter(name string) string {<br \/>  &nbsp; if name == \"Kasar\" {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return \"...\"<br \/>&nbsp; &nbsp; }else {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return name<br \/>&nbsp; &nbsp; }<br \/>}<br \/><br \/>func main() {<br \/>  &nbsp; sayHelloWithFilter(\"John\", spamFilter)<br \/>  &nbsp; sayHelloWithFilter(\"Kasar\", spamFilter)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>&nbsp;<\/p>\r\n<p>dapat kita lihat terdapat 2 parameter pada function <code>sayHelloWithFilter<\/code> parameter pertama string dan parameter kedua berupa function yang parameternya string dan return nya string, dan kita bisa membuat function yang spesifikasinya seperti parameter kedua tersebut atau kita bisa menggunakan anonymous function langsung di parameter kedua (pada contoh diatas tidak menggunakan anonymous function)<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Function: <a href=\"https:\/\/youtu.be\/lYWs2Ed-7DM\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=FLWVZwLui40\" target=\"_blank\" rel=\"noopener\">Function<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=hwcTT9NDm-k\">Function Parameter<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=QfC5DmFhgkA\">Function Returm Value<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=_LsQPjARGI4\">Returning Multiple Value<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=u0CXlyXdFNM\">Named Return Value<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=JAcip3gzfkI\">Variadic Function<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=WwJuzTkv6ck\">Function Value<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=U_mwda3Tf_c\">Function as Parameter<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=b9Mcv02tmQk\">Anonymous Function<\/a> (Programmer Zaman Now)<\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=_DpyFlDXi7I\">Closure<\/a> (Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-multiple-return.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-multiple-return.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-variadic.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-variadic.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-closure.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-closure.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-sebagai-parameter.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-fungsi-sebagai-parameter.html<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-10-29 09:00:00","status_publish":"publish","urutan":5,"created_by":4336,"updated_by":4336,"created_at":"2021-09-24 06:43:44","updated_at":"2021-10-25 10:57:45","waktu_publish_formatted":" Jumat, 29 Oktober 2021. 09:00:00 WIB."}]},{"id":380,"uuid":"5dd5d8ae-3f44-4365-abdb-fead60310cc8","materi_id":36,"nama":"Pekan 1 - Tugas","permalink":"pekan-1-tugas","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-09-20 06:46:54","updated_at":null,"posting":[{"id":1393,"uuid":"559719f1-b944-45b9-9c9c-43c21c7e2d12","author_user_id":4336,"materi_section_id":380,"judul":"Tugas 1 - Git","permalink":"tugas-1-git","konten":"<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Tugas Harian Golang dikumpulkan <strong>link commit<\/strong> menggunakan <strong>gitlab<\/strong> atau <strong>github<\/strong>, pilih salah satu yang nyaman di gunakan. untuk petunjuk pengerjaan disini di pandu dengan <strong>gitlab<\/strong>, bagi yang ingin menggunakan <strong>github<\/strong> mohon disesuaikan.&nbsp;<br \/><br \/>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"1-buat-repository-project-baru\"><strong>1. Buat repository project&nbsp;<\/strong><\/h2>\r\n<p>Buatlah satu repository project baru di gitlab. dengan nama project <span style=\"background-color: #bfedd2;\">&ldquo;<strong>BDS Sanbercode Golang Batch XX<\/strong>&ldquo; <\/span><\/p>\r\n<p><span style=\"background-color: #bfedd2;\"><strong>XX di ganti menjadi angka batch misal batch 28 maka nama projectnya &ldquo;BDS Sanbercode Golang Batch 28&ldquo;<\/strong>, <\/span><\/p>\r\n<p>pastikan visibility level di set &ldquo;<strong>Private<\/strong>&ldquo;, dan centang pada bagian &ldquo;<strong>Initialize repository with a README<\/strong>&ldquo;.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/08\/tugas-1-go-1.jpg\" \/><\/p>\r\n<h2 id=\"2-buat-branch-baru\"><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-1-golang-1.png\" \/><\/strong><\/h2>\r\n<p><strong><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-1-golang-2.png\" \/><\/strong><\/p>\r\n<h2><strong>2. invite trainer<\/strong><\/h2>\r\n<p>invite trainer pada repository project yang telah di buat dengan menuju menu members<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-1-golang-3.png\" \/><\/p>\r\n<p><br \/>lalu pada tab invite member isi input &ldquo;<strong>GitLab member or Email address<\/strong>&rdquo; dengan <strong>username trainer <\/strong>lalu pada choose &ldquo;<strong>Choose a Role Permission<\/strong>&rdquo; pilih <strong>maintainer<\/strong> dan klik <strong>invite<\/strong><\/p>\r\n<p>untuk&nbsp;<strong>github&nbsp;<\/strong>bisa di sesuaikan dan invite <strong>trainer <\/strong>sebagai <strong>collaborator<br \/><br \/><span style=\"background-color: #bfedd2;\">username trainer di gitlab: abdul110<\/span><br \/><br \/><span style=\"background-color: #bfedd2;\">username trainer di github: abdulalim110<\/span><\/strong><\/p>\r\n<h2 id=\"2-buat-branch-baru\"><strong>3. Clone repository<\/strong><\/h2>\r\n<p>Lakukanlah clone dari project yang telah dibuat. Kemudian masuk ke folder project yang telah di clone<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-1-golang-4.png\" \/><\/p>\r\n<p>lalu copy text yang ada di dalam Clone With HTTPS lalu jalankan perintah ini di terminal\/cmd pada komputer\/laptop anda<\/p>\r\n<pre class=\"wp-block-code\"><code>git clone <strong>hasil_copy_dari_clone_with_https<\/strong><\/code><\/pre>\r\n<p><strong>hasil_copy_dari_clone_with_https di ganti dengan url yang di dapatkan dari clone with https pada gambar diatas<\/strong><\/p>\r\n<p>lalu pindah ke lokasi folder project yang sudah di clone<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-1-golang-5.png\" \/><\/p>\r\n<h2 id=\"3-menambahkan-file-baru\"><strong>4. Menambahkan folder dan file baru<\/strong><\/h2>\r\n<p>Buat folder baru dengan nama &ldquo;Tugas-1&rdquo; lalu tambahkan file &ldquo;data_peserta.txt&rdquo;. Isi file &ldquo;data_peserta.txt&rdquo; tersebut dengan nama dan email Anda saat mendaftar, akun gitlab, serta akun telegram pada grup diskusi, contoh:<\/p>\r\n<pre class=\"wp-block-preformatted\">Data Peserta Bootcamp Digital Skill - Golang Backend Development\r\n1. Nama: \r\n2. Email: \r\n3. Sistem Operasi yang digunakan:\r\n4. Akun Gitlab\/Github: \r\n5. Akun Telegram: <\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>5. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<h3 id=\"tambahan\"><strong>Tambahan<\/strong><\/h3>\r\n<p>bagi yang ingin mengerjakan selain di&nbsp;<strong>gitlab<\/strong>, di persilahkan menggunakan&nbsp;<strong>github<\/strong><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>","waktu_publish":"2021-10-25 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-09-20 06:50:47","updated_at":"2021-10-25 10:57:55","waktu_publish_formatted":" Senin, 25 Oktober 2021. 09:00:00 WIB."},{"id":1395,"uuid":"03d39956-bfc2-437a-9a60-d797f4360869","author_user_id":4336,"materi_section_id":380,"judul":"Tugas 2 - Introduction Golang, Variable, Constant & Data Type","permalink":"tugas-2-introduction-golang-variable-constant-data-type","konten":"<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p><span style=\"background-color: #e03e2d; color: #ecf0f1;\"><strong>&nbsp;CATATAN : <\/strong>SEKALI LAGI TIDAK PERLU BUAT REPOSITORY BARU ( PAKAI REPOSITORY DARI TUGAS SEBELUMNYA )&nbsp;<\/span><\/p>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama &ldquo;Tugas-2&rdquo;, lalu buat file baru di dalam folder tersebut dengan nama &ldquo;tugas2.go&rdquo;.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas2.go&rdquo;<\/p>\r\n<p><strong>soal 1<\/strong><\/p>\r\n<p>tampilkan kalimat \"Bootcamp Digital Skill Sanbercode Golang\" yang tersusun dari gabungan variabel dalam setiap kata (5 variabel)<\/p>\r\n<p><strong>soal 2<\/strong><\/p>\r\n<p>terdapat variabel seperti di bawah ini:<\/p>\r\n<p><code>halo := \"Halo Dunia\"<\/code><\/p>\r\n<p>ganti kata \"Dunia\" menjadi \"Golang\" menggunakan packages strings<\/p>\r\n<p><strong>soal 3<\/strong><\/p>\r\n<p>buatlah variabel-variabel seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>var kataPertama = \"saya\";\r\nvar kataKedua = \"senang\";\r\nvar kataKetiga = \"belajar\";\r\nvar kataKeempat = \"golang\";<\/code><\/pre>\r\n<p>gabungkan variabel-variabel tersebut agar menghasilkan output<\/p>\r\n<pre class=\"wp-block-code\"><code>saya Senang belajaR GOLANG<\/code><\/pre>\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>buatlah variabel-variabel seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>var angkaPertama= \"8\";\r\nvar angkaKedua= \"5\";\r\nvar angkaKetiga= \"6\";\r\nvar angkaKeempat = \"7\";<\/code><\/pre>\r\n<p>ubahlah variabel diatas menjadi integer dan jumlahkan semuanya<\/p>\r\n<p><strong>soal 5<\/strong><\/p>\r\n<p>terdapat variabel seperti di bawah ini:<\/p>\r\n<p><code>kalimat := \"halo halo bandung\"<br \/>angka := 2021<\/code><code><\/code><\/p>\r\n<p>olah variabel diatas yang hasil output akhrinya adalah<\/p>\r\n<p>\"Hi Hi bandung\" - 2021<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><\/h2>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>","waktu_publish":"2021-10-26 09:00:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-09-21 07:36:44","updated_at":"2021-10-25 16:18:47","waktu_publish_formatted":" Selasa, 26 Oktober 2021. 09:00:00 WIB."},{"id":1399,"uuid":"e833c812-2451-4a48-904f-64418a241230","author_user_id":4336,"materi_section_id":380,"judul":"Tugas 3 - Operator dan Conditional","permalink":"tugas-3-operator-dan-conditional","konten":"<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p><span style=\"background-color: #e03e2d; color: #ecf0f1;\"><strong>&nbsp;CATATAN : <\/strong>SEKALI LAGI TIDAK PERLU BUAT REPOSITORY BARU ( PAKAI REPOSITORY DARI TUGAS SEBELUMNYA )&nbsp;<\/span><\/p>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-3&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas3.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas3.go&rdquo;<\/p>\r\n<p><strong>soal 1<\/strong><\/p>\r\n<p>buatlah variabel-variabel seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 15.8639%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>var panjangPersegiPanjang string = \"8\"<br \/>var lebarPersegiPanjang string = \"5\"<br \/><br \/>var alasSegitiga string = \"6\"<br \/>var tinggiSegitiga string = \"7\"<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>ubah lah variabel diatas ke dalam integer dan gunakan pada operasi perhitungan dari keliling persegi panjang dan luas segitiga dengan variabel di bawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 15.8639%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>var luasPersegiPanjang int<br \/>var kelilingPersegiPanjang int<br \/>var luasSegitiga int<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu tampilkan hasil perhitungannya<\/p>\r\n<p><strong>soal 2<\/strong><\/p>\r\n<p>buatlah variabel seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 15.8639%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>var nilaiJohn = 80\r\nvar nilaiDoe = 50<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>tentukan indeks nilai dari <strong>nilaiJohn <\/strong>dan <strong>nilaiDoe <\/strong>(tampilkan dengan fmt.Println) dengan kondisi :<\/p>\r\n<table style=\"border-collapse: collapse; width: 15.8639%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>nilai &gt;= 80 indeksnya A\r\nnilai &gt;= 70 dan nilai &lt; 80 indeksnya B\r\nnilai &gt;= 60 dan nilai &lt; 70 indeksnya c\r\nnilai &gt;= 50 dan nilai &lt; 60 indeksnya D\r\nnilai &lt; 50 indeksnya E<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>kerjakan soal ini <strong>tanpa <\/strong>menggunakan <strong>function(ini materi hari 5)<\/strong><\/p>\r\n<p><strong>soal 3<\/strong><\/p>\r\n<p>buatlah variabel seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 15.8639%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>var tanggal = 17;\r\nvar bulan = 8; <br \/>var tahun = 1945;<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>ganti tanggal ,bulan, dan tahun sesuai dengan tanggal lahir anda dan buatlah switch case pada bulan, lalu muncul kan string nya dengan output seperti ini 17 Agustus 1945 (isi di sesuaikan dengan tanggal lahir masing-masing)<\/p>\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>Berikut adalah beberapa istilah generasi berdasarkan tahun kelahirannya:<\/p>\r\n<ol>\r\n<li>Baby boomer, kelahiran 1944 s.d 1964<\/li>\r\n<li>Generasi X, kelahiran 1965 s.d 1979<\/li>\r\n<li>Generasi Y (<em>Millenials<\/em>), kelahiran 1980 s.d 1994<\/li>\r\n<li>Generasi Z, kelahiran 1995 s.d 2015<\/li>\r\n<\/ol>\r\n<p>buatlah conditional dimana menghasilkan istilah diatas sesuai dengan tahun kelahiran anda<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><br \/><br \/><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>","waktu_publish":"2021-10-27 09:00:00","status_publish":"publish","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-09-22 06:50:41","updated_at":"2021-10-25 16:24:10","waktu_publish_formatted":" Rabu, 27 Oktober 2021. 09:00:00 WIB."},{"id":1403,"uuid":"7f1bb15f-aabe-4572-90d3-2e4db93b8171","author_user_id":4336,"materi_section_id":380,"judul":"Tugas 4 - Array, Slice, Map & Looping","permalink":"tugas-4-array-slice-map-looping","konten":"<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-4&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas4.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas4.go&rdquo;<\/p>\r\n<p><strong>soal 1<\/strong><\/p>\r\n<p>Pada tugas ini kamu diminta untuk melakukan looping. Untuk membuat tantangan ini lebih menarik, kamu juga diminta untuk memenuhi syarat tertentu yaitu:<\/p>\r\n<p>SYARAT:<br \/>A. Jika angka ganjil maka tampilkan Santai<br \/>B. Jika angka genap maka tampilkan Berkualitas<br \/>C. Jika angka yang sedang ditampilkan adalah kelipatan 3 DAN angka ganjil maka tampilkan I Love Coding.<\/p>\r\n<p>Output:<\/p>\r\n<pre class=\"wp-block-code\"><code>1 - Santai\r\n2 - Berkualitas\r\n3 - I Love Coding \r\n4 - Berkualitas\r\n5 - Santai\r\n6 - Berkualitas\r\n7 - Santai\r\n8 - Berkualitas\r\n9 - I Love Coding\r\n10 - Berkualitas\r\n11 - Santai\r\n12 - Berkualitas\r\n13 - Santai\r\n14 - Berkualitas\r\n15 - I Love Coding\r\n16 - Berkualitas\r\n17 - Santai\r\n18 - Berkualitas\r\n19 - Santai\r\n20 - Berkualitas<\/code><\/pre>\r\n<h4><strong>soal 2<\/strong><\/h4>\r\n<p>Kali ini kamu diminta untuk menampilkan sebuah segitiga dengan tanda pagar (#) dengan dimensi tinggi 7 dan alas 7. gunakan looping untuk mengerjakan soal ini<\/p>\r\n<p>Output:<\/p>\r\n<pre class=\"wp-block-code\"><code>#\r\n##\r\n###\r\n####\r\n#####\r\n######\r\n#######<\/code><\/pre>\r\n<h4>soal 3<\/h4>\r\n<p>buatlah variabel seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>var kalimat = [...]string{\"aku\", \"dan\", \"saya\", \"sangat\", \"senang\", \"belajar\", \"golang\"}<\/code><\/pre>\r\n<p>olah variabel diatas agar menghasilkan output seperti dibawah ini<\/p>\r\n<p><code>[saya sangat senang belajar golang]<\/code><code><\/code><\/p>\r\n<h4>soal 4<\/h4>\r\n<p>buatlah variabel seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>var sayuran = []string{}<\/code><\/pre>\r\n<p>tambahkanlah data di bawah ini ke variabel sayuran:<\/p>\r\n<ul>\r\n<li>Bayam<\/li>\r\n<li>Buncis<\/li>\r\n<li>Kangkung<\/li>\r\n<li>Kubis<\/li>\r\n<li>Seledri<\/li>\r\n<li>Tauge<\/li>\r\n<li>Timun<\/li>\r\n<\/ul>\r\n<p>lalu tampilkan dengan loop dan beri angka di depannya sehingga menghasilkan output seperti ini:<\/p>\r\n<p>1. Bayam<br \/>2. Buncis<br \/>3. Kangkung<br \/>4. Kubis<br \/>5. Seledri<br \/>6. Tauge<br \/>7. Timun<\/p>\r\n<h4>soal 5<\/h4>\r\n<p>buatlah variabel seperti di bawah ini<\/p>\r\n<div>\r\n<pre>var satuan = map[string]int{<br \/> &nbsp;\"panjang\":&nbsp;7,<br \/> &nbsp;\"lebar\":&nbsp;&nbsp;&nbsp;4,<br \/> &nbsp;\"tinggi\":&nbsp;&nbsp;6,<br \/>}<\/pre>\r\n<\/div>\r\n<p>gunakanlah variabel diatas menggunakan looping untuk menghasilkan output seperti di bawah ini<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas4-go-5.png\" \/><br \/><br \/>untuk urutan muncul panjang lebar dan tinggi tidak harus persis seperti output<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><br \/><br \/><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>","waktu_publish":"2021-09-23 09:00:00","status_publish":"publish","urutan":4,"created_by":4336,"updated_by":4336,"created_at":"2021-09-23 08:21:29","updated_at":"2021-10-25 16:24:20","waktu_publish_formatted":" Kamis, 23 September 2021. 09:00:00 WIB."},{"id":1404,"uuid":"96875736-2b69-4dc9-a4d0-8acad3c0ccd1","author_user_id":4336,"materi_section_id":380,"judul":"Tugas 5 - Function","permalink":"tugas-5-function","konten":"<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-5&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas5.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas5.go&rdquo;<\/p>\r\n<h3 id=\"soal-2\"><strong>soal 1<\/strong><\/h3>\r\n<p style=\"text-align: justify;\">Tulislah 3 function dengan nama luas persegi panjang, keliling persegi panjang dan volume balok<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>panjang := 12<br \/>lebar := 4<br \/>tinggi := 8<br \/>  <br \/>luas := luasPersegiPanjang(panjang, lebar)<br \/>keliling := kelilingPersegiPanjang(panjang, lebar)<br \/>volume := volumeBalok(panjang, lebar, tinggi)<br \/><br \/>fmt.Println(luas) <br \/>fmt.Println(keliling)<br \/>fmt.Println(volume)<br \/><br \/><\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h3 id=\"soal-3\"><strong>soal 2<\/strong><\/h3>\r\n<p>Tulislah sebuah function dengan nama introduce yang menggunakan <strong>predefined value\/ named value<\/strong>. pastikan semua parameter pada function introduce di gunakan semuanya<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>john := introduce(\"John\", \"laki-laki\", \"penulis\", \"30\")<br \/>fmt.Println(john) \/\/ Menampilkan \"Pak John adalah seorang penulis yang berusia 30 tahun\"<br \/><br \/>sarah := introduce(\"Sarah\", \"perempuan\", \"model\", \"28\")<br \/>fmt.Println(sarah) \/\/ Menampilkan \"Bu Sarah adalah seorang model yang berusia 28 tahun\"<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h4><strong>soal 3<\/strong><\/h4>\r\n<p>buatlah function yang menampung data <strong>slice<\/strong> di bawah ini sebagai <strong>variadic function<\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var buah = []string{\"semangka\", \"jeruk\", \"melon\", \"pepaya\"}<br \/><br \/>var buahFavoritJohn = buahFavorit(\"John\", buah...)<br \/><br \/>fmt.Println(buahFavoritJohn)<br \/>\/\/ halo nama saya john dan buah favorit saya adalah \"semangka\", \"jeruk\", \"melon\", \"pepaya\"<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h4><strong>soal 4<\/strong><\/h4>\r\n<p>buatlah closure function dengan nama tambahDataFilm untuk menambahkan data map[string]string ke slice dataFilm<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var dataFilm = []map[string]string{}<br \/>\/\/ buatlah closure function disini<br \/><br \/>tambahDataFilm(\"LOTR\", \"2 jam\", \"action\", \"1999\")<br \/>tambahDataFilm(\"avenger\", \"2 jam\", \"action\", \"2019\")<br \/>tambahDataFilm(\"spiderman\", \"2 jam\", \"action\", \"2004\")<br \/>tambahDataFilm(\"juon\", \"2 jam\", \"horror\", \"2004\")<br \/><br \/>for _, item := range dataFilm {<br \/>   fmt.Println(item)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>berikut ini output soal 4:<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas5-go-4.png\" \/><\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>","waktu_publish":"2021-10-29 09:00:00","status_publish":"publish","urutan":5,"created_by":4336,"updated_by":4336,"created_at":"2021-09-24 06:41:36","updated_at":"2021-10-25 16:28:37","waktu_publish_formatted":" Jumat, 29 Oktober 2021. 09:00:00 WIB."}]},{"id":385,"uuid":"8d16aec0-2940-4180-a8b7-fc1cdfa6ba94","materi_id":36,"nama":"Pekan 2 - Materi","permalink":"pekan-2-materi","urutan":4,"created_by":4336,"updated_by":4336,"created_at":"2021-09-27 06:33:45","updated_at":null,"posting":[{"id":1410,"uuid":"7d1fab0c-6e33-4ce5-b193-cae557183c48","author_user_id":4336,"materi_section_id":385,"judul":"Hari 6 - Pointer","permalink":"hari-6-pointer","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Pointer<\/strong><\/span><\/p>\r\n<p style=\"text-align: left;\">Pointer adalah <em>reference<\/em>&nbsp;atau alamat memori. Variabel pointer berarti variabel yang berisi alamat memori suatu nilai. Sebagai contoh sebuah variabel bertipe integer memiliki nilai&nbsp;<strong>4<\/strong>, maka yang dimaksud pointer adalah&nbsp;<strong>alamat memori dimana nilai 4 disimpan<\/strong>, bukan nilai 4 itu sendiri.<\/p>\r\n<p>Variabel-variabel yang memiliki&nbsp;<em>reference<\/em>&nbsp;atau alamat pointer yang sama, saling berhubungan satu sama lain dan nilainya pasti sama. Ketika ada perubahan nilai, maka akan memberikan efek kepada variabel lain (yang referensi-nya sama) yaitu nilainya ikut berubah.<\/p>\r\n<h2 id=\"a231-penerapan-pointer\">1. Penerapan Pointer<\/h2>\r\n<p>Variabel bertipe pointer ditandai dengan adanya tanda&nbsp;<strong>asterisk<\/strong>&nbsp;(<code>*<\/code>) tepat sebelum penulisan tipe data ketika deklarasi.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>var number *int<br \/>var name *string<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Nilai default variabel pointer adalah <\/span><code>nil<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;(kosong). Variabel pointer tidak bisa menampung nilai yang bukan pointer, dan sebaliknya variabel biasa tidak bisa menampung nilai pointer.<\/span><\/pre>\r\n<p>Ada dua hal penting yang perlu diketahui mengenai pointer:<\/p>\r\n<ul>\r\n<li>Variabel biasa bisa diambil nilai pointernya, caranya dengan menambahkan tanda&nbsp;<strong>ampersand<\/strong>&nbsp;(<code>&amp;<\/code>) tepat sebelum nama variabel. Metode ini disebut dengan&nbsp;<strong>referencing<\/strong>.<\/li>\r\n<li>Dan sebaliknya, nilai asli variabel pointer juga bisa diambil, dengan cara menambahkan tanda&nbsp;<strong>asterisk<\/strong>&nbsp;(<code>*<\/code>) tepat sebelum nama variabel. Metode ini disebut dengan&nbsp;<strong>dereferencing<\/strong>.<\/li>\r\n<\/ul>\r\n<p>OK, langsung saja kita praktekan.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>var numberA int = 4<br \/>var numberB *int = &amp;numberA<br \/><br \/>fmt.Println(\"numberA (value) &nbsp; :\", numberA) \/\/ 4<br \/>fmt.Println(\"numberA (address) :\", &amp;numberA) \/\/ 0xc20800a220<br \/><br \/>fmt.Println(\"numberB (value) &nbsp; :\", *numberB) \/\/ 4<br \/>fmt.Println(\"numberB (address) :\", numberB) \/\/ 0xc20800a220<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Variabel <\/span><code>numberB<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dideklarasikan bertipe pointer&nbsp;<\/span><code>int<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dengan nilai awal adalah referensi variabel&nbsp;<\/span><code>numberA<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;(bisa dilihat pada kode&nbsp;<\/span><code>&amp;numberA<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">). Dengan ini, variabel&nbsp;<\/span><code>numberA<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>numberB<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;menampung data dengan referensi alamat memori yang sama.<\/span><\/pre>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-pointer-1.png\" width=\"670\" height=\"192\" \/><\/p>\r\n<p>Variabel pointer jika di-print akan menghasilkan string alamat memori (dalam notasi heksadesimal), contohnya seperti&nbsp;<code>numberB<\/code>&nbsp;yang diprint menghasilkan&nbsp;<code>0xc20800a220<\/code>.<\/p>\r\n<p>Nilai asli sebuah variabel pointer bisa didapatkan dengan cara di-dereference terlebih dahulu (bisa dilihat pada kode&nbsp;<code>*numberB<\/code>).<\/p>\r\n<h2 id=\"a232-efek-perubahan-nilai-pointer\">2. Efek Perubahan Nilai Pointer<\/h2>\r\n<p>Ketika salah satu variabel pointer di ubah nilainya, sedang ada variabel lain yang memiliki referensi memori yang sama, maka nilai variabel lain tersebut juga akan berubah.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>var numberA int = 4<br \/>var numberB *int = &amp;numberA<br \/><br \/>fmt.Println(\"numberA (value) &nbsp; :\", numberA)<br \/>fmt.Println(\"numberA (address) :\", &amp;numberA)<br \/>fmt.Println(\"numberB (value) &nbsp; :\", *numberB)<br \/>fmt.Println(\"numberB (address) :\", numberB)<br \/><br \/>fmt.Println(\"\")<br \/><br \/>numberA = 5<br \/><br \/>fmt.Println(\"numberA (value) &nbsp; :\", numberA)<br \/>fmt.Println(\"numberA (address) :\", &amp;numberA)<br \/>fmt.Println(\"numberB (value) &nbsp; :\", *numberB)<br \/>fmt.Println(\"numberB (address) :\", numberB)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Variabel <\/span><code>numberA<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>numberB<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;memiliki referensi memori yang sama. Perubahan pada salah satu nilai variabel tersebut akan memberikan efek pada variabel lainnya. Pada contoh di atas,&nbsp;<\/span><code>numberA<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;nilainya di ubah menjadi&nbsp;<\/span><code>5<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. membuat nilai asli variabel&nbsp;<\/span><code>numberB<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;ikut berubah menjadi&nbsp;<\/span><code>5<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/pre>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-pointer-2.png\" \/><\/p>\r\n<h2 id=\"a233-parameter-pointer\">3. Parameter Pointer<\/h2>\r\n<p>Parameter bisa juga didesain sebagai pointer. Cara penerapannya kurang lebih sama, dengan cara mendeklarasikan parameter sebagai pointer.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func main() {<br \/>  var number = 4<br \/>  fmt.Println(\"before :\", number) \/\/ 4<br \/>  <br \/>  change(&amp;number, 10)<br \/>  fmt.Println(\"after &nbsp;:\", number) \/\/ 10<br \/>}<br \/><br \/>func change(original *int, value int) {<br \/>  *original = value<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Fungsi <\/span><code>change()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;memiliki 2 parameter, yaitu&nbsp;<\/span><code>original<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;yang tipenya adalah pointer&nbsp;<\/span><code>int<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, dan&nbsp;<\/span><code>value<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;yang bertipe&nbsp;<\/span><code>int<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Di dalam fungsi tersebut nilai asli parameter pointer&nbsp;<\/span><code>original<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;diubah.<\/span><\/pre>\r\n<p>Fungsi&nbsp;<code>change()<\/code>&nbsp;kemudian diimplementasikan di&nbsp;<code>main<\/code>. Variabel&nbsp;<code>number<\/code>&nbsp;yang nilai awalnya adalah&nbsp;<code>4<\/code>&nbsp;diambil referensi-nya lalu digunakan sebagai parameter pada pemanggilan fungsi&nbsp;<code>change()<\/code>.<\/p>\r\n<p>Nilai variabel&nbsp;<code>number<\/code>&nbsp;berubah menjadi&nbsp;<code>10<\/code>&nbsp;karena perubahan yang terjadi di dalam fungsi&nbsp;<code>change<\/code>&nbsp;adalah pada variabel pointer.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-pointer-3.png\" \/><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Pointer: <a href=\"https:\/\/youtu.be\/IBkQRkZhp0w\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=uhF5MVmYwA4\" target=\"_blank\" rel=\"noopener\">Pointer<\/a> (Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=13skDy7BQyU\" target=\"_blank\" rel=\"noopener\">Pointer di Function<\/a>&nbsp; (Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-pointer.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-pointer.html<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-01 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-09-27 06:34:12","updated_at":"2021-10-25 16:47:23","waktu_publish_formatted":" Senin, 01 November 2021. 09:00:00 WIB."},{"id":1417,"uuid":"be742109-77d1-465e-ab8b-a7567891c3ee","author_user_id":4336,"materi_section_id":385,"judul":"Hari 7 - Struct dan Method","permalink":"hari-7-struct-dan-method","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Struct<\/strong><\/span><\/p>\r\n<p style=\"text-align: left;\">Go tidak memiliki class yang ada di bahasa-bahasa strict OOP lain. Tapi Go memiliki tipe data struktur yang disebut dengan Struct.<\/p>\r\n<p><strong>Struct <\/strong>adalah kumpulan definisi variabel (atau property) dan atau fungsi (atau method), yang dibungkus sebagai tipe data baru dengan nama tertentu. Property dalam struct, tipe datanya bisa bervariasi. Mirip seperti&nbsp;<code>map<\/code>, hanya saja key-nya sudah didefinisikan di awal, dan tipe data tiap itemnya bisa berbeda.<\/p>\r\n<h2 id=\"a231-penerapan-pointer\">1. Deklarasi Struct<\/h2>\r\n<p>Keyword&nbsp;<code>type<\/code>&nbsp;digunakan untuk deklarasi struct. Di bawah ini merupakan contoh cara penggunaannya.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>type student struct {<br \/>&nbsp; &nbsp; name string<br \/>&nbsp; &nbsp; grade int<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Struct&nbsp;<code>student<\/code>&nbsp;dideklarasikan memiliki 2 property, yaitu&nbsp;<code>name<\/code>&nbsp;dan&nbsp;<code>grade<\/code>.<\/p>\r\n<h2 id=\"a231-penerapan-pointer\">2. Penerapan Struct<\/h2>\r\n<p>berbeda dengan map, struct tidak langsung bisa di gunakan begitu saja, struct bisa di gunakan dengan membuat data atau biasa disebut object berdasarkan dari struct yang sudah di buat. berikut contohnya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>func main() {<br \/>  var john student<br \/>  john.name = \"john doe\"<br \/>  john.grade = 2<br \/><br \/>  fmt.Println(\"name &nbsp;:\", john.name)<br \/>  fmt.Println(\"grade :\", john.grade)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>seperti yang terlihat pada contoh diatas bahwa cara membuat object dari sebuah struct sama seperti kita mendeklarasikan variabel, di mulai dari nama variabel dan diikuti dengan tipe data, pada contoh diatas tipe datanya adalah student yang didapatkan dari type student struct<\/p>\r\n<h2 id=\"a231-penerapan-pointer\">3. Struct Literals<\/h2>\r\n<p>&nbsp;Sebelumnya kita telah membuat object dari struct, namun sebenarnya ada banyak cara yang bisa kita gunakan untuk membuat data dari struct, berikut ini contohnya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>\/\/ cara pertama<br \/>var john = student{}<br \/>john.name = \"wick\"<br \/>john.grade = 2<br \/><br \/>\/\/ cara kedua tetapi isinya harus berurutan<br \/>var doe = student{\"doe\", 2}<br \/><br \/>\/\/ cara ketiga dengan nama property tetapi tidak harus berurutan<br \/>var jack = student{name: \"jack\", grade: 2}<br \/><br \/>fmt.Println(\"student 1 :\", john.name)<br \/>fmt.Println(\"student 2 :\", doe.name)<br \/>fmt.Println(\"student 3 :\", jack.name)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 id=\"a245-embedded-struct\">4. Embedded Struct<\/h2>\r\n<p><strong>Embedded<\/strong>&nbsp;struct adalah mekanisme untuk menempelkan sebuah struct sebagai properti struct lain. Agar lebih mudah dipahami, mari kita bahas kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>type person struct {<br \/>  name string<br \/>  age &nbsp;int<br \/>}<br \/><br \/>type student struct {<br \/>  grade int<br \/>  person<br \/>}<br \/><br \/>func main() {<br \/>  \/\/ contoh 1<br \/>  var john = student{}<br \/>  john.name = \"john\"<br \/>  john.age = 21<br \/>  john.grade = 2<br \/><br \/>  fmt.Println(\"name &nbsp;:\", john.name)<br \/>  fmt.Println(\"age &nbsp; :\", john.age)<br \/>  fmt.Println(\"age &nbsp; :\", john.person.age)<br \/>  fmt.Println(\"grade :\", john.grade)<br \/>  <br \/>  \/\/ contoh 2<br \/>  var doeData = person{name: \"doe\", age: 21}<br \/>  var doe = student{person: doeData, grade: 2}<br \/><br \/>  fmt.Println(\"name &nbsp;:\", doe.name)<br \/>  fmt.Println(\"age &nbsp; :\", doe.age)<br \/>  fmt.Println(\"grade :\", doe.grade)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>dapat terlihat diatas bahwa object john di inisialisasi berdasarkan object student dan property yang sebelumnya terdapat di object person dapat di gunakan jika struct student embed struct dari person<\/p>\r\n<h2 id=\"a248-anonymous-struct\">5. Anonymous Struct<\/h2>\r\n<p>Anonymous struct adalah struct yang tidak dideklarasikan di awal sebagai tipe data baru, melainkan langsung ketika pembuatan object. Teknik ini cukup efisien untuk pembuatan object yang struct-nya hanya dipakai sekali.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>type person struct {<br \/>  name string<br \/>  age &nbsp;int<br \/>}<br \/><br \/>func main() {<br \/>  var john = struct {<br \/>    person<br \/>    grade int<br \/>  }{}<br \/>  john.person = person{\"wick\", 21}<br \/>  john.grade = 2<br \/><br \/>  fmt.Println(\"name &nbsp;:\", john.person.name)<br \/>  fmt.Println(\"age &nbsp; :\", john.person.age)<br \/>  fmt.Println(\"grade :\", john.grade)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Pada kode di atas, variabel <code>john<\/code>&nbsp;langsung diisi objek anonymous struct yang memiliki property&nbsp;<code>grade<\/code>, dan property&nbsp;<code>person<\/code>&nbsp;yang merupakan embedded struct.<\/p>\r\n<p>Salah satu aturan yang perlu diingat dalam pembuatan anonymous struct adalah, deklarasi harus diikuti dengan inisialisasi. Bisa dilihat pada <code>john<\/code>&nbsp;setelah deklarasi struktur struct, terdapat kurung kurawal untuk inisialisasi objek. Meskipun nilai tidak diisikan di awal, kurung kurawal tetap harus ditulis.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>\/\/ anonymous struct tanpa pengisian property<br \/>var john = struct {<br \/>  person<br \/>  grade int<br \/>}{}<br \/><br \/>\/\/ anonymous struct dengan pengisian property<br \/>var doe = struct {<br \/>  person<br \/>  grade int<br \/>}{<br \/>  person: person{\"wick\", 21},<br \/>  grade: &nbsp;2,<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 id=\"a2412-nested-struct\">6. Nested struct<\/h2>\r\n<p>Nested struct adalah anonymous struct yang di-embed ke sebuah struct. Deklarasinya langsung didalam struct peng-embed. Contoh:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>type student struct {<br \/>  person struct {<br \/>    name string<br \/>    age &nbsp;int<br \/>  }<br \/>  grade &nbsp; int<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre>&nbsp;<\/pre>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Method<\/strong><\/span><\/p>\r\n<p><strong>Method<\/strong>&nbsp;adalah fungsi yang menempel pada&nbsp;<code>type<\/code>&nbsp;(bisa&nbsp;<code>struct<\/code>&nbsp;atau tipe data lainnya). Method bisa diakses lewat variabel objek.<\/p>\r\n<p>Keunggulan method dibanding fungsi biasa adalah memiliki akses ke property struct hingga level&nbsp;<em>private<\/em>&nbsp;(level akses nantinya akan dibahas lebih detail pada bab selanjutnya). Dan juga, dengan menggunakan method sebuah proses bisa di-enkapsulasi dengan baik.<\/p>\r\n<h2 id=\"a251-penerapan-method\">Penerapan Method<\/h2>\r\n<p>Cara menerapkan method sedikit berbeda dibanding penggunaan fungsi. Ketika deklarasi, ditentukan juga siapa pemilik method tersebut. Contohnya bisa dilihat pada kode berikut:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/>import \"strings\"<br \/><br \/>type student struct {<br \/>  name &nbsp;string<br \/>  grade int<br \/>}<br \/><br \/>func (s student) sayHello() {<br \/>  fmt.Println(\"halo\", s.name)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Cara deklarasi method sama seperti fungsi, hanya saja perlu ditambahkan deklarasi variabel object di sela-sela keyword <\/span><code>func<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;<br \/>dan nama fungsi. Struct yang digunakan akan menjadi pemilik method.<\/span><\/p>\r\n<p><code>func (s student) sayHello()<\/code>&nbsp;maksudnya adalah fungsi&nbsp;<code>sayHello<\/code>&nbsp;dideklarasikan sebagai method milik struct&nbsp;<code>student<\/code>. Pada contoh di atas struct&nbsp;<code>student<\/code>&nbsp;memiliki dua buah method, yaitu&nbsp;<code>sayHello()<\/code>&nbsp;<\/p>\r\n<p>Contoh pemanfaatan method bisa dilihat pada kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>func main() {<br \/>  &nbsp; var john = student{\"john wick\", 21}<br \/>  &nbsp; john.sayHello()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Struct dan Method: <a href=\"https:\/\/youtu.be\/uYvssxoOMSM\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=4A6-RUX94e4\">Struct<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=vCmnKHIok7E\">Method<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-struct.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-struct.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-method.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-method.html<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-02 09:00:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-09-28 07:48:40","updated_at":"2021-10-25 16:48:24","waktu_publish_formatted":" Selasa, 02 November 2021. 09:00:00 WIB."},{"id":1418,"uuid":"fa6d24d3-0ab6-43cb-8406-625e48a46d0b","author_user_id":4336,"materi_section_id":385,"judul":"Hari 8 - Interface","permalink":"hari-8-interface","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Interface<\/strong><\/span><\/p>\r\n<p>Interface adalah kumpulan definisi method yang tidak memiliki isi (hanya definisi saja), yang dibungkus dengan nama tertentu.<\/p>\r\n<p>Interface merupakan tipe data. Nilai object bertipe interface zero value-nya adalah&nbsp;<code>nil<\/code>. Interface mulai bisa digunakan jika sudah ada isinya, yaitu object konkret yang memiliki definisi method minimal sama dengan yang ada di interface-nya.<\/p>\r\n<h2 id=\"a271-penerapan-interface\">1. Penerapan Interface<\/h2>\r\n<p>Yang pertama perlu dilakukan untuk menerapkan interface adalah menyiapkan interface beserta definisi method nya. Keyword&nbsp;<code>type<\/code>&nbsp;dan&nbsp;<code>interface<\/code>&nbsp;digunakan untuk pendefinisian interface.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/>import \"math\"<br \/><br \/>type hitung interface {<br \/>  luas() float64<br \/>  keliling() float64<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Pada kode di atas, interface&nbsp;<\/span><code>hitung<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;memiliki 2 definisi method,&nbsp;<\/span><code>luas()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>keliling()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Interface ini nantinya digunakan sebagai tipe data pada variabel, dimana variabel tersebut akan menampung object bangun datar hasil dari struct yang akan kita buat.<\/span><\/p>\r\n<p style=\"text-align: justify;\">Dengan memanfaatkan interface&nbsp;<code>hitung<\/code>, perhitungan luas dan keliling bangun datar bisa dilakukan, tanpa perlu tahu jenis bangun datarnya sendiri itu apa.<\/p>\r\n<p style=\"text-align: justify;\">Siapkan struct bangun datar&nbsp;<code>lingkaran<\/code>, struct ini memiliki method yang beberapa diantaranya terdefinisi di interface&nbsp;<code>hitung<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>type lingkaran struct {<br \/>  diameter float64<br \/>}<br \/><br \/>func (l lingkaran) jariJari() float64 {<br \/>  return l.diameter \/ 2<br \/>}<br \/><br \/>func (l lingkaran) luas() float64 {<br \/>  return math.Pi * math.Pow(l.jariJari(), 2)<br \/>}<br \/><br \/>func (l lingkaran) keliling() float64 {<br \/>  return math.Pi * l.diameter<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Struct <\/span><code>lingkaran<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;di atas memiliki tiga method,&nbsp;<\/span><code>jariJari()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">,&nbsp;<\/span><code>luas()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, dan&nbsp;<\/span><code>keliling()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/p>\r\n<p>Selanjutnya, siapkan struct bangun datar&nbsp;<code>persegi<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>type persegi struct {<br \/>  sisi float64<br \/>}<br \/><br \/>func (p persegi) luas() float64 {<br \/>  return math.Pow(p.sisi, 2)<br \/>}<br \/><br \/>func (p persegi) keliling() float64 {<br \/>  return p.sisi * 4<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Perbedaan struct <\/span><code>persegi<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dengan&nbsp;<\/span><code>lingkaran<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;terletak pada method&nbsp;<\/span><code>jariJari()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Struct&nbsp;<\/span><code>persegi<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> tidak memiliki method tersebut. Tetapi meski demikian, variabel object hasil cetakan 2 struct ini akan tetap bisa ditampung oleh variabel cetakan interface&nbsp;<\/span><code>hitung<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, karena dua method yang ter-definisi di interface tersebut juga ada pada struct&nbsp;<\/span><code>persegi<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>lingkaran<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, yaitu&nbsp;<\/span><code>luas()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>keliling()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/p>\r\n<p>Buat implementasi perhitungan di&nbsp;<code>main<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>func main() {<br \/>  var bangunDatar hitung<br \/>  <br \/>  bangunDatar = persegi{10.0}<br \/>  fmt.Println(\"===== persegi\")<br \/>  fmt.Println(\"luas &nbsp; &nbsp; &nbsp;:\", bangunDatar.luas())<br \/>  fmt.Println(\"keliling &nbsp;:\", bangunDatar.keliling())<br \/>  <br \/>  bangunDatar = lingkaran{14.0}<br \/>  fmt.Println(\"===== lingkaran\")<br \/>  fmt.Println(\"luas &nbsp; &nbsp; &nbsp;:\", bangunDatar.luas())<br \/>  fmt.Println(\"keliling &nbsp;:\", bangunDatar.keliling())<br \/>  fmt.Println(\"jari-jari :\", bangunDatar.(lingkaran).jariJari())<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Perhatikan kode di atas. Variabel object&nbsp;<\/span><code>bangunDatar<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;bertipe interface&nbsp;<\/span><code>hitung<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Variabel tersebut digunakan untuk menampung object konkrit buatan struct&nbsp;<\/span><code>lingkaran<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>persegi<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/p>\r\n<p>Dari variabel tersebut, method&nbsp;<code>luas()<\/code>&nbsp;dan&nbsp;<code>keliling()<\/code>&nbsp;diakses. Secara otomatis Golang akan mengarahkan pemanggilan method pada interface ke method asli milik struct yang bersangkutan.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari7-1.png\" \/><\/p>\r\n<p>Method&nbsp;<code>jariJari()<\/code>&nbsp;pada struct&nbsp;<code>lingkaran<\/code>&nbsp;tidak akan bisa diakses karena tidak terdefinisi dalam interface&nbsp;<code>hitung<\/code>. Pengaksesannya dengan paksa akan menyebabkan error.<\/p>\r\n<p>Untuk mengakses method yang tidak ter-definisi di interface, variabel-nya harus di-casting terlebih dahulu ke tipe asli variabel konkritnya (pada kasus ini tipenya&nbsp;<code>lingkaran<\/code>), setelahnya method akan bisa diakses.<\/p>\r\n<p>Cara casting object interface sedikit unik, yaitu dengan menuliskan nama tipe tujuan dalam kurung, ditempatkan setelah nama interface dengan menggunakan notasi titik (seperti cara mengakses property, hanya saja ada tanda kurung nya). Contohnya bisa dilihat di kode berikut. Statement&nbsp;<code>bangunDatar.(lingkaran)<\/code>&nbsp;adalah contoh casting pada object interface.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>var bangunDatar hitung = lingkaran{14.0}<br \/>var bangunLingkaran lingkaran = bangunDatar.(lingkaran)<br \/><br \/>bangunLingkaran.jariJari()<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Perlu diketahui juga, jika ada interface yang menampung object konkrit dimana struct-nya tidak memiliki salah satu method yang terdefinisi di interface, error juga akan muncul. Intinya kembali ke aturan awal, variabel interface hanya bisa menampung object yang minimal memiliki semua method yang terdefinisi di interface-nya.<\/span><\/p>\r\n<h2 id=\"a272-embedded-interface\">2. Embedded Interface<\/h2>\r\n<p>Interface bisa di-embed ke interface lain, sama seperti struct. Cara penerapannya juga sama, cukup dengan menuliskan nama interface yang ingin di-embed ke dalam interface tujuan.<\/p>\r\n<p>Pada contoh berikut, disiapkan interface bernama&nbsp;<code>hitung2d<\/code>&nbsp;dan&nbsp;<code>hitung3d<\/code>. Kedua interface tersebut kemudian di-embed ke interface baru bernama&nbsp;<code>hitung<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/>import \"math\"<br \/><br \/>type hitung2d interface {<br \/>  luas() float64<br \/>  keliling() float64<br \/>}<br \/><br \/>type hitung3d interface {<br \/>  volume() float64<br \/>}<br \/><br \/>type hitung interface {<br \/>  hitung2d<br \/>  hitung3d<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Interface <\/span><code>hitung2d<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;berisikan method untuk kalkulasi luas dan keliling, sedang&nbsp;<\/span><code>hitung3d<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;berisikan method untuk mencari volume bidang. Kedua interface tersebut diturunkan di interface&nbsp;<\/span><code>hitung<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, menjadikannya memiliki kemampuan untuk menghitung luas, keliling, dan volume.<\/span><\/p>\r\n<p>Next, siapkan struct baru bernama&nbsp;<code>kubus<\/code>&nbsp;yang memiliki method&nbsp;<code>luas()<\/code>,&nbsp;<code>keliling()<\/code>, dan&nbsp;<code>volume()<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>type kubus struct {<br \/>  sisi float64<br \/>}<br \/><br \/>func (k kubus) volume() float64 {<br \/>  return math.Pow(k.sisi, 3)<br \/>}<br \/><br \/>func (k kubus) luas() float64 {<br \/>  return math.Pow(k.sisi, 2) * 6<br \/>}<\/pre>\r\n<pre>func (k kubus) keliling() float64 {<br \/>  return k.sisi * 12<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">object hasil cetakan struct&nbsp;<\/span><code>kubus<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;di atas, nantinya akan ditampung oleh object cetakan interface&nbsp;<\/span><code>hitung<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;yang isinya merupakan gabungan interface&nbsp;<\/span><code>hitung2d<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dan&nbsp;<\/span><code>hitung3d<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/p>\r\n<p>Terakhir, buat implementasi-nya di main.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>func main() {<br \/>  var bangunRuang hitung = kubus{4}<br \/><br \/>  fmt.Println(\"===== kubus\")<br \/>  fmt.Println(\"luas &nbsp; &nbsp; &nbsp;:\", bangunRuang.luas())<br \/>  fmt.Println(\"keliling &nbsp;:\", bangunRuang.keliling())<br \/>  fmt.Println(\"volume &nbsp; &nbsp;:\", bangunRuang.volume())<br \/>}<\/pre>\r\n<pre>&nbsp;<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Bisa dilihat di kode di atas, lewat interface <\/span><code>hitung<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, method&nbsp;<\/span><code>luas<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">,&nbsp;<\/span><code>keliling<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, dan&nbsp;<\/span><code>volume<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;bisa di akses.<\/span><\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari7-2.png\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Interface Kosong<\/strong><\/span><\/p>\r\n<p>Interface kosong atau&nbsp;<em>empty interface<\/em>&nbsp;yang dinotasikan dengan&nbsp;<code>interface{}<\/code>&nbsp;merupakan tipe data yang sangat spesial. Variabel bertipe ini bisa menampung segala jenis data, bahkan array, pointer, apapun. Tipe data dengan konsep ini biasa disebut dengan&nbsp;<strong>dynamic typing<\/strong>.<\/p>\r\n<h2 id=\"a281-penggunaan-interface\">1. Penggunaan&nbsp;<code>interface{}<\/code><\/h2>\r\n<p><code>interface{}<\/code>&nbsp;merupakan tipe data, sehingga cara penggunaannya sama seperti pada tipe data lainnya, hanya saja nilai yang diisikan bisa apa saja. Contoh:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func main() {<br \/>  var secret interface{}<br \/>  <br \/>  secret = \"ethan hunt\"<br \/>  fmt.Println(secret)<br \/><br \/>  secret = []string{\"apple\", \"manggo\", \"banana\"}<br \/>  fmt.Println(secret)<br \/><br \/>  secret = 12.4<br \/>  fmt.Println(secret)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Keyword <\/span><code>interface<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;seperti yang kita tau, digunakan untuk pembuatan interface. Tetapi ketika ditambahkan kurung kurawal (<\/span><code>{}<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">) di belakang-nya (menjadi&nbsp;<\/span><code>interface{}<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">), maka kegunaannya akan berubah, yaitu sebagai tipe data.<\/span><\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari7-3.png\" \/><\/p>\r\n<h2 id=\"a282-casting-variabel-interface-kosong\">2. Casting Variabel Interface Kosong<\/h2>\r\n<p>Variabel bertipe&nbsp;<code>interface{}<\/code>&nbsp;bisa ditampilkan ke layar sebagai&nbsp;<code>string<\/code>&nbsp;dengan memanfaatkan fungsi print, seperti&nbsp;<code>fmt.Println()<\/code>. Tapi perlu diketahui bahwa nilai yang dimunculkan tersebut bukanlah nilai asli, melainkan bentuk string dari nilai aslinya.<\/p>\r\n<p>Hal ini penting diketahui, karena untuk melakukan operasi yang membutuhkan nilai asli pada variabel yang bertipe&nbsp;<code>interface{}<\/code>, diperlukan casting ke tipe aslinya. Contoh seperti pada kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/>import \"strings\"<br \/><br \/>func main() {<br \/>  var secret interface{}<br \/><br \/>  secret = 2<br \/>  var number = secret.(int) * 10<br \/>  fmt.Println(secret, \"multiplied by 10 is :\", number)<br \/><br \/>  secret = []string{\"apple\", \"manggo\", \"banana\"}<br \/>  var fruits = strings.Join(secret.([]string), \", \")<br \/>  fmt.Println(fruits, \"is my favorite fruits\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Pertama, variabel <\/span><code>secret<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;menampung nilai bertipe numerik. Ada kebutuhan untuk mengalikan nilai yang ditampung variabel tersebut dengan angka&nbsp;<\/span><code>10<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Maka perlu dilakukan casting ke tipe aslinya, yaitu&nbsp;<\/span><code>int<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, setelahnya barulah nilai bisa dioperasikan, yaitu&nbsp;<\/span><code>secret.(int) * 10<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/p>\r\n<p>Pada contoh kedua,&nbsp;<code>secret<\/code>&nbsp;berisikan array string. Kita memerlukan string tersebut untuk digabungkan dengan pemisah tanda koma. Maka perlu di-casting ke&nbsp;<code>[]string<\/code>&nbsp;terlebih dahulu sebelum bisa digunakan di&nbsp;<code>strings.Join()<\/code>, contohnya pada&nbsp;<code>strings.Join(secret.([]string), \", \")<\/code>.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari7-4.png\" \/><\/p>\r\n<p>Teknik casting pada interface disebut dengan&nbsp;<strong>type assertions<\/strong>.<\/p>\r\n<h2 id=\"a283-casting-variabel-interface-kosong-ke-objek-pointer\">3. Casting Variabel Interface Kosong Ke object Pointer<\/h2>\r\n<p>Variabel&nbsp;<code>interface{}<\/code>&nbsp;bisa menyimpan data apa saja, termasuk data object, pointer, ataupun gabungan keduanya. Di bawah ini merupakan contoh penerapan interface untuk menampung data object pointer.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>)<br \/><br \/>type person struct {<br \/>  name string<br \/>  age int<br \/>}<br \/><br \/>func main(){<br \/>  var secret interface{} = &amp;person{name: \"wick\", age: 27}<br \/>  var name = secret.(*person).name<br \/>  fmt.Println(name)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Variabel <\/span><code>secret<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;dideklarasikan bertipe&nbsp;<\/span><code>interface{}<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;menampung referensi object cetakan struct&nbsp;<\/span><code>person<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Cara casting dari&nbsp;<\/span><code>interface{}<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;ke struct pointer adalah dengan menuliskan nama struct-nya dan ditambahkan tanda asterisk (<\/span><code>*<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">) di awal, contohnya seperti&nbsp;<\/span><code>secret.(*person)<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">. Setelah itu barulah nilai asli bisa diakses.<\/span><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Interface: <a href=\"https:\/\/youtu.be\/B8-CvxYpgyI\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=ZC5D6CAKX7U\" target=\"_blank\" rel=\"noopener\">Interface<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=-YOAS_Suz_w\" target=\"_blank\" rel=\"noopener\">Interface Kosong<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=VB0DprmixqM\" target=\"_blank\" rel=\"noopener\">Type Assertion<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-interface.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-interface.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-interface-kosong.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-interface-kosong.html<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-03 09:00:00","status_publish":"publish","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-09-29 06:10:06","updated_at":"2021-10-25 16:48:34","waktu_publish_formatted":" Rabu, 03 November 2021. 09:00:00 WIB."},{"id":1422,"uuid":"6fff2f0e-495c-43c6-9944-051f6fed32a7","author_user_id":4336,"materi_section_id":385,"judul":"Hari 9 - Package & Import","permalink":"hari-9-package-import","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Package &amp; Import<\/strong><\/span><\/p>\r\n<p>Pengembangan aplikasi dalam&nbsp;<em>real development<\/em>&nbsp;pasti membutuhkan banyak sekali file program. Tidak mungkin dalam sebuah project semua file memiliki nama package&nbsp;<code>main<\/code>, biasanya akan dipisah sebagai package berbeda sesuai bagiannya.<\/p>\r\n<p>Project folder selain berisikan file-file&nbsp;<code>.go<\/code>&nbsp;juga bisa berisikan sub-folder lainnya. Di Go, setiap folder atau sub-folder adalah satu package, file-file yang ada di dalam sebuah folder package-nya harus sama. Dan package pada file-file tersebut harus berbeda dengan package pada file-file lainnya yang berada pada folder berbeda.<\/p>\r\n<blockquote>\r\n<p>Jadi mudahnya, 1 folder adalah 1 package.<\/p>\r\n<\/blockquote>\r\n<p>Dalam sebuah package, biasanya kita menulis sangat banyak komponen, entah itu fungsi, struct, variabel, atau lainnya. Komponen tersebut bisa leluasa digunakan dalam package yang sama. Contoh sederhananya seperti program yang telah kita praktekan di bab sebelum-sebelumnya, dalam package&nbsp;<code>main<\/code>&nbsp;ada banyak yang di-<em>define<\/em>: fungsi, variabel, closure, struct, dan lainnya; kesemuanya bisa langsung dimanfaatkan.<\/p>\r\n<p>Jika dalam satu program terdapat lebih dari 1 package, atau ada package lain selain&nbsp;<code>main<\/code>, maka komponen dalam package lain tersebut tidak bisa diakses secara bebas dari file yang package-nya&nbsp;<code>main<\/code>, karena tiap komponen memiliki hak akses.<\/p>\r\n<p>Ada 2 jenis hak akses di Go:<\/p>\r\n<ul>\r\n<li>Hak akses&nbsp;<strong>Exported<\/strong>&nbsp;atau&nbsp;<strong>public<\/strong>. Menandakan komponen tersebut diperbolehkan untuk diakses dari package lain yang berbeda<\/li>\r\n<li>Hak akses&nbsp;<strong>Unexported<\/strong>&nbsp;atau&nbsp;<strong>private<\/strong>. Berarti komponen hanya bisa diakses dalam package yang sama, bisa dalam satu file saja atau dalam beberapa file yang masih 1 folder.<\/li>\r\n<\/ul>\r\n<p>Di Go cara menentukan level akses atau modifier sangat mudah, penandanya adalah&nbsp;<strong>character case<\/strong> huruf pertama nama fungsi, struct, variabel, atau lainnya. Ketika namanya diawali dengan huruf besar menandakan <em>exported<\/em>&nbsp;(atau&nbsp;<em>public<\/em>). Dan sebaliknya, jika diawali huruf kecil, berarti&nbsp;<em>unexported<\/em>&nbsp;(atau private).<\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">1. Penggunaan Package &amp; Import<\/h2>\r\n<p>Pertama buat folder proyek baru bernama&nbsp;<code>belajar-golang-level-akses<\/code>, inisialisasi sebagai projek dengan nama yang sama. Kemudian buat file baru bernama&nbsp;<code>main.go<\/code>&nbsp;di dalamnya, lalu set nama package file tersebut sebagai&nbsp;<strong>main<\/strong>.<\/p>\r\n<p>Kemudian, buat sub-folder baru bernama&nbsp;<code>library<\/code>&nbsp;di dalam folder&nbsp;<code>belajar-golang-level-akses<\/code>. Didalam folder&nbsp;<code>library<\/code>, buat file baru&nbsp;<code>library.go<\/code>, set nama package-nya&nbsp;<strong>library<\/strong>.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari10-1.png\" width=\"963\" height=\"565\" \/><\/p>\r\n<p>Buka file&nbsp;<code>library.go<\/code>&nbsp;lalu isi dengan kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.729%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package library<br \/><br \/>import \"fmt\"<br \/><br \/>func SayHello() {<br \/>  fmt.Println(\"hello\")<br \/>}<br \/><br \/>func introduce(name string) {<br \/>  fmt.Println(\"nama saya\", name)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>File&nbsp;<code>library.go<\/code>&nbsp;yang telah dibuat ditentukan nama package-nya adalah&nbsp;<code>library<\/code>&nbsp;(sesuai dengan nama folder), berisi dua buah fungsi,&nbsp;<code>SayHello()<\/code>&nbsp;dan&nbsp;<code>introduce()<\/code>.<\/p>\r\n<ul>\r\n<li>Fungsi&nbsp;<code>SayHello()<\/code>, level aksesnya adalah publik, ditandai dengan nama fungsi diawali huruf besar.<\/li>\r\n<li>Fungsi&nbsp;<code>introduce()<\/code>&nbsp;dengan level akses private, ditandai oleh huruf kecil di awal nama fungsi.<\/li>\r\n<\/ul>\r\n<p>Selanjutnya kita lakukan tes apakah memang fungsi yang ber-modifier private dalam package&nbsp;<code>library<\/code>&nbsp;tidak bisa diakses dari package lain.<\/p>\r\n<p>Buka file&nbsp;<code>main.go<\/code>, lalu tulis kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 45.729%; height: 170px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 170px;\">\r\n<pre>package main <br \/><br \/>import \"belajar-golang-level-akses\/library\"<br \/><br \/>func main() {<br \/>  library.SayHello()<br \/>  library.introduce(\"john\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Bisa dilihat bahwa package <code>library<\/code>&nbsp;yang telah dibuat tadi, di-import ke dalam package&nbsp;<code>main<\/code>.<\/p>\r\n<p>Folder utama atau root folder dalam project yang sedang digarap adalah&nbsp;<code>belajar-golang-level-akses<\/code>, sehingga untuk import package lain yang merupakan subfolder, harus dituliskan lengkap path folder nya, seperti&nbsp;<code>belajar-golang-level-akses\/library<\/code>.<\/p>\r\n<p>Penanda root folder adalah tempat dimana file&nbsp;<code>go.mod<\/code>&nbsp;berada.<\/p>\r\n<p>Ok, kita lanjut. Perhatikan kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>library.SayHello()<br \/>library.introduce(\"john\")<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Cara pemanggilan fungsi yang berada dalam package lain adalah dengan menuliskan nama package target diikut dengan nama fungsi menggunakan <em>dot notation<\/em>&nbsp;atau tanda titik, seperti&nbsp;<code>library.SayHello()<\/code>&nbsp;atau&nbsp;<code>library.introduce(\"john\")<\/code><\/p>\r\n<p>OK, sekarang coba jalankan kode yang sudah disiapkan di atas, hasilnya error.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari10-2.png\" \/><\/p>\r\n<p>Error di atas disebabkan karena fungsi&nbsp;<code>introduce()<\/code>&nbsp;yang berada dalam package&nbsp;<code>library<\/code>&nbsp;memiliki level akses&nbsp;<em>undexported<\/em>&nbsp;(atau&nbsp;<em>private<\/em>), fungsi ini tidak bisa diakses dari package lain (pada kasus ini&nbsp;<code>main<\/code>). Agar bisa diakses, solusinya bisa dengan menjadikannya ke bentuk&nbsp;<em>exported<\/em>&nbsp;(atau&nbsp;<em>public<\/em>), atau diubah cara pemanggilannya. Disini kita menggunakan cara ke-2.<\/p>\r\n<p>Tambahkan parameter&nbsp;<code>name<\/code>&nbsp;pada fungsi&nbsp;<code>SayHello()<\/code>, lalu panggil fungsi&nbsp;<code>introduce()<\/code>&nbsp;dengan menyisipkan parameter&nbsp;<code>name<\/code>&nbsp;dari dalam fungsi&nbsp;<code>SayHello()<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>func SayHello(name string) {<br \/>  fmt.Println(\"hello\")<br \/>  introduce(name)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Di <code>main<\/code>, cukup panggil fungsi&nbsp;<code>SayHello()<\/code>&nbsp;saja, sisipkan sebuah string sebagai parameter.<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>func main() {<br \/>  library.SayHello(\"john\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Coba jalankan lagi.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari10-3.png\" \/><\/p>\r\n<h2 id=\"a265-import-dengan-prefix-tanda-titik\">2. Import Dengan Prefix Tanda Titik<\/h2>\r\n<p>Seperti yang kita tahu, untuk mengakses fungsi\/struct\/variabel yg berada di package lain, nama package nya perlu ditulis, contohnya seperti pada penggunaan penggunaan&nbsp;<code>library.Student<\/code>&nbsp;dan&nbsp;<code>fmt.Println()<\/code>.<\/p>\r\n<p>Di Go, komponen yang berada di package lain yang di-import bisa dijadikan se-level dengan komponen package peng-import, caranya dengan menambahkan tanda titik (<code>.<\/code>) setelah penulisan keyword&nbsp;<code>import<\/code>. Maksud dari se-level disini adalah, semua properti di package lain yg di-import bisa diakses tanpa perlu menuliskan nama package, seperti ketika mengakses sesuatu dari file yang sama.<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>import (<br \/>  . \"belajar-golang-level-akses\/library\"<br \/>  \"fmt\"<br \/>)<br \/><br \/>func main() { &nbsp; &nbsp;&nbsp;<br \/>&nbsp; &nbsp;SayHello(\"john\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Pada kode di atas package <code>library<\/code>&nbsp;di-import menggunakan tanda titik. Dengan itu, pemanggilan struct&nbsp;<code>Student<\/code>&nbsp;tidak perlu dengan menuliskan nama package nya.<\/p>\r\n<h2 id=\"a266-pemanfaatan-alias-ketika-import-package\">3. Pemanfaatan Alias Ketika Import Package<\/h2>\r\n<p>Fungsi yang berada di package lain bisa diakses dengan cara menuliskan nama-package diikuti nama fungsi-nya, contohnya seperti&nbsp;<code>fmt.Println()<\/code>. Package yang sudah di-import tersebut bisa diubah namanya dengan cara menggunakan alias pada saat import. Contohnya bisa dilihat pada kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>import (<br \/>  f \"fmt\"<br \/>)<br \/><br \/>func main() {<br \/>  f.Println(\"Hello World!\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Pada kode di-atas, package <code>fmt<\/code>&nbsp;di tentukan aliasnya adalah&nbsp;<code>f<\/code>, untuk mengakses&nbsp;<code>Println()<\/code>&nbsp;cukup dengan&nbsp;<code>f.Println()<\/code>.<\/p>\r\n<h2 id=\"a267-mengakses-properti-dalam-file-yang-package-nya-sama\">4. Mengakses Properti Dalam File Yang Package-nya Sama<\/h2>\r\n<p>Jika properti yang ingin di akses masih dalam satu package tapi berbeda file, cara mengaksesnya bisa langsung dengan memanggil namanya. Hanya saja ketika eksekusi, file-file lain yang yang nama package-nya sama juga ikut dipanggil.<\/p>\r\n<p>Langsung saja kita praktekan, buat file baru dalam&nbsp;<code>belajar-golang-level-akses<\/code>&nbsp;dengan nama&nbsp;<code>partial.go<\/code>.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari10-4.png\" \/><\/p>\r\n<p>Tulis kode berikut pada file&nbsp;<code>partial.go<\/code>. File ini kita set package-nya&nbsp;<code>main<\/code>&nbsp;(sama dengan nama package file&nbsp;<code>main.go<\/code>).<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func sayHello(name string) {<br \/>  fmt.Println(\"halo\", name)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Hapus semua isi file <code>main.go<\/code>, lalu silakan tulis kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>package main<br \/><br \/>func main() {<br \/>  sayHello(\"john\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Sekarang terdapat 2 file berbeda (<code>main.go<\/code>&nbsp;dan&nbsp;<code>partial.go<\/code>) dengan package adalah sama,&nbsp;<code>main<\/code>. Pada saat&nbsp;<code>go build<\/code>&nbsp;atau&nbsp;<code>go run<\/code>, semua file dengan nama package&nbsp;<code>main<\/code>&nbsp;harus dituliskan sebagai argumen command.<\/p>\r\n<p><strong>go run main.go partial.go <\/strong><\/p>\r\n<p>Fungsi&nbsp;<code>sayHello<\/code>&nbsp;pada file&nbsp;<code>partial.go<\/code>&nbsp;bisa dikenali meski level aksesnya adalah&nbsp;<em>unexported<\/em>. Hal ini karena kedua file tersebut (<code>main.go<\/code>&nbsp;dan&nbsp;<code>partial.go<\/code>) memiliki package yang sama.<\/p>\r\n<blockquote>\r\n<p>Cara lain untuk menjalankan program bisa dengan perintah&nbsp;<code>go run *.go<\/code>, dengan cara ini tidak perlu menuliskan nama file nya satu per satu.<\/p>\r\n<\/blockquote>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari10-5.png\" \/><\/p>\r\n<h2 id=\"a266-pemanfaatan-alias-ketika-import-package\">3. Package Initialization<\/h2>\r\n<p>Saat kita membuat package, kita bisa membuat sebuah function yang akan diakses ketika package kita diakses Ini sangat cocok ketika contohnya, jika package kita berisi function-function untuk berkomunikasi dengan database, kita membuat function inisialisasi untuk membuka koneksi ke database Untuk membuat function yang diakses secara otomatis ketika package diakses, kita cukup membuat function dengan nama init.<\/p>\r\n<p>berikut contohnya terdapat kode seperti di bawah ini pada helper.go:<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>var DatabaseConnection string<br \/><br \/>func init() {<br \/>  DatabaseConnection = \"MySQL\"<\/pre>\r\n<pre>  fmt.Println(\"Melakukan init\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>dan pada main.go:<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>import (<br \/>  \"fmt\"<br \/>  \"belajar-golang-level-akses\/library\"<br \/>)<br \/><br \/>func main() {<br \/>  fmt.Println(library.DatabaseConnection)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Dapat terlihat diatas bahwa terdapat sebuah variabel global DatabaseConnection yang di assign dengan value \"MySQL\" dan pada function main di print<\/p>\r\n<p>Kadang kita hanya ingin menjalankan init function di package tanpa harus mengeksekusi salah satu function yang ada di package Secara default, Go akan komplain ketika ada package yang di import namun tidak digunakan Untuk menangani hal tersebut, kita bisa menggunakan blank identifier (_) sebelum nama package ketika melakukan import&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 31.5993%; height: 10px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 170px;\">\r\n<td style=\"width: 100%; height: 10px;\">\r\n<pre>import (<br \/>  \"fmt\"<br \/>  _\"belajar-golang-level-akses\/library\"<br \/>)<br \/><br \/>func main() {<br \/>  \/\/ fmt.Println(library.DatabaseConnection)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Package &amp; Import: <a href=\"https:\/\/youtu.be\/PM82ArTGC4U\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=m_fGFXGnbv0\" target=\"_blank\" rel=\"noopener\">Package &amp; Import<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=usKtv5KdBrg\" target=\"_blank\" rel=\"noopener\">Access Modifier<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=J3zI9VEyK60\" target=\"_blank\" rel=\"noopener\">Package Initialization<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-properti-public-dan-private.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-properti-public-dan-private.html<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-04 09:00:00","status_publish":"publish","urutan":4,"created_by":4336,"updated_by":4336,"created_at":"2021-09-29 11:07:21","updated_at":"2021-10-25 16:48:45","waktu_publish_formatted":" Kamis, 04 November 2021. 09:00:00 WIB."},{"id":1428,"uuid":"c363061a-bf04-4281-b2b8-760e75e04e31","author_user_id":4336,"materi_section_id":385,"judul":"Hari 10 - Defer, Panic, Recover, Error & Golang Packages","permalink":"hari-10-defer-panic-recover-error-golang-packages","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Defer<\/strong><\/span><\/p>\r\n<p>Defer function adalah function yang bisa kita jadwalkan untuk dieksekusi setelah sebuah function selesai di eksekusi. Defer function akan selalu dieksekusi walaupun terjadi error di function yang dieksekusi. berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>)<br \/><br \/>func logging(){<br \/>  fmt.Println(\"selesai memanggil function\")<br \/>}<br \/><br \/>func runApplication(){<br \/>  defer logging()<br \/>  fmt.Println(\"Run Application\")<br \/>}<br \/><br \/>func main(){<br \/>  runApplication()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>dapat terlihat diatas terdapat function runApplication yang didalamnya terdapat kode defer logging(). defer logging ini akan di eksekusi meskipun terjadi error di program dan defer logging di eksekusi terakhir meskipun di letakkan diatas. secara default defer function lebih baik di baris pertama dari function.<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Panic<\/strong><\/span><\/p>\r\n<p><strong>Panic <\/strong>function adalah function yang bisa kita gunakan untuk menghentikan program. Panic function biasanya dipanggil ketika terjadi error pada saat program kita berjalan. Saat panic function dipanggil, program akan terhenti, namun defer function tetap akan dieksekusi. berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>)<br \/><br \/>func endApp(){<br \/>  fmt.Println(\"End App\")<br \/>}<br \/><br \/>func runApp(error bool){<br \/>  defer endApp()<br \/>  if error{<br \/>    panic(\"ERROR\")<br \/>  }<br \/>}<br \/><br \/>func main(){<br \/>  runApp(true)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>pada kode diatas terlihat bahwa didalam function runApp terdapat kode panic(\"ERROR\") ini berarti program akan di berhentikan dengan panic dan messagenya adalah \"ERROR\".<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-panic-1.png\" width=\"624\" height=\"262\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Recover<\/strong><\/span><\/p>\r\n<p><strong>Recover <\/strong>adalah function yang bisa kita gunakan untuk menangkap data panic. Dengan recover proses panic akan terhenti, sehingga program akan tetap berjalan. berikut contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>)<br \/><br \/>func endApp(){<br \/>  fmt.Println(\"End App\")<br \/>  message := recover()<br \/>  fmt.Println(\"Terjadi Error\", message)<br \/>}<br \/><br \/>func runApp(error bool){<br \/>  defer endApp()<br \/>  if error{<br \/>    panic(\"ERROR\")<br \/>  }<br \/>}<br \/><br \/>func main(){<br \/>  runApp(true)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>pada kode tersebut jika dibandingkan dengan contoh di panic, terdapat perbedaan, yaitu pada function endApp terdapat variabel message yang berisi recover(), recover() tersebut berfungsi untuk menangkap pesan error yang di keluarkan oleh panic.<\/p>\r\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-recover-1.png\" width=\"587\" height=\"160\" \/>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Error<\/strong><\/span><\/p>\r\n<p><strong>Error <\/strong>merupakan sebuah tipe. Error memiliki 1 buah property berupa method Error(), method ini mengembalikan detail pesan error dalam string. Error termasuk tipe yang isinya bisa nil. cara menuliskan tipe data error cukup dengan menulis error (huruf kecil semua).<\/p>\r\n<p>Di Go, banyak sekali fungsi yang mengembalikan nilai balik lebih dari satu. Biasanya, salah satu kembalian adalah bertipe error. Contohnya seperti pada fungsi strconv.Atoi(). Fungsi tersebut digunakan untuk konversi data string menjadi numerik. Fungsi ini mengembalikan 2 nilai balik. Nilai balik pertama adalah hasil konversi, dan nilai balik kedua adalah error. Ketika konversi berjalan mulus, nilai balik kedua akan bernilai nil. Sedangkan ketika konversi gagal, penyebabnya bisa langsung diketahui dari error yang dikembalikan.<\/p>\r\n<p>Dibawah ini merupakan contoh program sederhana untuk deteksi inputan dari user, apakah numerik atau bukan. Dari sini kita akan belajar mengenai pemanfaatan error.<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"strconv\"<br \/>)<br \/><br \/>func main() {<br \/>  var input string<br \/>  fmt.Print(\"Type some number: \")<br \/>  fmt.Scanln(&amp;input)<br \/>  <br \/>  number, err := strconv.Atoi(input)<br \/>  <br \/>  if err == nil {<br \/>    fmt.Println(number, \"is number\")<br \/>  } else {<br \/>    fmt.Println(input, \"is not number\")<br \/>    fmt.Println(err.Error())<br \/>  }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Jalankan program, maka muncul tulisan \"Type some number: \". Ketik angka bebas, jika sudah maka enter. Statement fmt.Scanln(&amp;input) dipergunakan untuk men-capture inputan yang diketik oleh user sebelum dia menekan enter, lalu menyimpannya sebagai string ke variabel input.<\/p>\r\n<p>Selanjutnya variabel tersebut dikonversi ke tipe numerik menggunakan strconv.Atoi(). Fungsi tersebut mengembalikan 2 data, ditampung oleh number dan err. Data pertama (number) berisi hasil konversi. Dan data kedua err, berisi informasi errornya (jika memang terjadi error ketika proses konversi).<\/p>\r\n<p>Setelah itu dilakukan pengecekkan, ketika tidak ada error, number ditampilkan. Dan jika ada error, input ditampilkan beserta pesan errornya.<\/p>\r\n<p>Pesan error bisa didapat dari method Error() milik tipe error.<\/p>\r\n<h2 id=\"a372-membuat-custom-error\">Membuat Custom Error<\/h2>\r\n<p>Selain memanfaatkan error hasil kembalian suatu fungsi internal yang tersedia, kita juga bisa membuat objek error sendiri dengan menggunakan fungsi&nbsp;<code>errors.New()<\/code>&nbsp;(harus import package&nbsp;<code>errors<\/code>&nbsp;terlebih dahulu).<\/p>\r\n<p>berikut contoh penggunaanya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; margin-left: auto; margin-right: auto; height: 10px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 10px;\">\r\n<td style=\"width: 100%; text-align: left; height: 10px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"errors\"<br \/>)<br \/><br \/>func pembagian(nilai uint, pembagi uint)(float64, error){<br \/>  if pembagi == 0 {<br \/>    return 0.0, errors.New(\"Maaf pembagi tidak boleh NOL\")<br \/>  }else{<br \/>    return float64(nilai\/pembagi), nil<br \/>  }<br \/>}<br \/><br \/>func main(){<br \/>  hasil, err := pembagian(8,4)<br \/>  if err == nil{<br \/>    fmt.Println(\"Hasil\", hasil)<br \/>  }else{<br \/>    fmt.Println(\"Error\", err.Error())<br \/>  }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>pada kode tersebut terdapat function pembagian dimana terdapat pengecekan pembagi sama dengan nol atau tidak jika pembaginya nol makan akan dikembalikan nilai errornya.<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Golang Packages<\/strong><\/span><\/p>\r\n<p>Pada materi sebelumnya kita sudah menggunakan beberapa packages yang sudah disediakan Go seperti fmt, strings, strconv dan errors. selain package tersebut ada juga beberapa package yang dapat kita gunakan dalam kode program go kita, berikut ini akan di berikan beberapa package yang digunakan beserta sedikit penerapannya. jika ingin mengetahui lebih dalam terkait package-package tersebut silahkan akses link yang sudah di berikan pada masing-masing package.<\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">1. Package os<\/h2>\r\n<p>Package os berisikan fungsionalitas untuk mengakses fitur sistem operasi secara independen (bisa digunakan &nbsp;disemua sistem operasi). Berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 42.8389%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"os\"<br \/>)<br \/><br \/>func main() {<br \/>  args := os.Args<br \/>  fmt.Println(\"Argument : \")<br \/>  fmt.Println(args)<br \/><br \/>  name, err := os.Hostname()<br \/>  if err == nil {<br \/>    fmt.Println(\"Hostname : \", name)<br \/>  } else {<br \/>    fmt.Println(\"Error\", err.Error())<br \/>  }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari package os silahkan akses <a href=\"https:\/\/pkg.go.dev\/os\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/os<\/a><\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">2. Package flag<\/h2>\r\n<p>Package Flag memiliki kegunaan yang sama seperti arguments, yaitu untuk&nbsp;<em>parameterize<\/em> eksekusi program, dengan penulisan dalam bentuk key-value. berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 42.8389%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import \"flag\"<br \/>import \"fmt\"<br \/><br \/>func main() {<br \/>  var name = flag.String(\"name\", \"anonymous\", \"type your name\")<br \/>  var age = flag.Int64(\"age\", 25, \"type your age\")<br \/>  <br \/>  flag.Parse()<br \/>  fmt.Printf(\"name\\t: %s\\n\", *name)<br \/>  fmt.Printf(\"age\\t: %d\\n\", *age)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari package flag silahkan akses <a href=\"https:\/\/pkg.go.dev\/flag\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/flag<\/a><\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">3. Package math<\/h2>\r\n<p>Package math merupakan package yang berisikan constant dan fungsi matematika.<\/p>\r\n<p>Berikut ini beberapa Function di Package math&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.2621%; height: 132px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\"><strong>Function<\/strong><\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\"><strong>Kegunaan<\/strong><\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">math.Round(float64)&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Membulatkan float64 keatas atau kebawah, sesuai dengan yang paling dekat&nbsp;<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">math.Floor(float64)&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Membulatkan float64 kebawah&nbsp;<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">math.Ceil(float64)&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Membulatkan float64 keatas&nbsp;<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">math.Max(float64, float64)&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Mengembalikan nilai float64 paling besar&nbsp;<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">math.Min(float64, float64)&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Mengembalikan nilai float64 paling kec<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 42.8389%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"math\"<br \/>)<br \/><br \/>func main() {<br \/>  fmt.Println(math.Round(1.7))<br \/>  fmt.Println(math.Round(1.3))<br \/>  fmt.Println(math.Floor(1.7))<br \/>  fmt.Println(math.Ceil(1.3))<br \/>  <br \/>  fmt.Println(math.Max(10, 20))<br \/>  fmt.Println(math.Min(10, 20))<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari package math silahkan akses <a href=\"https:\/\/pkg.go.dev\/math\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/math<\/a><\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\"><\/h2>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">4. Package time<\/h2>\r\n<p>Package time adalah package yang berisikan fungsionalitas untuk management waktu di Go.&nbsp;<\/p>\r\n<p>Berikut ini beberapa Function di Package time<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.2621%; height: 125px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\"><strong>Function<\/strong><\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\"><strong>Kegunaan<\/strong><\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">time.Now()&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Untuk mendapatkan waktu saat ini&nbsp;<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">time.Date(...)&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Untuk membuat waktu&nbsp;<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">time.Parse(layout, string)&nbsp;<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Untuk memparsing waktu dari string&nbsp;<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 28.5349%; height: 22px;\">time.Sleep()<\/td>\r\n<td style=\"width: 69.6307%; height: 22px;\">Untuk menghentikan (Sleep) program sejenak<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 42.8389%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"time\"<br \/>)<br \/><br \/>func main() {<br \/>  now := time.Now()<br \/>&nbsp; fmt.Println(now)<br \/><br \/>  utc := time.Date(2020, 10, 10, 10, 10, 10, 10, time.UTC)<br \/>  fmt.Println(utc)<br \/><br \/>  layout := \"2006-01-02\"<br \/>  parse, _ := time.Parse(layout, \"1990-03-20\")<br \/>&nbsp; fmt.Println(parse)<br \/>&nbsp; fmt.Println()<br \/><br \/>  fmt.Println(\"start\")<br \/>  time.Sleep(time.Second * 4)<br \/>  fmt.Println(\"after 4 seconds\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari package time silahkan akses <a href=\"https:\/\/pkg.go.dev\/time\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/time<\/a><\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">5. Package sort<\/h2>\r\n<p>Package sort adalah package yang berisikan utilitas untuk proses pengurutan. Agar data kita bisa diurutkan, kita harus mengimplementasikan kontrak di interface sort.Interface.<\/p>\r\n<p>Berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 42.8389%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"sort\"<br \/>)<br \/><br \/>func main() {<br \/>  s := []string{\"Go\", \"Bravo\", \"Gopher\", \"Alpha\", \"Grin\", \"Delta\"}<br \/>  sort.Strings(s)<br \/>  fmt.Println(s)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari package sort silahkan akses <a href=\"https:\/\/pkg.go.dev\/sort\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/sort<\/a><\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">6. Package reflect<\/h2>\r\n<p>Dalam bahasa pemrograman, biasanya ada fitur Reflection, dimana kita bisa melihat struktur kode kita pada saat aplikasi sedang berjalan. Hal ini bisa dilakukan di Go dengan menggunakan package reflect.<\/p>\r\n<p>Berikut ini contoh penggunaannya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 42.8389%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"reflect\"<br \/>)<br \/><br \/>func main() {<br \/>  var number = 23<br \/>  var reflectValue = reflect.ValueOf(number)<br \/>  <br \/>  fmt.Println(\"tipe &nbsp;variabel :\", reflectValue.Type())<br \/><br \/>  if reflectValue.Kind() == reflect.Int {<br \/>    fmt.Println(\"nilai variabel :\", reflectValue.Int())<br \/>  }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika ingin lebih banyak lagi fungsi-fungsi dari package sort silahkan akses <a href=\"https:\/\/pkg.go.dev\/reflect\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/reflect<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Defer, Panic, Recover, Error &amp; Golang Packages: <a href=\"https:\/\/youtu.be\/BHdjzlCifi8\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=lg3Ke9cFmSE\" target=\"_blank\" rel=\"noopener\">Defer, Panic &amp; Recover<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=REJkeC6MK4o\" target=\"_blank\" rel=\"noopener\">error interface<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=L-9zN6Nl3KU\" target=\"_blank\" rel=\"noopener\">Package os<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=7dsqPlAqaLM\" target=\"_blank\" rel=\"noopener\">Package flag<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=acie2heAB_A\" target=\"_blank\" rel=\"noopener\">Package math<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=3U0lFi7idxQ\" target=\"_blank\" rel=\"noopener\">Package time<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=1DOJ1vxueec\" target=\"_blank\" rel=\"noopener\">Package sort<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<li><a href=\"https:\/\/www.youtube.com\/watch?v=0P-LkQO8YXE\" target=\"_blank\" rel=\"noopener\">Package reflect<\/a>&nbsp;(Programmer Zaman Now)<\/li>\r\n<\/ul>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 24pt;\"><strong><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/span><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-defer-exit.html\" target=\"_blank\" rel=\"noopener\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-defer-exit.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-error-panic-recover.html\" target=\"_blank\" rel=\"noopener\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-error-panic-recover.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-reflect.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-reflect.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-time-parsing-format.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-time-parsing-format.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-timer-ticker-scheduler.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-timer-ticker-scheduler.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-command-line-args-flag.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-command-line-args-flag.html\\<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/os\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/os<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/flag\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/flag<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/math\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/math<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/time\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/time<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/sort\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/sort<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/pkg.go.dev\/reflect\" target=\"_blank\" rel=\"noopener\">https:\/\/pkg.go.dev\/reflect<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-05 09:00:00","status_publish":"publish","urutan":5,"created_by":4336,"updated_by":4336,"created_at":"2021-10-01 07:35:04","updated_at":"2021-10-25 16:48:59","waktu_publish_formatted":" Jumat, 05 November 2021. 09:00:00 WIB."}]},{"id":386,"uuid":"b040180a-4859-4023-91bd-4a0ed061ce53","materi_id":36,"nama":"Pekan 2 - Tugas","permalink":"pekan-2-tugas","urutan":5,"created_by":4336,"updated_by":4336,"created_at":"2021-09-27 06:34:54","updated_at":null,"posting":[{"id":1411,"uuid":"5362dad3-05fb-4982-b0d8-5f0206dcbcd5","author_user_id":4336,"materi_section_id":386,"judul":"Tugas 6 - Pointer","permalink":"tugas-6-pointer","konten":"<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-6&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas6.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas6.go&rdquo;<\/p>\r\n<h3 id=\"soal-2\"><strong>soal 1<\/strong><\/h3>\r\n<p style=\"text-align: justify;\">Tulislah kode seperti di bawah ini, buatlah&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 56px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 56px;\">\r\n<pre>var luasLigkaran float64 <br \/>var kelilingLingkaran float64<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p style=\"text-align: justify;\">lalu buatlah function yang nantinya akan memperbarui value dari luas lingkaran dan keliling lingkaran dengan memasukkan salah satu parameternya yaitu jari-jarinya (wajib menggunakan pointer)<\/p>\r\n<h3 id=\"soal-3\"><strong>soal 2<\/strong><\/h3>\r\n<p>Tulislah sebuah function dengan nama introduce. pastikan semua parameter pada function introduce di gunakan semuanya (wajib menggunakan pointer)<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var sentence string <\/pre>\r\n<pre>introduce(&amp;sentence, \"John\", \"laki-laki\", \"penulis\", \"30\")<br \/><br \/>fmt.Println(sentence) \/\/ Menampilkan \"Pak John adalah seorang penulis yang berusia 30 tahun\"<\/pre>\r\n<pre>introduce(&amp;sentence, \"Sarah\", \"perempuan\", \"model\", \"28\")<br \/><br \/>fmt.Println(sentence) \/\/ Menampilkan \"Bu Sarah adalah seorang model yang berusia 28 tahun\"<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h4><strong>soal 3<\/strong><\/h4>\r\n<p>buatlah variabel seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>var buah = []string{}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre class=\"wp-block-code\">&nbsp;<\/pre>\r\n<p>buatlah function yang menambahkan data di bawah ini ke variabel buah (wajib menggunakan pointer):<\/p>\r\n<ul>\r\n<li>Jeruk<\/li>\r\n<li>Semangka<\/li>\r\n<li>Mangga<\/li>\r\n<li>Strawberry<\/li>\r\n<li>Durian<\/li>\r\n<li>Manggis<\/li>\r\n<li>Alpukat<\/li>\r\n<\/ul>\r\n<p>lalu tampilkan dengan loop dan beri angka di depannya sehingga menghasilkan output seperti ini:<\/p>\r\n<p>1. Jeruk<br \/>2. Semangka<br \/>3. Mangga<br \/>4. Strawberry<br \/>5. Durian<br \/>6. Manggis<br \/>7. Alpukat<\/p>\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>buatlah function dengan nama tambahDataFilm untuk menambahkan data map[string]string ke slice dataFilm, lalu tampilkan datanya sesuai output yang di inginkan&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var dataFilm = []map[string]string{}<br \/><br \/><br \/>tambahDataFilm(\"LOTR\", \"2 jam\", \"action\", \"1999\", &amp;dataFilm)<br \/>tambahDataFilm(\"avenger\", \"2 jam\", \"action\", \"2019\", &amp;dataFilm)<br \/>tambahDataFilm(\"spiderman\", \"2 jam\", \"action\", \"2004\", &amp;dataFilm)<br \/>tambahDataFilm(\"juon\", \"2 jam\", \"horror\", \"2004\", &amp;dataFilm)<br \/><br \/>\/\/ isi dengan jawaban anda untuk menampilkan data<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>berikut ini output soal 4(untuk urutan title atau genre muncul duluan itu tidak mesti persis):<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugasPointer-go-4.png\" \/><\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>","waktu_publish":"2021-11-01 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-09-27 06:35:14","updated_at":"2021-10-25 16:49:12","waktu_publish_formatted":" Senin, 01 November 2021. 09:00:00 WIB."},{"id":1416,"uuid":"ff5cbab3-1419-43d5-9fcf-3d8877cd4c10","author_user_id":4336,"materi_section_id":386,"judul":"Tugas 7 - Struct dan Method","permalink":"tugas-7-struct-dan-method","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-7&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas7.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas7.go&rdquo;&nbsp;<\/p>\r\n<h3 id=\"soal-2\"><strong>soal 1<\/strong><\/h3>\r\n<p style=\"text-align: justify;\">Buatlah sebuah struct dengan nama <strong>buah <\/strong>yang terdiri dari property nama dan warna tipe data string, lalu property adaBijinya dengan tipe data boolean, lalu property harga dengan tipe datanya integer.<\/p>\r\n<p style=\"text-align: justify;\">buatlah beberapa object dengan mengikuti data di bawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.8402%; height: 110px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 24.0988%; height: 22px;\"><strong>Nama<\/strong><\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\"><strong>Warna<\/strong><\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\"><strong>Ada Bijinya<\/strong><\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\"><strong>Harga<\/strong><\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 24.0988%; height: 22px;\">Nanas<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Kuning<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Tidak<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">9000<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 24.0988%; height: 22px;\">Jeruk<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Oranye<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Ada<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">8000<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 24.0988%; height: 22px;\">Semangka<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Hijau &amp; Merah<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Ada<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">10000<\/td>\r\n<\/tr>\r\n<tr style=\"height: 22px;\">\r\n<td style=\"width: 24.0988%; height: 22px;\">Pisang<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Kuning<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">Tidak<\/td>\r\n<td style=\"width: 24.0988%; height: 22px;\">5000<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu print semua object tersebut<\/p>\r\n<h3 id=\"soal-3\"><strong>soal 2<\/strong><\/h3>\r\n<p>buatlah kode seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>type segitiga struct{<br \/>  alas, tinggi int<br \/>}<br \/><br \/>type persegi struct{<br \/>  sisi int<br \/>}<br \/><br \/>type persegiPanjang struct{<br \/>  panjang, lebar int<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>gunakanlah struct diatas dan buatlah method luas untuk masing2 struct, print hasil penggunaan methodnya<\/p>\r\n<h4><strong>soal 3<\/strong><\/h4>\r\n<p>buatlah kode struct seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>type phone struct{<br \/>   name, brand string<br \/>   year int<br \/>   colors []string<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>buatlah method yang menambahkan warna di property colors pada sebuah object dari phone (jika memerlukan pointer silahkan gunakan pointer)<\/p>\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>buatlah struct movie dengan property title dan genre tipe datanya string, lalu duration dan year tipe datanya integer<br \/><br \/>lalu buatlah function dengan nama tambahDataFilm untuk menambahkan data object dari struct ke slice dataFilm, lalu tampilkan datanya sesuai output yang di inginkan (pada soal ini memerlukan pointer)<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>var dataFilm = []movie{}<br \/><br \/><br \/>tambahDataFilm(\"LOTR\", 120, \"action\", 1999, &amp;dataFilm)<br \/>tambahDataFilm(\"avenger\", 120, \"action\", 2019, &amp;dataFilm)<br \/>tambahDataFilm(\"spiderman\", 120, \"action\", 2004, &amp;dataFilm)<br \/>tambahDataFilm(\"juon\", 120, \"horror\", 2004, &amp;dataFilm)<br \/><br \/>\/\/ isi dengan jawaban anda untuk menampilkan data<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>berikut ini output soal 4(untuk urutan title atau genre muncul duluan itu tidak mesti persis):<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugasPointer-go-4.png\" \/><\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>\r\n<div class=\"entry-content\">&nbsp;<\/div>","waktu_publish":"2021-11-02 09:00:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-09-28 07:47:40","updated_at":"2021-10-25 16:49:22","waktu_publish_formatted":" Selasa, 02 November 2021. 09:00:00 WIB."},{"id":1419,"uuid":"d74a0818-f0aa-4b65-9495-fca11ecd51a7","author_user_id":4336,"materi_section_id":386,"judul":"Tugas 8 - Interface","permalink":"tugas-8-interface","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-8&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas8.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas8.go&rdquo;&nbsp;<\/p>\r\n<h3 id=\"soal-3\"><strong>soal 1<\/strong><\/h3>\r\n<p>buatlah kode seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 38.0992%; height: 163px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%; text-align: left;\">\r\n<pre>type segitigaSamaSisi struct{<br \/>  alas, tinggi int<br \/>}<br \/><br \/>type persegiPanjang struct{<br \/>  panjang, lebar int<br \/>}<br \/><br \/>type tabung struct{<br \/>  jariJari, tinggi float64<br \/>}<br \/><br \/>type balok struct{<br \/>  panjang, lebar, tinggi int<br \/>}<br \/><br \/>type hitungBangunDatar interface{<br \/>  luas() int<br \/>  keliling() int<br \/>}<br \/><br \/>type hitungBangunRuang interface{<br \/>  volume() float64<br \/>  luasPermukaan() float64<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>gunakanlah interface bangunDatar untuk menentukan luas dan keliling berdasarkan struct segitigaSamaSisi dan persegiPanjang<\/p>\r\n<p>lalu gunakanlah interface bangunRuang untuk menentukan volume dan luas permukaan berdasarkan struct tabung dan balok<\/p>\r\n<p>print semua hasil perhitungannya<\/p>\r\n<p><strong>soal 2<\/strong><\/p>\r\n<p>buatlah kode struct seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>type phone struct{<br \/>   name, brand string<br \/>   year int<br \/>   colors []string<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>buatlah interface yang berisi method dengan tipe data string untuk menampilkan data (nama interface dan nama methodnya bebas)<\/p>\r\n<p>lalu tampilkan dengan output yang diinginkan kurang lebih seperti di bawah ini (<strong>output ini di simpan dalam method dari interface bukan di print satu-satu<\/strong>)<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas7-go-2.png\" \/><\/p>\r\n<p><strong>soal 3<\/strong><\/p>\r\n<p>terdapat kode pemanggilan function seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>fmt.Println(luasPersegi(4, true))<br \/><br \/>fmt.Println(luasPersegi(8, false))<br \/><br \/>fmt.Println(luasPersegi(0, true))<br \/><br \/>fmt.Println(luasPersegi(0, false))<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>buatlah function yang tipe data return-nya adalah interface kosong, dengan kondisi:<\/p>\r\n<ol>\r\n<li>jika parameter kedua bernilai true maka tampilkan kalimat (asumsi sisinya 2)\"luas persegi dengan sisi 2 cm adalah 4 cm\"<\/li>\r\n<li>jika parameter kedua bernilai false maka tampilkan hanya hasil angka saja (misal 4)<\/li>\r\n<li>jika parameter pertama 0 dan parameter kedua bernilai true tampilkan \"Maaf anda belum menginput sisi dari persegi\"<\/li>\r\n<li>jika parameter pertama 0 dan parameter kedua bernilai false maka tampilkan nil<\/li>\r\n<\/ol>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<p>&nbsp;<\/p>\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>terdapat kode seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>var prefix interface{}= \"hasil penjumlahan dari \"<br \/><br \/>var kumpulanAngkaPertama interface{} = []int{6,8}<br \/><br \/>var kumpulanAngkaKedua interface{} = []int{12,14}<br \/><br \/>\/\/ tulis jawaban anda disini<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>gunakan seluruh variabel tersebut untuk menghasilkan output \"hasil penjumlahan dari 6 + 8 + 12 + 14 = 40\"<\/p>\r\n<p>gunakan type assertion untuk mengerjakan soal ini<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>\r\n<div class=\"entry-content\">&nbsp;<\/div>","waktu_publish":"2021-11-03 09:00:00","status_publish":"publish","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-09-29 06:11:25","updated_at":"2021-10-25 16:49:31","waktu_publish_formatted":" Rabu, 03 November 2021. 09:00:00 WIB."},{"id":1423,"uuid":"d52d5074-9fff-4ee9-9057-b4fa2c823e2e","author_user_id":4336,"materi_section_id":386,"judul":"Tugas 9 - Package & Import","permalink":"tugas-9-package-import","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru&nbsp;<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama \"<strong>Tugas-9\" <\/strong>dan buatlah file <strong>\"main.go\"<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>copy seluruh kode di <strong>Tugas-8 <\/strong>lalu ubahlah menjadi sebuah package baru <strong>(nama file dan nama folder bebas)<\/strong> dan buatlah seluruh function, struct, interface menjadi public (<strong>selain func main<\/strong>) agar bisa diakses di file main.go.<\/p>\r\n<p>lalu copy seluruh func main ke dalam file main.go dan sesuaikan dengan perubahan karena terdapat package baru(function, struct dan interface di <strong>Tugas-8)<\/strong><\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>\r\n<div class=\"entry-content\">&nbsp;<\/div>","waktu_publish":"2021-11-04 09:00:00","status_publish":"publish","urutan":4,"created_by":4336,"updated_by":4336,"created_at":"2021-09-29 11:09:33","updated_at":"2021-10-25 16:49:42","waktu_publish_formatted":" Kamis, 04 November 2021. 09:00:00 WIB."},{"id":1429,"uuid":"280a9adc-2a3c-4cfa-ba69-a0e09084d503","author_user_id":4336,"materi_section_id":386,"judul":"Tugas 10 - Defer, Panic, Recover, Error & Golang Packages","permalink":"tugas-10-defer-panic-recover-error-golang-packages","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-10&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas10.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas10.go&rdquo;<\/p>\r\n<p><strong>soal 1<\/strong><\/p>\r\n<p>buatlah function yang memiliki parameter yaitu kalimat tipe data string dan tahun tipe data integer,<br \/>buat agar function itu di eksekusi terakhir dengan menggunakan defer<\/p>\r\n<p>isi kalimatnya adalah Golang Backend Development<\/p>\r\n<p>isi tahunnya adalah 2021<\/p>\r\n<p><strong>soal 2<\/strong><\/p>\r\n<p>terdapat kode pemanggilan function seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>kelilingSegitigaSamaSisi(4, true)<br \/><br \/>kelilingSegitigaSamaSisi(8, false)<br \/><br \/>kelilingSegitigaSamaSisi(0, true)<br \/><br \/>kelilingSegitigaSamaSisi(0, false)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>buatlah function yang returnnya string dan error, dengan kondisi:<\/p>\r\n<ol>\r\n<li>jika parameter kedua bernilai true maka tampilkan kalimat (asumsi sisinya 2) \"keliling segitiga sama sisinya dengan sisi 2 cm adalah 6 cm\"<\/li>\r\n<li>jika parameter kedua bernilai false maka tampilkan hanya hasil string angka saja (misal \"6\")<\/li>\r\n<li>jika parameter pertama 0 dan parameter kedua bernilai true gunakan error dengan message \"Maaf anda belum menginput sisi dari segitiga sama sisi\"<\/li>\r\n<li>jika parameter pertama 0 dan parameter kedua bernilai false maka tampilkan error dengan message \"Maaf anda belum menginput sisi dari segitiga sama sisi\", beserta panic yang sudah di recover<\/li>\r\n<\/ol>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<p><strong>soal 3<\/strong><\/p>\r\n<p>buatlah kode pemanggilan function seperti di bawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>\/\/ deklarasi variabel angka ini simpan di baris pertama func main<br \/>angka := 1<br \/><br \/>defer cetakAngka(&amp;angka)<br \/><br \/>tambahAngka(7, &amp;angka)<br \/><br \/>tambahAngka(6, &amp;angka)<br \/><br \/>tambahAngka(-1, &amp;angka)<br \/><br \/>tambahAngka(9, &amp;angka)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>buatlah function tambahAngka, lalu tampilkan total angka dengan function cetakAngka yang dipanggil menggunakan defer function yang di panggil duluan di func main.&nbsp;<\/p>\r\n<div class=\"entry-content\">\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>buatlah variabel seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>var phones = []string{}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre class=\"wp-block-code\">&nbsp;<\/pre>\r\n<p>buatlah function yang menambahkan data di bawah ini ke variabel phones menggunakan pointer:<\/p>\r\n<ul>\r\n<li>Xiaomi<\/li>\r\n<li>Asus<\/li>\r\n<li>IPhone<\/li>\r\n<li>Samsung<\/li>\r\n<li>Oppo<\/li>\r\n<li>Realme<\/li>\r\n<li>Vivo<\/li>\r\n<\/ul>\r\n<p>lalu urutkan data phones tampilkan satu persatu selama per-detik dan sisipkan angka di depan masing-masing data sehingga menghasilkan output seperti ini:<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-11-go-1.gif\" \/><\/p>\r\n<p><strong>soal 5<\/strong><\/p>\r\n<p>buatlah function luas lingkaran dan keliling lingkaran, gunakan method math di dalamnya, hasil dari perhitungan harus di bulatkan.<\/p>\r\n<p>jari-jari yang di gunakan adalah 7, 10 dan 15<\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<p><strong>soal 6<\/strong><\/p>\r\n<p>buatlah perhitungan luas persegi panjang dan keliling persegi panjang, untuk panjang dan lebar dari persegi panjang tidak langsung dimasukkan ke dalam kode melainkan menggunakan package flag di dalamnya<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><\/h2>\r\n<\/div>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-11-05 09:00:00","status_publish":"publish","urutan":5,"created_by":4336,"updated_by":4336,"created_at":"2021-10-01 07:37:00","updated_at":"2021-10-25 16:49:52","waktu_publish_formatted":" Jumat, 05 November 2021. 09:00:00 WIB."}]},{"id":392,"uuid":"cd57742b-adf3-4f8d-9fad-f9c89813ce86","materi_id":36,"nama":"Pekan 3 - Materi","permalink":"pekan-3-materi","urutan":6,"created_by":4336,"updated_by":4336,"created_at":"2021-10-04 07:01:47","updated_at":null,"posting":[{"id":1431,"uuid":"1f27d854-42b9-4882-9565-59b3a07d52f5","author_user_id":4336,"materi_section_id":392,"judul":"Hari 11 - Goroutine & Channel","permalink":"hari-11-goroutine-channel","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Goroutine<\/strong><\/span><\/p>\r\n<p>Sebelum mempelajari goroutine sangat disarankan untuk membaca artikel pada <a href=\"https:\/\/dev.to\/fncolon\/apa-itu-thread-dan-concurrency-dan-perbedaan-multiprocessing-multiprogramming-dengan-multithreading-1n7k\" target=\"_blank\" rel=\"noopener\">link ini<\/a> terlebih dahulu untuk memahami apa itu thread dan concurrency<\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">Apa itu Goroutine?<\/h2>\r\n<p>Goroutine adalah lightweight thread yang di manage oleh Go runtime. Untuk membuat sebuah Goroutine kita hanya memerlukan 2kb memori. Goroutine memiliki sifat yang asynchronous jadi tidak saling menunggu dengan Goroutine lain.<\/p>\r\n<p>Untuk membuat goroutine yang sederhana cukup mudah. Pembuatan goroutine baru di awali dengan sintaks &ldquo;go&rdquo; di ikuti dengan nama method maupun fungsi. Method yang di awali dengan keyword go artinya method tersebut di anggap sebuah goroutine. berikut contoh penggunaanya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 36.7373%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"time\"<br \/>)<br \/><br \/>func say(s string) {<br \/>  for i := 0; i &lt; 5; i++ {<br \/>   time.Sleep(100 * time.Millisecond)<br \/>  &nbsp;fmt.Println(s)<br \/>  }<br \/>}<\/pre>\r\n<pre><br \/>func main() {<br \/>  go say(\"world\")<br \/>  say(\"hello\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p style=\"margin-top: 5px;\">jika kita run kode diatas maka outputnya bisa muncul terlebih dahulu world ataupun hello dan lain sebagainya, kenapa seperti itu karena pada function say(\"world\") sudah menggunakan goroutine yang artinya function say(\"world\") berjalan di thread lain yang berbeda dengan say(\"hello\")<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Channel<\/strong><\/span><\/p>\r\n<p>Channel adalah penghubung antara goroutine satu dengan goroutine lainnya. Mekanisme channel yaitu serah terima, dimana ada yang mengirim dan ada yang menerima. Jika di contohnya di dalam kehidupan nyata seperti pipa yang berisi air, dimana terdapat ujung pengirim air dan ujung sebagai penerima air.<\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">Deklarasi Channel<\/h2>\r\n<p>Setiap channel dapat terkait dengan channel lainnya. Dan channel dapat di cetak dengan tipe data tertentu. Cara mendeklarasikan channel seperti mendeklarasikan tipe data lainnya. Tipe data nya yaitu <strong>chan<\/strong>. misalnya : chan b, artinya variable bertipe channel.<\/p>\r\n<p>Namun untuk membuat channel baru dapat menggunakan sintaks di awal yaitu make.<\/p>\r\n<table style=\"border-collapse: collapse; width: 19.6233%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>angka :=make(chan int).<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Secara default channel mempunyai nilai nil. Maka dari itu channel harus di keklarasikan seperti di atas yaitu menggunakan awalan&nbsp;<strong>make<\/strong>.<\/p>\r\n<p>karena channel mempunyai mekanisme kirim dan menerima itu berarti kedua mekanisme tersebut harus di deklarasikan juga<\/p>\r\n<p>Cara deklarasi memberi dan menerima nilai channel yaitu dengan tanda &lt;-(<strong>arrow<\/strong>).<\/p>\r\n<table style=\"border-collapse: collapse; width: 19.6233%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>\/\/ untuk mengirim<br \/>a &lt;- 10<br \/><br \/>\/\/untuk menerima<br \/>angka := &lt;- a<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Contoh di atas artinya memberikan nilai variable channel&nbsp;<strong>a<\/strong>&nbsp;yaitu&nbsp;<strong>10<\/strong>. kemudian nilai channel di berikan nilai variable data. Maka dari itu isi dari data yaitu 10.<\/p>\r\n<p>berikut ini contoh penggunaan channel:<\/p>\r\n<table style=\"border-collapse: collapse; width: 33.7135%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func cetak(ch chan int) {<br \/>  fmt.Println(\"ini dari goroutine...\")<br \/>  ch &lt;- 10<br \/>}<br \/><br \/>func main() {<br \/>  angka:= make(chan int)<br \/>  go cetak(angka)<br \/>  nilai := &lt;-angka<br \/>  fmt.Println(\"nilai channel integer :\", nilai)<br \/>  fmt.Println(\"ini dari function main...\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>dapat terlihat pada contoh diatas pada function cetak terdapat sintaks ch &lt;- 10 yang berarti channel ch mengirim nilai 10, dan dapat terlihat juga di function main terdapat sintaks nilai := &lt;- angka, yang dimana nilai menerima data atau value dari channel angka<\/p>\r\n<h2>Menutup Channel<\/h2>\r\n<p>Ketika kita bicara channel dua arah yaitu pengirim dan penerima maka sebenarnya ada hak lain yang dapat di lakukan. Pengirim mempunyai kemampuan menutup channel untuk memberi tahu penerima bahwa tidak ada data lagi.<\/p>\r\n<p>Penerima dapat memberikan tambahan kondisi apakah channel tersebut sudah di tutup ataupun belum.<\/p>\r\n<p>berikut ini contohnya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 33.7135%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>)<br \/><br \/>func cetak(ch chan&lt;- int) {<br \/>  for index := 0; index &lt; 10; index++ {<br \/>    ch &lt;- index<br \/>  }<br \/>  close(ch)<br \/>}<br \/><br \/>func main() {<br \/>  ch := make(chan int)<br \/>  <br \/>  go cetak(ch)<br \/>  <br \/>  for {<br \/>    data, ok := &lt;-ch<br \/>    if ok == false {<br \/>      break<br \/>    }<br \/>    fmt.Printf(\"Data di terima %v\\n\", data)<br \/>  }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Perhatikan kode program di atas, terdapat 1 goroutine dengan nama fungsi<strong>&nbsp;cetak()<\/strong>, dimana fungsi tersebut melakukan perulangan sebanyak 10 kali dan di dalam perulangan tersebut data channel di berikan data. Setelah data selesai dikirim maka channel ditutup.<\/p>\r\n<p>Data yang di tampilkan dengan infinity loop(perulangan terus-menerus). Penerima channel akan memeriksa apakah channel sudah di tutup dengan identifikasi data masih ada ataupun tidak.<\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">Channel Buffer<\/h2>\r\n<p>channel secara&nbsp;<strong><em>default<\/em><\/strong>&nbsp;di lakukan secara&nbsp;<strong>unbufferd<\/strong>, artinya hanya data yang di kirim satu per satu melalui&nbsp;<strong>channel<\/strong>. Sedangkan dengan channel buffer kita dapat melakukan pengiriman data lebih daru satu. unbuffered bukan hanya pengirim saja yang di block, melainkan penerimanya juga di block ketika data sebelumnya belum selesai. dengan menggunakan channel buffer ini memungkinkan kita mengirim dan menerima banyak permintaan.<\/p>\r\n<h2>Membuat Channel Buffer<\/h2>\r\n<p>Untuk membuat channel buffer harus menentukan jumlah kapasitas data yang bisa di lakukan secara bersamaan dengan format :<\/p>\r\n<table style=\"border-collapse: collapse; width: 19.6233%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>namaChannel := make(chan TypeChannel, capacityChannel)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Contohnya:<\/p>\r\n<table style=\"border-collapse: collapse; width: 19.6233%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>ch := make(chan int, 1)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p class=\"wp-block-code\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Perhitungan kapasitas channel seperti array yaitu di mulai dari 0. Ketika kita mengisi nilai buffer yaitu 2 maka akan ada proses yang dapat di lakukan bersamaan sejumlah 2. Namun akan lebih baik ketika kita memberikan kapasitas nilai buffer sama dengan jumlah data yang ingin di kirim.<\/span><\/p>\r\n<p>Mari kita buat contoh penggunaan channel buffered yang sederhana.<\/p>\r\n<table style=\"border-collapse: collapse; width: 33.0057%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>)<br \/><br \/>func main() {<br \/>  ch := make(chan int, 3)<br \/><br \/>  ch &lt;- 6<br \/>  ch &lt;- 7<br \/>  ch &lt;- 5<br \/><br \/>  fmt.Println(&lt;-ch)<br \/>  fmt.Println(&lt;-ch)<br \/>  fmt.Println(&lt;-ch)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">Channel Select<\/h2>\r\n<p>Select adalah proses untuk menvalidasi kondisi ketika mempunyai lebih dari satu channel dalam satu goroutine yang jalan. Bisa di katakan select pemilihan terhadap channel. Ketika menggunakan 2 channel konsep sudah di ketahui bahwa proses nya kirim dan menerima. Select berperan untuk memilih channel yang di terima di dalam goroutine. Cara kerjanya seperti ini, asumsikan kita punya 2 channel yang jalan, nah ketika data sudah terkirim beberapa data, tugas select ini memilih penerimaan channel yang jalan. Cara kerja select sebenarnya sama seperti suatu kondisi switch, dimana switch digunakan untuk melakukan seleksi terhadap kondisi.<\/p>\r\n<h2 id=\"a263-penggunaan-package-import-dan-hak-akses-exported-dan-unexported\">Penerapan Select<\/h2>\r\n<p>Program berikut merupakan contoh sederhana penerapan select dalam channel. Dipersiapkan 2 buah goroutine, satu untuk pencarian rata-rata, dan satu untuk nilai tertinggi. Hasil operasi di masing-masing goroutine dikirimkan ke fungsi main() via channel (ada dua channel). Di fungsi main() sendiri, data tersebut diterima dengan memanfaatkan keyword select.<\/p>\r\n<p>Ok, langsung saja kita praktek. Pertama, siapkan 2 fungsi yang sudah dibahas di atas. Fungsi pertama digunakan untuk mencari rata-rata, dan fungsi kedua untuk penentuan nilai tertinggi dari sebuah slice.<\/p>\r\n<table style=\"border-collapse: collapse; width: 33.0057%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/><br \/>func getAverage(numbers []int, ch chan float64) {<br \/>  var sum = 0<br \/>  for _, e := range numbers {<br \/>    sum += e<br \/>  }<br \/>  ch &lt;- float64(sum) \/ float64(len(numbers))<br \/>}<br \/><br \/>func getMax(numbers []int, ch chan int) {<br \/>  var max = numbers[0]<br \/>  for _, e := range numbers {<br \/>    if max &lt; e {<br \/>      max = e<br \/>    }<br \/>  }<br \/>  ch &lt;- max<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Kedua fungsi tersebut dijalankan sebagai goroutine. Di akhir blok masing-masing fungsi, hasil kalkulasi dikirimkan via channel yang sudah dipersiapkan, yaitu ch1 untuk menampung data rata-rata, ch2 untuk data nilai tertinggi.<\/span><\/p>\r\n<p>Ok lanjut, buat implementasinya pada fungsi main().<\/p>\r\n<table style=\"border-collapse: collapse; width: 33.0057%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>func main() {<br \/>  var numbers = []int{3, 4, 3, 5, 6, 3, 2, 2, 6, 3, 4, 6, 3}<br \/>  fmt.Println(\"numbers :\", numbers)<br \/><br \/>  var ch1 = make(chan float64)<br \/>  go getAverage(numbers, ch1)<br \/><br \/>  var ch2 = make(chan int)<br \/>  go getMax(numbers, ch2)<br \/><br \/>  for i := 0; i &lt; 2; i++ {<br \/>    select {<br \/>    case avg := &lt;-ch1:<br \/>      fmt.Printf(\"Avg \\t: %.2f \\n\", avg)<br \/>    case max := &lt;-ch2:<br \/>      fmt.Printf(\"Max \\t: %d \\n\", max)<br \/>    }<br \/>  }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Pada kode di atas, pengiriman data pada channel ch1 dan ch2 dikontrol menggunakan select. Terdapat 2 buah case kondisi penerimaan data dari kedua channel tersebut.<\/span><\/p>\r\n<ul>\r\n<li>\r\n<p>Kondisi case avg := &lt;-ch1 akan terpenuhi ketika ada penerimaan data dari channel ch1, yang kemudian akan ditampung oleh variabel avg.<\/p>\r\n<\/li>\r\n<li>\r\n<p>Kondisi case max := &lt;-ch2 akan terpenuhi ketika ada penerimaan data dari channel ch2, yang kemudian akan ditampung oleh variabel max.<\/p>\r\n<\/li>\r\n<\/ul>\r\n<p>Karena ada 2 buah channel, maka perlu disiapkan perulangan 2 kali sebelum penggunaan keyword select.<\/p>\r\n<h2>WaitGroup<\/h2>\r\n<p>Jika di artikan bahasa Indonesia Wait dan Group bisa di artikan menunggu kelompok. Nah kelompok yang di maksud yaitu gorotuine. Sehingga&nbsp;<strong>WaitGroup<\/strong>&nbsp;adalah mekanisme digolang yang berfungsi untuk melakukan sinkronisasi antara goroutine. Beda dengan&nbsp;<strong>Channel<\/strong>&nbsp;ya, kalau channel digunakan untuk komunikasi antar goroutine.<\/p>\r\n<p>Masih ingat mengenai ketika awal belajar goroutine, dimana kita menggunakan fungsi&nbsp;<strong>sleep<\/strong>&nbsp;untuk menunggu goroutine.<\/p>\r\n<p>Nah dengan mneggunakan waitgroup kita tidak perlu lagi menggakan fungsi sleep.<\/p>\r\n<p>Berikut ini manfaat menggunakan goroutine.<\/p>\r\n<ul>\r\n<li>Menambahkan Goroutine yang jalan.<\/li>\r\n<li>Menunggu \/ Menunda Goroutine Jalan.<\/li>\r\n<li>Dan mengakiri Goroutine yang jalan.<\/li>\r\n<\/ul>\r\n<h2><span id=\"Kenapa_harus_menggunakan_WaitGroup\" class=\"ez-toc-section\"><\/span>Kenapa harus menggunakan WaitGroup ?<\/h2>\r\n<p>Ketika kita ingin melakukan proses secara concurency maka harus satu persatu proses selesai di dalam goroutine, entah goroutine itu berjalan berapa kali. Maka solusi pertama mengunakan&nbsp;<strong>sleep<\/strong>. Namun dengan menggunakan sleep sama saja kita memaksakan goroutine berhenti dalam waktu tertentu. Hal ini tentu akan membuat program lebih lambat.<\/p>\r\n<p>Sebagai contoh di bawah ini program yang menerapkan penggunaan sleep untuk menggunakan goroutine.<\/p>\r\n<table style=\"border-collapse: collapse; width: 37.7668%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"time\"<br \/>)<br \/><br \/>func printText(text string){<br \/>  for i:=0; i&lt;5; i++{<br \/>    fmt.Println(text)<br \/>  }<br \/>}<br \/><br \/>func main(){<br \/>  go printText(\"Halo\")<br \/>  go printText(\"Dunia\")<br \/>  time.Sleep(500 * time.Millisecond)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Jika di lihat dari hasil terhadap nilai sudah benar, namun jika kita lihat dari penggunaan kode yang benar dan kecepatan data hal ini tidak di rekomendasikan. Karena Data di cetak dengan jeda waktu 500 millisecond.<\/p>\r\n<p>Sekarang jika udah mengetahui penggunaan di atas dan di rasa kurang baik maka saat menggunakan waitGroup.<\/p>\r\n<h2><span id=\"Cara_menggunakan_WaitGroup\" class=\"ez-toc-section\"><\/span>Cara menggunakan WaitGroup<\/h2>\r\n<p>Penggunaan kode WaitGroup tidak lah rumit, ada 3 hal penting yang perlu di ketahui, yaitu :<\/p>\r\n<ul>\r\n<li>Add(), digunakan untuk menambah goroutine yang jalan.<\/li>\r\n<li>Wait(), digunakan untuk menunggu proses berjalan.<\/li>\r\n<li>Done(), digunakan untuk menandai bahwa semua goroutine sudah selesai.<\/li>\r\n<\/ul>\r\n<p>Yuk langsung saja kita bikin contohnya.<\/p>\r\n<p>Contoh kode berikut ini mengadopsi dari kode sebelumnya, namun di rubah ke bentuk WaitGroup.<\/p>\r\n<table style=\"border-collapse: collapse; width: 37.7668%; height: 32px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 32px;\">\r\n<td style=\"width: 100%; height: 32px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"sync\"<br \/>)<br \/><br \/>func printText(text string, wg *sync.WaitGroup){<br \/>  for i:=0; i&lt;5; i++{<br \/>    fmt.Println(text)<br \/>  }<br \/>  wg.Done()<br \/>}<br \/><br \/>func main(){<br \/>  var wg sync.WaitGroup<br \/><br \/>  wg.Add(1)<br \/>  go printText(\"Halo\", &amp;wg)<br \/><br \/>  wg.Add(1)<br \/>  go printText(\"Dunia\", &amp;wg)<br \/>  <br \/>  wg.Wait()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>perhatikan kode diatas, dengan memanfaatkan sync.WaitGroup kita tidak perlu untuk menyisipkan time.Sleep lagi&nbsp; agar semua goroutine dapat terlihat hasil printnya.<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Goroutine &amp; Channel: <a href=\"https:\/\/youtu.be\/qfzCnDVT2BY\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dev.to\/fncolon\/apa-itu-thread-dan-concurrency-dan-perbedaan-multiprocessing-multiprogramming-dengan-multithreading-1n7k\" target=\"_blank\" rel=\"noopener\">https:\/\/dev.to\/fncolon\/apa-itu-thread-dan-concurrency-dan-perbedaan-multiprocessing-multiprogramming-dengan-multithreading-1n7k<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-goroutine\/\">https:\/\/kodingin.com\/golang-goroutine\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-channel\/\">https:\/\/kodingin.com\/golang-channel\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-buffered-channel\/\">https:\/\/kodingin.com\/golang-buffered-channel\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-select-channel\/\">https:\/\/kodingin.com\/golang-select-channel\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-waitgroup\/\">https:\/\/kodingin.com\/golang-waitgroup\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-goroutine.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-goroutine.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-channel.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-channel.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-buffered-channel.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-buffered-channel.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-channel-select.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-channel-select.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-channel-range-close.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-channel-range-close.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/tour.golang.org\/concurrency\/1\">https:\/\/tour.golang.org\/concurrency\/1<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/tour.golang.org\/concurrency\/2\">https:\/\/tour.golang.org\/concurrency\/2<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/tour.golang.org\/concurrency\/3\">https:\/\/tour.golang.org\/concurrency\/3<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/tour.golang.org\/concurrency\/4\">https:\/\/tour.golang.org\/concurrency\/4<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/tour.golang.org\/concurrency\/5\">https:\/\/tour.golang.org\/concurrency\/5<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/tour.golang.org\/concurrency\/6\">https:\/\/tour.golang.org\/concurrency\/6<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-08 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-10-04 07:09:59","updated_at":"2021-10-25 16:50:08","waktu_publish_formatted":" Senin, 08 November 2021. 09:00:00 WIB."},{"id":1438,"uuid":"c78d8534-def1-4a5a-a9a4-1c9256f4c507","author_user_id":4336,"materi_section_id":392,"judul":"Hari 12 - JSON data & Web Server","permalink":"hari-12-json-data-web-server","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>JSON data<\/strong><\/span><\/p>\r\n<p><strong>JSON<\/strong>&nbsp;atau&nbsp;<em>Javascript Object Notation<\/em>&nbsp;adalah notasi standar yang umum digunakan untuk komunikasi data dalam web. JSON merupakan subset dari&nbsp;<em>javascript<\/em>.<\/p>\r\n<p>Go menyediakan package&nbsp;<code>encoding\/json<\/code>&nbsp;yang berisikan banyak fungsi untuk kebutuhan operasi json.<\/p>\r\n<p>Di bab ini, kita akan belajar cara untuk konverstri string yang berbentuk json menjadi object Go, dan sebaliknya.<\/p>\r\n<h2 id=\"a531-decode-json-ke-variabel-objek-struct\">Decode JSON Ke Variabel Object Struct<\/h2>\r\n<p>Di Go, data json dituliskan sebagai&nbsp;<code>string<\/code>. Dengan menggunakan&nbsp;<code>json.Unmarshal<\/code>, json string bisa dikonversi menjadi bentuk object, entah itu dalam bentuk&nbsp;<code>map[string]interface{}<\/code>&nbsp;ataupun object struct.<\/p>\r\n<p>Program berikut ini adalah contoh cara decoding json ke bentuk object. Pertama import package yang dibutuhkan, lalu siapkan struct&nbsp;<code>User<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 35.6455%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import \"encoding\/json\"<br \/>import \"fmt\"<br \/><br \/>type User struct {<br \/>  FullName string `json:\"Name\"`<br \/>  Age int<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Struct <code>user<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;ini nantinya digunakan untuk membuat variabel baru penampung hasil decode json string. Proses decode sendiri dilakukan lewat fungsi&nbsp;<\/span><code>json.Unmarshal()<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, dengan json string tersebut dimasukan ke statement fungsi tersebut.<\/span><\/p>\r\n<p>Silakan tulis kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 35.6455%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>func main() {<br \/>  var jsonString = `{\"Name\": \"john doe\", \"Age\": 27}`<br \/><br \/>  var jsonData = []byte(jsonString)<br \/><br \/>  var data User<br \/>  <br \/>  var err = json.Unmarshal(jsonData, &amp;data)<br \/>  if err != nil {<br \/>    fmt.Println(err.Error())<br \/>    return<br \/>  }<br \/><br \/>  fmt.Println(\"user :\", data.FullName)<br \/>  fmt.Println(\"age &nbsp;:\", data.Age)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Fungsi unmarshal hanya menerima data json dalam bentuk <\/span><code>[]byte<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, maka dari itu data json string pada kode di atas di-casting terlebih dahulu ke tipe&nbsp;<\/span><code>[]byte<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;sebelum dipergunakan pada fungsi unmarshal.<\/span><\/p>\r\n<p>Juga, perlu diperhatikan, argument ke-2 fungsi unmarshal harus diisi dengan&nbsp;<strong>pointer<\/strong>&nbsp;dari object yang nantinya akan menampung hasilnya.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari13-1.png\" \/><\/p>\r\n<p>Jika kita perhatikan lagi, pada struct&nbsp;<code>User<\/code>, salah satu property-nya yaitu&nbsp;<code>FullName<\/code>&nbsp;memiliki&nbsp;<strong>tag<\/strong>&nbsp;<code>json:\"Name\"<\/code>. Tag tersebut digunakan untuk mapping informasi json ke property yang bersangkutan.<\/p>\r\n<p>Data json yang akan diparsing memiliki 2 property yaitu&nbsp;<code>Name<\/code>&nbsp;dan&nbsp;<code>Age<\/code>. Kebetulan penulisan&nbsp;<code>Age<\/code>&nbsp;pada data json dan pada struktur struct adalah sama, berbeda dengan&nbsp;<code>Name<\/code>&nbsp;yang tidak ada pada struct.<\/p>\r\n<p>Dengan menambahkan tag json, maka property&nbsp;<code>FullName<\/code>&nbsp;struct akan secara cerdas menampung data json property&nbsp;<code>Name<\/code>.<\/p>\r\n<blockquote>\r\n<p>Pada kasus decoding data json string ke variabel object struct, semua level akses property struct penampung harus publik.<\/p>\r\n<\/blockquote>\r\n<h2 id=\"a532-decode-json-ke-mapstringinterface--interface\">Decode JSON Ke <code>map[string]interface{}<\/code>&nbsp;&amp;&nbsp;<code>interface{}<\/code><\/h2>\r\n<p>Tak hanya ke object cetakan struct, target decoding data json juga bisa berupa variabel bertipe&nbsp;<code>map[string]interface{}<\/code>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 35.6455%; height: 116px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 116px;\">\r\n<td style=\"width: 100%; height: 116px;\">\r\n<pre>var data1 map[string]interface{}<br \/>json.Unmarshal(jsonData, &amp;data1)<br \/><br \/>fmt.Println(\"user :\", data1[\"Name\"])<br \/>fmt.Println(\"age &nbsp;:\", data1[\"Age\"])<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Variabel bertipe&nbsp;<\/span><code>interface{}<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;juga bisa digunakan untuk menampung hasil decode. Dengan catatan pada pengaksesan nilai property, harus dilakukan casting terlebih dahulu ke&nbsp;<\/span><code>map[string]interface{}<\/code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.<\/span><\/p>\r\n<table style=\"border-collapse: collapse; width: 35.6455%; height: 116px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 116px;\">\r\n<td style=\"width: 100%; height: 116px;\">\r\n<pre>var data2 interface{}<br \/>json.Unmarshal(jsonData, &amp;data2)<br \/><br \/>var decodedData = data2.(map[string]interface{})<br \/>fmt.Println(\"user :\", decodedData[\"Name\"])<br \/>fmt.Println(\"age &nbsp;:\", decodedData[\"Age\"])<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 id=\"a533-decode-array-json-ke-array-objek\">Decode Array JSON Ke Array Object<\/h2>\r\n<p>Decode data dari array json ke slice\/array object masih sama, siapkan saja variabel penampung hasil decode dengan tipe slice struct. Contohnya bisa dilihat pada kode berikut.<\/p>\r\n<table style=\"border-collapse: collapse; width: 35.6455%; height: 116px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 116px;\">\r\n<td style=\"width: 100%; height: 116px;\">\r\n<pre>var jsonString = `[<br \/>  &nbsp; {\"Name\": \"john doe\", \"Age\": 27},<br \/>  &nbsp; {\"Name\": \"doe john\", \"Age\": 32}<br \/>]`<br \/><br \/>var data []User<br \/><br \/>var err = json.Unmarshal([]byte(jsonString), &amp;data)<br \/>if err != nil {<br \/>&nbsp; &nbsp; fmt.Println(err.Error())<br \/>&nbsp; &nbsp; return<br \/>}<br \/><br \/>fmt.Println(\"user 1:\", data[0].FullName)<br \/>fmt.Println(\"user 2:\", data[1].FullName)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2 id=\"a534-encode-objek-ke-json-string\">Encode object Ke JSON String<\/h2>\r\n<p>Setelah sebelumnya dijelaskan beberapa cara decode data dari json string ke object, sekarang kita akan belajar cara&nbsp;<strong>encode<\/strong>&nbsp;data object ke bentuk json string.<\/p>\r\n<p>Fungsi&nbsp;<code>json.Marshal<\/code>&nbsp;digunakan untuk encoding data ke json string. Sumber data bisa berupa variabel object cetakan struct,&nbsp;<code>map[string]interface{}<\/code>, atau slice.<\/p>\r\n<p>Pada contoh berikut, data slice struct dikonversi ke dalam bentuk json string. Hasil konversi berupa&nbsp;<code>[]byte<\/code>, casting terlebih dahulu ke tipe&nbsp;<code>string<\/code>&nbsp;agar bisa ditampilkan bentuk json string-nya.<\/p>\r\n<table style=\"border-collapse: collapse; width: 35.6455%; height: 116px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 116px;\">\r\n<td style=\"width: 100%; height: 116px;\">\r\n<pre>var object = []User{{\"john doe\", 27}, {\"doe john\", 32}}<br \/>var jsonData, err = json.Marshal(object)<br \/>if err != nil {<br \/>&nbsp; &nbsp; fmt.Println(err.Error())<br \/>&nbsp; &nbsp; return<br \/>}<br \/><br \/>var jsonString = string(jsonData)<br \/>fmt.Println(jsonString)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Output:<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari13-2.png\" \/><\/p>\r\n<p>&nbsp;<\/p>\r\n<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Web Server<\/strong><\/span><\/p>\r\n<p>Go menyediakan package&nbsp;<code>net\/http<\/code>, berisi berbagai macam fitur untuk keperluan pembuatan aplikasi berbasis web. Termasuk di dalamnya web server, routing, templating, dan lainnya.<\/p>\r\n<p>Go memiliki web server sendiri, dan web server tersebut berada di dalam Go, tidak seperti bahasa lain yang servernya terpisah dan perlu diinstal sendiri (seperti PHP yang memerlukan Apache, .NET yang memerlukan IIS).<\/p>\r\n<p>Di bab ini kita akan belajar cara pembuatan aplikasi web sederhana dan pemanfaatan template untuk mendesain view.<\/p>\r\n<h2 id=\"a511-membuat-aplikasi-web-sederhana\">Membuat Aplikasi Web Sederhana<\/h2>\r\n<p>Package&nbsp;<code>net\/http<\/code>&nbsp;memiliki banyak sekali fungsi yang bisa dimanfaatkan. Di bagian ini kita akan mempelajari beberapa fungsi penting seperti&nbsp;<em>routing<\/em>&nbsp;dan&nbsp;<em>start server<\/em>.<\/p>\r\n<p>Program di bawah ini merupakan contoh sederhana untuk memunculkan text di web ketika url tertentu diakses.<\/p>\r\n<table style=\"border-collapse: collapse; width: 35.6455%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import \"fmt\"<br \/>import \"net\/http\"<br \/><br \/>func index(w http.ResponseWriter, r *http.Request) {<br \/>  fmt.Fprintln(w, \"apa kabar!\")<br \/>}<br \/><br \/>func main() {<br \/>  http.HandleFunc(\"\/\", func(w http.ResponseWriter, r *http.Request) {<br \/>    fmt.Fprintln(w, \"halo!\")<br \/>  })<br \/>   <br \/>  http.HandleFunc(\"\/index\", index)<br \/>  <br \/>  fmt.Println(\"starting web server at http:\/\/localhost:8080\/\")<br \/><br \/>  http.ListenAndServe(\":8080\", nil)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Jalankan program tersebut.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari13-3.png\" \/><\/p>\r\n<p>Jika muncul dialog&nbsp;<strong>Do you want the application &ldquo;main&rdquo; to accept incoming network connections?<\/strong>&nbsp;atau sejenis, pilih allow. Setelah itu, buka url&nbsp;http:\/\/localhost\/&nbsp;dan&nbsp;http:\/\/localhost\/index&nbsp;lewat browser.<\/p>\r\n<p><img style=\"border: 1px solid #aaa;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari13-4.png\" width=\"363\" height=\"272\" \/><\/p>\r\n<p>Fungsi&nbsp;<code>http.HandleFunc()<\/code>&nbsp;digunakan untuk routing aplikasi web. Maksud dari routing adalah penentuan aksi ketika url tertentu diakses oleh user.<\/p>\r\n<p>Pada kode di atas 2 rute didaftarkan, yaitu&nbsp;<code>\/<\/code>&nbsp;dan&nbsp;<code>\/index<\/code>. Aksi dari rute&nbsp;<code>\/<\/code>&nbsp;adalah menampilkan text&nbsp;<code>\"halo\"<\/code>&nbsp;di halaman website. Sedangkan&nbsp;<code>\/index<\/code>&nbsp;menampilkan text&nbsp;<code>\"apa kabar!\"<\/code>.<\/p>\r\n<p>Fungsi&nbsp;<code>http.HandleFunc()<\/code>&nbsp;memiliki 2 buah parameter yang harus diisi. Parameter pertama adalah rute yang diinginkan. Parameter kedua adalah&nbsp;<em>callback<\/em>&nbsp;atau aksi ketika rute tersebut diakses. Callback tersebut bertipe fungsi&nbsp;<code>func(w http.ResponseWriter, r *http.Request)<\/code>.<\/p>\r\n<p>Pada pendaftaran rute&nbsp;<code>\/index<\/code>, callback-nya adalah fungsi&nbsp;<code>index()<\/code>, hal seperti ini diperbolehkan asalkan tipe dari fungsi tersebut sesuai.<\/p>\r\n<p>Fungsi&nbsp;<code>http.listenAndServe()<\/code>&nbsp;digunakan untuk menghidupkan server sekaligus menjalankan aplikasi menggunakan server tersebut. Di Go, 1 web aplikasi adalah 1 buah server berbeda.<\/p>\r\n<p>Pada contoh di atas, server dijalankan pada port&nbsp;<code>8080<\/code>.<\/p>\r\n<p>Perlu diingat, setiap ada perubahan pada file&nbsp;<code>.go<\/code>,&nbsp;<code>go run<\/code>&nbsp;harus dipanggil lagi.<\/p>\r\n<p>Untuk menghentikan web server, tekan&nbsp;<strong>CTRL+C<\/strong>&nbsp;pada terminal atau CMD, dimana pengeksekusian aplikasi berlangsung.<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi JSON data &amp; Web Server : <a href=\"https:\/\/youtu.be\/XT9K9WdyEt4\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-web-server.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-web-server.html<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-json.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-json.html<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-09 09:00:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-10-05 07:39:30","updated_at":"2021-10-25 16:50:17","waktu_publish_formatted":" Selasa, 09 November 2021. 09:00:00 WIB."},{"id":1440,"uuid":"82729da1-8605-4f7f-bced-4c30d045e5ea","author_user_id":4336,"materi_section_id":392,"judul":"Hari 13 - Web Service API Server & Middleware","permalink":"hari-13-web-service-api-server-middleware","konten":"<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">Web Service API Server<\/strong><\/p>\r\n<p>Web Service API adalah sebuah web yang menerima request dari client dan menghasilkan response, biasa berupa JSON\/XML.<\/p>\r\n<h2 id=\"a541-pembuatan-web-api\">Membuat API dengan Method <code>GET<\/code><\/h2>\r\n<p>Method&nbsp;<code>GET<\/code>&nbsp;paling sering digunakan untuk menampilkan sebuah data&nbsp;<strong>json<\/strong>. Maka saya akan berikan contoh pertama dengan method&nbsp;<strong>GET<\/strong>.<\/p>\r\n<p>Method GET dapat di akses melalui browser atau tools api lainnya. Selain itu juga dapat di ambil dari website lainnya, dengan catatan harus mengaktifkan&nbsp;<strong>cors<\/strong>.<\/p>\r\n<p>Yuk langsung saja kita buat.<\/p>\r\n<table style=\"border-collapse: collapse; width: 61.0791%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<div>\r\n<pre>package&nbsp;main<br \/><br \/>import (<br \/> &nbsp;\"encoding\/json\"<br \/> &nbsp;\"fmt\"<br \/> &nbsp;\"log\"<br \/> &nbsp;\"net\/http\"<br \/>)<br \/><br \/>type Movie struct {<br \/> &nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;`json:\"id\"`<br \/> &nbsp;Title string `json:\"title\"`<br \/> &nbsp;Year&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;`json:\"year\"`<br \/>}<br \/><br \/>func Movies() []Movie {<br \/> &nbsp;movs&nbsp;:=&nbsp;[]Movie{<br \/> &nbsp;&nbsp;&nbsp;{1,&nbsp;\"Spider-Man\",&nbsp;2002},<br \/> &nbsp;&nbsp;&nbsp;{2,&nbsp;\"John&nbsp;Wick\",&nbsp;2014},<br \/> &nbsp;&nbsp;&nbsp;{3,&nbsp;\"Avengers\",&nbsp;2018},<br \/> &nbsp;&nbsp;&nbsp;{4,&nbsp;\"Logan\",&nbsp;2017},<br \/> &nbsp;}<br \/> &nbsp;return&nbsp;movs<br \/>}<br \/><br \/>\/\/&nbsp;GetMovies<br \/>func getMovies(w http.ResponseWriter, r *http.Request) {<br \/> &nbsp;if&nbsp;r.Method&nbsp;==&nbsp;\"GET\"&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;movies&nbsp;:=&nbsp;Movies()<br \/> &nbsp;&nbsp;&nbsp;dataMovies,&nbsp;err&nbsp;:=&nbsp;json.Marshal(movies)<br \/> &nbsp;&nbsp;&nbsp;<br \/>    if err != nil {<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http.Error(w,&nbsp;err.Error(),&nbsp;http.StatusInternalServerError)<br \/>&nbsp;&nbsp;&nbsp;&nbsp;}<br \/><br \/> &nbsp;&nbsp;&nbsp;w.Header().Set(\"Content-Type\",&nbsp;\"application\/json\")<br \/> &nbsp;&nbsp;&nbsp;w.WriteHeader(http.StatusOK)<br \/> &nbsp;&nbsp;&nbsp;w.Write(dataMovies)<br \/> &nbsp;&nbsp;&nbsp;return<br \/> &nbsp;}<br \/> &nbsp;http.Error(w,&nbsp;\"ERROR....\",&nbsp;http.StatusNotFound)<br \/>}<br \/><br \/>func main() {<br \/> &nbsp;http.HandleFunc(\"\/movies\",&nbsp;getMovies)<br \/>&nbsp;&nbsp;fmt.Println(\"server&nbsp;running&nbsp;at&nbsp;http:\/\/localhost:8080\")<br \/><br \/> &nbsp;if&nbsp;err&nbsp;:=&nbsp;http.ListenAndServe(\":8080\",&nbsp;nil);&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;log.Fatal(err)<br \/> &nbsp;}<br \/>}<\/pre>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Setelah web server sudah berjalan, web service yang telah dibuat perlu untuk di-tes. Salah satu tools yang digunakan untuk mengecek web service API adalah <a href=\"https:\/\/www.postman.com\/\" target=\"_blank\" rel=\"noopener\">postman<\/a><\/p>\r\n<p>Hasilnya :<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari14-1.png\" \/><\/p>\r\n<p>Perhatikan kode di atas, terdapat&nbsp;<code>http server<\/code>&nbsp;yang mengalankan fungsi&nbsp;<code>GetMovies()<\/code>. Dimana di dalam fungsi tersebut akan memeriksa dahulu method yang di akses, apabila method itu GET maka akan di teruskan ke baris kode berikutnya.<\/p>\r\n<p>Kode baris berikutnya memanggil method&nbsp;<code>Movies()<\/code>, dimana nilai balik dari fungsi tersebut adalah data array dari struct&nbsp;<code>Movie<\/code>. Setelah itu maka data tersebut di ubah format ke dalam tipe byte dengan sintaks&nbsp;<code>marshal<\/code>.<\/p>\r\n<p>Untuk menampilkan ke halaman browser menggunakan kode&nbsp;<code>w.Write(dataMovie)<\/code>. Agar Format JSON harus menambahkan sintaks&nbsp;<code>w.Header().Set(\"Content-Type\", \"application\/json\")<\/code>.<\/p>\r\n<p>Sedangkan untuk sintaks&nbsp;<code>w.WriteHeader(http.StatusOK)<\/code>&nbsp;digunakan untuk memeberikan kode status header. Jika belum paham mengenai kode status http bisa membaca di&nbsp;<a href=\"https:\/\/restfulapi.net\/http-status-codes\/\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">https:\/\/restfulapi.net\/http-status-codes\/<\/a>.<\/p>\r\n<h2>Membuat API dengan Method&nbsp;<code>POST<\/code><\/h2>\r\n<p>Kalau menggunakan Method&nbsp;<code>POST<\/code>&nbsp;ini tidak bisa langsung di akses di browser, tapi dapat menggunakan form&nbsp;<code>HTML<\/code>&nbsp;atau&nbsp;<code>Postman<\/code>&nbsp;sebagai tools. Di karenakan kita tidak membuat website namun membuat API Web Service dengan Golang maka untuk Uji Coba saya menggunakan `Postman`.<\/p>\r\n<p>Sebelum ke kode program ada hal yang perlu kita pahami tentang input data post. Secara umum dan sering di pakai dapat menggunakan 2 macam cara untuk menerima data yaitu dengan&nbsp;<code>form<\/code>&nbsp;dan&nbsp;<code>teks json<\/code>, kedua hal ini biasa di sebut `content type`. Cara menerima datanya pun berbeda.<\/p>\r\n<p>Langsung saja kita buat contoh kode golang nya.<\/p>\r\n<table style=\"border-collapse: collapse; width: 61.0791%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>\/\/ PostMovie<br \/>func PostMovie(w http.ResponseWriter, r *http.Request) {<br \/>  w.Header().Set(\"Content-Type\", \"application\/json\")<br \/>  var Mov Movie<br \/>  if r.Method == \"POST\" {<br \/>    if r.Header.Get(\"Content-Type\") == \"application\/json\" {<br \/>      \/\/ parse dari json<br \/>      decodeJSON := json.NewDecoder(r.Body)<br \/>      if err := decodeJSON.Decode(&amp;Mov); err != nil {<br \/>        log.Fatal(err)<br \/>      }<br \/>    } else {<br \/>      \/\/ parse dari form<br \/>      getID := r.PostFormValue(\"id\")<br \/>      id, _ := strconv.Atoi(getID)<br \/>      title := r.PostFormValue(\"title\")<br \/>      getYear := r.PostFormValue(\"year\")<br \/>      year, _ := strconv.Atoi(getYear)<br \/>      Mov = Movie{<br \/>         ID: &nbsp; &nbsp;id,<br \/>         Title: title,<br \/>         Year: &nbsp;year,<br \/>      }<br \/>    }<br \/><br \/>  &nbsp; dataMovie, _ := json.Marshal(Mov) \/\/ to byte<br \/>  &nbsp; w.Write(dataMovie) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\/\/ cetak di browser<br \/>  &nbsp; return<br \/>  }<br \/><br \/>  http.Error(w, \"NOT FOUND\", http.StatusNotFound)<br \/>  return<br \/>}<br \/><br \/>\/\/ pada function main<br \/><br \/>http.HandleFunc(\"\/post_movie\", PostMovie)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Percobaan pada kode diatas dilakukan 2 kali yaitu dengan menggunakan <code>raw data json<\/code> dan <code>form-data<\/code>.<\/p>\r\n<p><strong>Uji coba dengan JSON<\/strong><\/p>\r\n<p><strong><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari14-2.png\" \/><\/strong><\/p>\r\n<p><strong>Uji coba dengan form-data<\/strong><\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari14-3.png\" width=\"913\" height=\"407\" \/><\/p>\r\n<p>Routing&nbsp;<code>\"\/post_movie\"<\/code>&nbsp;mengakses fungsi dengan nama&nbsp;<code>PostMovie<\/code>. Sama seperti hal nya dengan method GET untuk memeriksa method yang di akses, namun di ganti dengan method&nbsp;<code>POST<\/code>.<\/p>\r\n<p>Untuk menangkap tipe konten yang di inputkan dapat menggunakan kode `r.Header.Get(&ldquo;Content-Type&rdquo;) `. Jika tipe tersebut json untuk menerima data harus menggunakan tipe data maupun struct di tandai dengan kode `decodeJSON := json.NewDecoder(r.Body)` dan&nbsp;<code>decodeJSON.Decode(&amp;Mov)<\/code>&nbsp;agar masuk struct dengan nama Mahasiswa.<\/p>\r\n<p>Jika data tersebut bukan json maka untuk mengambil data nya dapat menggunakan sintaks&nbsp;<code>PostFormValue<\/code>&nbsp;dan di dalam nya di tulis nama&nbsp;<code>field<\/code>&nbsp;nya. Data kembalian terhadap fungsi itu yaitu&nbsp;<code>string<\/code>, apabila ingin mengubah ke bentuk tipe data&nbsp;<code>integer<\/code>&nbsp;dapat menggunakan manipulasi string yaitu&nbsp;<code>Atoi<\/code>.<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">Middleware<\/strong><\/p>\r\n<p>Middleware adalah satu satu mekanisme keamanan website. Middleware berjalan sebelum fungsi utama di proses.<\/p>\r\n<p>Sebagai contoh serderhana, misalnya terdapat routing untuk mengarahkan ke dalam fungsi, fungsi tersebut digunakan untuk melihat data. Nah agar fungsi tersebut tidak dapat di akses orang maka harus melewati&nbsp;<code>middleware<\/code>, middleware berperan untuk menghentikan atau meneruskan proses.<\/p>\r\n<p>Contoh paling simpel isi dari middleware adalah pemeriksaan suatu teks yang bisa di kirim melalui body dan header melalui&nbsp;<code>http request<\/code>.<\/p>\r\n<p>Untuk the real word projek middleware di gunakan untuk auntentifikasi login menggunakan token, middleware berperan untuk memeriksa apakah token yang dikirim sesuai atau tidak.<\/p>\r\n<p>Mari kita coba buat middleware sederhana.<\/p>\r\n<h2><span id=\"Membuat_Middleware\" class=\"ez-toc-section\"><\/span>Membuat Middleware<\/h2>\r\n<p>Sekarang kita coba latihan menggunakan middleware, study case kali ini akan memanfaatkan middleware untuk melakukan&nbsp;<code>logging<\/code>, artinya untuk mencatat&nbsp;<strong>URL<\/strong>&nbsp;yang di akses.<\/p>\r\n<table style=\"border-collapse: collapse; width: 61.0791%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"fmt\"<br \/>  \"net\/http\"<br \/>)<br \/><br \/>\/\/ Fungi Log yang berguna sebagai middleware<br \/>func log(next http.Handler) http.Handler {<br \/>  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {<br \/>    fmt.Fprintf(w, \"Ini dari middleware Log....\\n\")<br \/>    fmt.Println(r.URL.Path)<br \/>    next.ServeHTTP(w, r)<br \/>  })<br \/>}<br \/><br \/>\/\/ Fungsi GetMovie untuk mengampilkan text string di browser<br \/>func GetMovie(w http.ResponseWriter, r *http.Request) {<br \/>  w.Write([]byte(\"Ini dari function GetMovie()\"))<br \/>}<br \/><br \/>func main() {<br \/>  \/\/ konfigurasi server<br \/>  server := &amp;http.Server{<br \/>    Addr: \":8080\",<br \/>  }<br \/><br \/>  \/\/ routing<br \/>  http.Handle(\"\/\", log(http.HandlerFunc(GetMovie)))<br \/><br \/>  \/\/ jalankan server<br \/>  fmt.Println(\"server running at http:\/\/localhost:8080\")<br \/>  server.ListenAndServe()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Hasilnya :<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari14-4.png\" \/><\/p>\r\n<p>Perhatikan kode di atas, terdapat http server yang berjalan di port&nbsp;<code>8000<\/code>. Hanya memiliki satu routing yaitu &ldquo;\/&rdquo;, dimana routing tersebut digunakan untuk menjalankan fungsi&nbsp;<code>GetMovie()<\/code>. Namun jika di lihat dari kode di atas, bahwa GetMovie di bungkus dengan fungsi <code>log<\/code>.<\/p>\r\n<p>Sekarang perhatikan fungsi&nbsp;<code>log<\/code>. Di log ada parameter&nbsp;<code>next http.Handler<\/code>. Parameter itu merupakan sebuah interface di Go. Interface Handler memiliki method yaitu&nbsp;<code>ServeHTTP<\/code>. Di dalam Method <code>ServerHTTP<\/code>&nbsp;terdapat parameter&nbsp;<code>ResponseWriter, *Request<\/code>. Yang artinya untuk menggunakan&nbsp;<code>http.handler<\/code>&nbsp;harus di bungkus&nbsp;<code>http.HandlerFunc<\/code>.<\/p>\r\n<h2><span id=\"Menggunakan_Middleware_untuk_Memeriksa_Parameter_URL\" class=\"ez-toc-section\"><\/span>Menggunakan Middleware untuk Memeriksa Parameter URL<\/h2>\r\n<p>Sekarang kita buat contoh bagaimana cara melakukan pemeriksaan nilai yang di kirim dari URL.<\/p>\r\n<p>Studi kasus kali ini yaitu mengambil parameter dan di lakukan pengecekan, apabila sukses akan di lanjutkan tapi kalau tidak akan di hentikan.<\/p>\r\n<table style=\"border-collapse: collapse; width: 61.0791%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>package main<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"fmt\"<br \/>&nbsp; &nbsp; \"net\/http\"<br \/>)<br \/><br \/>\/\/ Fungi CekLogin yang berguna sebagai middleware<br \/>func CekLogin(next http.Handler) http.Handler {<br \/>&nbsp; &nbsp; return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; if r.URL.Query().Get(\"token\") != \"12345\" {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fmt.Fprintf(w, \"Token tidak tersedia atau salah\\n\")<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/>&nbsp; &nbsp; &nbsp; &nbsp; next.ServeHTTP(w, r)<br \/>&nbsp; &nbsp; })<br \/>}<br \/><br \/>\/\/ Fungsi GetMovie untuk mengampilkan text string di browser<br \/>func GetMovie(w http.ResponseWriter, r *http.Request) {<br \/>&nbsp; &nbsp; w.Write([]byte(\"&lt;h1&gt;Anda Berhasil Mengakses Fungsi GetMovie() &lt;\/h1&gt;\"))<br \/>}<br \/><br \/>func main() {<br \/><br \/>&nbsp; &nbsp; \/\/ konfigurasi server<br \/>&nbsp; &nbsp; server := &amp;http.Server{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Addr: \":8080\",<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; \/\/ routing<br \/>&nbsp; &nbsp; http.Handle(\"\/\", CekLogin(http.HandlerFunc(GetMovie)))<br \/><br \/>&nbsp; &nbsp; \/\/ jalankan server<br \/>&nbsp; &nbsp; fmt.Println(\"server running at http:\/\/localhost:8080\")<br \/>&nbsp; &nbsp; server.ListenAndServe()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Perhatikan kode yang ada di dalam fungsi&nbsp;<code>CekLogin()<\/code>. Di fungsi tersebut terdapat kode&nbsp;<code>r.URL.Query().Get(\"token\") != \"12345\"<\/code>. Kode tersebut untuk mengambil parameter&nbsp;<code>token<\/code>&nbsp;dari URL. Ketika token tersebut bernilai 12345 maka akan di teruskan ke fungsi&nbsp;<code>GetMovie()<\/code>&nbsp;Tapi jika tidak akan muncul keterangan saja dan tidak di ijinkan mengakses fungsi&nbsp;<code>GetMovie()<\/code>.<\/p>\r\n<p>Hasilnya :<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari14-5.png\" width=\"1058\" height=\"422\" \/><\/p>\r\n<p>Bisa di lihat pada 2 gambar di atas, dimana gambar sebelah kiri parameter yang di berikan di URL benar, sedangkan di sebelah kanan tidak menggunakan parameter.<\/p>\r\n<h2><span id=\"Menerapkan_Middleware_untuk_Basic_Authentication_API\" class=\"ez-toc-section\"><\/span>Menerapkan Middleware untuk Basic Authentication API<\/h2>\r\n<p>Di dalam projek nyata penggunaan Authentication dapat di gunakan untuk melakukan login dimana dapat menggunakan Authentication untuk memeriksa username dan password.<\/p>\r\n<p>Basic auth merupakan salah satu jenis Authentication yang paling mudah digunakan dimana untuk melakukannya kita harus memberikan nilai&nbsp;<strong>username<\/strong>&nbsp;dan&nbsp;<strong>password<\/strong>. Hal ini biasa nya untuk&nbsp;<strong>Authentication<\/strong>&nbsp;kebutuhan&nbsp;<strong>API<\/strong>.<\/p>\r\n<p>Berhubung tidak ada front end yang dapat digunakan untuk menguji, pada tutorial golang kali ini uji coba dapat di lakukan menggunakan tools Postman<\/p>\r\n<p>Langsung kita buat aja contohnya.<\/p>\r\n<table style=\"border-collapse: collapse; width: 61.0791%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<div>\r\n<pre>package main<br \/><br \/>import (<br \/>  \"net\/http\"<br \/>)<br \/><br \/>\/\/ Fungi Log yang berguna sebagai middleware<br \/>func Auth(next http.Handler) http.Handler {<br \/>  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {<br \/>    uname, pwd, ok := r.BasicAuth()<br \/>    if !ok {<br \/>      w.Write([]byte(\"Username atau Password tidak boleh kosong\"))<br \/>      return<br \/>    }<br \/><br \/>    if uname == \"admin\" &amp;&amp; pwd == \"admin\" {<br \/>      next.ServeHTTP(w, r)<br \/>      return<br \/>   }<br \/>    w.Write([]byte(\"Username atau Password tidak sesuai\"))<br \/>    return<br \/>  })<br \/>}<br \/><br \/>\/\/ Fungsi GetMovie untuk mengampilkan text string di browser<br \/>func GetMovie(w http.ResponseWriter, r *http.Request) {<br \/>  if r.Method == \"POST\" {<br \/>    w.Write([]byte(\"&lt;h1&gt;Anda Berhasil Mengakses Fungsi GetMovie() &lt;\/h1&gt;\"))<br \/>  }<br \/>}<br \/><br \/>func main() {<br \/>  \/\/ konfigurasi server<br \/>  server := &amp;http.Server{<br \/>    Addr: \":8080\",<br \/>  }<br \/><br \/>  \/\/ routing<br \/>  http.Handle(\"\/\", Auth(http.HandlerFunc(GetMovie)))<br \/>  <br \/>  \/\/ jalankan server<br \/>  fmt.Println(\"server running at http:\/\/localhost:8080\")<br \/>  server.ListenAndServe()<br \/>}<\/pre>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Hasilnya :<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari14-6.png\" width=\"1121\" height=\"375\" \/><\/p>\r\n<p>Perhatikan kode di atas, untuk mendapatkan username dan password dari auth dengan tipe Basic dapat menggunakan kode&nbsp;<code>uname, pwd, ok := r.BasicAuth()<\/code>, dimana nilai baik tersebut ada 3 yaitu&nbsp;<code>username(string)<\/code>,&nbsp;<code>password(string)<\/code>&nbsp;dan&nbsp;<code>ok(boolean)<\/code>.<\/p>\r\n<p>Cara kerja nya sama pada contoh sebelumnya, jika username dan password sesuai maka akan di teruskan , namun jika tidak akan di hentikan.<\/p>\r\n<p>Ingat&nbsp;<code>method<\/code>&nbsp;di atas menggunakan method&nbsp;<code>POST<\/code>&nbsp;ya.<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Web Service API Server &amp; Middleware : <a href=\"https:\/\/youtu.be\/0AjfquSTiFM\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/A-web-service-api.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/A-web-service-api.html<\/a><\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<ul style=\"display: none;\">\r\n<li style=\"text-align: justify;\">https:\/\/kodingin.com\/membuat-api-dengan-golang\/<\/li>\r\n<li style=\"text-align: justify;\">https:\/\/kodingin.com\/golang-middleware\/<\/li>\r\n<\/ul>","waktu_publish":"2021-11-10 09:00:00","status_publish":"publish","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-10-06 07:23:08","updated_at":"2021-11-03 14:36:17","waktu_publish_formatted":" Rabu, 10 November 2021. 09:00:00 WIB."},{"id":1444,"uuid":"25ded938-5163-4b89-a6a5-5c17798c1faa","author_user_id":4336,"materi_section_id":392,"judul":"Hari 14 - Membuat REST API dengan MySQL","permalink":"hari-14-membuat-rest-api-dengan-mysql","konten":"<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">Membuat REST API dengan MySQL<\/strong><\/p>\r\n<h2>Hal Yang Perlu diperhatikan<\/h2>\r\n<p>Sebelum membuat REST API dengan MySQL, <strong>jika belum memahami MySQL sangat disarankan<\/strong> untuk mempelajarinya di <a href=\"https:\/\/www.youtube.com\/watch?v=eNqBtR-swu8\" target=\"_blank\" rel=\"noopener\">link ini<\/a> (Youtube Ngoding Pintar - 5 QUERY SQL dasar yang WAJIB dipahami PROGRAMMER | Tutorial MySQL) dan <a href=\"https:\/\/www.niagahoster.co.id\/blog\/cara-membuat-database-di-mysql\/\" target=\"_blank\" rel=\"noopener\">link ini<\/a>. jika sudah memahami MySQL bisa di lanjutkan dengan membuat REST API dengan Database MySQL<\/p>\r\n<hr \/>\r\n<h2>REST API Golang dengan MySQL<\/h2>\r\n<p>Untuk membuat REST API dengan MySQL, kita perlu mempersiapkan project kita terlebih dahulu, pada contoh ini kita akan memberi nama projectnya api-mysql. pada contoh ini kita akan menggunakan dua package diluar packages bawaan Go. packagenya adalah <a href=\"https:\/\/github.com\/go-sql-driver\/mysql\" target=\"_blank\" rel=\"noopener\">https:\/\/github.com\/go-sql-driver\/mysql<\/a> dan <a href=\"https:\/\/github.com\/julienschmidt\/httprouter\" target=\"_blank\" rel=\"noopener\">https:\/\/github.com\/julienschmidt\/httprouter<\/a>. untuk installasi package cukup menjalankan perintah:<\/p>\r\n<pre class=\"wp-block-verse\">go get github.com\/go-sql-driver\/mysql<br \/>go get github.com\/julienschmidt\/httprouter<\/pre>\r\n<p>setelah melakukan installasi diatas maka akan otomatis ditambahkan file go.sum dan perubahan di file go.mod akan terlihat seperti ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>module api-mysql<br \/><br \/>go 1.17<br \/><br \/>require (<br \/>  github.com\/go-sql-driver\/mysql v1.6.0 \/\/ indirect<br \/>  github.com\/julienschmidt\/httprouter v1.3.0 \/\/ indirect<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<h2>Struktur Project<\/h2>\r\n<p>Silahkan buat folder dan file dengan struktur folder sederhana seperti di bawah ini :<\/p>\r\n<pre class=\"wp-block-code\"><code>. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br \/>\u251c\u2500\u2500 main.go  <br \/>\u251c\u2500\u2500 go.mod  <br \/>\u251c\u2500\u2500 go.sum  <br \/>\u251c\u2500\u2500 config                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 config.go                                                        \r\n\u251c\u2500\u2500 movie                                                            \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 repository_mysql.go                                              \r\n\u251c\u2500\u2500 models                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 movie.go                                                     \r\n\u2514\u2500\u2500 utils                                                                \r\n    \u2514\u2500\u2500 res.go       <\/code><\/pre>\r\n<p>Penjelasan :<\/p>\r\n<ul>\r\n<li><strong>main.go<\/strong>, digunakan untuk menjalankan melakukan aksi terhadap data, bisa di katakan sebuah controller.<\/li>\r\n<li><strong>utils\/res.go<\/strong>, digunakan untuk mencetak data dengan format JSON.<\/li>\r\n<li><strong>config\/config.go<\/strong>, digunakan untuk melakukan konfigurasi MySQL.<\/li>\r\n<li><strong>movie\/repository_mysql.go,<\/strong>&nbsp;digunakan untuk melakukan query ke database.<\/li>\r\n<li><strong>models\/movie.go<\/strong>, digunakan untuk membuat struct\/ struktur.<\/li>\r\n<\/ul>\r\n<p>Sekarang kita mulai isi kode di file <strong>main.go<\/strong>.<\/p>\r\n<p>Hal yang pertama kita lakukan yaitu membuat&nbsp;<code>http server<\/code>&nbsp;agar dapat di jalankan di browser.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package main <br \/><br \/>import( <br \/>  \"log\"<br \/>  \"net\/http\"<br \/>  \"github.com\/julienschmidt\/httprouter\" <br \/>) <br \/><br \/>func main() {  <br \/>  router := httprouter.New()<br \/>  fmt.Println(\"Server Running at Port 8080\")<br \/>  log.Fatal(http.ListenAndServe(\":8080\", router))<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p class=\"wp-block-code\">Lalu kita isi kode file <strong>utils\/res.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package utils<br \/><br \/>import (<br \/>  \"encoding\/json\"<br \/>  \"net\/http\"<br \/>)<br \/><br \/>func ResponseJSON(w http.ResponseWriter, p interface{}, status int) {<br \/>  ubahkeByte, err := json.Marshal(p)<br \/>  w.Header().Set(\"Content-Type\", \"application\/json\")<br \/><br \/>  if err != nil {<br \/>    http.Error(w, \"error om\", http.StatusBadRequest)<br \/>  }<br \/>  <br \/>  w.Header().Set(\"Content-Type\", \"application\/json\")<br \/>  w.WriteHeader(status)<br \/>  w.Write([]byte(ubahkeByte))<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Kode di atas berguna untuk menampilkan data dengan bentuk JSON di browser. Fungsi di atas nantinya akan kita panggil dari file&nbsp;<strong>main.go<\/strong>.<\/p>\r\n<p>Sekarang kita buat modelnya, silahkan buka <strong>models\/movie.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package models<br \/><br \/>import (<br \/>  \"time\"<br \/>)<br \/><br \/>type (<br \/>  \/\/ Movie<br \/>  Movie struct {<br \/> &nbsp;  ID&nbsp;&nbsp;&nbsp;&nbsp;    int       `json:\"id\"`<br \/>    Title     string    `json:\"title\"`<br \/>    Year&nbsp;&nbsp;    int       `json:\"year\"`<br \/>    CreatedAt time.Time `json:\"created_at\"`<br \/>    UpdatedAt time.Time `json:\"updated_at\"`<br \/>  }<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Kode di atas merupakan struct, dimana nanti digunakan untuk melakukan segala bentuk manipulasi data, seperti menampilkan data di Golang dengan database MySQL.<\/p>\r\n<p>Jika sudah sekarang kita akan melakukan koneksi ke database MySQL.<\/p>\r\n<h2>Koneksi Golang ke Database MySQL<\/h2>\r\n<p>Sebelumnya silahkan buat database dengan nama&nbsp;<code>db_movie<\/code>. Dan nama tabel&nbsp;<code>movie<\/code>.<\/p>\r\n<p>Berikut ini query sql nya yang bisa anda excute.<\/p>\r\n<table style=\"border-collapse: collapse; width: 32.948%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>CREATE TABLE db_movie.movie (<br \/>&nbsp; &nbsp; id INT auto_increment primary key,<br \/>&nbsp; &nbsp; title VARCHAR(255) not null,<br \/>&nbsp; &nbsp; `year` INT not null,<br \/>&nbsp; &nbsp; created_at DATETIME not null,<br \/>&nbsp; &nbsp; updated_at DATETIME not null<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>untuk membuat tabel tidak harus eksekusi query SQL seperti diatas, boleh langsung dibuat di tools seperti <strong>phpMyadmin <\/strong>, <strong>Dbeaver dan sejenisnya.&nbsp;<\/strong><\/p>\r\n<p>Sehingga skema tabel <span style=\"font-family: monospace;\"><span style=\"background-color: #b4d7ff;\">movie<\/span><\/span> seperti gambar di bawah ini.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari15-1.png\" \/><\/p>\r\n<p>Pastikan skema database dengan tabel&nbsp;<code>movie<\/code>&nbsp;sudah sama.<\/p>\r\n<p>Sekarang kita lakukan koneksi ke database MySQL, untuk menghubungkan Golang dengan MySQL kita akan menggunakan package <a href=\"https:\/\/github.com\/go-sql-driver\/mysql\" target=\"_blank\" rel=\"noopener\">https:\/\/github.com\/go-sql-driver\/mysql<\/a> yang sudah di install sebelumnya.<\/p>\r\n<p>Untuk melakukan koneksi dengan database MySQL kita menggunakan file <strong>config\/config.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package config<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"database\/sql\"<br \/>&nbsp; &nbsp; \"fmt\"<br \/>&nbsp; &nbsp; _ \"github.com\/go-sql-driver\/mysql\"<br \/>)<br \/><br \/>const (<br \/>&nbsp; &nbsp; username string = \"root\"<br \/>  &nbsp; password string = \"password\"<br \/>  &nbsp; database string = \"db_movie\"<br \/>)<br \/><br \/>var (<br \/>&nbsp; &nbsp; dsn = fmt.Sprintf(\"%v:%v@\/%v\", username, password, database)<br \/>)<br \/><br \/>\/\/ HubToMySQL<br \/>func MySQL() (*sql.DB, error) {<br \/>&nbsp; &nbsp; db, err := sql.Open(\"mysql\", dsn)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return nil, err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; return db, nil<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Silahkan ganti pengaturan koneksi ke databasenya sesuai dengan&nbsp;<code>environment<\/code>&nbsp;milik anda yang terdapat pada kode :<\/p>\r\n<table border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre>const (<br \/>  username string = \"root\"<br \/>  password string = \"password\"<br \/>  database string = \"db_movie\"\r\n)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<pre class=\"wp-block-code\">&nbsp;<\/pre>\r\n<p>Sekarang mari kita lihat hasilnya. Apakah sudah berhasil atau belum.<\/p>\r\n<p>Silahkan panggil fungsi&nbsp;<code>MySQL()<\/code> dari file <strong>main.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"log\"<br \/>&nbsp; &nbsp; \"net\/http\"<br \/>  &nbsp; \"api-mysql\/config\"<br \/>&nbsp; &nbsp; \"fmt\"<br \/>    \"github.com\/julienschmidt\/httprouter\" <br \/>)<br \/><br \/>func main() {<br \/>&nbsp; &nbsp; db, e := config.MySQL()<br \/><br \/>&nbsp; &nbsp; if e != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(e)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; eb := db.Ping()<br \/>&nbsp; &nbsp; if eb != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; panic(eb.Error())&nbsp;<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; fmt.Println(\"Success\")<br \/><br \/>    router := httprouter.New()<br \/>    fmt.Println(\"Server Running at Port 8080\")<br \/>    log.Fatal(http.ListenAndServe(\":8080\", router))<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Sekarang mari kita coba jalankan go run main.go<\/p>\r\n<p><img style=\"border: 1px solid #aaa;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/materi-go-hari15-2.png\" \/><\/p>\r\n<p>jika muncul hasil print \"Success\" berarti koneksi database sudah berhasil<\/p>\r\n<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">CRUD (Create, Read, Update, Delete)<\/strong><\/p>\r\n<p>Dalam sebuah aplikasi manipulasi data yang lumrah adalah user dapat menambahkan data (create), melihat data apa saja yang sudah terinput (read), membuat perubahan pada data yang sudah ada (update) dan menghapus data yang diinginkan (delete). Kali ini kita akan membuat keempat hal tersebut. kita akan uraikan satu-persatu.<\/p>\r\n<h2>Read<\/h2>\r\n<p>hal pertama yang paling terlihat adalah menampilkan keseluruhan data yang ada pada suatu table.<\/p>\r\n<p>pertama kita akan membuat kode di <strong>main.go<\/strong> seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package main<\/pre>\r\n<div>\r\n<pre>import (<br \/> &nbsp;\"api-mysql\/movie\"<br \/> &nbsp;\"api-mysql\/utils\"<br \/> &nbsp;\"context\"<br \/> &nbsp;\"fmt\"<br \/> &nbsp;\"log\"<br \/> &nbsp;\"net\/http\"<br \/><br \/> &nbsp;\"github.com\/julienschmidt\/httprouter\"<br \/>)<br \/><br \/>func main() {<br \/> &nbsp;router&nbsp;:=&nbsp;httprouter.New()<br \/> &nbsp;router.GET(\"\/movie\",&nbsp;GetMovie)<br \/><br \/> &nbsp;fmt.Println(\"Server&nbsp;Running&nbsp;at&nbsp;Port&nbsp;8080\")<br \/>&nbsp;&nbsp;log.Fatal(http.ListenAndServe(\":8080\",&nbsp;router))<br \/><br \/>}<br \/><br \/>\/\/&nbsp;Read<br \/>\/\/ GetMovie<br \/>func GetMovie(w http.ResponseWriter, _ *http.Request, _ httprouter.Params) {<br \/> &nbsp;ctx,&nbsp;cancel&nbsp;:=&nbsp;context.WithCancel(context.Background())<br \/> &nbsp;defer&nbsp;cancel()<br \/>&nbsp;&nbsp;movies,&nbsp;err&nbsp;:=&nbsp;movie.GetAll(ctx)<br \/><br \/> &nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;fmt.Println(err)<br \/>&nbsp;&nbsp;}<br \/><br \/> &nbsp;utils.ResponseJSON(w,&nbsp;movies,&nbsp;http.StatusOK)<br \/>}<\/pre>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Perhatikan kode di atas, di dalam method getMovie() berisi kode untuk memanggil fungsi yang ada di dalam file movie\/repository_mysql.go di tandai dengan kode movie.GetAll(ctx). Nama fungsi yang di panggil adalah GetAll().<\/p>\r\n<p>Asumsikan kita sudah punya method tersebut.<\/p>\r\n<p>Kode di atas terdapat kode yang berisi context.WithCancel(context.Background()) Hal ini gunakan untuk membatalkan semua proses ketika ada kesalahan.<\/p>\r\n<p>Selanjutnya ketika sudah mendapat respon dari fungsi `GetAll() maka hasil nya akan di kirimkan ke fungsi ResponseJSON agar hasilnya berupa JSON.<\/p>\r\n<p>Silahkan buka file <strong>movie\/repository_mysql.go<\/strong>. dan kita isi dengan kode seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<div>\r\n<pre>package movie<br \/><br \/>import (<br \/> &nbsp;\"api-mysql\/config\"<br \/> &nbsp;\"api-mysql\/models\"<br \/> &nbsp;\"context\"<br \/> &nbsp;\"fmt\"<br \/> &nbsp;\"log\"<br \/> &nbsp;\"time\"<br \/>)<br \/><br \/>const (<br \/> &nbsp;table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;\"movie\"<br \/> &nbsp;layoutDateTime&nbsp;=&nbsp;\"2006-01-02&nbsp;15:04:05\"<br \/>)<br \/><br \/>\/\/&nbsp;GetAll<br \/>func GetAll(ctx context.Context) ([]models.Movie, error) {<br \/> &nbsp;var&nbsp;movies&nbsp;[]models.Movie<br \/>&nbsp;&nbsp;db,&nbsp;err&nbsp;:=&nbsp;config.MySQL()<br \/><br \/> &nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;log.Fatal(\"Cant&nbsp;connect&nbsp;to&nbsp;MySQL\",&nbsp;err)<br \/>&nbsp;&nbsp;}<br \/><br \/> &nbsp;queryText := fmt.Sprintf(\"SELECT * FROM %v Order By created_at DESC\", table)<br \/>&nbsp;&nbsp;rowQuery,&nbsp;err&nbsp;:=&nbsp;db.QueryContext(ctx,&nbsp;queryText)<br \/><br \/> &nbsp;if err != nil {<br \/> &nbsp;&nbsp;&nbsp;log.Fatal(err)<br \/>&nbsp;&nbsp;}<br \/><br \/> &nbsp;for&nbsp;rowQuery.Next()&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;var&nbsp;movie&nbsp;models.Movie<br \/> &nbsp;&nbsp;&nbsp;var&nbsp;createdAt,&nbsp;updatedAt&nbsp;string<br \/> &nbsp;&nbsp;&nbsp;if&nbsp;err&nbsp;=&nbsp;rowQuery.Scan(&amp;movie.ID,<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;movie.Title,<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;movie.Year,<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;createdAt,<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;updatedAt);&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;nil,&nbsp;err<br \/>&nbsp;&nbsp;&nbsp;&nbsp;}<br \/><br \/> &nbsp;&nbsp;&nbsp;\/\/&nbsp;&nbsp;Change&nbsp;format&nbsp;string&nbsp;to&nbsp;datetime&nbsp;for&nbsp;created_at&nbsp;and&nbsp;updated_at<br \/>&nbsp;&nbsp;&nbsp;&nbsp;movie.CreatedAt,&nbsp;err&nbsp;=&nbsp;time.Parse(layoutDateTime,&nbsp;createdAt)<br \/><br \/> &nbsp;&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(err)<br \/>&nbsp;&nbsp;&nbsp;&nbsp;}<br \/><br \/> &nbsp;&nbsp;&nbsp;movie.UpdatedAt,&nbsp;err&nbsp;=&nbsp;time.Parse(layoutDateTime,&nbsp;updatedAt)<br \/> &nbsp;&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(err)<br \/>&nbsp;&nbsp;&nbsp;&nbsp;}<br \/><br \/> &nbsp;&nbsp;&nbsp;movies&nbsp;=&nbsp;append(movies,&nbsp;movie)<br \/> &nbsp;}<br \/> &nbsp;return&nbsp;movies,&nbsp;nil<br \/>}<\/pre>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Perhatikan kode di atas , Baris awal dari fungsi GetAll() yaitu var movies []models.movie yang mana nantinya akan digunakan untuk memberikan nilai dari perulangan.<\/p>\r\n<p>Setelah itu terdapat query MySQL SELECT (terkait ini nanti akan di berikan di referensi)<\/p>\r\n<p>Ketika sudah berhasil melakukan query ke MySQL akan di lakukan perulangan dengan fungsi for.<\/p>\r\n<p>Lalu hasil dari perulangan di masukkan ke single struct yaitu var movie models.movie. Pada baris terakhir pada perilangan menggunakan fungsi append, dimana ketika ada data setiap perulangan di tambahkan ke struct []models.movie.<\/p>\r\n<p>Pada kode dia atas juga terdapat fungsi yang digunakan untuk mengubah format date dari MySQL ke bentuk date yang ada di golang.<\/p>\r\n<h2>Create<\/h2>\r\n<p>lalu kita lanjutkan untuk create data.<\/p>\r\n<p>kita akan membuat kode di <strong>main.go<\/strong> seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>\/\/ di bagian import<br \/><br \/>import \"encoding\/json\"<br \/><br \/>\/\/ di dalam func main<br \/>router.POST(\"\/movie\/create\", PostMovie)<\/pre>\r\n<pre><br \/>\/\/ Create<br \/>\/\/ PostMovie<br \/>func PostMovie(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {<br \/> &nbsp;if r.Header.Get(\"Content-Type\") != \"application\/json\" {<br \/> &nbsp;&nbsp;&nbsp;http.Error(w,&nbsp;\"Gunakan&nbsp;content&nbsp;type&nbsp;application&nbsp;\/&nbsp;json\",&nbsp;http.StatusBadRequest)<br \/> &nbsp;&nbsp;&nbsp;return<br \/> &nbsp;}<br \/> &nbsp;ctx,&nbsp;cancel&nbsp;:=&nbsp;context.WithCancel(context.Background())<br \/> &nbsp;defer&nbsp;cancel()<br \/>  var mov models.Movie<br \/>  if err := json.NewDecoder(r.Body).Decode(&amp;mov); err != nil {<br \/> &nbsp;&nbsp;&nbsp;utils.ResponseJSON(w, err, http.StatusBadRequest)<br \/> &nbsp;&nbsp;&nbsp;return<br \/> &nbsp;}<br \/> &nbsp;if err := movie.Insert(ctx, mov); err != nil {<br \/> &nbsp;&nbsp;&nbsp;utils.ResponseJSON(w,&nbsp;err,&nbsp;http.StatusInternalServerError)<br \/> &nbsp;&nbsp;&nbsp;return<br \/> &nbsp;}<br \/>  res := map[string]string{<br \/> &nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"Succesfully\",<br \/> &nbsp;}<br \/>&nbsp;&nbsp;utils.ResponseJSON(w,&nbsp;res,&nbsp;http.StatusCreated)<\/pre>\r\n<div>\r\n<div>}<\/div>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Pada kode di atas langkah awal kita harus memeriksa content type pada header, apabila data tersebut berupa json maka akan di lanjutkan.<\/p>\r\n<p>Baris berikutnya yaitu melakukan decode dari data json di tandai dengan potongan kode json.NewDecoder(r.Body).Decode(&amp;mov). Kita menggunakan variable mov agar data yang di insert sesuai dengan model struct Movie.<\/p>\r\n<p>Apabila sudah isi dari variable movie akan di kirim pada fungsi Insert pada file movie\/repository_mysql.go. Asumsikan kita sudah memiliki fungsi tersebut.<\/p>\r\n<p>Sekarang kita buat fungsi baru di file <strong>movie\/repository_mysql.go<\/strong>. Kita akan membuat fungsi dengan nama Insert().<\/p>\r\n<p>Berikut ini kodenya :<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>\/\/ Insert Movie<br \/>func Insert(ctx context.Context, movie models.Movie) error {<br \/>  db, err := config.MySQL()<br \/>  if err != nil {<br \/>    log.Fatal(\"Can't connect to MySQL\", err)<br \/>  }<br \/>  <br \/>  queryText := fmt.Sprintf(\"INSERT INTO %v (title, year, created_at, updated_at) values('%v',%v, NOW(), NOW())\", table,<br \/>  &nbsp; movie.Title,<br \/>    movie.Year)<br \/>  _, err = db.ExecContext(ctx, queryText)<br \/><br \/>  if err != nil {<br \/>    return err<br \/>  }<br \/>  return nil<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Kode di atas cukup sederhana dan mudah di mengerti. Perhatikan kode di atas, terdapat variable dengan nama <code>queryText<\/code>&nbsp;dimana variable tersebut berisi query untuk melakukan insert ke database MySQL.<\/p>\r\n<p>Lalu agar query teks tersebut dapat di ekstekusi maka kita dapat menggunakan kode&nbsp;<code>ExecContext<\/code>&nbsp;dengan parameter context dan query teksnya.<\/p>\r\n<h2>Update<\/h2>\r\n<p>lalu kita lanjutkan untuk update data.<\/p>\r\n<p>kita akan membuat kode di <strong>main.go<\/strong> seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>\/\/ di dalam func main<br \/>router.PUT(\"\/movie\/:id\/update\", UpdateMovie)<\/pre>\r\n<pre><br \/>\/\/ Update<br \/>\/\/ UpdateMovie<br \/>func UpdateMovie(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {<br \/> &nbsp;if r.Header.Get(\"Content-Type\") != \"application\/json\" {<br \/> &nbsp;&nbsp;&nbsp;http.Error(w, \"Gunakan content type application \/ json\", http.StatusBadRequest)<br \/> &nbsp;&nbsp;&nbsp;return<br \/> &nbsp;}<br \/><br \/> &nbsp;ctx, cancel := context.WithCancel(context.Background())<br \/> &nbsp;defer cancel()<\/pre>\r\n<div>\r\n<pre> &nbsp;var&nbsp;mov&nbsp;models.Movie<br \/><br \/> &nbsp;if&nbsp;err&nbsp;:=&nbsp;json.NewDecoder(r.Body).Decode(&amp;mov);&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;utils.ResponseJSON(w, err, http.StatusBadRequest)<br \/> &nbsp;&nbsp;&nbsp;return<br \/>&nbsp;&nbsp;}<br \/><br \/>&nbsp;&nbsp;var&nbsp;idMovie&nbsp;=&nbsp;ps.ByName(\"id\")<br \/><br \/> &nbsp;if&nbsp;err&nbsp;:=&nbsp;movie.Update(ctx,&nbsp;mov,&nbsp;idMovie);&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;utils.ResponseJSON(w,&nbsp;err,&nbsp;http.StatusInternalServerError)<br \/> &nbsp;&nbsp;&nbsp;return<br \/>&nbsp;&nbsp;}<br \/><br \/> &nbsp;res&nbsp;:=&nbsp;map[string]string{<br \/> &nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"Succesfully\",<br \/>&nbsp;&nbsp;}<br \/><br \/> &nbsp;utils.ResponseJSON(w,&nbsp;res,&nbsp;http.StatusCreated)<br \/>}<\/pre>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>kode diatas hampir mirip seperti kode di create tetapi perbedaannya ada params id yang diambil dan di gunakan nantinya untuk query update<\/p>\r\n<p>Sekarang kita buat fungsi baru di file <strong>movie\/repository_mysql.go<\/strong>. Kita akan membuat fungsi dengan nama Update().<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<div>\r\n<pre>\/\/&nbsp;Update&nbsp;Movie<br \/>func Update(ctx context.Context, movie models.Movie, id string) error {<br \/> &nbsp;db,&nbsp;err&nbsp;:=&nbsp;config.MySQL()<br \/> &nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;log.Fatal(\"Can't&nbsp;connect&nbsp;to&nbsp;MySQL\",&nbsp;err)<br \/> &nbsp;}<br \/><br \/> &nbsp;queryText&nbsp;:=&nbsp;fmt.Sprintf(\"UPDATE&nbsp;%v&nbsp;set&nbsp;title&nbsp;='%s',&nbsp;year&nbsp;=&nbsp;%d,&nbsp;updated_at&nbsp;=&nbsp;NOW()&nbsp;where&nbsp;id&nbsp;=&nbsp;%s\",<br \/> &nbsp;&nbsp;&nbsp;table,<br \/> &nbsp;&nbsp;&nbsp;movie.Title,<br \/> &nbsp;&nbsp;&nbsp;movie.Year,<br \/> &nbsp;&nbsp;&nbsp;id,<br \/> &nbsp;)<br \/><br \/> &nbsp;_,&nbsp;err&nbsp;=&nbsp;db.ExecContext(ctx,&nbsp;queryText)<br \/> &nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<br \/> &nbsp;&nbsp;&nbsp;return&nbsp;err<br \/>&nbsp;&nbsp;}<br \/><br \/> &nbsp;return&nbsp;nil<br \/>}<\/pre>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>kode untuk query nya pun hampir sama, perbedaannya dari yang sebelumnya menggunakan query SQL insert sekarang menggunakan query update.<\/p>\r\n<h2>Delete<\/h2>\r\n<p>lalu terakhir kita lanjutkan untuk delete data.<\/p>\r\n<p>kita akan membuat kode di <strong>main.go<\/strong> seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>\/\/ di dalam func main<br \/>router.DELETE(\"\/movie\/:id\/delete\", DeleteMovie)<\/pre>\r\n<pre><br \/>\/\/ Delete<br \/>\/\/ DeleteMovie<br \/>func DeleteMovie(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {<br \/> &nbsp;ctx, cancel := context.WithCancel(context.Background())<br \/> &nbsp;defer&nbsp;cancel()<br \/>  var idMovie = ps.ByName(\"id\")<br \/>  if err := movie.Delete(ctx, idMovie); err != nil {<br \/> &nbsp;&nbsp;&nbsp;kesalahan := map[string]string{<br \/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"error\":&nbsp;fmt.Sprintf(\"%v\",&nbsp;err),<br \/> &nbsp;&nbsp;&nbsp;}<br \/> &nbsp;&nbsp;&nbsp;utils.ResponseJSON(w,&nbsp;kesalahan,&nbsp;http.StatusInternalServerError)<br \/> &nbsp;&nbsp;&nbsp;return<br \/> &nbsp;}<br \/>  res := map[string]string{<br \/> &nbsp;&nbsp;&nbsp;\"status\":&nbsp;\"Succesfully\",<br \/> &nbsp;}<br \/>  utils.ResponseJSON(w, res, http.StatusOK)<br \/>}<\/pre>\r\n<div>&nbsp;<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>berbeda dengan lainnya, pada DELETE kita bisa tidak menggunakan struct Movie, karena nanti pada query sql nya yang di butuhkan hanya id<\/p>\r\n<p>kita lanjut ke kode di file <strong>movie\/repository_mysql.go<\/strong>. Kita akan membuat fungsi dengan nama Delete().<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>\/\/ Delete Movie<br \/>func Delete(ctx context.Context, id string) error {<br \/>&nbsp; &nbsp; db, err := config.MySQL()<\/pre>\r\n<pre>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(\"Can't connect to MySQL\", err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; queryText := fmt.Sprintf(\"DELETE FROM %v where id = %s\", table, id)<br \/><br \/>&nbsp; &nbsp; s, err := db.ExecContext(ctx, queryText)<br \/><br \/>&nbsp; &nbsp; if err != nil &amp;&amp; err != sql.ErrNoRows {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; check, err := s.RowsAffected()<br \/>&nbsp; &nbsp; fmt.Println(check)<br \/>&nbsp; &nbsp; if check == 0 {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return errors.New(\"id tidak ada\")<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; fmt.Println(err.Error())<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; return nil<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>terlihat pada query SQL \"DELETE FROM\" disana hanya membutuhkan id saja, sehingga kita dapat mengurangi parameter yang sebelumnya menggunakan object dari struct diganti menjadi id saja<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Membuat REST API dengan MySQL : <a href=\"https:\/\/youtu.be\/f9MbdvxDJ1g\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Video<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.youtube.com\/watch?v=eNqBtR-swu8\" target=\"_blank\" rel=\"noopener\">5 QUERY SQL dasar yang WAJIB dipahami PROGRAMMER | Tutorial MySQL<\/a> (Ngoding Pintar)<\/li>\r\n<\/ul>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.niagahoster.co.id\/blog\/cara-membuat-database-di-mysql\/\">https:\/\/www.niagahoster.co.id\/blog\/cara-membuat-database-di-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-koneksi-database-mysql\/\">https:\/\/kodingin.com\/golang-koneksi-database-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-menampilkan-data-mysql\/\">https:\/\/kodingin.com\/golang-menampilkan-data-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-insert-data-mysql\/\">https:\/\/kodingin.com\/golang-insert-data-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-rest-api-update-data-mysql\/\">https:\/\/kodingin.com\/golang-rest-api-update-data-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-delete-data-api-mysql\/\">https:\/\/kodingin.com\/golang-delete-data-api-mysql\/<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-11 09:00:00","status_publish":"publish","urutan":4,"created_by":4336,"updated_by":4336,"created_at":"2021-10-07 06:27:45","updated_at":"2021-10-25 17:34:45","waktu_publish_formatted":" Kamis, 11 November 2021. 09:00:00 WIB."},{"id":1449,"uuid":"d0d45d0f-2fb4-4819-b2eb-b51fb11432a7","author_user_id":4336,"materi_section_id":392,"judul":"Hari 15 - Skema Database dan penerapannya pada REST API dengan MySQL","permalink":"hari-15-skema-database-dan-penerapannya-pada-rest-api-dengan-mysql","konten":"<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">Skema Database<\/strong><\/p>\r\n<p><em>Database<\/em> atau basis data merupakan kumpulan berbagai informasi yang disimpan secara sistematis pada komputer agar informasi tersebut dapat diolah kembali dengan mudah. Dalam pengembangan sebuah website, <em>Database<\/em> berperan penting sebagai penyimpanan dan penyedia informasi yang ditampilkan ke pengguna.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Semakin kompleks logika bisnis dan semakin banyak jumlah pengguna sebuah website maka akan membutuhkan <em>database <\/em>yang baik dalam menyimpan dan menyediakan data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kriteria database yang baik ditinjau dari beberapa faktor yakni:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>kecepatan<\/li>\r\n<li>performa<\/li>\r\n<li>akurasi<\/li>\r\n<li>availability<\/li>\r\n<li>terhindar dari duplikasi dan inkonsistensi data<\/li>\r\n<li>keamanan<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p><em>Database<\/em> ditinjau dari sifat relasional nya terbagi menjadi dua yaitu: <em><strong>relational database<\/strong><\/em> dan <em><strong>non-relational database<\/strong><\/em>. Pada materi ini akan dipelajari <em>relational database<\/em> SQL menggunakan mysql.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada <em>relational database<\/em>, tabel-tabel berhubungan satu sama lain menggunakan <em>Primary Key<\/em> (<strong>PK<\/strong>). <em>Primary Key<\/em> adalah nilai yang dipakai untuk mengidentifikasi suatu baris data pada <em>database<\/em>. <strong>PK<\/strong> bersifat unik sehingga tidak dapat ditemukan dua data dengan <em><strong>PK<\/strong> <\/em>yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>PK juga digunakan sebagai patokan atau <em>reference<\/em> untuk menggabung data dari dua tabel menggunakan JOIN.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Skema Database<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Skema Database adalah penggambaran skema dari tabel-tabel untuk memvisualisasikan keterhubungan (relasi) antar tabel dan membuat cetak biru dari <em>database<\/em> yang akan dibuat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebelum membahas lebih jauh tentang Skema Database, ada beberapa istilah umum yang harus diketahui yaitu :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>1. Entitas (Entity)<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Entitas adalah sebuah objek yang merepresentasikan suatu baris data pada tabel. satu entitas akan memiliki karakteristik tersendiri berdasarkan atribut-atribut yang dimiliki. Contohnya pada sebuah database toko online terdapat entitas <em>pelanggan<\/em>, <em>profil<\/em>, <em>barang,<\/em> <em>transaksi<\/em>, dan <em>kategori<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8173,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8173\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-5.png\" alt=\"\" \/>\r\n<figcaption>contoh entitas di dalam database toko online<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>2. Atribut<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Atribut adalah kolom-kolom data yang terdapat pada sebuah entitas dan berfungsi untuk mendeskripsikan karakteristik entitas tersebut. Di dalam sebuah entitas biasanya terdapat atribut kunci (<em>primary key<\/em>) yang merupakan pembeda antara satu entitas dengan entitas lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Contohnya pada entitas pelanggan terdapat atribut id_pelanggan, nama, dan email. Setiap atribut dapat kita definisikan tipe data nya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8176,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8176\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-6.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>3. Relasi<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Relasi yaitu representasi dari hubungan antar entitas. terdapat tiga jenis relasi yaitu : <em>one to one<\/em>, <em>one to many<\/em>, <em>many to many<\/em>. Pada ERD biasanya relasi digambarkan dengan garis. Setiap satu jenis relasi memiliki jenis garis yang berbeda dengan jenis relasi lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4><em>One to One<\/em><\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>relasi <em>one to one<\/em> berarti satu entitas memiliki hubungan dengan satu entitas lainnya. Relasi ini digambarkan dengan garis seperti berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8178,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8178\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-8.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Contohnya adalah seorang pelanggan akan memiliki satu profil saja. Begitu pula sebaliknya satu profile hanya dimiliki oleh seorang pelanggan saja.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8179,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8179\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-9.png\" alt=\"\" \/>\r\n<figcaption><\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada contoh di atas, terdapat <em>foreign key<\/em> yaitu suatu nilai pada suatu entitas yang berfungsi sebagai referensi dari entitas lain ketika data dari kedua entitas tersebut digabungkan (sql JOIN). Dalam hal ini entitas pelanggan mempunyai <em>foreign key<\/em> yaitu profil_id yang nilainya diperoleh dari <em>primary key<\/em> pada entitas profil.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4><em>One To Many<\/em><\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Relasi <em>One To <\/em>Many yaitu ketika satu entitas memiliki hubungan dengan banyak entitas lainnya. Contohnya dalam hal ini adalah di dalam satu kategori terdapat banyak barang yang terkait dengan kategori tersebut. Sebaliknya, untuk satu barang dapat kita klasifikasikan ke satu kategori saja.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Relasi ini biasanya digambarkan dengan simbol garis seperti berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":8182,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-8182\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-12.png\" alt=\"\" \/>\r\n<figcaption>simbol garis one to many<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8181,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8181\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-11.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>pada contoh di atas, entitas barang akan memiliki <em>foreign key<\/em> yang mereferensi ke <em>primary key<\/em> pada entitas kategori.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4><em>Many To Many<\/em><\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Relasi <em>Many To Many<\/em> adalah ketika banyak entitas terhubung dengan banyak entitas lainnya. Contohnya adalah seorang pelanggan dapat membeli banyak barang yang berbeda jenis. Sebaliknya satu jenis barang dapat dibeli oleh banyak pelanggan yang berbeda.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk merepresentasikan hubungan antar dua entitas yang memiliki relasi ini maka dibutuhkan satu entitas tambahan yang biasa disebut dengan <strong>pivot<\/strong>. Dalam kaitannya dengan contoh antara entitas pelanggan dan barang maka entitas penghubungnya yaitu transaksi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8185,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8185\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/image-14.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Pada entitas transaksi terdapat dua <em>foreign key<\/em> yaitu pelanggan_id dan barang_id yang terhubung masing-masing ke <em>primary key<\/em> pada entitas pelanggan dan entitas barang.<\/p>\r\n<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">Penerapan Skema Database REST API dengan MySQL<\/strong><\/p>\r\n<p>Untuk Penerapan Skema Database REST API dengan MySQL akan menggunakan project yang sama pada materi <strong>Membuat REST API dengan MySQL<\/strong>. dan skema database yang diterapkan adalah skema dibawah ini:<\/p>\r\n<p>&nbsp;<img style=\"border: 1px solid #aaaaaa; display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-skema-database.png\" \/><\/p>\r\n<h2>Struktur Project<\/h2>\r\n<p>Struktur foldernya bisa diperbarui seperti di bawah ini :<\/p>\r\n<pre class=\"wp-block-code\"><code>. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br \/>\u251c\u2500\u2500 main.go  <br \/>\u251c\u2500\u2500 go.mod  <br \/>\u251c\u2500\u2500 go.sum<br \/>\u251c\u2500\u2500 ageRatingCategory                                                            \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 repository_mysql.go  <br \/>\u251c\u2500\u2500 config                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 config.go                                                        \r\n\u251c\u2500\u2500 movie                                                            \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 repository_mysql.go                                              \r\n\u251c\u2500\u2500 models                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 movie.go &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 ageRatingCategory.go<br \/>\u2514\u2500\u2500 utils                                                                \r\n    \u2514\u2500\u2500 res.go       <\/code><\/pre>\r\n<p>Perbedaan dari struktur folder dimateri <strong>Membuat REST API dengan MySQL <\/strong>adalah:<\/p>\r\n<ul>\r\n<li><strong>main.go<\/strong>, akan ditambahkan crud dari age rating category dan function untuk crud age rating category.<\/li>\r\n<li><strong>ageRatingCategory\/repository_mysql.go,<\/strong>&nbsp;digunakan untuk melakukan query ke database.<\/li>\r\n<li><strong>movie\/repository_mysql.go,<\/strong> di query movie ini akan diperbarui pada bagian get insert dan updatenya.<\/li>\r\n<li><strong>models\/ageRatingCategory.go<\/strong>, digunakan untuk membuat struct age rating category.<\/li>\r\n<li><strong>models\/movie.go<\/strong>, akan ada sedikit tambahan pada struct Movie.<\/li>\r\n<\/ul>\r\n<p>Hal yang pertama kita lakukan membuat struct di <strong>models\/ageRatingCategory.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package models<br \/><br \/>import (<br \/>  \"time\"<br \/>)<br \/>type (<br \/>  \/\/ AgeRatingCategory<br \/>  AgeRatingCategory struct {<br \/>   ID int `json:\"id\"`<br \/>   Name string `json:\"name\"`<br \/>   Description string `json:\"description\"`<br \/>   CreatedAt time.Time `json:\"created_at\"`<br \/>   UpdatedAt time.Time `json:\"updated_at\"`<br \/>  }<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>dan memperbarui struct di <strong>models\/movie.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package models<br \/><br \/>import (<br \/>  \"time\"<br \/>)<br \/><br \/>type (<br \/>  \/\/ Movie<br \/>  Movie struct {<br \/> &nbsp;  ID&nbsp;&nbsp;&nbsp;&nbsp;    int       `json:\"id\"`<br \/>    Title     string    `json:\"title\"`<br \/>    Year&nbsp;&nbsp;    int       `json:\"year\"`<br \/>    CreatedAt time.Time `json:\"created_at\"`<br \/>    UpdatedAt time.Time `json:\"updated_at\"`<br \/>    AgeRatingCategoryId int `json;\"age_rating_category_id\"`<br \/>  }<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Kode di atas merupakan struct, dimana nanti digunakan untuk melakukan segala bentuk manipulasi data, seperti menampilkan data di Golang dengan database MySQL.<\/p>\r\n<p>Jika sudah sekarang kita akan melakukan koneksi ke database MySQL.<\/p>\r\n<h2>Membuat tabel baru dan menambahkan foreign key di MySQL<\/h2>\r\n<p>Setelah itu buat tabel age_rating_category dengan query seperti dibawah ini.<\/p>\r\n<table style=\"border-collapse: collapse; width: 32.948%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>CREATE TABLE age_rating_category (<br \/>&nbsp; id INT auto_increment primary key,<br \/>&nbsp; name VARCHAR(255) not null,<br \/>&nbsp; description VARCHAR(255) not null,<br \/>&nbsp; created_at DATETIME not null,<br \/>&nbsp; updated_at DATETIME not null<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>setelah itu tambah kolom age_rating_category_id ke tabel movie.<\/p>\r\n<table style=\"border-collapse: collapse; width: 32.948%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>ALTER TABLE movie<br \/>ADD age_rating_category_id INT<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>setelah itu tambahkan foreign key ketabel movie.<\/p>\r\n<table style=\"border-collapse: collapse; width: 32.948%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>ALTER TABLE movie<br \/>ADD FOREIGN KEY (age_rating_category_id) REFERENCES age_rating_category(id)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>untuk membuat tabel dan menambahkan foreign key tidak harus eksekusi query SQL seperti diatas, boleh langsung dibuat di tools seperti <strong>phpMyadmin <\/strong>, <strong>Dbeaver dan sejenisnya.&nbsp;<\/strong><\/p>\r\n<p>Sehingga skema tabel movie dan age_rating_category_idseperti gambar di bawah ini.<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-skema-database-1.png\" \/><\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-skema-database-2.png\" \/><\/p>\r\n<p>setelah itu isi file <strong>ageRatingCategory\/repository_mysql.go&nbsp;<\/strong>dengan kode dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package ageRatingCategory<br \/><br \/><br \/><\/pre>\r\n<div>import&nbsp;(<\/div>\r\n<div>&nbsp;&nbsp;\"api-mysql\/config\"<\/div>\r\n<div>&nbsp;&nbsp;\"api-mysql\/models\"<\/div>\r\n<div>&nbsp;&nbsp;\"context\"<\/div>\r\n<div>&nbsp;&nbsp;\"database\/sql\"<\/div>\r\n<div>&nbsp;&nbsp;\"errors\"<\/div>\r\n<div>&nbsp;&nbsp;\"fmt\"<\/div>\r\n<div>&nbsp;&nbsp;\"log\"<\/div>\r\n<div>&nbsp;&nbsp;\"time\"<\/div>\r\n<div>)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>const&nbsp;(<\/div>\r\n<div>&nbsp;&nbsp;table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;\"age_rating_category\"<\/div>\r\n<div>&nbsp;&nbsp;layoutDateTime&nbsp;=&nbsp;\"2006-01-02&nbsp;15:04:05\"<\/div>\r\n<div>)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>\/\/&nbsp;GetAll&nbsp;AgeRatingCategory<\/div>\r\n<div>func&nbsp;GetAll(ctx&nbsp;context.Context)&nbsp;([]models.AgeRatingCategory,&nbsp;error)&nbsp;{<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;var&nbsp;ratings&nbsp;[]models.AgeRatingCategory<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;db,&nbsp;err&nbsp;:=&nbsp;config.MySQL()<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(\"Cant&nbsp;connect&nbsp;to&nbsp;MySQL\",&nbsp;err)<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;queryText&nbsp;:=&nbsp;fmt.Sprintf(\"SELECT&nbsp;*&nbsp;FROM&nbsp;%v&nbsp;Order&nbsp;By&nbsp;id&nbsp;DESC\",&nbsp;table)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;rowQuery,&nbsp;err&nbsp;:=&nbsp;db.QueryContext(ctx,&nbsp;queryText)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(err)<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;for&nbsp;rowQuery.Next()&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;rating&nbsp;models.AgeRatingCategory<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;createdAt,&nbsp;updatedAt&nbsp;string<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;err&nbsp;=&nbsp;rowQuery.Scan(&amp;rating.ID,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;rating.Name,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;rating.Description,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;createdAt,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;updatedAt);&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;nil,&nbsp;err<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;\/\/&nbsp;&nbsp;Change&nbsp;format&nbsp;string&nbsp;to&nbsp;datetime&nbsp;for&nbsp;created_at&nbsp;and&nbsp;updated_at<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;rating.CreatedAt,&nbsp;err&nbsp;=&nbsp;time.Parse(layoutDateTime,&nbsp;createdAt)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(err)<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;rating.UpdatedAt,&nbsp;err&nbsp;=&nbsp;time.Parse(layoutDateTime,&nbsp;updatedAt)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(err)<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;ratings&nbsp;=&nbsp;append(ratings,&nbsp;rating)<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;return&nbsp;ratings,&nbsp;nil<\/div>\r\n<div>}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>\/\/&nbsp;Insert&nbsp;AgeRatingCategory<\/div>\r\n<div>func&nbsp;Insert(ctx&nbsp;context.Context,&nbsp;rating&nbsp;models.AgeRatingCategory)&nbsp;error&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;db,&nbsp;err&nbsp;:=&nbsp;config.MySQL()<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(\"Can't&nbsp;connect&nbsp;to&nbsp;MySQL\",&nbsp;err)<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;queryText&nbsp;:=&nbsp;fmt.Sprintf(\"INSERT&nbsp;INTO&nbsp;%v&nbsp;(name,&nbsp;description,&nbsp;created_at,&nbsp;updated_at)&nbsp;values('%v','%v',&nbsp;NOW(),&nbsp;NOW())\",&nbsp;table,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;rating.Name,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;rating.Description)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;_,&nbsp;err&nbsp;=&nbsp;db.ExecContext(ctx,&nbsp;queryText)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;err<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<div>&nbsp;&nbsp;return&nbsp;nil<\/div>\r\n<div>}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>\/\/&nbsp;Update&nbsp;AgeRatingCategory<\/div>\r\n<div>func&nbsp;Update(ctx&nbsp;context.Context,&nbsp;rating&nbsp;models.AgeRatingCategory,&nbsp;id&nbsp;string)&nbsp;error&nbsp;{<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;db,&nbsp;err&nbsp;:=&nbsp;config.MySQL()<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(\"Can't&nbsp;connect&nbsp;to&nbsp;MySQL\",&nbsp;err)<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;queryText&nbsp;:=&nbsp;fmt.Sprintf(\"UPDATE&nbsp;%v&nbsp;set&nbsp;name&nbsp;='%s',&nbsp;description&nbsp;=&nbsp;'%s',&nbsp;updated_at&nbsp;=&nbsp;NOW()&nbsp;where&nbsp;id&nbsp;=&nbsp;%s\",<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;table,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;rating.Name,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;rating.Description,<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;id,<\/div>\r\n<div>&nbsp;&nbsp;)<\/div>\r\n<div>&nbsp;&nbsp;fmt.Println(queryText)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;_,&nbsp;err&nbsp;=&nbsp;db.ExecContext(ctx,&nbsp;queryText)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;err<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;return&nbsp;nil<\/div>\r\n<div>}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>\/\/&nbsp;Delete&nbsp;AgeRatingCategory<\/div>\r\n<div>func&nbsp;Delete(ctx&nbsp;context.Context,&nbsp;id&nbsp;string)&nbsp;error&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;db,&nbsp;err&nbsp;:=&nbsp;config.MySQL()<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;log.Fatal(\"Can't&nbsp;connect&nbsp;to&nbsp;MySQL\",&nbsp;err)<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;queryText&nbsp;:=&nbsp;fmt.Sprintf(\"DELETE&nbsp;FROM&nbsp;%v&nbsp;where&nbsp;id&nbsp;=&nbsp;%s\",&nbsp;table,&nbsp;id)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;s,&nbsp;err&nbsp;:=&nbsp;db.ExecContext(ctx,&nbsp;queryText)<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;&amp;&amp;&nbsp;err&nbsp;!=&nbsp;sql.ErrNoRows&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;err<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;check,&nbsp;err&nbsp;:=&nbsp;s.RowsAffected()<\/div>\r\n<div>&nbsp;&nbsp;fmt.Println(check)<\/div>\r\n<div>&nbsp;&nbsp;if&nbsp;check&nbsp;==&nbsp;0&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;errors.New(\"id&nbsp;tidak&nbsp;ada\")<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;if&nbsp;err&nbsp;!=&nbsp;nil&nbsp;{<\/div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(err.Error())<\/div>\r\n<div>&nbsp;&nbsp;}<\/div>\r\n<pre>&nbsp;<\/pre>\r\n<div>&nbsp;&nbsp;return&nbsp;nil<\/div>\r\n<div>}<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>setelah itu perbarui isi file <strong>movie\/repository_mysql.go <\/strong>dengan kode dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package movie<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-mysql\/config\"<br \/>&nbsp; &nbsp; \"api-mysql\/models\"<br \/>&nbsp; &nbsp; \"context\"<br \/>&nbsp; &nbsp; \"database\/sql\"<br \/>&nbsp; &nbsp; \"errors\"<br \/>&nbsp; &nbsp; \"fmt\"<br \/>&nbsp; &nbsp; \"log\"<br \/>&nbsp; &nbsp; \"time\"<br \/>)<br \/><br \/>const (<br \/>&nbsp; &nbsp; table &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= \"movie\"<br \/>&nbsp; &nbsp; layoutDateTime = \"2006-01-02 15:04:05\"<br \/>)<br \/><br \/>\/\/ GetAll Movie<br \/>func GetAll(ctx context.Context) ([]models.Movie, error) {<br \/><br \/>&nbsp; &nbsp; var movies []models.Movie<br \/><br \/>&nbsp; &nbsp; db, err := config.MySQL()<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(\"Cant connect to MySQL\", err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; queryText := fmt.Sprintf(\"SELECT * FROM %v Order By id DESC\", table)<br \/><br \/>&nbsp; &nbsp; rowQuery, err := db.QueryContext(ctx, queryText)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; for rowQuery.Next() {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; var movie models.Movie<br \/>&nbsp; &nbsp; &nbsp; &nbsp; var createdAt, updatedAt string<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; if err = rowQuery.Scan(&amp;movie.ID,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;movie.Title,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;movie.Year,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;createdAt,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;updatedAt); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return nil, err<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; \/\/ &nbsp;Change format string to datetime for created_at and updated_at<br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.CreatedAt, err = time.Parse(layoutDateTime, createdAt)<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(err)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.UpdatedAt, err = time.Parse(layoutDateTime, updatedAt)<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(err)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; movies = append(movies, movie)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; return movies, nil<br \/>}<br \/><br \/>\/\/ Insert Movie<br \/>func Insert(ctx context.Context, movie models.Movie) error {<br \/>&nbsp; &nbsp; db, err := config.MySQL()<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(\"Can't connect to MySQL\", err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; queryText := fmt.Sprintf(\"INSERT INTO %v (title, year, created_at, updated_at, age_rating_category_id) values('%v',%v, NOW(), NOW(), %v)\", table,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.Title,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.Year,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.AgeRatingCategoryID)<br \/><br \/>&nbsp; &nbsp; _, err = db.ExecContext(ctx, queryText)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return err<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; return nil<br \/>}<br \/><br \/>\/\/ Update Movie<br \/>func Update(ctx context.Context, movie models.Movie, id string) error {<br \/><br \/>&nbsp; &nbsp; db, err := config.MySQL()<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(\"Can't connect to MySQL\", err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; queryText := fmt.Sprintf(\"UPDATE %v set title ='%s', year = %d, updated_at = NOW(), age_rating_category_id=%v where id = %s\",<br \/>&nbsp; &nbsp; &nbsp; &nbsp; table,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.Title,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.Year,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; movie.AgeRatingCategoryID,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; id,<br \/>&nbsp; &nbsp; )<br \/>&nbsp; &nbsp; fmt.Println(queryText)<br \/><br \/>&nbsp; &nbsp; _, err = db.ExecContext(ctx, queryText)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; return nil<br \/>}<br \/><br \/>\/\/ Delete Movie<br \/>func Delete(ctx context.Context, id string) error {<br \/>&nbsp; &nbsp; db, err := config.MySQL()<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(\"Can't connect to MySQL\", err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; queryText := fmt.Sprintf(\"DELETE FROM %v where id = %s\", table, id)<br \/><br \/>&nbsp; &nbsp; s, err := db.ExecContext(ctx, queryText)<br \/><br \/>&nbsp; &nbsp; if err != nil &amp;&amp; err != sql.ErrNoRows {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; check, err := s.RowsAffected()<br \/>&nbsp; &nbsp; fmt.Println(check)<br \/>&nbsp; &nbsp; if check == 0 {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return errors.New(\"id tidak ada\")<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; fmt.Println(err.Error())<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; return nil<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu perbarui isi file <strong>main.go <\/strong>dengan kode dibawah ini:&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-mysql\/ageRatingCategory\"<br \/>&nbsp; &nbsp; \"api-mysql\/models\"<br \/>&nbsp; &nbsp; \"api-mysql\/movie\"<br \/>&nbsp; &nbsp; \"api-mysql\/utils\"<br \/>&nbsp; &nbsp; \"context\"<br \/>&nbsp; &nbsp; \"encoding\/json\"<br \/>&nbsp; &nbsp; \"fmt\"<br \/>&nbsp; &nbsp; \"log\"<br \/>&nbsp; &nbsp; \"net\/http\"<br \/><br \/>&nbsp; &nbsp; \"github.com\/julienschmidt\/httprouter\"<br \/>)<br \/><br \/>func main() {<br \/>&nbsp; &nbsp; router := httprouter.New()<br \/>&nbsp; &nbsp; router.GET(\"\/movie\", GetMovie)<br \/>&nbsp; &nbsp; router.POST(\"\/movie\/create\", PostMovie)<br \/>&nbsp; &nbsp; router.PUT(\"\/movie\/:id\/update\", UpdateMovie)<br \/>&nbsp; &nbsp; router.DELETE(\"\/movie\/:id\/delete\", DeleteMovie)<br \/><br \/>&nbsp; &nbsp; router.GET(\"\/age-rating-category\", GetAgeRatingCategory)<br \/>&nbsp; &nbsp; router.POST(\"\/age-rating-category\/create\", PostAgeRatingCategory)<br \/>&nbsp; &nbsp; router.PUT(\"\/age-rating-category\/:id\/update\", UpdateAgeRatingCategory)<br \/>&nbsp; &nbsp; router.DELETE(\"\/age-rating-category\/:id\/delete\", DeleteAgeRatingCategory)<br \/><br \/>&nbsp; &nbsp; fmt.Println(\"Server Running at Port 8080\")<br \/>&nbsp; &nbsp; log.Fatal(http.ListenAndServe(\"localhost:8080\", router))<br \/>}<br \/><br \/>\/\/ Read<br \/>\/\/ GetMovie<br \/>func GetMovie(w http.ResponseWriter, _ *http.Request, _ httprouter.Params) {<br \/>  &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; movies, err := movie.GetAll(ctx)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; fmt.Println(err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, movies, http.StatusOK)<br \/>}<br \/><br \/>\/\/ Create<br \/>\/\/ PostMovie<br \/>func PostMovie(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {<br \/>&nbsp; &nbsp; if r.Header.Get(\"Content-Type\") != \"application\/json\" {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; http.Error(w, \"Gunakan content type application \/ json\", http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; var mov models.Movie<br \/>&nbsp; &nbsp; if err := json.NewDecoder(r.Body).Decode(&amp;mov); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; if err := movie.Insert(ctx, mov); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusInternalServerError)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; res := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"status\": \"Succesfully\",<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, res, http.StatusCreated)<br \/><br \/>}<br \/><br \/>\/\/ UpdateMovie<br \/>func UpdateMovie(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {<br \/>&nbsp; &nbsp; if r.Header.Get(\"Content-Type\") != \"application\/json\" {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; http.Error(w, \"Gunakan content type application \/ json\", http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; var mov models.Movie<br \/><br \/>&nbsp; &nbsp; if err := json.NewDecoder(r.Body).Decode(&amp;mov); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; var idMovie = ps.ByName(\"id\")<br \/><br \/>&nbsp; &nbsp; if err := movie.Update(ctx, mov, idMovie); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusInternalServerError)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; res := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"status\": \"Succesfully\",<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, res, http.StatusCreated)<br \/>}<br \/><br \/>\/\/ Delete<br \/>\/\/ DeleteMovie<br \/>func DeleteMovie(w http.ResponseWriter, _ *http.Request, ps httprouter.Params) {<br \/>&nbsp; &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; var idMovie = ps.ByName(\"id\")<br \/><br \/>&nbsp; &nbsp; if err := movie.Delete(ctx, idMovie); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; kesalahan := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"error\": fmt.Sprintf(\"%v\", err),<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, kesalahan, http.StatusInternalServerError)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; res := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"status\": \"Succesfully\",<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, res, http.StatusOK)<br \/>}<br \/><br \/>\/\/ Read<br \/>\/\/ GetAgeRatingCategory<br \/>func GetAgeRatingCategory(w http.ResponseWriter, _ *http.Request, _ httprouter.Params) {<br \/>&nbsp; &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/><br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; ratings, err := ageRatingCategory.GetAll(ctx)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; fmt.Println(err)<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, ratings, http.StatusOK)<br \/>}<br \/><br \/>\/\/ Create<br \/>\/\/ PostAgeRatingCategory<br \/>func PostAgeRatingCategory(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {<br \/><br \/>&nbsp; &nbsp; if r.Header.Get(\"Content-Type\") != \"application\/json\" {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; http.Error(w, \"Gunakan content type application \/ json\", http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; var rating models.AgeRatingCategory<br \/><br \/>&nbsp; &nbsp; if err := json.NewDecoder(r.Body).Decode(&amp;rating); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; if err := ageRatingCategory.Insert(ctx, rating); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusInternalServerError)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; res := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"status\": \"Succesfully\",<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, res, http.StatusCreated)<br \/><br \/>}<br \/><br \/>\/\/ UpdateAgeRatingCategory<br \/>func UpdateAgeRatingCategory(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {<br \/>&nbsp; &nbsp; if r.Header.Get(\"Content-Type\") != \"application\/json\" {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; http.Error(w, \"Gunakan content type application \/ json\", http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; var rating models.AgeRatingCategory<br \/><br \/>&nbsp; &nbsp; if err := json.NewDecoder(r.Body).Decode(&amp;rating); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusBadRequest)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; var idRating = ps.ByName(\"id\")<br \/><br \/>&nbsp; &nbsp; if err := ageRatingCategory.Update(ctx, rating, idRating); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, err, http.StatusInternalServerError)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; res := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"status\": \"Succesfully\",<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, res, http.StatusCreated)<br \/>}<br \/><br \/>\/\/ Delete<br \/>\/\/ DeleteAgeRatingCategory<br \/>func DeleteAgeRatingCategory(w http.ResponseWriter, _ *http.Request, ps httprouter.Params) {<br \/>&nbsp; &nbsp; ctx, cancel := context.WithCancel(context.Background())<br \/>&nbsp; &nbsp; defer cancel()<br \/><br \/>&nbsp; &nbsp; var idRating = ps.ByName(\"id\")<br \/><br \/>&nbsp; &nbsp; if err := ageRatingCategory.Delete(ctx, idRating); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; kesalahan := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"error\": fmt.Sprintf(\"%v\", err),<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/>&nbsp; &nbsp; &nbsp; &nbsp; utils.ResponseJSON(w, kesalahan, http.StatusInternalServerError)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; res := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"status\": \"Succesfully\",<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; utils.ResponseJSON(w, res, http.StatusOK)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<p style=\"text-align: justify;\"><span style=\"font-size: 18pt;\"><strong><em>Video Pembahasan Materi<\/em><\/strong><\/span><\/p>\r\n<p style=\"text-align: justify;\">Video Pembahasan Materi Membuat Skema Database dan penerapannya pada REST API dengan MySQL : <a href=\"https:\/\/youtu.be\/4ndp6ICPhtg\" target=\"_blank\" rel=\"noopener\">Link Video<\/a><\/p>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.w3schools.com\/sql\/sql_foreignkey.asp\">https:\/\/www.w3schools.com\/sql\/sql_foreignkey.asp<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/www.w3schools.com\/sql\/sql_alter.asp\">https:\/\/www.w3schools.com\/sql\/sql_alter.asp<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-menampilkan-data-mysql\/\">https:\/\/kodingin.com\/golang-menampilkan-data-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-insert-data-mysql\/\">https:\/\/kodingin.com\/golang-insert-data-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-rest-api-update-data-mysql\/\">https:\/\/kodingin.com\/golang-rest-api-update-data-mysql\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kodingin.com\/golang-delete-data-api-mysql\/\">https:\/\/kodingin.com\/golang-delete-data-api-mysql\/<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-12 09:00:00","status_publish":"publish","urutan":5,"created_by":4336,"updated_by":4336,"created_at":"2021-10-08 06:42:32","updated_at":"2021-10-26 14:42:38","waktu_publish_formatted":" Jumat, 12 November 2021. 09:00:00 WIB."}]},{"id":393,"uuid":"a8e5bb52-b67e-4c62-8a97-4594122b8343","materi_id":36,"nama":"Pekan 3 - Tugas","permalink":"pekan-3-tugas","urutan":7,"created_by":4336,"updated_by":4336,"created_at":"2021-10-04 07:01:57","updated_at":null,"posting":[{"id":1432,"uuid":"d771d736-694d-4490-bd90-836417d2207a","author_user_id":4336,"materi_section_id":393,"judul":"Tugas 11 - Goroutine & Channel","permalink":"tugas-11-goroutine-channel","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-11&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas11.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas11.go&rdquo;&nbsp;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><\/h2>\r\n<p><strong>soal 1<\/strong><\/p>\r\n<p>buatlah function yang terdapat variabel seperti di bawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 14.1346%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>var phones = []string{\"Xiaomi\", \"Asus\", \"Iphone\", \"Samsung\", \"Oppo\", \"Realme\", \"Vivo\"}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu urutkan data phones tampilkan satu persatu per-detik dan sisipkan angka di depan masing-masing data sehingga menghasilkan output seperti ini (gunakan <strong>goroutine <\/strong>dan <strong>WaitGroup <\/strong>untuk mengerjakan soal ini):<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-11-go-1.gif\" \/><\/p>\r\n<p>gunakan <strong>goroutine <\/strong>dan <strong>WaitGroup <\/strong>untuk mengerjakan soal ini<\/p>\r\n<p><strong>soal 2<\/strong><\/p>\r\n<p>terdapat kode seperti dibawah ini<\/p>\r\n<table style=\"border-collapse: collapse; width: 44.3955%; height: 34px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 56px;\">\r\n<td style=\"width: 100%; text-align: left; height: 34px;\">\r\n<pre>var movies = []string{\"Harry Potter\", \"LOTR\", \"SpiderMan\", \"Logan\", \"Avengers\", \"Insidious\", \"Toy Story\"}<br \/><br \/>moviesChannel := make(chan string)<br \/><br \/>go getMovies(moviesChannel, movies...)<br \/><br \/>for value := range moviesChannel {<br \/>  fmt.Println(value)<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>buatlah function getMovies yang akan mengirim data setiap movie ke moviesChannel, output dari soal ini adalah<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-go-12-1.png\" \/><\/p>\r\n<p><strong>soal 3<\/strong><\/p>\r\n<p>buatlah function luas lingkaran dan keliling lingkaran dan volume tabung.<\/p>\r\n<p>jari-jari yang di gunakan adalah 8, 14 dan 20<\/p>\r\n<p>lalu tinggi tabungnya adalah 10<\/p>\r\n<p>gunakan goroutine dan channel untuk mengerjakan soal ini<\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>buatlah perhitungan luas persegi panjang dan keliling persegi panjang dan volume balok, gunakan select untuk menentukan hasil dari luas, keliling dan volume balok masing-masing<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-11-08 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-10-04 07:11:03","updated_at":"2021-10-25 16:50:49","waktu_publish_formatted":" Senin, 08 November 2021. 09:00:00 WIB."},{"id":1439,"uuid":"5cf45565-1364-4510-a226-5dd206aedb1f","author_user_id":4336,"materi_section_id":393,"judul":"Tugas 12 - JSON data & Web Server","permalink":"tugas-12-json-data-web-server","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-12&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas12.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas12.go&rdquo;&nbsp;<\/p>\r\n<p>lalu copy seluruh kode di <a href=\"https:\/\/play.golang.org\/p\/MId4jMgLm3M\" target=\"_blank\" rel=\"noopener\">https:\/\/play.golang.org\/p\/MId4jMgLm3M<\/a><\/p>\r\n<p>dan kerjakan soal di bawah ini<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><\/h2>\r\n<p><strong>soal 1<\/strong><\/p>\r\n<p>buatlah gunakan decode dari json ke slice of map[string]string lalu tampilkan data dalam loop hanya dari vendor samsung saja<\/p>\r\n<p><strong>soal 2<\/strong><\/p>\r\n<p>buatlah gunakan decode dari json ke slice of object dari struct lalu tampilkan data dalam loop hanya dari vendor sony saja<\/p>\r\n<p><strong>soal 3<\/strong><\/p>\r\n<p>buatlah struct seperti di bawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 28.7091%; height: 89px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 89px;\">\r\n<td style=\"width: 100%; height: 89px;\">\r\n<pre>type book struct{<br \/>  title, desc, author string<br \/>  releaseYear int<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<p>lalu buatlah slice of object dari struct minimal terdapat 5 data lalu encode ke JSON dan tampilkan hasilnya<\/p>\r\n<p><strong>soal 4<\/strong><\/p>\r\n<p>buatlah function luas lingkaran dan keliling lingkaran dan volume tabung.<\/p>\r\n<p>jari-jari yang di gunakan adalah 7<\/p>\r\n<p>lalu tinggi tabungnya adalah 10<\/p>\r\n<p>lalu tampilkan menggunakan web server yang textnya adalah<strong> jariJari : 7, tinggi: 10, volume : ...., luas alas: ....., keliling alas: .....<\/strong><br \/><br \/>untuk titik2nya harap diisi dengan hasil perhitungannya<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-11-09 09:00:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-10-05 07:40:56","updated_at":"2021-10-25 16:50:59","waktu_publish_formatted":" Selasa, 09 November 2021. 09:00:00 WIB."},{"id":1441,"uuid":"9cd2a34c-1127-41ce-8193-8b63b62bcc09","author_user_id":4336,"materi_section_id":393,"judul":"Tugas 13 - Web Service API Server & Middleware","permalink":"tugas-13-web-service-api-server-middleware","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-13&rdquo;<\/strong>, lalu buat file baru di dalam folder tersebut dengan nama <strong>&ldquo;tugas13.go&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini dan masukkan semua kode jawabannya ke dalam file &ldquo;tugas13.go&rdquo;&nbsp;<\/p>\r\n<p>terdapat kode struct dan variabel global seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 24.2775%; height: 89px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 89px;\">\r\n<td style=\"width: 100%; height: 89px;\">\r\n<pre>type NilaiMahasiswa struct{<br \/>  Nama, MataKuliah, IndeksNilai string<br \/>  Nilai, ID uint<br \/>}<br \/><br \/>var nilaiNilaiMahasiswa = []NilaiMahasiswa{}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu ikutilah instruksi dibawah ini:<\/p>\r\n<ol>\r\n<li>buatlah API POST Nilai Mahasiswa untuk menambahkan data NilaiMahasiswa, ada beberapa ketentuan diantaranya:<br \/>\r\n<ul>\r\n<li>data yang di input hanya boleh Nama, MataKuliah dan Nilai saja, untuk ID dan IndeksNilai harus diolah terlebih dahulu baru di masukkan ke tambahkan ke NilaiMahasiswa<\/li>\r\n<li>Nilai hanya boleh diisi maksimal dengan angka 100<\/li>\r\n<li>untuk mengisi IndeksNilai memiliki kondisi: <code>Nilai &gt;= 80 indeksnya A, Nilai &gt;= 70 dan Nilai &lt; 80 indeksnya B, Nilai &gt;= 60 dan Nilai &lt; 70, indeksnya c Nilai &gt;= 50 dan Nilai &lt; 60 indeksnya D, Nilai &lt; 50 indeksnya E<\/code><\/li>\r\n<li>harus memasukkan dulu username dan password baru bisa melakukan POST Nilai Mahasiswa <strong>(Menggunakan Basic Auth)<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>&nbsp;buatlah API GET Nilai Mahasiswa untuk menampilkan total data NilaiMahasiswa<\/li>\r\n<\/ol>\r\n<h2 id=\"5-kumpulkan-tugas\"><\/h2>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<p>&nbsp;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-11-10 09:00:00","status_publish":"publish","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-10-06 07:30:59","updated_at":"2021-10-18 20:40:47","waktu_publish_formatted":" Rabu, 10 November 2021. 09:00:00 WIB."},{"id":1445,"uuid":"a44a5bac-12aa-4012-8c45-424674355f6d","author_user_id":4336,"materi_section_id":393,"judul":"Tugas 14 - Membuat REST API dengan Database MySQL","permalink":"tugas-14-membuat-rest-api-dengan-database-mysql","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-14&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini didalam folder <strong>Tugas-14<\/strong><\/p>\r\n<p>ubahlah <strong>Tugas-13 (data nilai mahasiswa) <\/strong>menjadi <strong>CRUD REST API (tidak usah menggunakan Basic Auth)<\/strong>, dan gunakanlan database pada tugas 14 ini (nama database dan tabel bebas)<br \/><br \/><strong>lampirkan juga file sql dari database yang digunakan pada tugas ini<\/strong><\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>\r\n<div class=\"entry-content\">&nbsp;<\/div>","waktu_publish":"2021-11-11 09:00:00","status_publish":"publish","urutan":4,"created_by":4336,"updated_by":4336,"created_at":"2021-10-07 06:49:59","updated_at":"2021-10-25 17:28:53","waktu_publish_formatted":" Kamis, 11 November 2021. 09:00:00 WIB."},{"id":1450,"uuid":"ed624bf5-4d16-4ce2-b1ba-331f98214b24","author_user_id":4336,"materi_section_id":393,"judul":"Tugas 15 - Skema Database dan penerapannya pada REST API dengan MySQL","permalink":"tugas-15-skema-database-dan-penerapannya-pada-rest-api-dengan-mysql","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"petunjuk-pengerjaan\"><strong>Petunjuk Pengerjaan<\/strong><\/h2>\r\n<p>Ikutilah langkah-langkah pengerjaan di bawah ini:&zwnj;<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>1. Menambahkan Folder baru dan file baru<\/strong><\/h2>\r\n<p>Gunakanlah project yang sama dengan Tugas-1 (<strong>jangan buat repository baru lagi<\/strong>). Lalu buatlah folder baru dengan nama <strong>&ldquo;Tugas-15&rdquo;<\/strong>.<\/p>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>2. Kerjakan Soal di bawah ini<\/strong><\/h2>\r\n<p>kerjakan soal di bawah ini didalam folder <strong>Tugas-15<\/strong><\/p>\r\n<p>copy semua tugas-14 dan ubah mengikuti skema database dibawah ini:<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/09\/tugas-16.png\" \/><\/p>\r\n<p>indeks didapatkan dengan&nbsp;kondisi: <code>Nilai &gt;= 80 indeksnya A, Nilai &gt;= 70 dan Nilai &lt; 80 indeksnya B, Nilai &gt;= 60 dan Nilai &lt; 70, indeksnya c Nilai &gt;= 50 dan Nilai &lt; 60 indeksnya D, Nilai &lt; 50 indeksnya E<\/code><\/p>\r\n<p>skor tidak boleh diisi lebih dari 100<\/p>\r\n<p>wajib ada 3 CRUD untuk untuk masing-masing tabel diatas&nbsp;<strong> (tidak usah menggunakan Basic Auth)<\/strong><\/p>\r\n<p><strong>lampirkan juga file sql dari database yang digunakan pada tugas ini<\/strong><\/p>\r\n<\/div>\r\n<div class=\"entry-content\">\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>3. Tips<\/strong><\/h2>\r\n<p>Agar soal mudah di periksa trainer maka sebelum jawaban soal sisipkan komentar seperti di bawah ini<\/p>\r\n<pre class=\"wp-block-code\"><code>\/\/ soal 1\r\n.... jawaban soal 1\r\n\r\n\/\/ soal 2\r\n.... jawaban soal 2\r\n\r\ndan seterusnya<\/code><\/pre>\r\n<h2 id=\"5-kumpulkan-tugas\"><strong>4. Kumpulkan tugas<\/strong><\/h2>\r\n<p>Lalu update tugasnya ke repository masing-masing. Selanjutnya kumpulkan tugas Anda dengan melakukan copy link commit yang telah dibuat dari halaman repository project gitlab ke akun Anda di <a href=\"\/\">https:\/\/sanbercode.com\/<\/a>&nbsp;.<\/p>\r\n<p>Untuk selengkapnya, teknis pengumpulan tugas dapat di lihat di tab materi -&gt; lalu klik pendahuluan -&gt; lalu klik teknis pengumpulan<\/p>\r\n<\/div>\r\n<\/div>\r\n<div class=\"entry-content\">&nbsp;<\/div>","waktu_publish":"2021-10-22 09:00:00","status_publish":"publish","urutan":5,"created_by":4336,"updated_by":4336,"created_at":"2021-10-08 07:00:52","updated_at":"2021-10-25 17:31:47","waktu_publish_formatted":" Jumat, 22 Oktober 2021. 09:00:00 WIB."}]},{"id":400,"uuid":"6aedb175-78b6-4d42-80dd-a68ccfba9644","materi_id":36,"nama":"Pekan 4 - Materi","permalink":"pekan-4-materi","urutan":8,"created_by":4336,"updated_by":4336,"created_at":"2021-10-11 10:56:09","updated_at":null,"posting":[{"id":1457,"uuid":"f80cfb57-5fc1-4c98-be92-1cfd9407a864","author_user_id":4336,"materi_section_id":400,"judul":"Membuat REST API dan Dokumentasi API dengan Gin, Gorm dan Swaggo","permalink":"membuat-rest-api-dan-dokumentasi-api-dengan-gin-gorm-dan-swaggo","konten":"<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">Membuat REST API dan Dokumentasi API dengan Gin, Gorm dan Swaggo<\/strong><\/p>\r\n<p>Pada Materi ini kita akan mencoba untuk membuat sebuah REST API yang skema databasenya sama dengan materi <strong>\"Skema Database dan penerapannya pada REST API dengan MySQL\".&nbsp;<\/strong>sebelum lebih lanjut mari kita bahas sedikit mengenai Dokumentasi API, biasanya antara frontend dan backend selalu bekerja sama, pihak backend membuat web service dan endpoint berupa REST API yang nantinya bisa digunakan oleh frontend. tapi tidak mungkin frontend selalu bertanya terkait bentuk data yang dibutuhkan endpoint tertentu, oleh karena itu dibutuhkan sebuah dokumentasi api yang dapat membantu frontend. contoh dokumentasi API oleh swagger UI dapat di lihat pada <a href=\"https:\/\/petstore.swagger.io\/\" target=\"_blank\" rel=\"noopener\">link ini<\/a><\/p>\r\n<h2>Gin dan Gorm<\/h2>\r\n<p>Gin merupakan salah satu framework go yang dapat membantu mempercepat proses development, untuk skema router nya sangat mirip dengan library httprouter, untuk mempelajari lebih lanjut mengenai gin dapat dicek melalui <a href=\"https:\/\/gin-gonic.com\/docs\/gorm\" target=\"_blank\" rel=\"noopener\">link ini<\/a>. Gorm merupakan Objec Relational Mapping(ORM) dari go, dengan adanya gorm dapat mempermudah dari sisi query yang sebelumnya menggunakan raw SQL tapi tentunya sebelum menggunakan Gorm sangat disarankan memperdalam sintaks SQL terlebih dahulu agar tahu dasarnya terlebih dahulu. Untuk mempelajari lebih lanjut mengenai Gorm dapat dicek melalui <a href=\"https:\/\/gorm.io\/docs\/\" target=\"_blank\" rel=\"noopener\">link ini<\/a><\/p>\r\n<h2>Persiapan Awal<\/h2>\r\n<p>Untuk Membuat REST API dan Dokumentasi API dengan Gin, Gorm dan Swaggo, kita perlu mempersiapkan project kita terlebih dahulu, pada contoh ini kita akan memberi nama projectnya <strong>api-gin<\/strong>. pada contoh ini kita akan menggunakan beberapa library, berikut ini sintaks untuk menambahkan library yang dibutuhkan:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>go get -u github.com\/gin-gonic\/gin<br \/>go get -u gorm.io\/gorm<br \/>go get -u gorm.io\/driver\/mysql<br \/>go get -u github.com\/swaggo\/swag\/cmd\/swag<br \/>go get -u github.com\/swaggo\/files<br \/>go get -u github.com\/swaggo\/gin-swagger<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>install satu persatu lalu setelah itu jalankan perintah<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>swag init<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>setelah itu kita susun struktur folder projectnya<\/p>\r\n<h2>Struktur Project<\/h2>\r\n<p>Struktur foldernya projectnya seperti di bawah ini :<\/p>\r\n<pre class=\"wp-block-code\"><code>. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br \/>\u251c\u2500\u2500 main.go  <br \/>\u251c\u2500\u2500 go.mod  <br \/>\u251c\u2500\u2500 go.sum<br \/>\u251c\u2500\u2500 config\r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 db.go  <br \/>\u251c\u2500\u2500 controller                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 ageRatingCategoryController.go    <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 movieController.go<br \/>\u251c\u2500\u2500 docs                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 docs.go    <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 swagger.json &nbsp; &nbsp; &nbsp; <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 swagger.yml &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br \/>\u251c\u2500\u2500 models                                                               &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 ageRatingCategory.go<br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 movie.go <br \/>\u2514\u2500\u2500 routes\r\n    \u2514\u2500\u2500 routes.go       <\/code><\/pre>\r\n<p>Penjelasan:<\/p>\r\n<ul>\r\n<li><strong>main.go<\/strong>, digunakan untuk menjalankan routes dan set swagger info dan menjalankan koneksi database dari config.<\/li>\r\n<li><strong>config\/db.go<\/strong>, digunakan untuk melakukan konfigurasi database dan koneksi database, terdapat juga dbautomigrate yang digunakan membuat tabel sesuai dengan model.<\/li>\r\n<li><strong>controller\/ageRatingCategoryController.go dan controller\/movieController.go,<\/strong> digunakan operasi data yang terhubung dengan models, dan juga ada konfigurasi swaggo untuk setiap functionnya.<\/li>\r\n<li><strong>docs<\/strong>, otomatis dibuat saat menjalankan perintah swag init, jika ada perubahan konfigurasi swaggo maka jalankan swag init kembali.<\/li>\r\n<li><strong>models\/movie.go dan models\/ageRatingCategory.go<\/strong>, digunakan untuk membuat struct\/ struktur dan nantinya akan digunakan pada db automigrate dari gorm.<\/li>\r\n<li><strong>routes\/routes.go<\/strong>, digunakan untuk membuat router yang dimana function yang nantinya di panggil berasal dari controller.<\/li>\r\n<\/ul>\r\n<p>Hal yang pertama kita lakukan membuat struct di <strong>models\/ageRatingCategory.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package models<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"time\"<br \/>)<br \/><br \/>type (<br \/>&nbsp; &nbsp; \/\/ AgeRatingCategory<br \/>&nbsp; &nbsp; AgeRatingCategory struct {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; ID &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;uint &nbsp; &nbsp; &nbsp;`gorm:\"primary_key\" json:\"id\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Name &nbsp; &nbsp; &nbsp; &nbsp;string &nbsp; &nbsp;`json:\"name\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Description string &nbsp; &nbsp;`json:\"description\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; CreatedAt &nbsp; time.Time `json:\"created_at\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; UpdatedAt &nbsp; time.Time `json:\"updated_at\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Movies &nbsp; &nbsp; &nbsp;[]Movie &nbsp; `json:\"-\"`<br \/>&nbsp; &nbsp; }<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>kode Movies yang tipe datanya []Movie itu digunakan untuk set relasi database karena pada contoh ini kita tidak akan membuat tabel sendiri, melainkan gorm yang akan membuatnya<\/p>\r\n<p>setelah itu membuat struct di <strong>models\/movie.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package models<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"time\"<br \/>)<br \/><br \/>type (<br \/>&nbsp; &nbsp; \/\/ Movie<br \/>&nbsp; &nbsp; Movie struct {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; ID &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;uint &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`json:\"id\" gorm:\"primary_key\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Title &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; string &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`json:\"title\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Year &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `json:\"year\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; AgeRatingCategoryID uint &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`json:\"ageRatingCategoryID\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; CreatedAt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; time.Time &nbsp; &nbsp; &nbsp; &nbsp; `json:\"created_at\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; UpdatedAt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; time.Time &nbsp; &nbsp; &nbsp; &nbsp; `json:\"updated_at\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; AgeRatingCategory &nbsp; AgeRatingCategory `json:\"-\"`<br \/>&nbsp; &nbsp; }<br \/>)<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>begitupun dengan kode AgeRatingCategory yang tipe datanya juga sama AgeRatingCategory&nbsp; digunakan untuk set relasi database.<\/p>\r\n<p>setelah itu kita akan membuat sebuah database baru dengan nama \"database_movie\" dan mengisi file <strong>config\/db.go<\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 56.2621%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package config<br \/><br \/>import (<br \/>  \"api-gin\/models\"<br \/>  \"fmt\"<br \/><br \/>  \"gorm.io\/driver\/mysql\"<br \/>  \"gorm.io\/gorm\"<br \/>)<br \/><br \/>func ConnectDataBase() *gorm.DB {<br \/>  username := \"root\"<br \/>  password := \"password\"<br \/>  host := \"tcp(127.0.0.1:3306)\"<br \/>  database := \"database_movie\"<br \/><br \/>  dsn := fmt.Sprintf(\"%v:%v@%v\/%v?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\", username, password, host, database)<br \/><br \/>  db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})<br \/><br \/>  if err != nil {<br \/>  &nbsp; panic(err.Error())<br \/>  }<br \/><br \/>  db.AutoMigrate(&amp;models.Movie{}, &amp;models.AgeRatingCategory{})<br \/><br \/>  return db<br \/>}<\/pre>\r\n<div>&nbsp;<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu kita isi file <strong>main.go <\/strong>seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 32.948%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>  \"api-gin\/config\"<br \/>)<\/pre>\r\n<div>\r\n<div>func main() {<\/div>\r\n<div>&nbsp; db := config.ConnectDataBase()<\/div>\r\n<div>&nbsp; sqlDB, _ := db.DB()<\/div>\r\n<div>&nbsp; defer sqlDB.Close()<\/div>\r\n<div>}<\/div>\r\n<\/div>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>setelah itu jalankan perintah <strong>go run main.go<\/strong> dan setelah jika cek database_movie maka sudah terdapat dua tabel yang sudah terelasi<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-16-1.png\" \/><\/p>\r\n<p>setelah itu kita isi masing-masing controllernya<\/p>\r\n<p>dimulai dari <strong>controller\/ageRatingCategoryController.go <\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package controllers<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"net\/http\"<br \/>&nbsp; &nbsp; \"time\"<br \/><br \/>&nbsp; &nbsp; \"api-gin\/models\"<br \/><br \/>&nbsp; &nbsp; \"github.com\/gin-gonic\/gin\"<br \/>&nbsp; &nbsp; \"gorm.io\/gorm\"<br \/>)<br \/><br \/>type ageRatingCategoryInput struct {<br \/>&nbsp; &nbsp; Name &nbsp; &nbsp; &nbsp; &nbsp;string `json:\"name\"`<br \/>&nbsp; &nbsp; Description string `json:\"description\"`<br \/>}<br \/><br \/>\/\/ GetAllAgeRatingCategory godoc<br \/>\/\/ @Summary Get all AgeRatingCategory.<br \/>\/\/ @Description Get a list of AgeRatingCategory.<br \/>\/\/ @Tags AgeRatingCategory<br \/>\/\/ @Produce json<br \/>\/\/ @Success 200 {object} []models.AgeRatingCategory<br \/>\/\/ @Router \/age-rating-categories [get]<br \/>func GetAllRating(c *gin.Context) {<br \/>&nbsp; &nbsp; \/\/ get db from gin context<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; var ratings []models.AgeRatingCategory<br \/>&nbsp; &nbsp; db.Find(&amp;ratings)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": ratings})<br \/>}<br \/><br \/>\/\/ CreateAgeRatingCategory godoc<br \/>\/\/ @Summary Create New AgeRatingCategory.<br \/>\/\/ @Description Creating a new AgeRatingCategory.<br \/>\/\/ @Tags AgeRatingCategory<br \/>\/\/ @Param Body body ageRatingCategoryInput true \"the body to create a new AgeRatingCategory\"<br \/>\/\/ @Produce json<br \/>\/\/ @Success 200 {object} models.AgeRatingCategory<br \/>\/\/ @Router \/age-rating-categories [post]<br \/>func CreateRating(c *gin.Context) {<br \/>&nbsp; &nbsp; \/\/ Validate input<br \/>&nbsp; &nbsp; var input ageRatingCategoryInput<br \/>&nbsp; &nbsp; if err := c.ShouldBindJSON(&amp;input); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; \/\/ Create Rating<br \/>&nbsp; &nbsp; rating := models.AgeRatingCategory{Name: input.Name, Description: input.Description}<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; db.Create(&amp;rating)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": rating})<br \/>}<br \/><br \/>\/\/ GetAgeRatingCategoryById godoc<br \/>\/\/ @Summary Get AgeRatingCategory.<br \/>\/\/ @Description Get an AgeRatingCategory by id.<br \/>\/\/ @Tags AgeRatingCategory<br \/>\/\/ @Produce json<br \/>\/\/ @Param id path string true \"AgeRatingCategory id\"<br \/>\/\/ @Success 200 {object} models.AgeRatingCategory<br \/>\/\/ @Router \/age-rating-categories\/{id} [get]<br \/>func GetRatingById(c *gin.Context) { \/\/ Get model if exist<br \/>&nbsp; &nbsp; var rating models.AgeRatingCategory<br \/><br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", c.Param(\"id\")).First(&amp;rating).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Record not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": rating})<br \/>}<br \/><br \/>\/\/ GetMovieByAgeRatingCategoryId godoc<br \/>\/\/ @Summary Get Movies.<br \/>\/\/ @Description Get all Movies by AgeRatingCategoryId.<br \/>\/\/ @Tags AgeRatingCategory<br \/>\/\/ @Produce json<br \/>\/\/ @Param id path string true \"AgeRatingCategory id\"<br \/>\/\/ @Success 200 {object} []models.Movie<br \/>\/\/ @Router \/age-rating-categories\/{id}\/movies [get]<br \/>func GetMoviesByRatingId(c *gin.Context) { \/\/ Get model if exist<br \/>&nbsp; &nbsp; var movies []models.Movie<br \/><br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/><br \/>&nbsp; &nbsp; if err := db.Where(\"age_rating_category_id = ?\", c.Param(\"id\")).Find(&amp;movies).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Record not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": movies})<br \/>}<br \/><br \/>\/\/ UpdateAgeRatingCategory godoc<br \/>\/\/ @Summary Update AgeRatingCategory.<br \/>\/\/ @Description Update AgeRatingCategory by id.<br \/>\/\/ @Tags AgeRatingCategory<br \/>\/\/ @Produce json<br \/>\/\/ @Param id path string true \"AgeRatingCategory id\"<br \/>\/\/ @Param Body body ageRatingCategoryInput true \"the body to update age rating category\"<br \/>\/\/ @Success 200 {object} models.AgeRatingCategory<br \/>\/\/ @Router \/age-rating-categories\/{id} [patch]<br \/>func UpdateRating(c *gin.Context) {<br \/><br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; \/\/ Get model if exist<br \/>&nbsp; &nbsp; var rating models.AgeRatingCategory<br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", c.Param(\"id\")).First(&amp;rating).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Record not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; \/\/ Validate input<br \/>&nbsp; &nbsp; var input ageRatingCategoryInput<br \/>&nbsp; &nbsp; if err := c.ShouldBindJSON(&amp;input); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; var updatedInput models.AgeRatingCategory<br \/>&nbsp; &nbsp; updatedInput.Name = input.Name<br \/>&nbsp; &nbsp; updatedInput.Description = input.Description<br \/>&nbsp; &nbsp; updatedInput.UpdatedAt = time.Now()<br \/><br \/>&nbsp; &nbsp; db.Model(&amp;rating).Updates(updatedInput)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": rating})<br \/>}<br \/><br \/>\/\/ DeleteAgeRatingCategory godoc<br \/>\/\/ @Summary Delete one AgeRatingCategory.<br \/>\/\/ @Description Delete a AgeRatingCategory by id.<br \/>\/\/ @Tags AgeRatingCategory<br \/>\/\/ @Produce json<br \/>\/\/ @Param id path string true \"AgeRatingCategory id\"<br \/>\/\/ @Success 200 {object} map[string]boolean<br \/>\/\/ @Router \/age-rating-categories\/{id} [delete]<br \/>func DeleteRating(c *gin.Context) {<br \/>&nbsp; &nbsp; \/\/ Get model if exist<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; var rating models.AgeRatingCategory<br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", c.Param(\"id\")).First(&amp;rating).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Record not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; db.Delete(&amp;rating)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": true})<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>dan dilanjutkan dengan <strong>controller\/movieController.go<\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package ageRatingCategory<br \/><br \/><br \/>package controllers<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"net\/http\"<br \/>&nbsp; &nbsp; \"time\"<br \/><br \/>&nbsp; &nbsp; \"api-gin\/models\"<br \/><br \/>&nbsp; &nbsp; \"github.com\/gin-gonic\/gin\"<br \/>&nbsp; &nbsp; \"gorm.io\/gorm\"<br \/>)<br \/><br \/>type movieInput struct {<br \/>&nbsp; &nbsp; Title &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; string `json:\"title\"`<br \/>&nbsp; &nbsp; Year &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int &nbsp; &nbsp;`json:\"year\"`<br \/>&nbsp; &nbsp; AgeRatingCategoryID uint &nbsp; `json:\"age_rating_category_id\"`<br \/>}<br \/><br \/>\/\/ GetAllMovies godoc<br \/>\/\/ @Summary Get all movies.<br \/>\/\/ @Description Get a list of Movies.<br \/>\/\/ @Tags Movie<br \/>\/\/ @Produce json<br \/>\/\/ @Success 200 {object} []models.Movie<br \/>\/\/ @Router \/movies [get]<br \/>func GetAllMovie(c *gin.Context) {<br \/>&nbsp; &nbsp; \/\/ get db from gin context<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; var movies []models.Movie<br \/>&nbsp; &nbsp; db.Find(&amp;movies)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": movies})<br \/>}<br \/><br \/>\/\/ CreateMovie godoc<br \/>\/\/ @Summary Create New Movie.<br \/>\/\/ @Description Creating a new Movie.<br \/>\/\/ @Tags Movie<br \/>\/\/ @Param Body body movieInput true \"the body to create a new movie\"<br \/>\/\/ @Produce json<br \/>\/\/ @Success 200 {object} models.Movie<br \/>\/\/ @Router \/movies [post]<br \/>func CreateMovie(c *gin.Context) {<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/><br \/>&nbsp; &nbsp; \/\/ Validate input<br \/>&nbsp; &nbsp; var input movieInput<br \/>&nbsp; &nbsp; var rating models.AgeRatingCategory<br \/>&nbsp; &nbsp; if err := c.ShouldBindJSON(&amp;input); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", input.AgeRatingCategoryID).First(&amp;rating).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"ageRatingCategoryID not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; \/\/ Create Movie<br \/>&nbsp; &nbsp; movie := models.Movie{Title: input.Title, Year: input.Year, AgeRatingCategoryID: input.AgeRatingCategoryID}<br \/>&nbsp; &nbsp; db.Create(&amp;movie)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": movie})<br \/>}<br \/><br \/>\/\/ GetMovieById godoc<br \/>\/\/ @Summary Get Movie.<br \/>\/\/ @Description Get a Movie by id.<br \/>\/\/ @Tags Movie<br \/>\/\/ @Produce json<br \/>\/\/ @Param id path string true \"movie id\"<br \/>\/\/ @Success 200 {object} models.Movie<br \/>\/\/ @Router \/movies\/{id} [get]<br \/>func GetMovieById(c *gin.Context) { \/\/ Get model if exist<br \/>&nbsp; &nbsp; var movie models.Movie<br \/><br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", c.Param(\"id\")).First(&amp;movie).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Record not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": movie})<br \/>}<br \/><br \/>\/\/ UpdateMovie godoc<br \/>\/\/ @Summary Update Movie.<br \/>\/\/ @Description Update movie by id.<br \/>\/\/ @Tags Movie<br \/>\/\/ @Produce json<br \/>\/\/ @Param id path string true \"movie id\"<br \/>\/\/ @Param Body body movieInput true \"the body to update an movie\"<br \/>\/\/ @Success 200 {object} models.Movie<br \/>\/\/ @Router \/movies\/{id} [patch]<br \/>func UpdateMovie(c *gin.Context) {<br \/><br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; \/\/ Get model if exist<br \/>&nbsp; &nbsp; var movie models.Movie<br \/>&nbsp; &nbsp; var rating models.AgeRatingCategory<br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", c.Param(\"id\")).First(&amp;movie).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Record not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; \/\/ Validate input<br \/>&nbsp; &nbsp; var input movieInput<br \/>&nbsp; &nbsp; if err := c.ShouldBindJSON(&amp;input); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", input.AgeRatingCategoryID).First(&amp;rating).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"ageRatingCategoryID not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; var updatedInput models.Movie<br \/>&nbsp; &nbsp; updatedInput.Title = input.Title<br \/>&nbsp; &nbsp; updatedInput.Year = input.Year<br \/>&nbsp; &nbsp; updatedInput.AgeRatingCategoryID = input.AgeRatingCategoryID<br \/>&nbsp; &nbsp; updatedInput.UpdatedAt = time.Now()<br \/><br \/>&nbsp; &nbsp; db.Model(&amp;movie).Updates(updatedInput)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": movie})<br \/>}<br \/><br \/>\/\/ DeleteMovie godoc<br \/>\/\/ @Summary Delete one movie.<br \/>\/\/ @Description Delete a movie by id.<br \/>\/\/ @Tags Movie<br \/>\/\/ @Produce json<br \/>\/\/ @Param id path string true \"movie id\"<br \/>\/\/ @Success 200 {object} map[string]boolean<br \/>\/\/ @Router \/movie\/{id} [delete]<br \/>func DeleteMovie(c *gin.Context) {<br \/>&nbsp; &nbsp; \/\/ Get model if exist<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; var movie models.Movie<br \/>&nbsp; &nbsp; if err := db.Where(\"id = ?\", c.Param(\"id\")).First(&amp;movie).Error; err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Record not found!\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; db.Delete(&amp;movie)<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"data\": true})<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika diperhatikan pada kode diatas terdapat komentar di masing-masing function itu merupakan konfigurasi yang dibutuhkan untuk dokumentasi API, untuk lebih detailnya mengenai konfigurasinya dapat dicek melalui <a href=\"https:\/\/swaggo.github.io\/swaggo.io\/\" target=\"_blank\" rel=\"noopener\">link ini<\/a><\/p>\r\n<p>setelah membuat controller gunakan function yang ada pada kedua controller tersebut pada <strong>routes.go<\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package routes<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"github.com\/gin-gonic\/gin\"<br \/>&nbsp; &nbsp; \"gorm.io\/gorm\"<br \/><br \/>&nbsp; &nbsp; \"api-gin\/controllers\"<br \/><br \/>&nbsp; &nbsp; swaggerFiles \"github.com\/swaggo\/files\" &nbsp; &nbsp; \/\/ swagger embed files<br \/>&nbsp; &nbsp; ginSwagger \"github.com\/swaggo\/gin-swagger\" \/\/ gin-swagger middleware<br \/>)<br \/><br \/>func SetupRouter(db *gorm.DB) *gin.Engine {<br \/>&nbsp; &nbsp; r := gin.Default()<br \/><br \/>&nbsp; &nbsp; \/\/ set db to gin context<br \/>&nbsp; &nbsp; r.Use(func(c *gin.Context) {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.Set(\"db\", db)<br \/>&nbsp; &nbsp; })<br \/>&nbsp; &nbsp; r.GET(\"\/movies\", controllers.GetAllMovie)<br \/>&nbsp; &nbsp; r.POST(\"\/movies\", controllers.CreateMovie)<br \/>&nbsp; &nbsp; r.GET(\"\/movies\/:id\", controllers.GetMovieById)<br \/>&nbsp; &nbsp; r.PATCH(\"\/movies\/:id\", controllers.UpdateMovie)<br \/>&nbsp; &nbsp; r.DELETE(\"movies\/:id\", controllers.DeleteMovie)<br \/><br \/>&nbsp; &nbsp; r.GET(\"\/age-rating-categories\", controllers.GetAllRating)<br \/>&nbsp; &nbsp; r.POST(\"\/age-rating-categories\", controllers.CreateRating)<br \/>&nbsp; &nbsp; r.GET(\"\/age-rating-categories\/:id\", controllers.GetRatingById)<br \/>&nbsp; &nbsp; r.GET(\"\/age-rating-categories\/:id\/movies\", controllers.GetMoviesByRatingId)<br \/>&nbsp; &nbsp; r.PATCH(\"\/age-rating-categories\/:id\", controllers.UpdateRating)<br \/>&nbsp; &nbsp; r.DELETE(\"age-rating-categories\/:id\", controllers.DeleteRating)<br \/><br \/>&nbsp; &nbsp; r.GET(\"\/swagger\/*any\", ginSwagger.WrapHandler(swaggerFiles.Handler))<br \/><br \/>&nbsp; &nbsp; return r<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>jika dilihat dari sisi routernya penggunaan router di gin sangat mirip dengan <strong>httprouter,&nbsp;<\/strong>dikarenakan gin mengembangkannya dari <strong>httprouter<\/strong><\/p>\r\n<p>setelah itu kit perbarui kembali file <strong>main.go <\/strong>dengan kode dibawah ini:&nbsp;<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-gin\/config\"<br \/>&nbsp; &nbsp; \"api-gin\/docs\"<br \/>&nbsp; &nbsp; \"api-gin\/routes\"<br \/>)<br \/><br \/>\/\/ @contact.name API Support<br \/>\/\/ @contact.url http:\/\/www.swagger.io\/support<br \/>\/\/ @contact.email support@swagger.io<br \/><br \/>\/\/ @license.name Apache 2.0<br \/>\/\/ @license.url http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html<br \/><br \/>\/\/ @termsOfService http:\/\/swagger.io\/terms\/<br \/><br \/>func main() {<br \/>  \/\/programmatically set swagger info<br \/>  docs.SwaggerInfo.Title = \"Swagger Example API\"<br \/>  docs.SwaggerInfo.Description = \"This is a sample server Movie.\"<br \/>  docs.SwaggerInfo.Version = \"1.0\"<br \/>  docs.SwaggerInfo.Host = \"localhost:8080\"<br \/>  docs.SwaggerInfo.Schemes = []string{\"http\", \"https\"}<br \/><br \/>  db := config.ConnectDataBase()<br \/>  sqlDB, _ := db.DB()<br \/>  defer sqlDB.Close()<br \/><br \/>  r := routes.SetupRouter(db)<br \/>  r.Run()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>setelah itu jalankan perintah <strong>swag init<\/strong><\/p>\r\n<p>&nbsp;<\/p>\r\n<p>setelah itu jalankan perintah <strong>go run main.go&nbsp;<\/strong>router pada gin secara default akan menggunakan port 8080, jika ingin menggunakan port lain bisa menggunakan kode r.Run(\":7000\") jika ingin menggunakan port 7000 atau port lainnya tinggal mengubah \"7000\" dengan port yang diinginkan.<\/p>\r\n<p>setelah menjalankan perintah <strong>go run main.go&nbsp;<\/strong>akses <a href=\"http:\/\/localhost:8080\/swagger\/index.html\" target=\"_blank\" rel=\"noopener\">http:\/\/localhost:8080\/swagger\/index.html<\/a> untuk mengakses dokumentasi API, kurang lebih tampilannya seperti berikut:<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-16-2.png\" width=\"1349\" height=\"758\" \/><\/p>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/gin-gonic.com\/docs\/introduction\/\">https:\/\/gin-gonic.com\/docs\/introduction\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/gorm.io\/docs\/\">https:\/\/gorm.io\/docs\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/github.com\/swaggo\/swag\">https:\/\/github.com\/swaggo\/swag<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/swaggo.github.io\/swaggo.io\/\">https:\/\/swaggo.github.io\/swaggo.io\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/blog.logrocket.com\/how-to-build-a-rest-api-with-golang-using-gin-and-gorm\/\">https:\/\/blog.logrocket.com\/how-to-build-a-rest-api-with-golang-using-gin-and-gorm\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/kotakode.com\/blogs\/5479\/Membuat-crud-api-dengan-menggunakan-Go%2C-Gin-dan-Mysql\">https:\/\/kotakode.com\/blogs\/5479\/Membuat-crud-api-dengan-menggunakan-Go%2C-Gin-dan-Mysql<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-15 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-10-11 10:58:12","updated_at":"2021-10-25 17:10:39","waktu_publish_formatted":" Senin, 15 November 2021. 09:00:00 WIB."},{"id":1468,"uuid":"1bfee9e4-0782-47cc-be15-f71751c0cc20","author_user_id":4336,"materi_section_id":400,"judul":"Membuat JWT Authentication dengan Gin, Gorm dan Dokumentasinya dengan Swaggo","permalink":"membuat-jwt-authentication-dengan-gin-gorm-dan-dokumentasinya-dengan-swaggo","konten":"<p style=\"width: 100%; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; background: #eeeeee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; text-align: center;\"><strong style=\"font-size: 24pt;\">Membuat JWT Authentication dengan Gin, Gorm dan Dokumentasinya dengan Swaggo<\/strong><\/p>\r\n<p><strong>JWT <\/strong>singkatan dari <strong>JSON Web Token <\/strong>merupakan salah satu standar JSON (<a href=\"https:\/\/tools.ietf.org\/html\/rfc7519\" target=\"_blank\" rel=\"noopener\">RFC 7519<\/a>) untuk keperluan akses token. Token dibentuk dari kombinasi beberapa informasi yang di-encode dan di-enkripsi. Informasi yang dimaksud adalah header, payload, dan signature.<\/p>\r\n<p>Contoh JWT:<\/p>\r\n<table style=\"border-collapse: collapse; width: 73.9243%;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>Skema JWT:<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-17-1.png\" \/><\/p>\r\n<ul>\r\n<li><strong>Header<\/strong>, isinya adalah jenis algoritma yang digunakan untuk generate signature.<\/li>\r\n<li><strong>Payload<\/strong>, isinya adalah data penting untuk keperluan otentikasi, seperti&nbsp;<em>grant<\/em>,&nbsp;<em>group<\/em>, kapan login terjadi, dan atau lainnya. Data ini dalam konteks JWT biasa disebut dengan&nbsp;<strong>CLAIMS<\/strong>.<\/li>\r\n<li><strong>Signature<\/strong>, isinya adalah hasil dari enkripsi data menggunakan algoritma kriptografi. Data yang dimaksud adalah gabungan dari (encoded) header, (encoded) payload, dan secret key.<\/li>\r\n<\/ul>\r\n<p>Umumnya pada aplikasi yang menerapkan teknik otorisasi menggunakan token, token di-generate di back end secara acak (menggunakan algoritma tertentu) lalu disimpan di database bersamaan dengan data user. Token tersebut bisa jadi tidak ada isinya, hanya random string, atau mungkin saja ada isinya.<\/p>\r\n<p>Nantinya di setiap http call, token yang disertakan pada request header dicocokan dengan token yang ada di database, dilanjutkan dengan pengecekan grant\/group\/sejenisnya, untuk menentukan apakah request tersebut adalah verified request yang memang berhak mengakses endpoint.<\/p>\r\n<p>Pada aplikasi yang menerapkan JWT, yang terjadi sedikit berbeda. Token adalah hasil dari proses kombinasi, encoding, dan enkripsi terhadap beberapa informasi. Nantinya pada sebuah http call, pengecekan token tidak dilakukan dengan membandingkan token yang ada di request vs token yang tersimpan di database, karena memang token pada JWT tidak disimpan di database. Pengecekan token dilakukan dengan cara mengecek hasil decode dan decrypt token yang ditautkan dalam request.<\/p>\r\n<p>Mungkin sekilas terlihat mengerikan, terlihat sangat gampang sekali untuk di-retas, buktinya adalah data otorisasi bisa dengan mudah diambil dari token JWT. Dan penulis sampaikan, bahwa ini adalah presepsi yang salah.<\/p>\r\n<p>Informasi yang ada dalam token, selain di-encode, juga di-enkripsi. Dalam enkripsi diperlukan private key atau secret key, dan hanya pengembang yang tau. Jadi pastikan simpan baik-baik key tersebut.<\/p>\r\n<p>Selama peretas tidak tau secret key yang digunakan, hasil decoding dan dekripsi data&nbsp;<strong>PASTI TIDAK VALID<\/strong>.<\/p>\r\n<h2>Persiapan Awal<\/h2>\r\n<p>Untuk Membuat JWT Authentication dengan Gin, Gorm dan Dokumentasinya dengan Swaggo, kita perlu mempersiapkan project kita terlebih dahulu, pada contoh ini kita akan menggunakan project dari materi <strong>Membuat REST API dan Dokumentasi API dengan Gin, Gorm dan Swaggo<\/strong>. pada contoh ini kita akan menggunakan beberapa library, berikut ini sintaks untuk menambahkan library yang dibutuhkan:<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>go get github.com\/golang-jwt\/jwt<br \/>go get golang.org\/x\/crypto <br \/>go get github.com\/joho\/godotenv<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>install satu persatu lalu setelah itu jalankan perintah. Setelah itu kita perbarui struktur folder projectnya<\/p>\r\n<h2>Struktur Project<\/h2>\r\n<p>Struktur foldernya bisa diperbarui seperti di bawah ini :<\/p>\r\n<pre class=\"wp-block-code\"><code>. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br \/>\u251c\u2500\u2500 .env<br \/>\u251c\u2500\u2500 main.go  <br \/>\u251c\u2500\u2500 go.mod  <br \/>\u251c\u2500\u2500 go.sum<br \/>\u251c\u2500\u2500 config\r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 db.go  <br \/>\u251c\u2500\u2500 controller                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 ageRatingCategoryController.go    <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 authController.go    <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 movieController.go<br \/>\u251c\u2500\u2500 docs                                                               \r\n\u2502&nbsp;&nbsp; \u2514\u2500\u2500 docs.go    <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 swagger.json &nbsp; &nbsp; &nbsp; <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 swagger.yml &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br \/>\u251c\u2500\u2500 middlewares                                                               &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 middlewares.go<br \/>\u251c\u2500\u2500 models                                                               &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 ageRatingCategory.go<br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 movie.go <br \/>\u2502&nbsp;&nbsp; \u2514\u2500\u2500 user.go <br \/>\u2514\u2500\u2500 routes <br \/>\u2502 &nbsp; \u2514\u2500\u2500 routes.go<br \/>\u2514\u2500\u2500 utils<br \/>\u2502 &nbsp; \u2514\u2500\u2500 token<br \/>\u2502 &nbsp; \u2502 \u2514\u2500\u2500 token.go <br \/>\u2502 &nbsp; \u2514\u2500\u2500 helper.go &nbsp; &nbsp;  <\/code><\/pre>\r\n<p>Pembaruan dari struktur folder dimateri <strong>Membuat REST API dan Dokumentasi API dengan Gin, Gorm dan Swaggo <\/strong>adalah:<\/p>\r\n<ul>\r\n<li><strong>.env,&nbsp;<\/strong>file ini gunakan untuk konfigurasi environment variabel<\/li>\r\n<li><strong>main.go<\/strong>, didalamnya ada penambahan load godotenv untuk inisiasi agar variabel dari .env bisa digunakan.<\/li>\r\n<li><strong>controller\/authController,<\/strong> berisi function untuk register dan login yang nantinya responsenya adalah token.<\/li>\r\n<li><strong>middlewares\/middlewares.go<\/strong>, berisi middlewares yang menggunakan jwt token.<\/li>\r\n<li><strong>models\/user.go<\/strong>, berisi struct\/ struktur user dan beberapa function yang nantinya akan digunakan di controller.<\/li>\r\n<li><strong>routes\/routes.go<\/strong>, membuat router untuk login dan register, menambahkan middleware pada beberapa route.<\/li>\r\n<li><strong>utils\/token\/token.go<\/strong>, berisi function-function yang digunakan dalam pengecekan token, generate token dan lain sebagainya.<\/li>\r\n<li><strong>utils\/helper.go<\/strong>, berisi function untuk memberikan default pada variabel dari env jika variabel pada env-nya masih kosong.<\/li>\r\n<\/ul>\r\n<p>pertama kita isi file .<strong>env <\/strong>terlebih dahulu<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>API_SECRET=rahasiasekali<br \/>TOKEN_HOUR_LIFESPAN=1<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>kedua variabel tersebut nanti akan digunakan di <strong>token.go<\/strong><\/p>\r\n<p>selanjutnya kita isi file <strong>utils\/helper.go<\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package utils<br \/><br \/>import \"os\"<br \/><br \/>func Getenv(key, fallback string) string {<br \/>  if value, ok := os.LookupEnv(key); ok {<br \/>    return value<br \/>  }<br \/>  return fallback<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>function Getenv diatas berguna untuk memberikan nilai default dari parameter fallback, jikalau file .env masih kosong ataupun environment variabel yang dibutuhkan pada os nya masih kosong<\/p>\r\n<p>selanjutnya kita isi file <strong>utils\/token\/token.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package token<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-gin\/utils\"<br \/>&nbsp; &nbsp; \"fmt\"<br \/>&nbsp; &nbsp; \"strconv\"<br \/>&nbsp; &nbsp; \"strings\"<br \/>&nbsp; &nbsp; \"time\"<br \/><br \/>&nbsp; &nbsp; \"github.com\/gin-gonic\/gin\"<br \/>&nbsp; &nbsp; \"github.com\/golang-jwt\/jwt\"<br \/>)<br \/><br \/>var API_SECRET = utils.Getenv(\"API_SECRET\", \"rahasiasekali\")<br \/><br \/>func GenerateToken(user_id uint) (string, error) {<br \/>&nbsp; &nbsp; token_lifespan, err := strconv.Atoi(utils.Getenv(\"TOKEN_HOUR_LIFESPAN\", \"1\"))<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return \"\", err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; claims := jwt.MapClaims{}<br \/>&nbsp; &nbsp; claims[\"authorized\"] = true<br \/>&nbsp; &nbsp; claims[\"user_id\"] = user_id<br \/>&nbsp; &nbsp; claims[\"exp\"] = time.Now().Add(time.Hour * time.Duration(token_lifespan)).Unix()<br \/>&nbsp; &nbsp; token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)<br \/><br \/>&nbsp; &nbsp; return token.SignedString([]byte(API_SECRET))<br \/><br \/>}<br \/><br \/>func TokenValid(c *gin.Context) error {<br \/>&nbsp; &nbsp; tokenString := ExtractToken(c)<br \/>&nbsp; &nbsp; _, err := jwt.Parse(tokenString, func(token *jwt.Token) (interface{}, error) {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; if _, ok := token.Method.(*jwt.SigningMethodHMAC); !ok {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return nil, fmt.Errorf(\"unexpected signing method: %v\", token.Header[\"alg\"])<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return []byte(API_SECRET), nil<br \/>&nbsp; &nbsp; })<br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return err<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; return nil<br \/>}<br \/><br \/>func ExtractToken(c *gin.Context) string {<br \/>&nbsp; &nbsp; token := c.Query(\"token\")<br \/>&nbsp; &nbsp; if token != \"\" {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return token<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; bearerToken := c.Request.Header.Get(\"Authorization\")<br \/>&nbsp; &nbsp; if len(strings.Split(bearerToken, \" \")) == 2 {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return strings.Split(bearerToken, \" \")[1]<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; return \"\"<br \/>}<br \/><br \/>func ExtractTokenID(c *gin.Context) (uint, error) {<br \/><br \/>&nbsp; &nbsp; tokenString := ExtractToken(c)<br \/>&nbsp; &nbsp; token, err := jwt.Parse(tokenString, func(token *jwt.Token) (interface{}, error) {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; if _, ok := token.Method.(*jwt.SigningMethodHMAC); !ok {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return nil, fmt.Errorf(\"unexpected signing method: %v\", token.Header[\"alg\"])<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return []byte(API_SECRET), nil<br \/>&nbsp; &nbsp; })<br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return 0, err<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; claims, ok := token.Claims.(jwt.MapClaims)<br \/>&nbsp; &nbsp; if ok &amp;&amp; token.Valid {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; uid, err := strconv.ParseUint(fmt.Sprintf(\"%.0f\", claims[\"user_id\"]), 10, 32)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 0, err<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return uint(uid), nil<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; return 0, nil<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>pada file token.go di atas terdapat beberapa function yang nantinya kita operasikan baik di models\/user.go<\/p>\r\n<p>selanjutnya itu membuat struct dan function di <strong>models\/user.go<\/strong>.<\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package models<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"html\"<br \/>&nbsp; &nbsp; \"strings\"<br \/>&nbsp; &nbsp; \"time\"<br \/><br \/>&nbsp; &nbsp; \"api-gin\/utils\/token\"<br \/><br \/>&nbsp; &nbsp; \"golang.org\/x\/crypto\/bcrypt\"<br \/>&nbsp; &nbsp; \"gorm.io\/gorm\"<br \/>)<br \/><br \/>type (<br \/>&nbsp; &nbsp; \/\/ User<br \/>&nbsp; &nbsp; User struct {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; ID &nbsp; &nbsp; &nbsp; &nbsp;uint &nbsp; &nbsp; &nbsp;`json:\"id\" gorm:\"primary_key\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Username &nbsp;string &nbsp; &nbsp;`gorm:\"not null;unique\" json:\"username\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Email &nbsp; &nbsp; string &nbsp; &nbsp;`gorm:\"not null;unique\" json:\"email\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; Password &nbsp;string &nbsp; &nbsp;`gorm:\"not null;\" json:\"password\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; CreatedAt time.Time `json:\"created_at\"`<br \/>&nbsp; &nbsp; &nbsp; &nbsp; UpdatedAt time.Time `json:\"updated_at\"`<br \/>&nbsp; &nbsp; }<br \/>)<br \/><br \/>func VerifyPassword(password, hashedPassword string) error {<br \/>&nbsp; &nbsp; return bcrypt.CompareHashAndPassword([]byte(hashedPassword), []byte(password))<br \/>}<br \/><br \/>func LoginCheck(username string, password string, db *gorm.DB) (string, error) {<br \/><br \/>&nbsp; &nbsp; var err error<br \/><br \/>&nbsp; &nbsp; u := User{}<br \/><br \/>&nbsp; &nbsp; err = db.Model(User{}).Where(\"username = ?\", username).Take(&amp;u).Error<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return \"\", err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; err = VerifyPassword(password, u.Password)<br \/><br \/>&nbsp; &nbsp; if err != nil &amp;&amp; err == bcrypt.ErrMismatchedHashAndPassword {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return \"\", err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; token, err := token.GenerateToken(u.ID)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return \"\", err<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; return token, nil<br \/><br \/>}<br \/><br \/>func (u *User) SaveUser(db *gorm.DB) (*User, error) {<br \/>&nbsp; &nbsp; \/\/turn password into hash<br \/>&nbsp; &nbsp; hashedPassword, errPassword := bcrypt.GenerateFromPassword([]byte(u.Password), bcrypt.DefaultCost)<br \/>&nbsp; &nbsp; if errPassword != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return &amp;User{}, errPassword<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; u.Password = string(hashedPassword)<br \/>&nbsp; &nbsp; \/\/remove spaces in username<br \/>&nbsp; &nbsp; u.Username = html.EscapeString(strings.TrimSpace(u.Username))<br \/><br \/>&nbsp; &nbsp; var err error = db.Create(&amp;u).Error<br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return &amp;User{}, err<br \/>&nbsp; &nbsp; }<br \/>&nbsp; &nbsp; return u, nil<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>terdapat function yang nantinya akan digunakan pada <strong>authController.go<\/strong><\/p>\r\n<p>selanjutnya isi file <strong>controller\/authController.go<\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 56.2621%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package controllers<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-gin\/models\"<br \/>&nbsp; &nbsp; \"fmt\"<br \/>&nbsp; &nbsp; \"net\/http\"<br \/><br \/>&nbsp; &nbsp; \"github.com\/gin-gonic\/gin\"<br \/>&nbsp; &nbsp; \"gorm.io\/gorm\"<br \/>)<br \/><br \/>type LoginInput struct {<br \/>&nbsp; &nbsp; Username string `json:\"username\" binding:\"required\"`<br \/>&nbsp; &nbsp; Password string `json:\"password\" binding:\"required\"`<br \/>}<br \/><br \/>type RegisterInput struct {<br \/>&nbsp; &nbsp; Username string `json:\"username\" binding:\"required\"`<br \/>&nbsp; &nbsp; Password string `json:\"password\" binding:\"required\"`<br \/>&nbsp; &nbsp; Email &nbsp; &nbsp;string `json:\"email\" binding:\"required\"`<br \/>}<br \/><br \/>\/\/ LoginUser godoc<br \/>\/\/ @Summary Login as as user.<br \/>\/\/ @Description Logging in to get jwt token to access admin or user api by roles.<br \/>\/\/ @Tags Auth<br \/>\/\/ @Param Body body LoginInput true \"the body to login a user\"<br \/>\/\/ @Produce json<br \/>\/\/ @Success 200 {object} map[string]interface{}<br \/>\/\/ @Router \/login [post]<br \/>func Login(c *gin.Context) {<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; var input LoginInput<br \/><br \/>&nbsp; &nbsp; if err := c.ShouldBindJSON(&amp;input); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; u := models.User{}<br \/><br \/>&nbsp; &nbsp; u.Username = input.Username<br \/>&nbsp; &nbsp; u.Password = input.Password<br \/><br \/>&nbsp; &nbsp; token, err := models.LoginCheck(u.Username, u.Password, db)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; fmt.Println(err)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": \"username or password is incorrect.\"})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; user := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"username\": u.Username,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"email\": &nbsp; &nbsp;u.Email,<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"message\": \"login success\", \"user\": user, \"token\": token})<br \/><br \/>}<br \/><br \/>\/\/ Register godoc<br \/>\/\/ @Summary Register a user.<br \/>\/\/ @Description registering a user from public access.<br \/>\/\/ @Tags Auth<br \/>\/\/ @Param Body body RegisterInput true \"the body to register a user\"<br \/>\/\/ @Produce json<br \/>\/\/ @Success 200 {object} map[string]interface{}<br \/>\/\/ @Router \/register [post]<br \/>func Register(c *gin.Context) {<br \/>&nbsp; &nbsp; db := c.MustGet(\"db\").(*gorm.DB)<br \/>&nbsp; &nbsp; var input RegisterInput<br \/><br \/>&nbsp; &nbsp; if err := c.ShouldBindJSON(&amp;input); err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; u := models.User{}<br \/><br \/>&nbsp; &nbsp; u.Username = input.Username<br \/>&nbsp; &nbsp; u.Email = input.Email<br \/>&nbsp; &nbsp; u.Password = input.Password<br \/><br \/>&nbsp; &nbsp; _, err := u.SaveUser(db)<br \/><br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; user := map[string]string{<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"username\": input.Username,<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \"email\": &nbsp; &nbsp;input.Email,<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; c.JSON(http.StatusOK, gin.H{\"message\": \"registration success\", \"user\": user})<br \/><br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu isi file <strong>middewares\/middlewares.go<\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 55.8767%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package middlewares<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"net\/http\"<br \/><br \/>&nbsp; &nbsp; \"api-gin\/utils\/token\"<br \/><br \/>&nbsp; &nbsp; \"github.com\/gin-gonic\/gin\"<br \/>)<br \/><br \/>func JwtAuthMiddleware() gin.HandlerFunc {<br \/>&nbsp; &nbsp; return func(c *gin.Context) {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; err := token.TokenValid(c)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; if err != nil {<br \/>  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.String(http.StatusUnauthorized, err.Error())<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.Abort()<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.Next()<br \/>&nbsp; &nbsp; }<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>lalu kita perbarui file <strong>routes.go <\/strong>seperti dibawah ini:<\/p>\r\n<table style=\"border-collapse: collapse; width: 55.5556%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package routes<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"github.com\/gin-gonic\/gin\"<br \/>&nbsp; &nbsp; \"gorm.io\/gorm\"<br \/><br \/>&nbsp; &nbsp; \"api-gin\/controllers\"<br \/>&nbsp; &nbsp; \"api-gin\/middlewares\"<br \/><br \/>&nbsp; &nbsp; swaggerFiles \"github.com\/swaggo\/files\" &nbsp; &nbsp; \/\/ swagger embed files<br \/>&nbsp; &nbsp; ginSwagger \"github.com\/swaggo\/gin-swagger\" \/\/ gin-swagger middleware<br \/>)<br \/><br \/>func SetupRouter(db *gorm.DB) *gin.Engine {<br \/>&nbsp; &nbsp; r := gin.Default()<br \/><br \/>&nbsp; &nbsp; \/\/ set db to gin context<br \/>&nbsp; &nbsp; r.Use(func(c *gin.Context) {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; c.Set(\"db\", db)<br \/>&nbsp; &nbsp; })<br \/><br \/>&nbsp; &nbsp; r.POST(\"\/register\", controllers.Register)<br \/>&nbsp; &nbsp; r.POST(\"\/login\", controllers.Login)<br \/><br \/>&nbsp; &nbsp; r.GET(\"\/movies\", controllers.GetAllMovie)<br \/>&nbsp; &nbsp; r.GET(\"\/:id\", controllers.GetMovieById)<br \/><br \/>&nbsp; &nbsp; moviesMiddlewareRoute := r.Group(\"\/movies\")<br \/>&nbsp; &nbsp; moviesMiddlewareRoute.Use(middlewares.JwtAuthMiddleware())<br \/>&nbsp; &nbsp; moviesMiddlewareRoute.POST(\"\/\", controllers.CreateMovie)<br \/>&nbsp; &nbsp; moviesMiddlewareRoute.PATCH(\"\/:id\", controllers.UpdateMovie)<br \/>&nbsp; &nbsp; moviesMiddlewareRoute.DELETE(\"\/:id\", controllers.DeleteMovie)<br \/><br \/>&nbsp; &nbsp; r.GET(\"\/age-rating-categories\", controllers.GetAllRating)<br \/>&nbsp; &nbsp; r.GET(\"\/age-rating-categories\/:id\", controllers.GetRatingById)<br \/>&nbsp; &nbsp; r.GET(\"\/age-rating-categories\/:id\/movies\", controllers.GetMoviesByRatingId)<br \/><br \/>&nbsp; &nbsp; ratingMiddlewareRoute := r.Group(\"\/age-rating-categories\")<br \/>&nbsp; &nbsp; ratingMiddlewareRoute.Use(middlewares.JwtAuthMiddleware())<br \/>&nbsp; &nbsp; ratingMiddlewareRoute.POST(\"\/\", controllers.CreateRating)<br \/>&nbsp; &nbsp; ratingMiddlewareRoute.PATCH(\"\/:id\", controllers.UpdateRating)<br \/>&nbsp; &nbsp; ratingMiddlewareRoute.DELETE(\"\/:id\", controllers.DeleteRating)<\/pre>\r\n<pre><br \/>&nbsp; &nbsp; r.GET(\"\/swagger\/*any\", ginSwagger.WrapHandler(swaggerFiles.Handler))<br \/><br \/>&nbsp; &nbsp; return r<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>dan perbarui file <strong>main.go <\/strong><\/p>\r\n<table style=\"border-collapse: collapse; width: 56.7759%; height: 79px;\" border=\"1\" cellspacing=\"10px\" cellpadding=\"10px\">\r\n<tbody>\r\n<tr style=\"height: 79px;\">\r\n<td style=\"width: 100%; height: 79px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-gin\/config\"<br \/>&nbsp; &nbsp; \"api-gin\/docs\"<br \/>&nbsp; &nbsp; \"api-gin\/routes\"<br \/>)<br \/><br \/>\/\/ @contact.name API Support<br \/>\/\/ @contact.url http:\/\/www.swagger.io\/support<br \/>\/\/ @contact.email support@swagger.io<br \/><br \/>\/\/ @license.name Apache 2.0<br \/>\/\/ @license.url http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html<br \/><br \/>\/\/ @termsOfService http:\/\/swagger.io\/terms\/<br \/><br \/>func main() {<br \/>&nbsp; &nbsp; \/\/ for load godotenv<br \/>&nbsp; &nbsp; err := godotenv.Load()<br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(\"Error loading .env file\")<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; \/\/ programmatically set swagger info<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Title = \"Swagger Example API\"<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Description = \"This is a sample server Movie.\"<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Version = \"1.0\"<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Host = \"localhost:8080\"<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Schemes = []string{\"http\", \"https\"}<br \/><br \/>&nbsp; &nbsp; \/\/ database connection<br \/>&nbsp; &nbsp; db := config.ConnectDataBase()<br \/>&nbsp; &nbsp; sqlDB, _ := db.DB()<br \/>&nbsp; &nbsp; defer sqlDB.Close()<br \/><br \/>&nbsp; &nbsp; \/\/ router<br \/>&nbsp; &nbsp; r := routes.SetupRouter(db)<br \/>&nbsp; &nbsp; r.Run(\"localhost:8080\")<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<p>setelah itu jalankan perintah <strong>swag init<\/strong><\/p>\r\n<p>setelah itu jalankan perintah <strong>go run main.go&nbsp;<\/strong>router pada gin secara default akan menggunakan port 8080, jika ingin menggunakan port lain bisa menggunakan kode r.Run(\":7000\") jika ingin menggunakan port 7000 atau port lainnya tinggal mengubah \"7000\" dengan port yang diinginkan.<\/p>\r\n<p>setelah coba login (jika belum ada akunnya bisa coba register dulu) di <a href=\"http:\/\/localhost:8080\/swagger\/index.html\" target=\"_blank\" rel=\"noopener\">http:\/\/localhost:8080\/swagger\/index.html<\/a> dan coba post age-rating-categories dengan bearer token, seperti contoh dibawah ini:<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-17-2.png\" \/><\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-17-3.png\" \/><\/p>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/dasarpemrogramangolang.novalagung.com\/C-32-golang-jwt.html\">https:\/\/dasarpemrogramangolang.novalagung.com\/C-32-golang-jwt.html<\/a><\/li>\r\n<li><a href=\"https:\/\/github.com\/golang-jwt\/jwt\">https:\/\/github.com\/golang-jwt\/jwt<\/a><\/li>\r\n<li><a href=\"https:\/\/swaggo.github.io\/swaggo.io\/\">https:\/\/swaggo.github.io\/swaggo.io\/<\/a><\/li>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/ichi.pro\/id\/buat-go-rest-api-pertama-anda-dengan-otentikasi-jwt-di-gin-framework-241779775842327\">https:\/\/ichi.pro\/id\/buat-go-rest-api-pertama-anda-dengan-otentikasi-jwt-di-gin-framework-241779775842327<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-16 09:00:00","status_publish":"publish","urutan":2,"created_by":4336,"updated_by":4336,"created_at":"2021-10-13 17:26:15","updated_at":"2021-10-25 17:10:53","waktu_publish_formatted":" Selasa, 16 November 2021. 09:00:00 WIB."},{"id":1469,"uuid":"adc2db0d-dabe-4e40-a66a-b2ae114a605d","author_user_id":4336,"materi_section_id":400,"judul":"Deployment dengan Heroku","permalink":"deployment-dengan-heroku","konten":"<p style=\"width: 100%; padding: 10px; background: #eee; border-bottom: 1px solid #aaaaaa; border-top: 1px solid #aaaaaa; ; text-align: center;\"><span style=\"font-size: 24pt;\"><strong>Deployment dengan Heroku<\/strong><\/span><\/p>\r\n<p>didalam membangun suatu aplikasi atau web app tentunya ada masa dimana kita akan deployment aplikasi kita, biasanya dalam deployment kita membuat dua server staging dan production, staging di gunakan untuk testing sebelum nantinya aplikasi di gunakan di production yang tentunya akan di gunakan user<\/p>\r\n<p>pada materi kali ini kita akan mencoba deployment project kita dalam keperluan staging, sebenarnya banyak opsi untuk membuat aplikasi kita bisa diakses orang lain, kita bisa menggunakan Cloud, VPS, hosting, SaaS (Software as a Service) dll.<\/p>\r\n<p>pada materi ini kita akan melakukan deployment ke heroku sebagai SaaS. sebelum melanjutkan ke cara deployment, silahkan anda buat akun di <a href=\"https:\/\/heroku.com\" target=\"_blank\" rel=\"noopener\">heroku.com<\/a> dan download heroku cli di <a href=\"https:\/\/devcenter.heroku.com\/articles\/heroku-cli#download-and-install\" target=\"_blank\" rel=\"noopener\">https:\/\/devcenter.heroku.com\/articles\/heroku-cli#download-and-install<\/a><\/p>\r\n<p>setelah mempunyai akun dan installasi heroku-cli, maka buka cmd\/cli lalu jalankan perintah heroku login untuk memastikan cli terhubung dengan akun heroku<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-1.jpg\" \/><\/p>\r\n<p>setelah itu akan muncul tampilan seperti dibawah ini<\/p>\r\n<p><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-2.png\" \/><\/p>\r\n<p>jika sudah login klik button login jika belum nanti otomatis akan diminta email dan password untuk login, setelah itu&nbsp; pada cmd akan muncul tampilan seperti dibawah ini:<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-3.jpg\" \/><\/p>\r\n<p>berarti heroku cli sudah terhubung dengan akun herokunya<\/p>\r\n<p><span style=\"font-size: 24pt;\"><strong>Langkah-langkah Deployment dengan Heroku<\/strong><\/span><\/p>\r\n<p>untuk kode yang akan di deploy ke heroku pada contoh dimateri ini kita akan menggunakan kode dari materi <strong>Membuat JWT Authentication dengan Gin, Gorm dan Dokumentasinya dengan Swaggo.&nbsp;<\/strong>untuk struktur folder masih sama hanya saja terdapat beberapa pembaruan kode pada beberapa file.<\/p>\r\n<ol>\r\n<li><strong>membuat apps baru di heroku<br \/><\/strong>langkah pertama adalah kita memerlukan untuk membuat apps baru di heroku. buka dashboard heroku di <a href=\"https:\/\/dashboard.heroku.com\/apps\" target=\"_blank\" rel=\"noopener\">https:\/\/dashboard.heroku.com\/apps<\/a> lalu klik button new<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-4.jpg\" \/><br \/><br \/>lalu beri nama aplikasinya dan <strong>klik button create app<\/strong><br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-5.png\" \/><br \/>maka apps di heroku sudah berhasil dibuat, kurang lebih tampilannya akan seperti dibawah ini<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-6.png\" width=\"876\" height=\"561\" \/><\/li>\r\n<li><strong>remote heroku git dari project\/repo local (komputer sendiri) ke repo heroku<br \/><\/strong><br \/>langkah berikutnya adalah remote git ke repo heroku dari project\/repo local(komputer sendiri)<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-7.jpg\" width=\"894\" height=\"489\" \/><br \/>jika sebelumnya sudah ada git(cek folder .git) pada projectnya tidak perlu untuk init lagi, untuk contoh di materi karena kebetulan projectnya belum ada git maka perlu inisialisasi git terlebih dahulu<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-8.png\" \/><\/li>\r\n<li><strong>setup database<br \/><br \/><\/strong>pada contoh ini kita akan menggunakan postgreSQL di server heroku, buka apps di heroku dan pilih tab Resources dan pada add on search \"heroku postgres\"<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-9.png\" width=\"995\" height=\"514\" \/><br \/>klik heroku postgres pada hasil search-nya lalu akan muncul dialog seperti dibawah ini<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-10.png\" \/><br \/><br \/>lalu klik submit order form, jika sudah berhasil ditambahkan maka akan muncul tampilan seperti dibawah ini<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-11.png\" width=\"860\" height=\"475\" \/><br \/>lalu pindah ke tab settings dan klik button reveal config vars<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-12.png\" width=\"876\" height=\"452\" \/><br \/>maka akan muncul satu variabel yang sudah terisi dengan key <strong>DATABASE_URL<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-13.png\" width=\"961\" height=\"185\" \/><br \/><br \/><\/strong>untuk isi dari variabel <strong>DATABASE_URL&nbsp;<\/strong>kurang lebih formatnya seperti ini <strong>postgres:\/\/&lt;USERNAME&gt;:&lt;PASSWORD&gt;@&lt;DB_HOST&gt;:&lt;DB_PORT&gt;\/&lt;DB_NAME&gt;<br \/><br \/><br \/><\/strong>buatlah variabel baru dengan key dan isinya kurang lebih seperti ini:<br \/><br \/><strong>DATABASE_USERNAME : &lt;USERNAME&gt;<br \/>DATABASE_PASSWORD : &lt;PASSWORD&gt;<br \/>DATABASE_HOST : &lt;DB_HOST&gt;<br \/>DATABASE_PORT : &lt;DB_PORT&gt;<br \/>DATABASE_NAME : &lt;DB_NAME&gt;<br \/><br \/><\/strong>kurang lebih setelah diisi sesuai format akan seperti dibawah ini<br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-14.png\" width=\"922\" height=\"343\" \/><br \/><br \/>selanjutnya ke projectnya lagi dan install library baru yaitu:<br \/><br \/>\r\n<table style=\"border-collapse: collapse; width: 69.6173%; height: 57px;\" border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td style=\"width: 100%;\">\r\n<pre>go get gorm.io\/driver\/postgres<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<br \/>selanjutnya rubah kode pada file <strong>config\/db.go <\/strong>menjadi seperti dibawah ini:<br \/><br \/>\r\n<table style=\"border-collapse: collapse; width: 69.6832%; height: 78px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 78px;\">\r\n<td style=\"width: 100%; height: 78px;\">\r\n<pre>package config<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-gin\/models\"<br \/>&nbsp; &nbsp; \"api-gin\/utils\"<br \/>&nbsp; &nbsp; \"fmt\"<br \/>&nbsp; &nbsp; \"os\"<br \/><br \/>&nbsp; &nbsp; \"gorm.io\/driver\/mysql\"<br \/>&nbsp; &nbsp; \"gorm.io\/driver\/postgres\"<br \/><br \/>&nbsp; &nbsp; \"gorm.io\/gorm\"<br \/>)<br \/><br \/>func ConnectDataBase() *gorm.DB {<br \/>&nbsp; &nbsp; environment := utils.Getenv(\"ENVIRONMENT\", \"development\")<br \/><br \/>&nbsp; &nbsp; if environment == \"production\" {<br \/>  &nbsp; &nbsp; &nbsp; username := os.Getenv(\"DATABASE_USERNAME\")<br \/>&nbsp; &nbsp; &nbsp; &nbsp; password := os.Getenv(\"DATABASE_PASSWORD\")<br \/>&nbsp; &nbsp; &nbsp; &nbsp; host := os.Getenv(\"DATABASE_HOST\")<br \/>&nbsp; &nbsp; &nbsp; &nbsp; port := os.Getenv(\"DATABASE_PORT\")<br \/>&nbsp; &nbsp; &nbsp; &nbsp; database := os.Getenv(\"DATABASE_NAME\")<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \/\/ production<br \/>&nbsp; &nbsp; &nbsp; &nbsp; dsn := \"host=\" + host + \" user=\" + username + \" password=\" + password + \" dbname=\" + database + \" port=\" + port + \" sslmode=require\"<br \/>&nbsp; &nbsp; &nbsp; &nbsp; db, err := gorm.Open(postgres.Open(dsn), &amp;gorm.Config{})<br \/>&nbsp; &nbsp; &nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; panic(err.Error())<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; db.AutoMigrate(&amp;models.User{}, &amp;models.Movie{}, &amp;models.AgeRatingCategory{})<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; return db<br \/>&nbsp; &nbsp; } else {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; \/\/ development<br \/>&nbsp; &nbsp; &nbsp; &nbsp; username := \"root\"<br \/>&nbsp; &nbsp; &nbsp; &nbsp; password := \"password\"<br \/>&nbsp; &nbsp; &nbsp; &nbsp; host := \"tcp(127.0.0.1:3306)\"<br \/>&nbsp; &nbsp; &nbsp; &nbsp; database := \"database_movie\"<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; dsn := fmt.Sprintf(\"%v:%v@%v\/%v?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\", username, password, host, database)<br \/>&nbsp; &nbsp; &nbsp; &nbsp; db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; panic(err.Error())<br \/>&nbsp; &nbsp; &nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; db.AutoMigrate(&amp;models.User{}, &amp;models.Movie{}, &amp;models.AgeRatingCategory{})<br \/><br \/>&nbsp; &nbsp; &nbsp; &nbsp; return db<br \/>&nbsp; &nbsp; }<br \/><br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<br \/><br \/><br \/><\/li>\r\n<li><strong>buat Procfile dan folder bin<br \/><br \/><\/strong>langkah berikutnya adalah membuat file baru dengan nama Procfile, lokasi file Procfile sama seperti lokasinya file main.go<br \/><br \/>isi Procfile dengan format<br \/><br \/>\r\n<table style=\"border-collapse: collapse; width: 28.2161%; height: 51px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 78px;\">\r\n<td style=\"width: 100%; height: 51px;\">\r\n<pre>web: bin\/&lt;NAMA-PROJECT&gt;<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<br \/>sehingga pada contoh ini maka isinya adalah<br \/><br \/>\r\n<table style=\"border-collapse: collapse; width: 28.2161%; height: 64px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 78px;\">\r\n<td style=\"width: 100%; height: 64px;\">\r\n<pre>web: bin\/api-gin<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<br \/>selanjutnya buatlah folder dengan nama bin tidak usah diisi file apa-apa cukup folder bin kosong saja<br \/><br \/><\/li>\r\n<li><strong>perbarui main.go, tambahkan .gitignore, rubah file go.mod<br \/><br \/><\/strong>perbarui file <strong>main.go&nbsp;<\/strong>seperti dibawah ini<br \/><br \/>\r\n<table style=\"border-collapse: collapse; width: 53.7293%; height: 64px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 78px;\">\r\n<td style=\"width: 100%; height: 64px;\">\r\n<pre>package main<br \/><br \/>import (<br \/>&nbsp; &nbsp; \"api-gin\/config\"<br \/>&nbsp; &nbsp; \"api-gin\/docs\"<br \/>&nbsp; &nbsp; \"api-gin\/routes\"<br \/>&nbsp; &nbsp; \"api-gin\/utils\"<br \/>&nbsp; &nbsp; \"log\"<br \/><br \/>&nbsp; &nbsp; \"github.com\/joho\/godotenv\"<br \/>)<br \/><br \/>\/\/ @contact.name API Support<br \/>\/\/ @contact.url http:\/\/www.swagger.io\/support<br \/>\/\/ @contact.email support@swagger.io<br \/><br \/>\/\/ @license.name Apache 2.0<br \/>\/\/ @license.url http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html<br \/><br \/>\/\/ @termsOfService http:\/\/swagger.io\/terms\/<br \/><br \/>func main() {<br \/>&nbsp; &nbsp; \/\/ for load godotenv<br \/>&nbsp; &nbsp; \/\/ for env<br \/>&nbsp; &nbsp; err := godotenv.Load()<br \/>&nbsp; &nbsp; if err != nil {<br \/>&nbsp; &nbsp; &nbsp; &nbsp; log.Fatal(\"Error loading .env file\")<br \/>&nbsp; &nbsp; }<br \/><br \/>&nbsp; &nbsp; \/\/ programmatically set swagger info<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Title = \"Swagger Example API\"<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Description = \"This is a sample server Movie.\"<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Version = \"1.0\"<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Host = utils.Getenv(\"SWAGGER_HOST\", \"localhost:8080\")<br \/>&nbsp; &nbsp; docs.SwaggerInfo.Schemes = []string{\"http\", \"https\"}<br \/><br \/>&nbsp; &nbsp; \/\/ database connection<br \/>&nbsp; &nbsp; db := config.ConnectDataBase()<br \/>&nbsp; &nbsp; sqlDB, _ := db.DB()<br \/>&nbsp; &nbsp; defer sqlDB.Close()<br \/><br \/>&nbsp; &nbsp; \/\/ router<br \/>&nbsp; &nbsp; r := routes.SetupRouter(db)<br \/>&nbsp; &nbsp; \/\/ just remove port 8080<br \/>&nbsp; &nbsp; r.Run()<br \/>}<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<br \/>lalu buatlah file baru dengan nama .gitgnore, lokasi file .gitignore sama seperti lokasinya file main.go<br \/><br \/>isinya adalah:<br \/><br \/>\r\n<table style=\"border-collapse: collapse; width: 28.2161%; height: 64px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 78px;\">\r\n<td style=\"width: 100%; height: 64px;\">\r\n<pre>.env<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<br \/>file .gitignore ini bertujuan untuk mengabaikan suatu file atau folder agar tidak harus di commit dan di push<br \/><br \/>lalu tambahkan pada file <strong>go.mod <\/strong>diatas go versionnya kode dibawah ini<br \/><br \/>\r\n<table style=\"border-collapse: collapse; width: 28.2161%; height: 64px;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 78px;\">\r\n<td style=\"width: 100%; height: 64px;\">\r\n<pre>\/\/ +heroku goVersion go1.17<br \/>go 1.17<\/pre>\r\n<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<br \/>kode tersebut berfungsi untuk memberikan versi go yang akan di deploy ke heroku<br \/><strong>Catatan:&nbsp;<\/strong>penulisannya harus sama persis seperti diatas jika ingin rubah versi cukup ganti angka versinya<br \/><br \/><br \/><\/li>\r\n<li><strong>menambahkan beberapa variabel di environment variabels di heroku<br \/><\/strong>selanjutnya kita perlu menambahkan beberapa variabel env di heroku kurang lebih isinya adalah<br \/><br \/>ENVIRONMENT : \"production\"<br \/>SWAGGER_HOST: \"movie-app-sanbercode-golang.herokuapp.com\"<br \/>TOKEN_HOUR_LIFESPAN: \"2\"<br \/><br \/>sehingga tambahan variabelnya akan seperti ini:<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-15.png\" width=\"909\" height=\"440\" \/><br \/><br \/><\/li>\r\n<li><strong>add semua perubahan dan push ke heroku master (deploy)<br \/><\/strong><br \/>selanjutnya add semua perubahan, lalu commit dan push ke heroku master<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-16.png\" \/><br \/><br \/>tunggu prosesnya hingga selesai<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-17.png\" \/><br \/><br \/>setelah itu cek <a href=\"https:\/\/movie-app-sanbercode-golang.herokuapp.com\/swagger\/index.html\">https:\/\/movie-app-sanbercode-golang.herokuapp.com\/swagger\/index.html<\/a> maka project pada materi ini sudah terdeploy<br \/><br \/><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2021\/10\/materi-18-18.png\" width=\"1138\" height=\"610\" \/><br \/><br \/>selanjutnya jika ada perubahan lagi cukup add dan commit seperti menggunakan git pada umumnya, hanya saja jika ingin deploy ke heroku jalankan perintah <strong>git push heroku master<\/strong><br \/><br \/>&nbsp;<\/li>\r\n<\/ol>\r\n<hr \/>\r\n<p><strong style=\"font-size: 24pt; text-align: justify;\"><span style=\"font-size: 18pt;\">Referensi Tulisan<\/span>:<\/strong><\/p>\r\n<ul>\r\n<li style=\"text-align: justify;\"><a href=\"https:\/\/devcenter.heroku.com\/articles\/getting-started-with-go\">https:\/\/devcenter.heroku.com\/articles\/getting-started-with-go<\/a><\/li>\r\n<\/ul>","waktu_publish":"2021-11-16 09:00:00","status_publish":"publish","urutan":3,"created_by":4336,"updated_by":4336,"created_at":"2021-10-14 10:28:40","updated_at":"2021-10-25 17:11:10","waktu_publish_formatted":" Selasa, 16 November 2021. 09:00:00 WIB."}]},{"id":401,"uuid":"335c6d53-1c10-488b-9cd4-7edadf4cfed8","materi_id":36,"nama":"Pekan 4 - Final Project","permalink":"pekan-4-final-project","urutan":9,"created_by":4336,"updated_by":4336,"created_at":"2021-10-11 10:56:33","updated_at":null,"posting":[{"id":1456,"uuid":"c8eec2e8-22ec-4b8e-b247-4431c09e6467","author_user_id":4336,"materi_section_id":401,"judul":"Final Project","permalink":"final-project","konten":"<div class=\"entry-content\">\r\n<div class=\"entry-content\">\r\n<h2 id=\"membangun-web-frontend-reactjs\"><strong>Membangun REST API berdasarkan tema yang ditentukan dan sudah terdeploy di server heroku&nbsp;<\/strong><\/h2>\r\n<p><strong>NOTE :<\/strong><\/p>\r\n<ul>\r\n<li>Dilarang mengumpulkan hasil quiz 3 sebagai final project<\/li>\r\n<li>Dilarang mengumpulkan final project yang sembarangan.<\/li>\r\n<li>Harus menggunakan hasil sendiri tidak boleh menggunakan link heroku orang lain ataupun copy paste full kode orang lain (contoh terdapat link youtube tutorial Cara Deploy Golang + Database Ke Heroku dari akun youtube Prieyudha Akadita S seperti ini <a href=\"https:\/\/www.youtube.com\/watch?v=_EAkLIoMCNM\">https:\/\/www.youtube.com\/watch?v=_EAkLIoMCNM<\/a> disana terdapat link repo dan herokunya, jangan mengumpulkan hal seperti ini, harus hasil dari diri sendiri)<\/li>\r\n<li>Jika ada yang kurang jelas silahkan tanyakan kepada trainer<\/li>\r\n<li>Final Project nantinya bisa dijadikan oleh teman-teman sebagai portofolio jadi kerjakan dengan sungguh-sungguh<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<hr \/>\r\n<p>sebelumnya silahkan buat repository baru khusus untuk <strong>final project<\/strong> dengan nama <strong>\"Final Project - BDS Sanbercode Golang Batch XX\"(XX diganti dengan nomor batch misal 28) jangan lupa untuk di private dan invite trainer<\/strong><\/p>\r\n<p><strong>Tema Final Project:<\/strong><\/p>\r\n<ul>\r\n<li><strong>blog(benchmark wordpress), <\/strong><\/li>\r\n<li><strong>ecommerce(benchmark tokopedia), <\/strong><\/li>\r\n<li><strong>review mobile phones(benchmark gsmarena), <\/strong><\/li>\r\n<li><strong>review games (benchmark steam). <\/strong><\/li>\r\n<\/ul>\r\n<p>jika ingin mengambil tema diluar yang diminta harap konfirmasi terlebih dahulu ke trainer<strong> (jika tidak final project tidak diterima)<\/strong>. untuk tema <strong>movie, <\/strong><strong>mahasiswa dan books <\/strong>tidak akan di terima (karena sudah ada di tugas harian, materi atau quiz)<\/p>\r\n<p>pada final project memiliki syarat berikut ini beserta poinnya:<\/p>\r\n<ol id=\"block-29077dde-335b-4231-a355-3cc74fad48b9\">\r\n<li><strong>wajib di deploy di heroku (tidak terdeploy di heroku final project nilai akan langsung dikurangi setengahnya) - 10 poin<\/strong><\/li>\r\n<li><strong>Database yang digunakan harus yang berelasi tidak boleh NoSQL (bisa menggunakan database yang free seperti heroku postgre , db4free.net atau <a href=\"https:\/\/www.freesqldatabase.com\/),\">https:\/\/www.freesqldatabase.com\/),<\/a> dan W<\/strong><strong>ajib menggunakan relasi database (wajib melampirkan skema databasenya dan file sqlnya di repository) - 20 poin&nbsp;<\/strong><\/li>\r\n<li><strong>terdapat register, login, ganti password dan wajib ada JWT Auth Middleware (bukan basic auth) pada method yang dibutuhkan - 20 poin<\/strong><\/li>\r\n<li><strong>wajib ada interaksi user dengan tema terkait, misal pada review game user dapat memberikan rating (role nya hanya guest) dan menulis review (role nya writer atau admin) - 20 poin<\/strong><\/li>\r\n<li><strong>minimal terdiri dari 7 tabel (harus ada keterkaitan antara tabel satu sama lain) - 10 poin<\/strong><\/li>\r\n<li><strong>wajib ada dokumentasi API - 20 poin<\/strong><strong><br \/><\/strong><\/li>\r\n<\/ol>\r\n<pre class=\"wp-block-code\">&nbsp;<\/pre>\r\n<hr \/>\r\n<h2 id=\"pengumpulan\"><strong>Pengumpulan<\/strong><\/h2>\r\n<p>untuk pengumpulan silahkan memasukkan data-data diri, url netlify dan link comit terakhir git pada form di bawah ini :<\/p>\r\n<p><a href=\"https:\/\/forms.gle\/YNMYn7kzbSaUrieJ7\" target=\"_blank\" rel=\"noopener\">https:\/\/forms.gle\/YNMYn7kzbSaUrieJ7<\/a><\/p>\r\n<hr \/>\r\n<p>Deadline pengumpulan final project maksimal di kumpulkan pada hari <strong>Senin 18 Oktober 2021 Pukul 12.00<\/strong><\/p>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-11-16 09:00:00","status_publish":"publish","urutan":1,"created_by":4336,"updated_by":4336,"created_at":"2021-10-11 10:56:48","updated_at":"2021-10-25 17:11:23","waktu_publish_formatted":" Selasa, 16 November 2021. 09:00:00 WIB."}]}],"list_kelas":null,"is_done":0}